{"version":3,"file":"js/32-legacy.d884731d.js","mappings":"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","sources":["webpack://siforeca/./node_modules/devextreme-vue/data-grid.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/filtering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.modules.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_state_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/accessibility.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.accessibility.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_headers.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_headers.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.columns_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.data_source_adapter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.data_source_adapter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.data_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.data_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.sorting_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.sorting.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.sorting.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.rows.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.rows.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.context_menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.context_menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.error_handling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.error_handling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.grid_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grid_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.header_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.base.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.state_storing_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.state_storing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.state_storing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.selection.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.selection.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_chooser.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_chooser.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.expanded.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.collapsed.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.master_detail.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.master_detail.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/ui.editor_factory_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editor_factory.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editor_factory.js","webpack://siforeca/./node_modules/devextreme/esm/ui/dialog.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_constants.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_row_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_row_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_form_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_form_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_cell_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_cell_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.validating.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.validating.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid.core.virtual_data_loader.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.virtual_scrolling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/overlay/utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu/ui.submenu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu/ui.menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_row.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_row.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_filter_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_filter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.header_filter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/between.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/ui.filter_operations_dictionary.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_custom_operations.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_sync.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_sync.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.search.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.search.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/component_wrapper/grid_pager.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/utils/type_conversion.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/utils/get_element_width.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/resizable_container.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/base_pager_props.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/pager_props.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/info.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/keyboard_action_context.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/light_button.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/consts.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/page.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/large.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/editors/number_box.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/utils/calculate_values_fitted_width.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/small.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/page_index_selector.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/editors/drop_down_editors/select_box.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/small.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/large.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/selector.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/content.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pager.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pager.j.js","webpack://siforeca/./node_modules/devextreme/esm/ui/pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.columns_resizing_reordering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.keyboard_navigation.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/aggregate_calculator.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.keyboard_navigation.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.summary.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_fixing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_fixing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.adaptivity.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_columns_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.adaptivity.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_columns.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.virtual_columns.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.export_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/button_group.js","webpack://siforeca/./node_modules/devextreme/esm/ui/drop_down_button.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.export.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.focus.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.focus.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.row_dragging.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.row_dragging.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid.js"],"sourcesContent":["/*!\n * devextreme-vue\n * Version: 21.2.6\n * Build date: Tue Mar 01 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-vue\n */\n\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DxLookup = exports.DxLoadPanel = exports.DxLabel = exports.DxKeyboardNavigation = exports.DxItem = exports.DxHide = exports.DxHeaderFilter = exports.DxGroupPanel = exports.DxGroupOperationDescriptions = exports.DxGroupItem = exports.DxGroupingTexts = exports.DxGrouping = exports.DxFrom = exports.DxFormItem = exports.DxFormat = exports.DxForm = exports.DxFilterRow = exports.DxFilterPanelTexts = exports.DxFilterPanel = exports.DxFilterOperationDescriptions = exports.DxFilterBuilderPopup = exports.DxFilterBuilder = exports.DxFieldLookup = exports.DxField = exports.DxExportTexts = exports.DxExport = exports.DxEmailRule = exports.DxEditingTexts = exports.DxEditing = exports.DxDataGridHeaderFilterTexts = exports.DxDataGridHeaderFilter = exports.DxCustomRule = exports.DxCustomOperation = exports.DxCursorOffset = exports.DxCompareRule = exports.DxColumnLookup = exports.DxColumnHeaderFilter = exports.DxColumnFixingTexts = exports.DxColumnFixing = exports.DxColumnChooser = exports.DxColumn = exports.DxCollision = exports.DxColCountByScreen = exports.DxChange = exports.DxButton = exports.DxBoundaryOffset = exports.DxAt = exports.DxAsyncRule = exports.DxAnimation = exports.DxDataGrid = void 0;\nexports.DxValueFormat = exports.DxValidationRule = exports.DxTotalItem = exports.DxToolbarItem = exports.DxToolbar = exports.DxTo = exports.DxTexts = exports.DxSummaryTexts = exports.DxSummary = exports.DxStringLengthRule = exports.DxStateStoring = exports.DxSorting = exports.DxSortByGroupSummaryInfo = exports.DxShow = exports.DxSelection = exports.DxSearchPanel = exports.DxScrolling = exports.DxRowDragging = exports.DxRequiredRule = exports.DxRemoteOperations = exports.DxRangeRule = exports.DxPosition = exports.DxPopup = exports.DxPatternRule = exports.DxPaging = exports.DxPager = exports.DxOperationDescriptions = exports.DxOffset = exports.DxNumericRule = exports.DxMy = exports.DxMasterDetail = void 0;\nvar data_grid_1 = __importDefault(require(\"devextreme/ui/data_grid\"));\nvar index_1 = require(\"./core/index\");\nvar index_2 = require(\"./core/index\");\nvar DxDataGrid = index_1.createComponent({\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        allowColumnReordering: Boolean,\n        allowColumnResizing: Boolean,\n        autoNavigateToFocusedRow: Boolean,\n        cacheEnabled: Boolean,\n        cellHintEnabled: Boolean,\n        columnAutoWidth: Boolean,\n        columnChooser: Object,\n        columnFixing: Object,\n        columnHidingEnabled: Boolean,\n        columnMinWidth: Number,\n        columnResizingMode: String,\n        columns: Array,\n        columnWidth: [Number, String],\n        customizeColumns: Function,\n        customizeExportData: Function,\n        dataRowTemplate: {},\n        dataSource: [Array, Object, String],\n        dateSerializationFormat: String,\n        disabled: Boolean,\n        editing: Object,\n        elementAttr: Object,\n        errorRowEnabled: Boolean,\n        export: Object,\n        filterBuilder: Object,\n        filterBuilderPopup: Object,\n        filterPanel: Object,\n        filterRow: Object,\n        filterSyncEnabled: [Boolean, String],\n        filterValue: [Array, Function, String],\n        focusedColumnIndex: Number,\n        focusedRowEnabled: Boolean,\n        focusedRowIndex: Number,\n        focusedRowKey: {},\n        focusStateEnabled: Boolean,\n        grouping: Object,\n        groupPanel: Object,\n        headerFilter: Object,\n        height: [Function, Number, String],\n        highlightChanges: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        keyboardNavigation: Object,\n        keyExpr: [Array, String],\n        loadPanel: Object,\n        masterDetail: Object,\n        noDataText: String,\n        onAdaptiveDetailRowPreparing: Function,\n        onCellClick: Function,\n        onCellDblClick: Function,\n        onCellHoverChanged: Function,\n        onCellPrepared: Function,\n        onContentReady: Function,\n        onContextMenuPreparing: Function,\n        onDataErrorOccurred: Function,\n        onDisposing: Function,\n        onEditCanceled: Function,\n        onEditCanceling: Function,\n        onEditingStart: Function,\n        onEditorPrepared: Function,\n        onEditorPreparing: Function,\n        onExported: Function,\n        onExporting: Function,\n        onFileSaving: Function,\n        onFocusedCellChanged: Function,\n        onFocusedCellChanging: Function,\n        onFocusedRowChanged: Function,\n        onFocusedRowChanging: Function,\n        onInitialized: Function,\n        onInitNewRow: Function,\n        onKeyDown: Function,\n        onOptionChanged: Function,\n        onRowClick: Function,\n        onRowCollapsed: Function,\n        onRowCollapsing: Function,\n        onRowDblClick: Function,\n        onRowExpanded: Function,\n        onRowExpanding: Function,\n        onRowInserted: Function,\n        onRowInserting: Function,\n        onRowPrepared: Function,\n        onRowRemoved: Function,\n        onRowRemoving: Function,\n        onRowUpdated: Function,\n        onRowUpdating: Function,\n        onRowValidating: Function,\n        onSaved: Function,\n        onSaving: Function,\n        onSelectionChanged: Function,\n        onToolbarPreparing: Function,\n        pager: Object,\n        paging: Object,\n        remoteOperations: [Boolean, Object, String],\n        renderAsync: Boolean,\n        repaintChangesOnly: Boolean,\n        rowAlternationEnabled: Boolean,\n        rowDragging: Object,\n        rowTemplate: {},\n        rtlEnabled: Boolean,\n        scrolling: Object,\n        searchPanel: Object,\n        selectedRowKeys: Array,\n        selection: Object,\n        selectionFilter: [Array, Function, String],\n        showBorders: Boolean,\n        showColumnHeaders: Boolean,\n        showColumnLines: Boolean,\n        showRowLines: Boolean,\n        sortByGroupSummaryInfo: Array,\n        sorting: Object,\n        stateStoring: Object,\n        summary: Object,\n        tabIndex: Number,\n        toolbar: Object,\n        twoWayBindingEnabled: Boolean,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wordWrapEnabled: Boolean\n    },\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:allowColumnReordering\": null,\n        \"update:allowColumnResizing\": null,\n        \"update:autoNavigateToFocusedRow\": null,\n        \"update:cacheEnabled\": null,\n        \"update:cellHintEnabled\": null,\n        \"update:columnAutoWidth\": null,\n        \"update:columnChooser\": null,\n        \"update:columnFixing\": null,\n        \"update:columnHidingEnabled\": null,\n        \"update:columnMinWidth\": null,\n        \"update:columnResizingMode\": null,\n        \"update:columns\": null,\n        \"update:columnWidth\": null,\n        \"update:customizeColumns\": null,\n        \"update:customizeExportData\": null,\n        \"update:dataRowTemplate\": null,\n        \"update:dataSource\": null,\n        \"update:dateSerializationFormat\": null,\n        \"update:disabled\": null,\n        \"update:editing\": null,\n        \"update:elementAttr\": null,\n        \"update:errorRowEnabled\": null,\n        \"update:export\": null,\n        \"update:filterBuilder\": null,\n        \"update:filterBuilderPopup\": null,\n        \"update:filterPanel\": null,\n        \"update:filterRow\": null,\n        \"update:filterSyncEnabled\": null,\n        \"update:filterValue\": null,\n        \"update:focusedColumnIndex\": null,\n        \"update:focusedRowEnabled\": null,\n        \"update:focusedRowIndex\": null,\n        \"update:focusedRowKey\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:grouping\": null,\n        \"update:groupPanel\": null,\n        \"update:headerFilter\": null,\n        \"update:height\": null,\n        \"update:highlightChanges\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:keyboardNavigation\": null,\n        \"update:keyExpr\": null,\n        \"update:loadPanel\": null,\n        \"update:masterDetail\": null,\n        \"update:noDataText\": null,\n        \"update:onAdaptiveDetailRowPreparing\": null,\n        \"update:onCellClick\": null,\n        \"update:onCellDblClick\": null,\n        \"update:onCellHoverChanged\": null,\n        \"update:onCellPrepared\": null,\n        \"update:onContentReady\": null,\n        \"update:onContextMenuPreparing\": null,\n        \"update:onDataErrorOccurred\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditCanceled\": null,\n        \"update:onEditCanceling\": null,\n        \"update:onEditingStart\": null,\n        \"update:onEditorPrepared\": null,\n        \"update:onEditorPreparing\": null,\n        \"update:onExported\": null,\n        \"update:onExporting\": null,\n        \"update:onFileSaving\": null,\n        \"update:onFocusedCellChanged\": null,\n        \"update:onFocusedCellChanging\": null,\n        \"update:onFocusedRowChanged\": null,\n        \"update:onFocusedRowChanging\": null,\n        \"update:onInitialized\": null,\n        \"update:onInitNewRow\": null,\n        \"update:onKeyDown\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onRowClick\": null,\n        \"update:onRowCollapsed\": null,\n        \"update:onRowCollapsing\": null,\n        \"update:onRowDblClick\": null,\n        \"update:onRowExpanded\": null,\n        \"update:onRowExpanding\": null,\n        \"update:onRowInserted\": null,\n        \"update:onRowInserting\": null,\n        \"update:onRowPrepared\": null,\n        \"update:onRowRemoved\": null,\n        \"update:onRowRemoving\": null,\n        \"update:onRowUpdated\": null,\n        \"update:onRowUpdating\": null,\n        \"update:onRowValidating\": null,\n        \"update:onSaved\": null,\n        \"update:onSaving\": null,\n        \"update:onSelectionChanged\": null,\n        \"update:onToolbarPreparing\": null,\n        \"update:pager\": null,\n        \"update:paging\": null,\n        \"update:remoteOperations\": null,\n        \"update:renderAsync\": null,\n        \"update:repaintChangesOnly\": null,\n        \"update:rowAlternationEnabled\": null,\n        \"update:rowDragging\": null,\n        \"update:rowTemplate\": null,\n        \"update:rtlEnabled\": null,\n        \"update:scrolling\": null,\n        \"update:searchPanel\": null,\n        \"update:selectedRowKeys\": null,\n        \"update:selection\": null,\n        \"update:selectionFilter\": null,\n        \"update:showBorders\": null,\n        \"update:showColumnHeaders\": null,\n        \"update:showColumnLines\": null,\n        \"update:showRowLines\": null,\n        \"update:sortByGroupSummaryInfo\": null,\n        \"update:sorting\": null,\n        \"update:stateStoring\": null,\n        \"update:summary\": null,\n        \"update:tabIndex\": null,\n        \"update:toolbar\": null,\n        \"update:twoWayBindingEnabled\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wordWrapEnabled\": null,\n    },\n    computed: {\n        instance: function () {\n            return this.$_instance;\n        }\n    },\n    beforeCreate: function () {\n        this.$_WidgetClass = data_grid_1.default;\n        this.$_hasAsyncTemplate = true;\n        this.$_expectedChildren = {\n            column: { isCollectionItem: true, optionName: \"columns\" },\n            columnChooser: { isCollectionItem: false, optionName: \"columnChooser\" },\n            columnFixing: { isCollectionItem: false, optionName: \"columnFixing\" },\n            dataGridHeaderFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n            editing: { isCollectionItem: false, optionName: \"editing\" },\n            export: { isCollectionItem: false, optionName: \"export\" },\n            filterBuilder: { isCollectionItem: false, optionName: \"filterBuilder\" },\n            filterBuilderPopup: { isCollectionItem: false, optionName: \"filterBuilderPopup\" },\n            filterPanel: { isCollectionItem: false, optionName: \"filterPanel\" },\n            filterRow: { isCollectionItem: false, optionName: \"filterRow\" },\n            grouping: { isCollectionItem: false, optionName: \"grouping\" },\n            groupPanel: { isCollectionItem: false, optionName: \"groupPanel\" },\n            headerFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n            keyboardNavigation: { isCollectionItem: false, optionName: \"keyboardNavigation\" },\n            loadPanel: { isCollectionItem: false, optionName: \"loadPanel\" },\n            masterDetail: { isCollectionItem: false, optionName: \"masterDetail\" },\n            pager: { isCollectionItem: false, optionName: \"pager\" },\n            paging: { isCollectionItem: false, optionName: \"paging\" },\n            remoteOperations: { isCollectionItem: false, optionName: \"remoteOperations\" },\n            rowDragging: { isCollectionItem: false, optionName: \"rowDragging\" },\n            scrolling: { isCollectionItem: false, optionName: \"scrolling\" },\n            searchPanel: { isCollectionItem: false, optionName: \"searchPanel\" },\n            selection: { isCollectionItem: false, optionName: \"selection\" },\n            sortByGroupSummaryInfo: { isCollectionItem: true, optionName: \"sortByGroupSummaryInfo\" },\n            sorting: { isCollectionItem: false, optionName: \"sorting\" },\n            stateStoring: { isCollectionItem: false, optionName: \"stateStoring\" },\n            summary: { isCollectionItem: false, optionName: \"summary\" },\n            toolbar: { isCollectionItem: false, optionName: \"toolbar\" }\n        };\n    }\n});\nexports.DxDataGrid = DxDataGrid;\nvar DxAnimation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:hide\": null,\n        \"update:show\": null,\n    },\n    props: {\n        hide: [Object, Number, String],\n        show: [Object, Number, String]\n    }\n});\nexports.DxAnimation = DxAnimation;\nDxAnimation.$_optionName = \"animation\";\nDxAnimation.$_expectedChildren = {\n    hide: { isCollectionItem: false, optionName: \"hide\" },\n    show: { isCollectionItem: false, optionName: \"show\" }\n};\nvar DxAsyncRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        reevaluate: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxAsyncRule = DxAsyncRule;\nDxAsyncRule.$_optionName = \"validationRules\";\nDxAsyncRule.$_isCollectionItem = true;\nDxAsyncRule.$_predefinedProps = {\n    type: \"async\"\n};\nvar DxAt = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxAt = DxAt;\nDxAt.$_optionName = \"at\";\nvar DxBoundaryOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxBoundaryOffset = DxBoundaryOffset;\nDxBoundaryOffset.$_optionName = \"boundaryOffset\";\nvar DxButton = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cssClass\": null,\n        \"update:disabled\": null,\n        \"update:hint\": null,\n        \"update:icon\": null,\n        \"update:name\": null,\n        \"update:onClick\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        cssClass: String,\n        disabled: [Boolean, Function],\n        hint: String,\n        icon: String,\n        name: String,\n        onClick: Function,\n        template: {},\n        text: String,\n        visible: [Boolean, Function]\n    }\n});\nexports.DxButton = DxButton;\nDxButton.$_optionName = \"buttons\";\nDxButton.$_isCollectionItem = true;\nvar DxChange = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:data\": null,\n        \"update:insertAfterKey\": null,\n        \"update:insertBeforeKey\": null,\n        \"update:type\": null,\n    },\n    props: {\n        data: {},\n        insertAfterKey: {},\n        insertBeforeKey: {},\n        type: String\n    }\n});\nexports.DxChange = DxChange;\nDxChange.$_optionName = \"changes\";\nDxChange.$_isCollectionItem = true;\nvar DxColCountByScreen = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:lg\": null,\n        \"update:md\": null,\n        \"update:sm\": null,\n        \"update:xs\": null,\n    },\n    props: {\n        lg: Number,\n        md: Number,\n        sm: Number,\n        xs: Number\n    }\n});\nexports.DxColCountByScreen = DxColCountByScreen;\nDxColCountByScreen.$_optionName = \"colCountByScreen\";\nvar DxCollision = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxCollision = DxCollision;\nDxCollision.$_optionName = \"collision\";\nvar DxColumn = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:allowEditing\": null,\n        \"update:allowExporting\": null,\n        \"update:allowFiltering\": null,\n        \"update:allowFixing\": null,\n        \"update:allowGrouping\": null,\n        \"update:allowHeaderFiltering\": null,\n        \"update:allowHiding\": null,\n        \"update:allowReordering\": null,\n        \"update:allowResizing\": null,\n        \"update:allowSearch\": null,\n        \"update:allowSorting\": null,\n        \"update:autoExpandGroup\": null,\n        \"update:buttons\": null,\n        \"update:calculateCellValue\": null,\n        \"update:calculateDisplayValue\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:calculateGroupValue\": null,\n        \"update:calculateSortValue\": null,\n        \"update:caption\": null,\n        \"update:cellTemplate\": null,\n        \"update:columns\": null,\n        \"update:cssClass\": null,\n        \"update:customizeText\": null,\n        \"update:dataField\": null,\n        \"update:dataType\": null,\n        \"update:editCellTemplate\": null,\n        \"update:editorOptions\": null,\n        \"update:encodeHtml\": null,\n        \"update:falseText\": null,\n        \"update:filterOperations\": null,\n        \"update:filterType\": null,\n        \"update:filterValue\": null,\n        \"update:filterValues\": null,\n        \"update:fixed\": null,\n        \"update:fixedPosition\": null,\n        \"update:format\": null,\n        \"update:formItem\": null,\n        \"update:groupCellTemplate\": null,\n        \"update:grouped\": null,\n        \"update:groupIndex\": null,\n        \"update:headerCellTemplate\": null,\n        \"update:headerFilter\": null,\n        \"update:hidingPriority\": null,\n        \"update:isBand\": null,\n        \"update:lookup\": null,\n        \"update:minWidth\": null,\n        \"update:name\": null,\n        \"update:ownerBand\": null,\n        \"update:renderAsync\": null,\n        \"update:resized\": null,\n        \"update:selectedFilterOperation\": null,\n        \"update:setCellValue\": null,\n        \"update:showEditorAlways\": null,\n        \"update:showInColumnChooser\": null,\n        \"update:showWhenGrouped\": null,\n        \"update:sortIndex\": null,\n        \"update:sortingMethod\": null,\n        \"update:sortOrder\": null,\n        \"update:trueText\": null,\n        \"update:type\": null,\n        \"update:validationRules\": null,\n        \"update:visible\": null,\n        \"update:visibleIndex\": null,\n        \"update:width\": null,\n    },\n    props: {\n        alignment: String,\n        allowEditing: Boolean,\n        allowExporting: Boolean,\n        allowFiltering: Boolean,\n        allowFixing: Boolean,\n        allowGrouping: Boolean,\n        allowHeaderFiltering: Boolean,\n        allowHiding: Boolean,\n        allowReordering: Boolean,\n        allowResizing: Boolean,\n        allowSearch: Boolean,\n        allowSorting: Boolean,\n        autoExpandGroup: Boolean,\n        buttons: Array,\n        calculateCellValue: Function,\n        calculateDisplayValue: [Function, String],\n        calculateFilterExpression: Function,\n        calculateGroupValue: [Function, String],\n        calculateSortValue: [Function, String],\n        caption: String,\n        cellTemplate: {},\n        columns: Array,\n        cssClass: String,\n        customizeText: Function,\n        dataField: String,\n        dataType: String,\n        editCellTemplate: {},\n        editorOptions: {},\n        encodeHtml: Boolean,\n        falseText: String,\n        filterOperations: Array,\n        filterType: String,\n        filterValue: {},\n        filterValues: Array,\n        fixed: Boolean,\n        fixedPosition: String,\n        format: [Object, Function, String],\n        formItem: Object,\n        groupCellTemplate: {},\n        grouped: Boolean,\n        groupIndex: Number,\n        headerCellTemplate: {},\n        headerFilter: Object,\n        hidingPriority: Number,\n        isBand: Boolean,\n        lookup: Object,\n        minWidth: Number,\n        name: String,\n        ownerBand: Number,\n        renderAsync: Boolean,\n        resized: Function,\n        selectedFilterOperation: String,\n        setCellValue: Function,\n        showEditorAlways: Boolean,\n        showInColumnChooser: Boolean,\n        showWhenGrouped: Boolean,\n        sortIndex: Number,\n        sortingMethod: Function,\n        sortOrder: String,\n        trueText: String,\n        type: String,\n        validationRules: Array,\n        visible: Boolean,\n        visibleIndex: Number,\n        width: [Number, String]\n    }\n});\nexports.DxColumn = DxColumn;\nDxColumn.$_optionName = \"columns\";\nDxColumn.$_isCollectionItem = true;\nDxColumn.$_expectedChildren = {\n    AsyncRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    button: { isCollectionItem: true, optionName: \"buttons\" },\n    columnHeaderFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n    columnLookup: { isCollectionItem: false, optionName: \"lookup\" },\n    CompareRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CustomRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    EmailRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    format: { isCollectionItem: false, optionName: \"format\" },\n    formItem: { isCollectionItem: false, optionName: \"formItem\" },\n    headerFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n    lookup: { isCollectionItem: false, optionName: \"lookup\" },\n    NumericRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    PatternRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RangeRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RequiredRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    StringLengthRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    validationRule: { isCollectionItem: true, optionName: \"validationRules\" }\n};\nvar DxColumnChooser = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:emptyPanelText\": null,\n        \"update:enabled\": null,\n        \"update:height\": null,\n        \"update:mode\": null,\n        \"update:searchTimeout\": null,\n        \"update:sortOrder\": null,\n        \"update:title\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        emptyPanelText: String,\n        enabled: Boolean,\n        height: Number,\n        mode: String,\n        searchTimeout: Number,\n        sortOrder: String,\n        title: String,\n        width: Number\n    }\n});\nexports.DxColumnChooser = DxColumnChooser;\nDxColumnChooser.$_optionName = \"columnChooser\";\nvar DxColumnFixing = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        enabled: Boolean,\n        texts: Object\n    }\n});\nexports.DxColumnFixing = DxColumnFixing;\nDxColumnFixing.$_optionName = \"columnFixing\";\nDxColumnFixing.$_expectedChildren = {\n    columnFixingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxColumnFixingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:fix\": null,\n        \"update:leftPosition\": null,\n        \"update:rightPosition\": null,\n        \"update:unfix\": null,\n    },\n    props: {\n        fix: String,\n        leftPosition: String,\n        rightPosition: String,\n        unfix: String\n    }\n});\nexports.DxColumnFixingTexts = DxColumnFixingTexts;\nDxColumnFixingTexts.$_optionName = \"texts\";\nvar DxColumnHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:dataSource\": null,\n        \"update:groupInterval\": null,\n        \"update:height\": null,\n        \"update:searchMode\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        dataSource: [Array, Object, Function],\n        groupInterval: [Number, String],\n        height: Number,\n        searchMode: String,\n        width: Number\n    }\n});\nexports.DxColumnHeaderFilter = DxColumnHeaderFilter;\nDxColumnHeaderFilter.$_optionName = \"headerFilter\";\nvar DxColumnLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:calculateCellValue\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        calculateCellValue: Function,\n        dataSource: [Array, Object, Function],\n        displayExpr: [Function, String],\n        valueExpr: String\n    }\n});\nexports.DxColumnLookup = DxColumnLookup;\nDxColumnLookup.$_optionName = \"lookup\";\nvar DxCompareRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:comparisonTarget\": null,\n        \"update:comparisonType\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        comparisonTarget: Function,\n        comparisonType: String,\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxCompareRule = DxCompareRule;\nDxCompareRule.$_optionName = \"validationRules\";\nDxCompareRule.$_isCollectionItem = true;\nDxCompareRule.$_predefinedProps = {\n    type: \"compare\"\n};\nvar DxCursorOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxCursorOffset = DxCursorOffset;\nDxCursorOffset.$_optionName = \"cursorOffset\";\nvar DxCustomOperation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:caption\": null,\n        \"update:customizeText\": null,\n        \"update:dataTypes\": null,\n        \"update:editorTemplate\": null,\n        \"update:hasValue\": null,\n        \"update:icon\": null,\n        \"update:name\": null,\n    },\n    props: {\n        calculateFilterExpression: Function,\n        caption: String,\n        customizeText: Function,\n        dataTypes: Array,\n        editorTemplate: {},\n        hasValue: Boolean,\n        icon: String,\n        name: String\n    }\n});\nexports.DxCustomOperation = DxCustomOperation;\nDxCustomOperation.$_optionName = \"customOperations\";\nDxCustomOperation.$_isCollectionItem = true;\nvar DxCustomRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        reevaluate: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxCustomRule = DxCustomRule;\nDxCustomRule.$_optionName = \"validationRules\";\nDxCustomRule.$_isCollectionItem = true;\nDxCustomRule.$_predefinedProps = {\n    type: \"custom\"\n};\nvar DxDataGridHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:height\": null,\n        \"update:searchTimeout\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        height: Number,\n        searchTimeout: Number,\n        texts: Object,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxDataGridHeaderFilter = DxDataGridHeaderFilter;\nDxDataGridHeaderFilter.$_optionName = \"headerFilter\";\nDxDataGridHeaderFilter.$_expectedChildren = {\n    dataGridHeaderFilterTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxDataGridHeaderFilterTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cancel\": null,\n        \"update:emptyValue\": null,\n        \"update:ok\": null,\n    },\n    props: {\n        cancel: String,\n        emptyValue: String,\n        ok: String\n    }\n});\nexports.DxDataGridHeaderFilterTexts = DxDataGridHeaderFilterTexts;\nDxDataGridHeaderFilterTexts.$_optionName = \"texts\";\nvar DxEditing = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowAdding\": null,\n        \"update:allowDeleting\": null,\n        \"update:allowUpdating\": null,\n        \"update:changes\": null,\n        \"update:confirmDelete\": null,\n        \"update:editColumnName\": null,\n        \"update:editRowKey\": null,\n        \"update:form\": null,\n        \"update:mode\": null,\n        \"update:newRowPosition\": null,\n        \"update:popup\": null,\n        \"update:refreshMode\": null,\n        \"update:selectTextOnEditStart\": null,\n        \"update:startEditAction\": null,\n        \"update:texts\": null,\n        \"update:useIcons\": null,\n    },\n    props: {\n        allowAdding: Boolean,\n        allowDeleting: [Boolean, Function],\n        allowUpdating: [Boolean, Function],\n        changes: Array,\n        confirmDelete: Boolean,\n        editColumnName: String,\n        editRowKey: {},\n        form: Object,\n        mode: String,\n        newRowPosition: String,\n        popup: Object,\n        refreshMode: String,\n        selectTextOnEditStart: Boolean,\n        startEditAction: String,\n        texts: {},\n        useIcons: Boolean\n    }\n});\nexports.DxEditing = DxEditing;\nDxEditing.$_optionName = \"editing\";\nDxEditing.$_expectedChildren = {\n    change: { isCollectionItem: true, optionName: \"changes\" },\n    editingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    form: { isCollectionItem: false, optionName: \"form\" },\n    popup: { isCollectionItem: false, optionName: \"popup\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxEditingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:addRow\": null,\n        \"update:cancelAllChanges\": null,\n        \"update:cancelRowChanges\": null,\n        \"update:confirmDeleteMessage\": null,\n        \"update:confirmDeleteTitle\": null,\n        \"update:deleteRow\": null,\n        \"update:editRow\": null,\n        \"update:saveAllChanges\": null,\n        \"update:saveRowChanges\": null,\n        \"update:undeleteRow\": null,\n        \"update:validationCancelChanges\": null,\n    },\n    props: {\n        addRow: String,\n        cancelAllChanges: String,\n        cancelRowChanges: String,\n        confirmDeleteMessage: String,\n        confirmDeleteTitle: String,\n        deleteRow: String,\n        editRow: String,\n        saveAllChanges: String,\n        saveRowChanges: String,\n        undeleteRow: String,\n        validationCancelChanges: String\n    }\n});\nexports.DxEditingTexts = DxEditingTexts;\nDxEditingTexts.$_optionName = \"texts\";\nvar DxEmailRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxEmailRule = DxEmailRule;\nDxEmailRule.$_optionName = \"validationRules\";\nDxEmailRule.$_isCollectionItem = true;\nDxEmailRule.$_predefinedProps = {\n    type: \"email\"\n};\nvar DxExport = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowExportSelectedData\": null,\n        \"update:customizeExcelCell\": null,\n        \"update:enabled\": null,\n        \"update:excelFilterEnabled\": null,\n        \"update:excelWrapTextEnabled\": null,\n        \"update:fileName\": null,\n        \"update:ignoreExcelErrors\": null,\n        \"update:proxyUrl\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        allowExportSelectedData: Boolean,\n        customizeExcelCell: Function,\n        enabled: Boolean,\n        excelFilterEnabled: Boolean,\n        excelWrapTextEnabled: Boolean,\n        fileName: String,\n        ignoreExcelErrors: Boolean,\n        proxyUrl: String,\n        texts: Object\n    }\n});\nexports.DxExport = DxExport;\nDxExport.$_optionName = \"export\";\nDxExport.$_expectedChildren = {\n    exportTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxExportTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:exportAll\": null,\n        \"update:exportSelectedRows\": null,\n        \"update:exportTo\": null,\n    },\n    props: {\n        exportAll: String,\n        exportSelectedRows: String,\n        exportTo: String\n    }\n});\nexports.DxExportTexts = DxExportTexts;\nDxExportTexts.$_optionName = \"texts\";\nvar DxField = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:caption\": null,\n        \"update:customizeText\": null,\n        \"update:dataField\": null,\n        \"update:dataType\": null,\n        \"update:defaultFilterOperation\": null,\n        \"update:editorOptions\": null,\n        \"update:editorTemplate\": null,\n        \"update:falseText\": null,\n        \"update:filterOperations\": null,\n        \"update:format\": null,\n        \"update:lookup\": null,\n        \"update:name\": null,\n        \"update:trueText\": null,\n    },\n    props: {\n        calculateFilterExpression: Function,\n        caption: String,\n        customizeText: Function,\n        dataField: String,\n        dataType: String,\n        defaultFilterOperation: String,\n        editorOptions: {},\n        editorTemplate: {},\n        falseText: String,\n        filterOperations: Array,\n        format: [Object, Function, String],\n        lookup: Object,\n        name: String,\n        trueText: String\n    }\n});\nexports.DxField = DxField;\nDxField.$_optionName = \"fields\";\nDxField.$_isCollectionItem = true;\nDxField.$_expectedChildren = {\n    fieldLookup: { isCollectionItem: false, optionName: \"lookup\" },\n    format: { isCollectionItem: false, optionName: \"format\" },\n    lookup: { isCollectionItem: false, optionName: \"lookup\" }\n};\nvar DxFieldLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        dataSource: [Array, Object],\n        displayExpr: [Function, String],\n        valueExpr: [Function, String]\n    }\n});\nexports.DxFieldLookup = DxFieldLookup;\nDxFieldLookup.$_optionName = \"lookup\";\nvar DxFilterBuilder = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:allowHierarchicalFields\": null,\n        \"update:bindingOptions\": null,\n        \"update:customOperations\": null,\n        \"update:disabled\": null,\n        \"update:elementAttr\": null,\n        \"update:fields\": null,\n        \"update:filterOperationDescriptions\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:groupOperationDescriptions\": null,\n        \"update:groupOperations\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxGroupLevel\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditorPrepared\": null,\n        \"update:onEditorPreparing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onValueChanged\": null,\n        \"update:rtlEnabled\": null,\n        \"update:tabIndex\": null,\n        \"update:value\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        allowHierarchicalFields: Boolean,\n        bindingOptions: Object,\n        customOperations: Array,\n        disabled: Boolean,\n        elementAttr: Object,\n        fields: Array,\n        filterOperationDescriptions: Object,\n        focusStateEnabled: Boolean,\n        groupOperationDescriptions: Object,\n        groupOperations: Array,\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxGroupLevel: Number,\n        onContentReady: Function,\n        onDisposing: Function,\n        onEditorPrepared: Function,\n        onEditorPreparing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onValueChanged: Function,\n        rtlEnabled: Boolean,\n        tabIndex: Number,\n        value: [Array, Function, String],\n        visible: Boolean,\n        width: [Function, Number, String]\n    }\n});\nexports.DxFilterBuilder = DxFilterBuilder;\nDxFilterBuilder.$_optionName = \"filterBuilder\";\nDxFilterBuilder.$_expectedChildren = {\n    customOperation: { isCollectionItem: true, optionName: \"customOperations\" },\n    field: { isCollectionItem: true, optionName: \"fields\" },\n    filterOperationDescriptions: { isCollectionItem: false, optionName: \"filterOperationDescriptions\" },\n    groupOperationDescriptions: { isCollectionItem: false, optionName: \"groupOperationDescriptions\" }\n};\nvar DxFilterBuilderPopup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:animation\": null,\n        \"update:bindingOptions\": null,\n        \"update:closeOnOutsideClick\": null,\n        \"update:container\": null,\n        \"update:contentTemplate\": null,\n        \"update:copyRootClassesToWrapper\": null,\n        \"update:deferRendering\": null,\n        \"update:disabled\": null,\n        \"update:dragAndResizeArea\": null,\n        \"update:dragEnabled\": null,\n        \"update:dragOutsideBoundary\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:fullScreen\": null,\n        \"update:height\": null,\n        \"update:hideOnParentScroll\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxHeight\": null,\n        \"update:maxWidth\": null,\n        \"update:minHeight\": null,\n        \"update:minWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onHidden\": null,\n        \"update:onHiding\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onResize\": null,\n        \"update:onResizeEnd\": null,\n        \"update:onResizeStart\": null,\n        \"update:onShowing\": null,\n        \"update:onShown\": null,\n        \"update:onTitleRendered\": null,\n        \"update:position\": null,\n        \"update:resizeEnabled\": null,\n        \"update:restorePosition\": null,\n        \"update:rtlEnabled\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showCloseButton\": null,\n        \"update:showTitle\": null,\n        \"update:tabIndex\": null,\n        \"update:title\": null,\n        \"update:titleTemplate\": null,\n        \"update:toolbarItems\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wrapperAttr\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        animation: Object,\n        bindingOptions: Object,\n        closeOnOutsideClick: [Boolean, Function],\n        container: {},\n        contentTemplate: {},\n        copyRootClassesToWrapper: Boolean,\n        deferRendering: Boolean,\n        disabled: Boolean,\n        dragAndResizeArea: {},\n        dragEnabled: Boolean,\n        dragOutsideBoundary: Boolean,\n        elementAttr: {},\n        focusStateEnabled: Boolean,\n        fullScreen: Boolean,\n        height: [Function, Number, String],\n        hideOnParentScroll: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxHeight: [Function, Number, String],\n        maxWidth: [Function, Number, String],\n        minHeight: [Function, Number, String],\n        minWidth: [Function, Number, String],\n        onContentReady: Function,\n        onDisposing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onHidden: Function,\n        onHiding: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onResize: Function,\n        onResizeEnd: Function,\n        onResizeStart: Function,\n        onShowing: Function,\n        onShown: Function,\n        onTitleRendered: Function,\n        position: [Function, Object, String],\n        resizeEnabled: Boolean,\n        restorePosition: Boolean,\n        rtlEnabled: Boolean,\n        shading: Boolean,\n        shadingColor: String,\n        showCloseButton: Boolean,\n        showTitle: Boolean,\n        tabIndex: Number,\n        title: String,\n        titleTemplate: {},\n        toolbarItems: Array,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wrapperAttr: {}\n    }\n});\nexports.DxFilterBuilderPopup = DxFilterBuilderPopup;\nDxFilterBuilderPopup.$_optionName = \"filterBuilderPopup\";\nvar DxFilterOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:between\": null,\n        \"update:contains\": null,\n        \"update:endsWith\": null,\n        \"update:equal\": null,\n        \"update:greaterThan\": null,\n        \"update:greaterThanOrEqual\": null,\n        \"update:isBlank\": null,\n        \"update:isNotBlank\": null,\n        \"update:lessThan\": null,\n        \"update:lessThanOrEqual\": null,\n        \"update:notContains\": null,\n        \"update:notEqual\": null,\n        \"update:startsWith\": null,\n    },\n    props: {\n        between: String,\n        contains: String,\n        endsWith: String,\n        equal: String,\n        greaterThan: String,\n        greaterThanOrEqual: String,\n        isBlank: String,\n        isNotBlank: String,\n        lessThan: String,\n        lessThanOrEqual: String,\n        notContains: String,\n        notEqual: String,\n        startsWith: String\n    }\n});\nexports.DxFilterOperationDescriptions = DxFilterOperationDescriptions;\nDxFilterOperationDescriptions.$_optionName = \"filterOperationDescriptions\";\nvar DxFilterPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:customizeText\": null,\n        \"update:filterEnabled\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        customizeText: Function,\n        filterEnabled: Boolean,\n        texts: Object,\n        visible: Boolean\n    }\n});\nexports.DxFilterPanel = DxFilterPanel;\nDxFilterPanel.$_optionName = \"filterPanel\";\nDxFilterPanel.$_expectedChildren = {\n    filterPanelTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxFilterPanelTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:clearFilter\": null,\n        \"update:createFilter\": null,\n        \"update:filterEnabledHint\": null,\n    },\n    props: {\n        clearFilter: String,\n        createFilter: String,\n        filterEnabledHint: String\n    }\n});\nexports.DxFilterPanelTexts = DxFilterPanelTexts;\nDxFilterPanelTexts.$_optionName = \"texts\";\nvar DxFilterRow = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:applyFilter\": null,\n        \"update:applyFilterText\": null,\n        \"update:betweenEndText\": null,\n        \"update:betweenStartText\": null,\n        \"update:operationDescriptions\": null,\n        \"update:resetOperationText\": null,\n        \"update:showAllText\": null,\n        \"update:showOperationChooser\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        applyFilter: String,\n        applyFilterText: String,\n        betweenEndText: String,\n        betweenStartText: String,\n        operationDescriptions: Object,\n        resetOperationText: String,\n        showAllText: String,\n        showOperationChooser: Boolean,\n        visible: Boolean\n    }\n});\nexports.DxFilterRow = DxFilterRow;\nDxFilterRow.$_optionName = \"filterRow\";\nDxFilterRow.$_expectedChildren = {\n    operationDescriptions: { isCollectionItem: false, optionName: \"operationDescriptions\" }\n};\nvar DxForm = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:alignItemLabels\": null,\n        \"update:alignItemLabelsInAllGroups\": null,\n        \"update:bindingOptions\": null,\n        \"update:colCount\": null,\n        \"update:colCountByScreen\": null,\n        \"update:customizeItem\": null,\n        \"update:disabled\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:formData\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:items\": null,\n        \"update:labelLocation\": null,\n        \"update:labelMode\": null,\n        \"update:minColWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditorEnterKey\": null,\n        \"update:onFieldDataChanged\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:optionalMark\": null,\n        \"update:readOnly\": null,\n        \"update:requiredMark\": null,\n        \"update:requiredMessage\": null,\n        \"update:rtlEnabled\": null,\n        \"update:screenByWidth\": null,\n        \"update:scrollingEnabled\": null,\n        \"update:showColonAfterLabel\": null,\n        \"update:showOptionalMark\": null,\n        \"update:showRequiredMark\": null,\n        \"update:showValidationSummary\": null,\n        \"update:tabIndex\": null,\n        \"update:validationGroup\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        alignItemLabels: Boolean,\n        alignItemLabelsInAllGroups: Boolean,\n        bindingOptions: Object,\n        colCount: [Number, String],\n        colCountByScreen: Object,\n        customizeItem: Function,\n        disabled: Boolean,\n        elementAttr: Object,\n        focusStateEnabled: Boolean,\n        formData: {},\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        items: Array,\n        labelLocation: String,\n        labelMode: String,\n        minColWidth: Number,\n        onContentReady: Function,\n        onDisposing: Function,\n        onEditorEnterKey: Function,\n        onFieldDataChanged: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        optionalMark: String,\n        readOnly: Boolean,\n        requiredMark: String,\n        requiredMessage: String,\n        rtlEnabled: Boolean,\n        screenByWidth: Function,\n        scrollingEnabled: Boolean,\n        showColonAfterLabel: Boolean,\n        showOptionalMark: Boolean,\n        showRequiredMark: Boolean,\n        showValidationSummary: Boolean,\n        tabIndex: Number,\n        validationGroup: String,\n        visible: Boolean,\n        width: [Function, Number, String]\n    }\n});\nexports.DxForm = DxForm;\nDxForm.$_optionName = \"form\";\nDxForm.$_expectedChildren = {\n    colCountByScreen: { isCollectionItem: false, optionName: \"colCountByScreen\" }\n};\nvar DxFormat = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:currency\": null,\n        \"update:formatter\": null,\n        \"update:parser\": null,\n        \"update:precision\": null,\n        \"update:type\": null,\n    },\n    props: {\n        currency: String,\n        formatter: Function,\n        parser: Function,\n        precision: Number,\n        type: String\n    }\n});\nexports.DxFormat = DxFormat;\nDxFormat.$_optionName = \"format\";\nvar DxFormItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:colSpan\": null,\n        \"update:cssClass\": null,\n        \"update:dataField\": null,\n        \"update:editorOptions\": null,\n        \"update:editorType\": null,\n        \"update:helpText\": null,\n        \"update:isRequired\": null,\n        \"update:itemType\": null,\n        \"update:label\": null,\n        \"update:name\": null,\n        \"update:template\": null,\n        \"update:validationRules\": null,\n        \"update:visible\": null,\n        \"update:visibleIndex\": null,\n    },\n    props: {\n        colSpan: Number,\n        cssClass: String,\n        dataField: String,\n        editorOptions: {},\n        editorType: String,\n        helpText: String,\n        isRequired: Boolean,\n        itemType: String,\n        label: Object,\n        name: String,\n        template: {},\n        validationRules: Array,\n        visible: Boolean,\n        visibleIndex: Number\n    }\n});\nexports.DxFormItem = DxFormItem;\nDxFormItem.$_optionName = \"formItem\";\nDxFormItem.$_expectedChildren = {\n    AsyncRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CompareRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CustomRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    EmailRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    label: { isCollectionItem: false, optionName: \"label\" },\n    NumericRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    PatternRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RangeRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RequiredRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    StringLengthRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    validationRule: { isCollectionItem: true, optionName: \"validationRules\" }\n};\nvar DxFrom = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:scale\": null,\n        \"update:top\": null,\n    },\n    props: {\n        left: Number,\n        opacity: Number,\n        position: Object,\n        scale: Number,\n        top: Number\n    }\n});\nexports.DxFrom = DxFrom;\nDxFrom.$_optionName = \"from\";\nDxFrom.$_expectedChildren = {\n    position: { isCollectionItem: false, optionName: \"position\" }\n};\nvar DxGrouping = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowCollapsing\": null,\n        \"update:autoExpandAll\": null,\n        \"update:contextMenuEnabled\": null,\n        \"update:expandMode\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        allowCollapsing: Boolean,\n        autoExpandAll: Boolean,\n        contextMenuEnabled: Boolean,\n        expandMode: String,\n        texts: Object\n    }\n});\nexports.DxGrouping = DxGrouping;\nDxGrouping.$_optionName = \"grouping\";\nDxGrouping.$_expectedChildren = {\n    groupingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxGroupingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:groupByThisColumn\": null,\n        \"update:groupContinuedMessage\": null,\n        \"update:groupContinuesMessage\": null,\n        \"update:ungroup\": null,\n        \"update:ungroupAll\": null,\n    },\n    props: {\n        groupByThisColumn: String,\n        groupContinuedMessage: String,\n        groupContinuesMessage: String,\n        ungroup: String,\n        ungroupAll: String\n    }\n});\nexports.DxGroupingTexts = DxGroupingTexts;\nDxGroupingTexts.$_optionName = \"texts\";\nvar DxGroupItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignByColumn\": null,\n        \"update:column\": null,\n        \"update:customizeText\": null,\n        \"update:displayFormat\": null,\n        \"update:name\": null,\n        \"update:showInColumn\": null,\n        \"update:showInGroupFooter\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:summaryType\": null,\n        \"update:valueFormat\": null,\n    },\n    props: {\n        alignByColumn: Boolean,\n        column: String,\n        customizeText: Function,\n        displayFormat: String,\n        name: String,\n        showInColumn: String,\n        showInGroupFooter: Boolean,\n        skipEmptyValues: Boolean,\n        summaryType: String,\n        valueFormat: [Object, Function, String]\n    }\n});\nexports.DxGroupItem = DxGroupItem;\nDxGroupItem.$_optionName = \"groupItems\";\nDxGroupItem.$_isCollectionItem = true;\nDxGroupItem.$_expectedChildren = {\n    valueFormat: { isCollectionItem: false, optionName: \"valueFormat\" }\n};\nvar DxGroupOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:and\": null,\n        \"update:notAnd\": null,\n        \"update:notOr\": null,\n        \"update:or\": null,\n    },\n    props: {\n        and: String,\n        notAnd: String,\n        notOr: String,\n        or: String\n    }\n});\nexports.DxGroupOperationDescriptions = DxGroupOperationDescriptions;\nDxGroupOperationDescriptions.$_optionName = \"groupOperationDescriptions\";\nvar DxGroupPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowColumnDragging\": null,\n        \"update:emptyPanelText\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        allowColumnDragging: Boolean,\n        emptyPanelText: String,\n        visible: [Boolean, String]\n    }\n});\nexports.DxGroupPanel = DxGroupPanel;\nDxGroupPanel.$_optionName = \"groupPanel\";\nvar DxHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:dataSource\": null,\n        \"update:groupInterval\": null,\n        \"update:height\": null,\n        \"update:searchMode\": null,\n        \"update:searchTimeout\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        dataSource: [Array, Object, Function],\n        groupInterval: [Number, String],\n        height: Number,\n        searchMode: String,\n        searchTimeout: Number,\n        texts: Object,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxHeaderFilter = DxHeaderFilter;\nDxHeaderFilter.$_optionName = \"headerFilter\";\nvar DxHide = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:complete\": null,\n        \"update:delay\": null,\n        \"update:direction\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:from\": null,\n        \"update:staggerDelay\": null,\n        \"update:start\": null,\n        \"update:to\": null,\n        \"update:type\": null,\n    },\n    props: {\n        complete: Function,\n        delay: Number,\n        direction: String,\n        duration: Number,\n        easing: String,\n        from: Object,\n        staggerDelay: Number,\n        start: Function,\n        to: Object,\n        type: String\n    }\n});\nexports.DxHide = DxHide;\nDxHide.$_optionName = \"hide\";\nDxHide.$_expectedChildren = {\n    from: { isCollectionItem: false, optionName: \"from\" },\n    to: { isCollectionItem: false, optionName: \"to\" }\n};\nvar DxItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cssClass\": null,\n        \"update:disabled\": null,\n        \"update:html\": null,\n        \"update:locateInMenu\": null,\n        \"update:location\": null,\n        \"update:menuItemTemplate\": null,\n        \"update:name\": null,\n        \"update:options\": null,\n        \"update:showText\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n        \"update:widget\": null,\n    },\n    props: {\n        cssClass: String,\n        disabled: Boolean,\n        html: String,\n        locateInMenu: String,\n        location: String,\n        menuItemTemplate: {},\n        name: String,\n        options: {},\n        showText: String,\n        template: {},\n        text: String,\n        visible: Boolean,\n        widget: String\n    }\n});\nexports.DxItem = DxItem;\nDxItem.$_optionName = \"items\";\nDxItem.$_isCollectionItem = true;\nvar DxKeyboardNavigation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:editOnKeyPress\": null,\n        \"update:enabled\": null,\n        \"update:enterKeyAction\": null,\n        \"update:enterKeyDirection\": null,\n    },\n    props: {\n        editOnKeyPress: Boolean,\n        enabled: Boolean,\n        enterKeyAction: String,\n        enterKeyDirection: String\n    }\n});\nexports.DxKeyboardNavigation = DxKeyboardNavigation;\nDxKeyboardNavigation.$_optionName = \"keyboardNavigation\";\nvar DxLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:location\": null,\n        \"update:showColon\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        alignment: String,\n        location: String,\n        showColon: Boolean,\n        text: String,\n        visible: Boolean\n    }\n});\nexports.DxLabel = DxLabel;\nDxLabel.$_optionName = \"label\";\nvar DxLoadPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:height\": null,\n        \"update:indicatorSrc\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showIndicator\": null,\n        \"update:showPane\": null,\n        \"update:text\": null,\n        \"update:width\": null,\n    },\n    props: {\n        enabled: [Boolean, String],\n        height: Number,\n        indicatorSrc: String,\n        shading: Boolean,\n        shadingColor: String,\n        showIndicator: Boolean,\n        showPane: Boolean,\n        text: String,\n        width: Number\n    }\n});\nexports.DxLoadPanel = DxLoadPanel;\nDxLoadPanel.$_optionName = \"loadPanel\";\nvar DxLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:calculateCellValue\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        calculateCellValue: Function,\n        dataSource: [Array, Object, Function],\n        displayExpr: [Function, String],\n        valueExpr: String\n    }\n});\nexports.DxLookup = DxLookup;\nDxLookup.$_optionName = \"lookup\";\nvar DxMasterDetail = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:autoExpandAll\": null,\n        \"update:enabled\": null,\n        \"update:template\": null,\n    },\n    props: {\n        autoExpandAll: Boolean,\n        enabled: Boolean,\n        template: {}\n    }\n});\nexports.DxMasterDetail = DxMasterDetail;\nDxMasterDetail.$_optionName = \"masterDetail\";\nvar DxMy = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxMy = DxMy;\nDxMy.$_optionName = \"my\";\nvar DxNumericRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxNumericRule = DxNumericRule;\nDxNumericRule.$_optionName = \"validationRules\";\nDxNumericRule.$_isCollectionItem = true;\nDxNumericRule.$_predefinedProps = {\n    type: \"numeric\"\n};\nvar DxOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxOffset = DxOffset;\nDxOffset.$_optionName = \"offset\";\nvar DxOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:between\": null,\n        \"update:contains\": null,\n        \"update:endsWith\": null,\n        \"update:equal\": null,\n        \"update:greaterThan\": null,\n        \"update:greaterThanOrEqual\": null,\n        \"update:lessThan\": null,\n        \"update:lessThanOrEqual\": null,\n        \"update:notContains\": null,\n        \"update:notEqual\": null,\n        \"update:startsWith\": null,\n    },\n    props: {\n        between: String,\n        contains: String,\n        endsWith: String,\n        equal: String,\n        greaterThan: String,\n        greaterThanOrEqual: String,\n        lessThan: String,\n        lessThanOrEqual: String,\n        notContains: String,\n        notEqual: String,\n        startsWith: String\n    }\n});\nexports.DxOperationDescriptions = DxOperationDescriptions;\nDxOperationDescriptions.$_optionName = \"operationDescriptions\";\nvar DxPager = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowedPageSizes\": null,\n        \"update:displayMode\": null,\n        \"update:infoText\": null,\n        \"update:showInfo\": null,\n        \"update:showNavigationButtons\": null,\n        \"update:showPageSizeSelector\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        allowedPageSizes: [Array, String],\n        displayMode: String,\n        infoText: String,\n        showInfo: Boolean,\n        showNavigationButtons: Boolean,\n        showPageSizeSelector: Boolean,\n        visible: [Boolean, String]\n    }\n});\nexports.DxPager = DxPager;\nDxPager.$_optionName = \"pager\";\nvar DxPaging = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:pageIndex\": null,\n        \"update:pageSize\": null,\n    },\n    props: {\n        enabled: Boolean,\n        pageIndex: Number,\n        pageSize: Number\n    }\n});\nexports.DxPaging = DxPaging;\nDxPaging.$_optionName = \"paging\";\nvar DxPatternRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:pattern\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        pattern: {},\n        type: String\n    }\n});\nexports.DxPatternRule = DxPatternRule;\nDxPatternRule.$_optionName = \"validationRules\";\nDxPatternRule.$_isCollectionItem = true;\nDxPatternRule.$_predefinedProps = {\n    type: \"pattern\"\n};\nvar DxPopup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:animation\": null,\n        \"update:bindingOptions\": null,\n        \"update:closeOnOutsideClick\": null,\n        \"update:container\": null,\n        \"update:contentTemplate\": null,\n        \"update:copyRootClassesToWrapper\": null,\n        \"update:deferRendering\": null,\n        \"update:disabled\": null,\n        \"update:dragAndResizeArea\": null,\n        \"update:dragEnabled\": null,\n        \"update:dragOutsideBoundary\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:fullScreen\": null,\n        \"update:height\": null,\n        \"update:hideOnParentScroll\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxHeight\": null,\n        \"update:maxWidth\": null,\n        \"update:minHeight\": null,\n        \"update:minWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onHidden\": null,\n        \"update:onHiding\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onResize\": null,\n        \"update:onResizeEnd\": null,\n        \"update:onResizeStart\": null,\n        \"update:onShowing\": null,\n        \"update:onShown\": null,\n        \"update:onTitleRendered\": null,\n        \"update:position\": null,\n        \"update:resizeEnabled\": null,\n        \"update:restorePosition\": null,\n        \"update:rtlEnabled\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showCloseButton\": null,\n        \"update:showTitle\": null,\n        \"update:tabIndex\": null,\n        \"update:title\": null,\n        \"update:titleTemplate\": null,\n        \"update:toolbarItems\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wrapperAttr\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        animation: Object,\n        bindingOptions: Object,\n        closeOnOutsideClick: [Boolean, Function],\n        container: {},\n        contentTemplate: {},\n        copyRootClassesToWrapper: Boolean,\n        deferRendering: Boolean,\n        disabled: Boolean,\n        dragAndResizeArea: {},\n        dragEnabled: Boolean,\n        dragOutsideBoundary: Boolean,\n        elementAttr: {},\n        focusStateEnabled: Boolean,\n        fullScreen: Boolean,\n        height: [Function, Number, String],\n        hideOnParentScroll: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxHeight: [Function, Number, String],\n        maxWidth: [Function, Number, String],\n        minHeight: [Function, Number, String],\n        minWidth: [Function, Number, String],\n        onContentReady: Function,\n        onDisposing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onHidden: Function,\n        onHiding: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onResize: Function,\n        onResizeEnd: Function,\n        onResizeStart: Function,\n        onShowing: Function,\n        onShown: Function,\n        onTitleRendered: Function,\n        position: [Function, Object, String],\n        resizeEnabled: Boolean,\n        restorePosition: Boolean,\n        rtlEnabled: Boolean,\n        shading: Boolean,\n        shadingColor: String,\n        showCloseButton: Boolean,\n        showTitle: Boolean,\n        tabIndex: Number,\n        title: String,\n        titleTemplate: {},\n        toolbarItems: Array,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wrapperAttr: {}\n    }\n});\nexports.DxPopup = DxPopup;\nDxPopup.$_optionName = \"popup\";\nDxPopup.$_expectedChildren = {\n    animation: { isCollectionItem: false, optionName: \"animation\" },\n    position: { isCollectionItem: false, optionName: \"position\" },\n    toolbarItem: { isCollectionItem: true, optionName: \"toolbarItems\" }\n};\nvar DxPosition = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:at\": null,\n        \"update:boundary\": null,\n        \"update:boundaryOffset\": null,\n        \"update:collision\": null,\n        \"update:my\": null,\n        \"update:of\": null,\n        \"update:offset\": null,\n    },\n    props: {\n        at: [Object, String],\n        boundary: {},\n        boundaryOffset: [Object, String],\n        collision: [Object, String],\n        my: [Object, String],\n        of: {},\n        offset: [Object, String]\n    }\n});\nexports.DxPosition = DxPosition;\nDxPosition.$_optionName = \"position\";\nvar DxRangeRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        max: {},\n        message: String,\n        min: {},\n        reevaluate: Boolean,\n        type: String\n    }\n});\nexports.DxRangeRule = DxRangeRule;\nDxRangeRule.$_optionName = \"validationRules\";\nDxRangeRule.$_isCollectionItem = true;\nDxRangeRule.$_predefinedProps = {\n    type: \"range\"\n};\nvar DxRemoteOperations = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:filtering\": null,\n        \"update:grouping\": null,\n        \"update:groupPaging\": null,\n        \"update:paging\": null,\n        \"update:sorting\": null,\n        \"update:summary\": null,\n    },\n    props: {\n        filtering: Boolean,\n        grouping: Boolean,\n        groupPaging: Boolean,\n        paging: Boolean,\n        sorting: Boolean,\n        summary: Boolean\n    }\n});\nexports.DxRemoteOperations = DxRemoteOperations;\nDxRemoteOperations.$_optionName = \"remoteOperations\";\nvar DxRequiredRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:message\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n    },\n    props: {\n        message: String,\n        trim: Boolean,\n        type: String\n    }\n});\nexports.DxRequiredRule = DxRequiredRule;\nDxRequiredRule.$_optionName = \"validationRules\";\nDxRequiredRule.$_isCollectionItem = true;\nDxRequiredRule.$_predefinedProps = {\n    type: \"required\"\n};\nvar DxRowDragging = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowDropInsideItem\": null,\n        \"update:allowReordering\": null,\n        \"update:autoScroll\": null,\n        \"update:boundary\": null,\n        \"update:container\": null,\n        \"update:cursorOffset\": null,\n        \"update:data\": null,\n        \"update:dragDirection\": null,\n        \"update:dragTemplate\": null,\n        \"update:dropFeedbackMode\": null,\n        \"update:filter\": null,\n        \"update:group\": null,\n        \"update:handle\": null,\n        \"update:onAdd\": null,\n        \"update:onDragChange\": null,\n        \"update:onDragEnd\": null,\n        \"update:onDragMove\": null,\n        \"update:onDragStart\": null,\n        \"update:onRemove\": null,\n        \"update:onReorder\": null,\n        \"update:scrollSensitivity\": null,\n        \"update:scrollSpeed\": null,\n        \"update:showDragIcons\": null,\n    },\n    props: {\n        allowDropInsideItem: Boolean,\n        allowReordering: Boolean,\n        autoScroll: Boolean,\n        boundary: {},\n        container: {},\n        cursorOffset: [Object, String],\n        data: {},\n        dragDirection: String,\n        dragTemplate: {},\n        dropFeedbackMode: String,\n        filter: String,\n        group: String,\n        handle: String,\n        onAdd: Function,\n        onDragChange: Function,\n        onDragEnd: Function,\n        onDragMove: Function,\n        onDragStart: Function,\n        onRemove: Function,\n        onReorder: Function,\n        scrollSensitivity: Number,\n        scrollSpeed: Number,\n        showDragIcons: Boolean\n    }\n});\nexports.DxRowDragging = DxRowDragging;\nDxRowDragging.$_optionName = \"rowDragging\";\nDxRowDragging.$_expectedChildren = {\n    cursorOffset: { isCollectionItem: false, optionName: \"cursorOffset\" }\n};\nvar DxScrolling = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:columnRenderingMode\": null,\n        \"update:mode\": null,\n        \"update:preloadEnabled\": null,\n        \"update:renderAsync\": null,\n        \"update:rowRenderingMode\": null,\n        \"update:scrollByContent\": null,\n        \"update:scrollByThumb\": null,\n        \"update:showScrollbar\": null,\n        \"update:useNative\": null,\n    },\n    props: {\n        columnRenderingMode: String,\n        mode: String,\n        preloadEnabled: Boolean,\n        renderAsync: Boolean,\n        rowRenderingMode: String,\n        scrollByContent: Boolean,\n        scrollByThumb: Boolean,\n        showScrollbar: String,\n        useNative: [Boolean, String]\n    }\n});\nexports.DxScrolling = DxScrolling;\nDxScrolling.$_optionName = \"scrolling\";\nvar DxSearchPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:highlightCaseSensitive\": null,\n        \"update:highlightSearchText\": null,\n        \"update:placeholder\": null,\n        \"update:searchVisibleColumnsOnly\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        highlightCaseSensitive: Boolean,\n        highlightSearchText: Boolean,\n        placeholder: String,\n        searchVisibleColumnsOnly: Boolean,\n        text: String,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxSearchPanel = DxSearchPanel;\nDxSearchPanel.$_optionName = \"searchPanel\";\nvar DxSelection = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSelectAll\": null,\n        \"update:deferred\": null,\n        \"update:maxFilterLengthInRequest\": null,\n        \"update:mode\": null,\n        \"update:selectAllMode\": null,\n        \"update:showCheckBoxesMode\": null,\n    },\n    props: {\n        allowSelectAll: Boolean,\n        deferred: Boolean,\n        maxFilterLengthInRequest: Number,\n        mode: String,\n        selectAllMode: String,\n        showCheckBoxesMode: String\n    }\n});\nexports.DxSelection = DxSelection;\nDxSelection.$_optionName = \"selection\";\nvar DxShow = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:complete\": null,\n        \"update:delay\": null,\n        \"update:direction\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:from\": null,\n        \"update:staggerDelay\": null,\n        \"update:start\": null,\n        \"update:to\": null,\n        \"update:type\": null,\n    },\n    props: {\n        complete: Function,\n        delay: Number,\n        direction: String,\n        duration: Number,\n        easing: String,\n        from: Object,\n        staggerDelay: Number,\n        start: Function,\n        to: Object,\n        type: String\n    }\n});\nexports.DxShow = DxShow;\nDxShow.$_optionName = \"show\";\nvar DxSortByGroupSummaryInfo = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:groupColumn\": null,\n        \"update:sortOrder\": null,\n        \"update:summaryItem\": null,\n    },\n    props: {\n        groupColumn: String,\n        sortOrder: String,\n        summaryItem: [Number, String]\n    }\n});\nexports.DxSortByGroupSummaryInfo = DxSortByGroupSummaryInfo;\nDxSortByGroupSummaryInfo.$_optionName = \"sortByGroupSummaryInfo\";\nDxSortByGroupSummaryInfo.$_isCollectionItem = true;\nvar DxSorting = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ascendingText\": null,\n        \"update:clearText\": null,\n        \"update:descendingText\": null,\n        \"update:mode\": null,\n        \"update:showSortIndexes\": null,\n    },\n    props: {\n        ascendingText: String,\n        clearText: String,\n        descendingText: String,\n        mode: String,\n        showSortIndexes: Boolean\n    }\n});\nexports.DxSorting = DxSorting;\nDxSorting.$_optionName = \"sorting\";\nvar DxStateStoring = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:customLoad\": null,\n        \"update:customSave\": null,\n        \"update:enabled\": null,\n        \"update:savingTimeout\": null,\n        \"update:storageKey\": null,\n        \"update:type\": null,\n    },\n    props: {\n        customLoad: Function,\n        customSave: Function,\n        enabled: Boolean,\n        savingTimeout: Number,\n        storageKey: String,\n        type: String\n    }\n});\nexports.DxStateStoring = DxStateStoring;\nDxStateStoring.$_optionName = \"stateStoring\";\nvar DxStringLengthRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        max: Number,\n        message: String,\n        min: Number,\n        trim: Boolean,\n        type: String\n    }\n});\nexports.DxStringLengthRule = DxStringLengthRule;\nDxStringLengthRule.$_optionName = \"validationRules\";\nDxStringLengthRule.$_isCollectionItem = true;\nDxStringLengthRule.$_predefinedProps = {\n    type: \"stringLength\"\n};\nvar DxSummary = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateCustomSummary\": null,\n        \"update:groupItems\": null,\n        \"update:recalculateWhileEditing\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:texts\": null,\n        \"update:totalItems\": null,\n    },\n    props: {\n        calculateCustomSummary: Function,\n        groupItems: Array,\n        recalculateWhileEditing: Boolean,\n        skipEmptyValues: Boolean,\n        texts: Object,\n        totalItems: Array\n    }\n});\nexports.DxSummary = DxSummary;\nDxSummary.$_optionName = \"summary\";\nDxSummary.$_expectedChildren = {\n    groupItem: { isCollectionItem: true, optionName: \"groupItems\" },\n    summaryTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" },\n    totalItem: { isCollectionItem: true, optionName: \"totalItems\" }\n};\nvar DxSummaryTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:avg\": null,\n        \"update:avgOtherColumn\": null,\n        \"update:count\": null,\n        \"update:max\": null,\n        \"update:maxOtherColumn\": null,\n        \"update:min\": null,\n        \"update:minOtherColumn\": null,\n        \"update:sum\": null,\n        \"update:sumOtherColumn\": null,\n    },\n    props: {\n        avg: String,\n        avgOtherColumn: String,\n        count: String,\n        max: String,\n        maxOtherColumn: String,\n        min: String,\n        minOtherColumn: String,\n        sum: String,\n        sumOtherColumn: String\n    }\n});\nexports.DxSummaryTexts = DxSummaryTexts;\nDxSummaryTexts.$_optionName = \"texts\";\nvar DxTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:addRow\": null,\n        \"update:avg\": null,\n        \"update:avgOtherColumn\": null,\n        \"update:cancel\": null,\n        \"update:cancelAllChanges\": null,\n        \"update:cancelRowChanges\": null,\n        \"update:clearFilter\": null,\n        \"update:confirmDeleteMessage\": null,\n        \"update:confirmDeleteTitle\": null,\n        \"update:count\": null,\n        \"update:createFilter\": null,\n        \"update:deleteRow\": null,\n        \"update:editRow\": null,\n        \"update:emptyValue\": null,\n        \"update:exportAll\": null,\n        \"update:exportSelectedRows\": null,\n        \"update:exportTo\": null,\n        \"update:filterEnabledHint\": null,\n        \"update:fix\": null,\n        \"update:groupByThisColumn\": null,\n        \"update:groupContinuedMessage\": null,\n        \"update:groupContinuesMessage\": null,\n        \"update:leftPosition\": null,\n        \"update:max\": null,\n        \"update:maxOtherColumn\": null,\n        \"update:min\": null,\n        \"update:minOtherColumn\": null,\n        \"update:ok\": null,\n        \"update:rightPosition\": null,\n        \"update:saveAllChanges\": null,\n        \"update:saveRowChanges\": null,\n        \"update:sum\": null,\n        \"update:sumOtherColumn\": null,\n        \"update:undeleteRow\": null,\n        \"update:unfix\": null,\n        \"update:ungroup\": null,\n        \"update:ungroupAll\": null,\n        \"update:validationCancelChanges\": null,\n    },\n    props: {\n        addRow: String,\n        avg: String,\n        avgOtherColumn: String,\n        cancel: String,\n        cancelAllChanges: String,\n        cancelRowChanges: String,\n        clearFilter: String,\n        confirmDeleteMessage: String,\n        confirmDeleteTitle: String,\n        count: String,\n        createFilter: String,\n        deleteRow: String,\n        editRow: String,\n        emptyValue: String,\n        exportAll: String,\n        exportSelectedRows: String,\n        exportTo: String,\n        filterEnabledHint: String,\n        fix: String,\n        groupByThisColumn: String,\n        groupContinuedMessage: String,\n        groupContinuesMessage: String,\n        leftPosition: String,\n        max: String,\n        maxOtherColumn: String,\n        min: String,\n        minOtherColumn: String,\n        ok: String,\n        rightPosition: String,\n        saveAllChanges: String,\n        saveRowChanges: String,\n        sum: String,\n        sumOtherColumn: String,\n        undeleteRow: String,\n        unfix: String,\n        ungroup: String,\n        ungroupAll: String,\n        validationCancelChanges: String\n    }\n});\nexports.DxTexts = DxTexts;\nDxTexts.$_optionName = \"texts\";\nvar DxTo = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:scale\": null,\n        \"update:top\": null,\n    },\n    props: {\n        left: Number,\n        opacity: Number,\n        position: Object,\n        scale: Number,\n        top: Number\n    }\n});\nexports.DxTo = DxTo;\nDxTo.$_optionName = \"to\";\nvar DxToolbar = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:disabled\": null,\n        \"update:items\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        disabled: Boolean,\n        items: Array,\n        visible: Boolean\n    }\n});\nexports.DxToolbar = DxToolbar;\nDxToolbar.$_optionName = \"toolbar\";\nDxToolbar.$_expectedChildren = {\n    item: { isCollectionItem: true, optionName: \"items\" }\n};\nvar DxToolbarItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:disabled\": null,\n        \"update:html\": null,\n        \"update:location\": null,\n        \"update:options\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:toolbar\": null,\n        \"update:visible\": null,\n        \"update:widget\": null,\n    },\n    props: {\n        disabled: Boolean,\n        html: String,\n        location: String,\n        options: {},\n        template: {},\n        text: String,\n        toolbar: String,\n        visible: Boolean,\n        widget: String\n    }\n});\nexports.DxToolbarItem = DxToolbarItem;\nDxToolbarItem.$_optionName = \"toolbarItems\";\nDxToolbarItem.$_isCollectionItem = true;\nvar DxTotalItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:column\": null,\n        \"update:cssClass\": null,\n        \"update:customizeText\": null,\n        \"update:displayFormat\": null,\n        \"update:name\": null,\n        \"update:showInColumn\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:summaryType\": null,\n        \"update:valueFormat\": null,\n    },\n    props: {\n        alignment: String,\n        column: String,\n        cssClass: String,\n        customizeText: Function,\n        displayFormat: String,\n        name: String,\n        showInColumn: String,\n        skipEmptyValues: Boolean,\n        summaryType: String,\n        valueFormat: [Object, Function, String]\n    }\n});\nexports.DxTotalItem = DxTotalItem;\nDxTotalItem.$_optionName = \"totalItems\";\nDxTotalItem.$_isCollectionItem = true;\nDxTotalItem.$_expectedChildren = {\n    valueFormat: { isCollectionItem: false, optionName: \"valueFormat\" }\n};\nvar DxValidationRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:comparisonTarget\": null,\n        \"update:comparisonType\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:pattern\": null,\n        \"update:reevaluate\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        comparisonTarget: Function,\n        comparisonType: String,\n        ignoreEmptyValue: Boolean,\n        max: {},\n        message: String,\n        min: {},\n        pattern: {},\n        reevaluate: Boolean,\n        trim: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxValidationRule = DxValidationRule;\nDxValidationRule.$_optionName = \"validationRules\";\nDxValidationRule.$_isCollectionItem = true;\nDxValidationRule.$_predefinedProps = {\n    type: \"required\"\n};\nvar DxValueFormat = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:currency\": null,\n        \"update:formatter\": null,\n        \"update:parser\": null,\n        \"update:precision\": null,\n        \"update:type\": null,\n    },\n    props: {\n        currency: String,\n        formatter: Function,\n        parser: Function,\n        precision: Number,\n        type: String\n    }\n});\nexports.DxValueFormat = DxValueFormat;\nDxValueFormat.$_optionName = \"valueFormat\";\nexports.default = DxDataGrid;\n","/**\r\n * DevExtreme (esm/ui/shared/filtering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDate,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nvar DEFAULT_DATE_INTERVAL = [\"year\", \"month\", \"day\"];\r\nvar DEFAULT_DATETIME_INTERVAL = [\"year\", \"month\", \"day\", \"hour\", \"minute\"];\r\nvar isDateType = function(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n};\r\nvar getGroupInterval = function(column) {\r\n    var index;\r\n    var result = [];\r\n    var dateIntervals = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"];\r\n    var groupInterval = column.headerFilter && column.headerFilter.groupInterval;\r\n    var interval = \"quarter\" === groupInterval ? \"month\" : groupInterval;\r\n    if (isDateType(column.dataType) && null !== groupInterval) {\r\n        result = \"datetime\" === column.dataType ? DEFAULT_DATETIME_INTERVAL : DEFAULT_DATE_INTERVAL;\r\n        index = inArray(interval, dateIntervals);\r\n        if (index >= 0) {\r\n            result = dateIntervals.slice(0, index);\r\n            result.push(groupInterval);\r\n            return result\r\n        }\r\n        return result\r\n    } else if (isDefined(groupInterval)) {\r\n        return Array.isArray(groupInterval) ? groupInterval : [groupInterval]\r\n    }\r\n};\r\nexport default (function() {\r\n    var getFilterSelector = function(column, target) {\r\n        var selector = column.dataField || column.selector;\r\n        if (\"search\" === target) {\r\n            selector = column.displayField || column.calculateDisplayValue || selector\r\n        }\r\n        return selector\r\n    };\r\n    var getFilterExpressionByRange = function(filterValue, target) {\r\n        var endFilterValue;\r\n        var startFilterExpression;\r\n        var endFilterExpression;\r\n        var selector = getFilterSelector(this, target);\r\n        if (Array.isArray(filterValue) && isDefined(filterValue[0]) && isDefined(filterValue[1])) {\r\n            startFilterExpression = [selector, \">=\", filterValue[0]];\r\n            endFilterExpression = [selector, \"<=\", filterValue[1]];\r\n            if (isDateType(this.dataType) && (date = filterValue[1], date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1)) {\r\n                endFilterValue = new Date(filterValue[1].getTime());\r\n                if (\"date\" === this.dataType) {\r\n                    endFilterValue.setDate(filterValue[1].getDate() + 1)\r\n                }\r\n                endFilterExpression = [selector, \"<\", endFilterValue]\r\n            }\r\n            return [startFilterExpression, \"and\", endFilterExpression]\r\n        }\r\n        var date\r\n    };\r\n    var getFilterExpressionForDate = function(filterValue, selectedFilterOperation, target) {\r\n        var dateStart;\r\n        var dateEnd;\r\n        var dateInterval;\r\n        var values = function(dateValue) {\r\n            if (isDate(dateValue)) {\r\n                return [dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds()]\r\n            }\r\n            return map((\"\" + dateValue).split(\"/\"), (function(value, index) {\r\n                return 1 === index ? Number(value) - 1 : Number(value)\r\n            }))\r\n        }(filterValue);\r\n        var selector = getFilterSelector(this, target);\r\n        if (\"headerFilter\" === target) {\r\n            dateInterval = getGroupInterval(this)[values.length - 1]\r\n        } else if (\"datetime\" === this.dataType) {\r\n            dateInterval = \"minute\"\r\n        }\r\n        switch (dateInterval) {\r\n            case \"year\":\r\n                dateStart = new Date(values[0], 0, 1);\r\n                dateEnd = new Date(values[0] + 1, 0, 1);\r\n                break;\r\n            case \"month\":\r\n                dateStart = new Date(values[0], values[1], 1);\r\n                dateEnd = new Date(values[0], values[1] + 1, 1);\r\n                break;\r\n            case \"quarter\":\r\n                dateStart = new Date(values[0], 3 * values[1], 1);\r\n                dateEnd = new Date(values[0], 3 * values[1] + 3, 1);\r\n                break;\r\n            case \"hour\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3] + 1);\r\n                break;\r\n            case \"minute\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4] + 1);\r\n                break;\r\n            case \"second\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4], values[5] + 1);\r\n                break;\r\n            default:\r\n                dateStart = new Date(values[0], values[1], values[2]);\r\n                dateEnd = new Date(values[0], values[1], values[2] + 1)\r\n        }\r\n        switch (selectedFilterOperation) {\r\n            case \"<\":\r\n                return [selector, \"<\", dateStart];\r\n            case \"<=\":\r\n                return [selector, \"<\", dateEnd];\r\n            case \">\":\r\n                return [selector, \">=\", dateEnd];\r\n            case \">=\":\r\n                return [selector, \">=\", dateStart];\r\n            case \"<>\":\r\n                return [\r\n                    [selector, \"<\", dateStart], \"or\", [selector, \">=\", dateEnd]\r\n                ];\r\n            default:\r\n                return [\r\n                    [selector, \">=\", dateStart], \"and\", [selector, \"<\", dateEnd]\r\n                ]\r\n        }\r\n    };\r\n    var getFilterExpressionForNumber = function(filterValue, selectedFilterOperation, target) {\r\n        var selector = getFilterSelector(this, target);\r\n        var groupInterval = getGroupInterval(this);\r\n        if (\"headerFilter\" === target && groupInterval && isDefined(filterValue)) {\r\n            var values = (\"\" + filterValue).split(\"/\");\r\n            var value = Number(values[values.length - 1]);\r\n            var interval = groupInterval[values.length - 1];\r\n            var startFilterValue = [selector, \">=\", value];\r\n            var endFilterValue = [selector, \"<\", value + interval];\r\n            var condition = [startFilterValue, \"and\", endFilterValue];\r\n            return condition\r\n        }\r\n        return [selector, selectedFilterOperation || \"=\", filterValue]\r\n    };\r\n    return {\r\n        defaultCalculateFilterExpression: function(filterValue, selectedFilterOperation, target) {\r\n            var column = this;\r\n            var selector = getFilterSelector(column, target);\r\n            var isSearchByDisplayValue = column.calculateDisplayValue && \"search\" === target;\r\n            var dataType = isSearchByDisplayValue && column.lookup && column.lookup.dataType || column.dataType;\r\n            var filter = null;\r\n            if ((\"headerFilter\" === target || \"filterBuilder\" === target) && null === filterValue) {\r\n                filter = [selector, selectedFilterOperation || \"=\", null];\r\n                if (\"string\" === dataType) {\r\n                    filter = [filter, \"=\" === selectedFilterOperation ? \"or\" : \"and\", [selector, selectedFilterOperation || \"=\", \"\"]]\r\n                }\r\n            } else if (\"string\" === dataType && (!column.lookup || isSearchByDisplayValue)) {\r\n                filter = [selector, selectedFilterOperation || \"contains\", filterValue]\r\n            } else if (\"between\" === selectedFilterOperation) {\r\n                return getFilterExpressionByRange.apply(column, [filterValue, target])\r\n            } else if (isDateType(dataType) && isDefined(filterValue)) {\r\n                return getFilterExpressionForDate.apply(column, arguments)\r\n            } else if (\"number\" === dataType) {\r\n                return getFilterExpressionForNumber.apply(column, arguments)\r\n            } else if (\"object\" !== dataType) {\r\n                filter = [selector, selectedFilterOperation || \"=\", filterValue]\r\n            }\r\n            return filter\r\n        },\r\n        getGroupInterval: getGroupInterval\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport sharedFiltering from \"../shared/filtering\";\r\nimport {\r\n    format\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    toComparable\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport LoadPanel from \"../load_panel\";\r\nimport {\r\n    normalizeSortingInfo as normalizeSortingInfoUtility\r\n} from \"../../data/utils\";\r\nimport formatHelper from \"../../format_helper\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nvar DATAGRID_SELECTION_DISABLED_CLASS = \"dx-selection-disabled\";\r\nvar DATAGRID_GROUP_OPENED_CLASS = \"dx-datagrid-group-opened\";\r\nvar DATAGRID_GROUP_CLOSED_CLASS = \"dx-datagrid-group-closed\";\r\nvar DATAGRID_EXPAND_CLASS = \"dx-datagrid-expand\";\r\nvar NO_DATA_CLASS = \"nodata\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar SCROLLING_MODE_OPTION = \"scrolling.mode\";\r\nvar ROW_RENDERING_MODE_OPTION = \"scrolling.rowRenderingMode\";\r\nvar DATE_INTERVAL_SELECTORS = {\r\n    year: function(value) {\r\n        return value && value.getFullYear()\r\n    },\r\n    month: function(value) {\r\n        return value && value.getMonth() + 1\r\n    },\r\n    day: function(value) {\r\n        return value && value.getDate()\r\n    },\r\n    quarter: function(value) {\r\n        return value && Math.floor(value.getMonth() / 3) + 1\r\n    },\r\n    hour: function(value) {\r\n        return value && value.getHours()\r\n    },\r\n    minute: function(value) {\r\n        return value && value.getMinutes()\r\n    },\r\n    second: function(value) {\r\n        return value && value.getSeconds()\r\n    }\r\n};\r\nvar getIntervalSelector = function() {\r\n    var data = arguments[1];\r\n    var value = this.calculateCellValue(data);\r\n    if (!isDefined(value)) {\r\n        return null\r\n    } else if (isDateType(this.dataType)) {\r\n        var nameIntervalSelector = arguments[0];\r\n        return DATE_INTERVAL_SELECTORS[nameIntervalSelector](value)\r\n    } else if (\"number\" === this.dataType) {\r\n        var groupInterval = arguments[0];\r\n        return Math.floor(Number(value) / groupInterval) * groupInterval\r\n    }\r\n};\r\nvar equalSelectors = function(selector1, selector2) {\r\n    if (isFunction(selector1) && isFunction(selector2)) {\r\n        if (selector1.originalCallback && selector2.originalCallback) {\r\n            return selector1.originalCallback === selector2.originalCallback && selector1.columnIndex === selector2.columnIndex\r\n        }\r\n    }\r\n    return selector1 === selector2\r\n};\r\n\r\nfunction isDateType(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n}\r\nvar setEmptyText = function($container) {\r\n    $container.get(0).textContent = \"\\xa0\"\r\n};\r\nvar normalizeSortingInfo = function(sort) {\r\n    sort = sort || [];\r\n    var result = normalizeSortingInfoUtility(sort);\r\n    for (var i = 0; i < sort.length; i++) {\r\n        if (sort && sort[i] && void 0 !== sort[i].isExpanded) {\r\n            result[i].isExpanded = sort[i].isExpanded\r\n        }\r\n        if (sort && sort[i] && void 0 !== sort[i].groupInterval) {\r\n            result[i].groupInterval = sort[i].groupInterval\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar formatValue = function(value, options) {\r\n    var valueText = formatHelper.format(value, options.format) || value && value.toString() || \"\";\r\n    var formatObject = {\r\n        value: value,\r\n        valueText: options.getDisplayFormat ? options.getDisplayFormat(valueText) : valueText,\r\n        target: options.target || \"row\",\r\n        groupInterval: options.groupInterval\r\n    };\r\n    return options.customizeText ? options.customizeText.call(options, formatObject) : formatObject.valueText\r\n};\r\nvar getSummaryText = function(summaryItem, summaryTexts) {\r\n    var displayFormat = summaryItem.displayFormat || summaryItem.columnCaption && summaryTexts[summaryItem.summaryType + \"OtherColumn\"] || summaryTexts[summaryItem.summaryType];\r\n    return formatValue(summaryItem.value, {\r\n        format: summaryItem.valueFormat,\r\n        getDisplayFormat: function(valueText) {\r\n            return displayFormat ? format(displayFormat, valueText, summaryItem.columnCaption) : valueText\r\n        },\r\n        customizeText: summaryItem.customizeText\r\n    })\r\n};\r\nvar getWidgetInstance = function($element) {\r\n    var editorData = $element.data && $element.data();\r\n    var dxComponents = editorData && editorData.dxComponents;\r\n    var widgetName = dxComponents && dxComponents[0];\r\n    return widgetName && editorData[widgetName]\r\n};\r\nvar equalFilterParameters = function equalFilterParameters(filter1, filter2) {\r\n    if (Array.isArray(filter1) && Array.isArray(filter2)) {\r\n        if (filter1.length !== filter2.length) {\r\n            return false\r\n        } else {\r\n            for (var i = 0; i < filter1.length; i++) {\r\n                if (!equalFilterParameters(filter1[i], filter2[i])) {\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    } else if (isFunction(filter1) && filter1.columnIndex >= 0 && isFunction(filter2) && filter2.columnIndex >= 0) {\r\n        return filter1.columnIndex === filter2.columnIndex && toComparable(filter1.filterValue) === toComparable(filter2.filterValue)\r\n    } else {\r\n        return toComparable(filter1) == toComparable(filter2)\r\n    }\r\n};\r\nexport default {\r\n    renderNoDataText: function($element) {\r\n        $element = $element || this.element();\r\n        if (!$element) {\r\n            return\r\n        }\r\n        var noDataClass = this.addWidgetPrefix(NO_DATA_CLASS);\r\n        var noDataElement = $element.find(\".\" + noDataClass).last();\r\n        var isVisible = this._dataController.isEmpty();\r\n        var isLoading = this._dataController.isLoading();\r\n        if (!noDataElement.length) {\r\n            noDataElement = $(\"<span>\").addClass(noDataClass).appendTo($element)\r\n        }\r\n        if (isVisible && !isLoading) {\r\n            noDataElement.removeClass(\"dx-hidden\").text(this._getNoDataText())\r\n        } else {\r\n            noDataElement.addClass(\"dx-hidden\")\r\n        }\r\n    },\r\n    renderLoadPanel: function($element, $container, isLocalStore) {\r\n        var loadPanelOptions;\r\n        this._loadPanel && this._loadPanel.$element().remove();\r\n        loadPanelOptions = this.option(\"loadPanel\");\r\n        if (loadPanelOptions && (\"auto\" === loadPanelOptions.enabled ? !isLocalStore : loadPanelOptions.enabled)) {\r\n            loadPanelOptions = extend({\r\n                shading: false,\r\n                message: loadPanelOptions.text,\r\n                container: $container\r\n            }, loadPanelOptions);\r\n            this._loadPanel = this._createComponent($(\"<div>\").appendTo($container), LoadPanel, loadPanelOptions)\r\n        } else {\r\n            this._loadPanel = null\r\n        }\r\n    },\r\n    calculateLoadPanelPosition($element) {\r\n        var $window = $(getWindow());\r\n        if (getHeight($element) > getHeight($window)) {\r\n            return {\r\n                of: $window,\r\n                boundary: $element,\r\n                collision: \"fit\"\r\n            }\r\n        }\r\n        return {\r\n            of: $element\r\n        }\r\n    },\r\n    getIndexByKey: function(key, items, keyName) {\r\n        var index = -1;\r\n        if (void 0 !== key && Array.isArray(items)) {\r\n            keyName = arguments.length <= 2 ? \"key\" : keyName;\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = isDefined(keyName) ? items[i][keyName] : items[i];\r\n                if (equalByValue(key, item)) {\r\n                    index = i;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        return index\r\n    },\r\n    combineFilters: function(filters, operation) {\r\n        var resultFilter = [];\r\n        operation = operation || \"and\";\r\n        for (var i = 0; i < filters.length; i++) {\r\n            var _filters$i;\r\n            if (!filters[i]) {\r\n                continue\r\n            }\r\n            if (1 === (null === (_filters$i = filters[i]) || void 0 === _filters$i ? void 0 : _filters$i.length) && \"!\" === filters[i][0]) {\r\n                if (\"and\" === operation) {\r\n                    return [\"!\"]\r\n                } else if (\"or\" === operation) {\r\n                    continue\r\n                }\r\n            }\r\n            if (resultFilter.length) {\r\n                resultFilter.push(operation)\r\n            }\r\n            resultFilter.push(filters[i])\r\n        }\r\n        if (1 === resultFilter.length) {\r\n            resultFilter = resultFilter[0]\r\n        }\r\n        if (resultFilter.length) {\r\n            return resultFilter\r\n        }\r\n    },\r\n    checkChanges: function(changes, changeNames) {\r\n        var changesWithChangeNamesCount = 0;\r\n        for (var i = 0; i < changeNames.length; i++) {\r\n            if (changes[changeNames[i]]) {\r\n                changesWithChangeNamesCount++\r\n            }\r\n        }\r\n        return changes.length && changes.length === changesWithChangeNamesCount\r\n    },\r\n    equalFilterParameters: equalFilterParameters,\r\n    proxyMethod: function(instance, methodName, defaultResult) {\r\n        if (!instance[methodName]) {\r\n            instance[methodName] = function() {\r\n                var dataSource = this._dataSource;\r\n                return dataSource ? dataSource[methodName].apply(dataSource, arguments) : defaultResult\r\n            }\r\n        }\r\n    },\r\n    formatValue: formatValue,\r\n    getFormatOptionsByColumn: function(column, target) {\r\n        return {\r\n            format: column.format,\r\n            getDisplayFormat: column.getDisplayFormat,\r\n            customizeText: column.customizeText,\r\n            target: target,\r\n            trueText: column.trueText,\r\n            falseText: column.falseText\r\n        }\r\n    },\r\n    getDisplayValue: function(column, value, data, rowType) {\r\n        if (column.displayValueMap && void 0 !== column.displayValueMap[value]) {\r\n            return column.displayValueMap[value]\r\n        } else if (column.calculateDisplayValue && data && \"group\" !== rowType) {\r\n            return column.calculateDisplayValue(data)\r\n        } else if (column.lookup && !(\"group\" === rowType && (column.calculateGroupValue || column.calculateDisplayValue))) {\r\n            return column.lookup.calculateCellValue(value)\r\n        }\r\n        return value\r\n    },\r\n    getGroupRowSummaryText: function(summaryItems, summaryTexts) {\r\n        var result = \"(\";\r\n        for (var i = 0; i < summaryItems.length; i++) {\r\n            var summaryItem = summaryItems[i];\r\n            result += (i > 0 ? \", \" : \"\") + getSummaryText(summaryItem, summaryTexts)\r\n        }\r\n        return result + \")\"\r\n    },\r\n    getSummaryText: getSummaryText,\r\n    normalizeSortingInfo: normalizeSortingInfo,\r\n    getFormatByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"date\":\r\n                return \"shortDate\";\r\n            case \"datetime\":\r\n                return \"shortDateShortTime\"\r\n        }\r\n    },\r\n    getHeaderFilterGroupParameters: function(column, remoteGrouping) {\r\n        var result = [];\r\n        var dataField = column.dataField || column.name;\r\n        var groupInterval = sharedFiltering.getGroupInterval(column);\r\n        if (groupInterval) {\r\n            each(groupInterval, (function(index, interval) {\r\n                result.push(remoteGrouping ? {\r\n                    selector: dataField,\r\n                    groupInterval: interval,\r\n                    isExpanded: index < groupInterval.length - 1\r\n                } : getIntervalSelector.bind(column, interval))\r\n            }));\r\n            return result\r\n        }\r\n        if (remoteGrouping) {\r\n            result = [{\r\n                selector: dataField,\r\n                isExpanded: false\r\n            }]\r\n        } else {\r\n            result = function(data) {\r\n                var result = column.calculateCellValue(data);\r\n                if (void 0 === result || \"\" === result) {\r\n                    result = null\r\n                }\r\n                return result\r\n            };\r\n            if (column.sortingMethod) {\r\n                result = [{\r\n                    selector: result,\r\n                    compare: column.sortingMethod.bind(column)\r\n                }]\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    equalSortParameters(sortParameters1, sortParameters2, ignoreIsExpanded) {\r\n        sortParameters1 = normalizeSortingInfo(sortParameters1);\r\n        sortParameters2 = normalizeSortingInfo(sortParameters2);\r\n        if (Array.isArray(sortParameters1) && Array.isArray(sortParameters2)) {\r\n            if (sortParameters1.length !== sortParameters2.length) {\r\n                return false\r\n            } else {\r\n                for (var i = 0; i < sortParameters1.length; i++) {\r\n                    if (!equalSelectors(sortParameters1[i].selector, sortParameters2[i].selector) || sortParameters1[i].desc !== sortParameters2[i].desc || sortParameters1[i].groupInterval !== sortParameters2[i].groupInterval || !ignoreIsExpanded && Boolean(sortParameters1[i].isExpanded) !== Boolean(sortParameters2[i].isExpanded)) {\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n            return true\r\n        } else {\r\n            return (!sortParameters1 || !sortParameters1.length) === (!sortParameters2 || !sortParameters2.length)\r\n        }\r\n    },\r\n    getPointsByColumns: function(items, pointCreated, isVertical, startColumnIndex) {\r\n        var cellsLength = items.length;\r\n        var notCreatePoint = false;\r\n        var item;\r\n        var offset;\r\n        var columnIndex = startColumnIndex || 0;\r\n        var result = [];\r\n        var rtlEnabled;\r\n        for (var i = 0; i <= cellsLength; i++) {\r\n            if (i < cellsLength) {\r\n                item = items.eq(i);\r\n                offset = item.offset();\r\n                rtlEnabled = \"rtl\" === item.css(\"direction\")\r\n            }\r\n            var point = {\r\n                index: columnIndex,\r\n                x: offset ? offset.left + (!isVertical && rtlEnabled ^ i === cellsLength ? getBoundingRect(item[0]).width : 0) : 0,\r\n                y: offset ? offset.top + (isVertical && i === cellsLength ? getBoundingRect(item[0]).height : 0) : 0,\r\n                columnIndex: columnIndex\r\n            };\r\n            if (!isVertical && i > 0) {\r\n                var prevItemOffset = items.eq(i - 1).offset();\r\n                if (prevItemOffset.top < point.y) {\r\n                    point.y = prevItemOffset.top\r\n                }\r\n            }\r\n            if (pointCreated) {\r\n                notCreatePoint = pointCreated(point)\r\n            }\r\n            if (!notCreatePoint) {\r\n                result.push(point)\r\n            }\r\n            columnIndex++\r\n        }\r\n        return result\r\n    },\r\n    getExpandCellTemplate: function() {\r\n        return {\r\n            allowRenderToDetachedContainer: true,\r\n            render: function(container, options) {\r\n                var $container = $(container);\r\n                if (isDefined(options.value) && !(options.data && options.data.isContinuation) && !options.row.isNewRow) {\r\n                    var rowsView = options.component.getView(\"rowsView\");\r\n                    $container.addClass(DATAGRID_EXPAND_CLASS).addClass(DATAGRID_SELECTION_DISABLED_CLASS);\r\n                    $(\"<div>\").addClass(options.value ? DATAGRID_GROUP_OPENED_CLASS : DATAGRID_GROUP_CLOSED_CLASS).appendTo($container);\r\n                    rowsView.setAria(\"label\", options.value ? rowsView.localize(\"dxDataGrid-ariaCollapse\") : rowsView.localize(\"dxDataGrid-ariaExpand\"), $container)\r\n                } else {\r\n                    setEmptyText($container)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setEmptyText: setEmptyText,\r\n    isDateType: isDateType,\r\n    getSelectionRange: function(focusedElement) {\r\n        try {\r\n            if (focusedElement) {\r\n                return {\r\n                    selectionStart: focusedElement.selectionStart,\r\n                    selectionEnd: focusedElement.selectionEnd\r\n                }\r\n            }\r\n        } catch (e) {}\r\n        return {}\r\n    },\r\n    setSelectionRange: function(focusedElement, selectionRange) {\r\n        try {\r\n            if (focusedElement && focusedElement.setSelectionRange) {\r\n                focusedElement.setSelectionRange(selectionRange.selectionStart, selectionRange.selectionEnd)\r\n            }\r\n        } catch (e) {}\r\n    },\r\n    focusAndSelectElement: function(component, $element) {\r\n        var isFocused = $element.is(\":focus\");\r\n        eventsEngine.trigger($element, \"focus\");\r\n        var isSelectTextOnEditingStart = component.option(\"editing.selectTextOnEditStart\");\r\n        var element = $element.get(0);\r\n        if (!isFocused && isSelectTextOnEditingStart && $element.is(\".dx-texteditor-input\") && !$element.is(\"[readonly]\")) {\r\n            var editor = getWidgetInstance($element.closest(\".dx-texteditor\"));\r\n            when(editor && editor._loadItemDeferred).done((function() {\r\n                element.select()\r\n            }))\r\n        }\r\n    },\r\n    getWidgetInstance: getWidgetInstance,\r\n    getLastResizableColumnIndex: function(columns, resultWidths) {\r\n        var hasResizableColumns = columns.some(column => column && !column.command && !column.fixed && false !== column.allowResizing);\r\n        var lastColumnIndex;\r\n        for (lastColumnIndex = columns.length - 1; columns[lastColumnIndex]; lastColumnIndex--) {\r\n            var column = columns[lastColumnIndex];\r\n            var width = resultWidths && resultWidths[lastColumnIndex];\r\n            var allowResizing = !hasResizableColumns || false !== column.allowResizing;\r\n            if (!column.command && !column.fixed && \"adaptiveHidden\" !== width && allowResizing) {\r\n                break\r\n            }\r\n        }\r\n        return lastColumnIndex\r\n    },\r\n    isElementInCurrentGrid: function(controller, $element) {\r\n        if ($element && $element.length) {\r\n            var $grid = $element.closest(\".\" + controller.getWidgetContainerClass()).parent();\r\n            return $grid.is(controller.component.$element())\r\n        }\r\n        return false\r\n    },\r\n    isVirtualRowRendering: function(that) {\r\n        var rowRenderingMode = that.option(ROW_RENDERING_MODE_OPTION);\r\n        var isVirtualMode = that.option(SCROLLING_MODE_OPTION) === SCROLLING_MODE_VIRTUAL;\r\n        var isAppendMode = that.option(SCROLLING_MODE_OPTION) === SCROLLING_MODE_INFINITE;\r\n        if (false === that.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            return true\r\n        }\r\n        return rowRenderingMode === SCROLLING_MODE_VIRTUAL\r\n    },\r\n    getPixelRatio: function(window) {\r\n        return window.devicePixelRatio || 1\r\n    },\r\n    getContentHeightLimit(browser) {\r\n        if (browser.mozilla) {\r\n            return 8e6\r\n        }\r\n        return 15e6 / this.getPixelRatio(getWindow())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.modules.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Class from \"../../core/class\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar WIDGET_WITH_LEGACY_CONTAINER_NAME = \"dxDataGrid\";\r\nvar ModuleItem = Class.inherit({\r\n    _endUpdateCore: function() {},\r\n    ctor: function(component) {\r\n        var that = this;\r\n        that._updateLockCount = 0;\r\n        that.component = component;\r\n        that._actions = {};\r\n        that._actionConfigs = {};\r\n        each(this.callbackNames() || [], (function(index, name) {\r\n            var flags = that.callbackFlags(name) || {};\r\n            flags.unique = true, flags.syncStrategy = true;\r\n            that[this] = Callbacks(flags)\r\n        }))\r\n    },\r\n    init: function() {},\r\n    callbackNames: function() {},\r\n    callbackFlags: function() {},\r\n    publicMethods: function() {},\r\n    beginUpdate: function() {\r\n        this._updateLockCount++\r\n    },\r\n    endUpdate: function() {\r\n        if (this._updateLockCount > 0) {\r\n            this._updateLockCount--;\r\n            if (!this._updateLockCount) {\r\n                this._endUpdateCore()\r\n            }\r\n        }\r\n    },\r\n    option: function(name) {\r\n        var component = this.component;\r\n        var optionCache = component._optionCache;\r\n        if (1 === arguments.length && optionCache) {\r\n            if (!(name in optionCache)) {\r\n                optionCache[name] = component.option(name)\r\n            }\r\n            return optionCache[name]\r\n        }\r\n        return component.option.apply(component, arguments)\r\n    },\r\n    _silentOption: function(name, value) {\r\n        var component = this.component;\r\n        var optionCache = component._optionCache;\r\n        if (optionCache) {\r\n            optionCache[name] = value\r\n        }\r\n        return component._setOptionWithoutOptionChange(name, value)\r\n    },\r\n    localize: function(name) {\r\n        var optionCache = this.component._optionCache;\r\n        if (optionCache) {\r\n            if (!(name in optionCache)) {\r\n                optionCache[name] = messageLocalization.format(name)\r\n            }\r\n            return optionCache[name]\r\n        }\r\n        return messageLocalization.format(name)\r\n    },\r\n    on: function() {\r\n        return this.component.on.apply(this.component, arguments)\r\n    },\r\n    off: function() {\r\n        return this.component.off.apply(this.component, arguments)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (args.name in this._actions) {\r\n            this.createAction(args.name, this._actionConfigs[args.name]);\r\n            args.handled = true\r\n        }\r\n    },\r\n    getAction: function(actionName) {\r\n        return this._actions[actionName]\r\n    },\r\n    setAria: function(name, value, $target) {\r\n        var target = $target.get(0);\r\n        var prefix = \"role\" !== name && \"id\" !== name ? \"aria-\" : \"\";\r\n        if (target.setAttribute) {\r\n            target.setAttribute(prefix + name, value)\r\n        } else {\r\n            $target.attr(prefix + name, value)\r\n        }\r\n    },\r\n    _createComponent: function() {\r\n        return this.component._createComponent.apply(this.component, arguments)\r\n    },\r\n    getController: function(name) {\r\n        return this.component._controllers[name]\r\n    },\r\n    createAction: function(actionName, config) {\r\n        if (isFunction(actionName)) {\r\n            var action = this.component._createAction(actionName.bind(this), config);\r\n            return function(e) {\r\n                action({\r\n                    event: e\r\n                })\r\n            }\r\n        } else {\r\n            this._actions[actionName] = this.component._createActionByOption(actionName, config);\r\n            this._actionConfigs[actionName] = config\r\n        }\r\n    },\r\n    executeAction: function(actionName, options) {\r\n        var action = this._actions[actionName];\r\n        return action && action(options)\r\n    },\r\n    dispose: function() {\r\n        var that = this;\r\n        each(that.callbackNames() || [], (function() {\r\n            that[this].empty()\r\n        }))\r\n    },\r\n    addWidgetPrefix: function(className) {\r\n        var componentName = this.component.NAME;\r\n        return \"dx-\" + componentName.slice(2).toLowerCase() + (className ? \"-\" + className : \"\")\r\n    },\r\n    getWidgetContainerClass: function() {\r\n        var containerName = this.component.NAME === WIDGET_WITH_LEGACY_CONTAINER_NAME ? null : \"container\";\r\n        return this.addWidgetPrefix(containerName)\r\n    }\r\n});\r\nvar Controller = ModuleItem;\r\nvar ViewController = Controller.inherit({\r\n    getView: function(name) {\r\n        return this.component._views[name]\r\n    },\r\n    getViews: function() {\r\n        return this.component._views\r\n    }\r\n});\r\nvar View = ModuleItem.inherit({\r\n    _isReady: function() {\r\n        return this.component.isReady()\r\n    },\r\n    _endUpdateCore: function() {\r\n        this.callBase();\r\n        if (!this._isReady() && this._requireReady) {\r\n            this._requireRender = false;\r\n            this.component._requireResize = false\r\n        }\r\n        if (this._requireRender) {\r\n            this._requireRender = false;\r\n            this.render(this._$parent)\r\n        }\r\n    },\r\n    _invalidate: function(requireResize, requireReady) {\r\n        this._requireRender = true;\r\n        this.component._requireResize = hasWindow() && (this.component._requireResize || requireResize);\r\n        this._requireReady = this._requireReady || requireReady\r\n    },\r\n    _renderCore: function() {},\r\n    _resizeCore: function() {},\r\n    _parentElement: function() {\r\n        return this._$parent\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.renderCompleted = Callbacks();\r\n        this.resizeCompleted = Callbacks()\r\n    },\r\n    element: function() {\r\n        return this._$element\r\n    },\r\n    getElementHeight: function() {\r\n        var $element = this.element();\r\n        if (!$element) {\r\n            return 0\r\n        }\r\n        var marginTop = parseFloat($element.css(\"marginTop\")) || 0;\r\n        var marginBottom = parseFloat($element.css(\"marginBottom\")) || 0;\r\n        var offsetHeight = $element.get(0).offsetHeight;\r\n        return offsetHeight + marginTop + marginBottom\r\n    },\r\n    isVisible: function() {\r\n        return true\r\n    },\r\n    getTemplate: function(name) {\r\n        return this.component._getTemplate(name)\r\n    },\r\n    render: function($parent, options) {\r\n        var $element = this._$element;\r\n        var isVisible = this.isVisible();\r\n        if (!$element && !$parent) {\r\n            return\r\n        }\r\n        this._requireReady = false;\r\n        if (!$element) {\r\n            $element = this._$element = $(\"<div>\").appendTo($parent);\r\n            this._$parent = $parent\r\n        }\r\n        $element.toggleClass(\"dx-hidden\", !isVisible);\r\n        if (isVisible) {\r\n            this.component._optionCache = {};\r\n            this._renderCore(options);\r\n            this.component._optionCache = void 0;\r\n            this.renderCompleted.fire(options)\r\n        }\r\n    },\r\n    resize: function() {\r\n        this.isResizing = true;\r\n        this._resizeCore();\r\n        this.resizeCompleted.fire();\r\n        this.isResizing = false\r\n    },\r\n    focus: function() {\r\n        eventsEngine.trigger(this.element(), \"focus\")\r\n    }\r\n});\r\nvar MODULES_ORDER_MAX_INDEX = 1e6;\r\nvar processModules = function(that, componentClass) {\r\n    var modules = componentClass.modules;\r\n    var modulesOrder = componentClass.modulesOrder;\r\n    var controllerTypes = componentClass.controllerTypes || {};\r\n    var viewTypes = componentClass.viewTypes || {};\r\n    if (!componentClass.controllerTypes) {\r\n        if (modulesOrder) {\r\n            modules.sort((function(module1, module2) {\r\n                var orderIndex1 = inArray(module1.name, modulesOrder);\r\n                var orderIndex2 = inArray(module2.name, modulesOrder);\r\n                if (orderIndex1 < 0) {\r\n                    orderIndex1 = MODULES_ORDER_MAX_INDEX\r\n                }\r\n                if (orderIndex2 < 0) {\r\n                    orderIndex2 = MODULES_ORDER_MAX_INDEX\r\n                }\r\n                return orderIndex1 - orderIndex2\r\n            }))\r\n        }\r\n        each(modules, (function() {\r\n            var controllers = this.controllers;\r\n            var moduleName = this.name;\r\n            var views = this.views;\r\n            controllers && each(controllers, (function(name, type) {\r\n                if (controllerTypes[name]) {\r\n                    throw errors.Error(\"E1001\", moduleName, name)\r\n                } else if (!(type && type.subclassOf && type.subclassOf(Controller))) {\r\n                    type.subclassOf(Controller);\r\n                    throw errors.Error(\"E1002\", moduleName, name)\r\n                }\r\n                controllerTypes[name] = type\r\n            }));\r\n            views && each(views, (function(name, type) {\r\n                if (viewTypes[name]) {\r\n                    throw errors.Error(\"E1003\", moduleName, name)\r\n                } else if (!(type && type.subclassOf && type.subclassOf(View))) {\r\n                    throw errors.Error(\"E1004\", moduleName, name)\r\n                }\r\n                viewTypes[name] = type\r\n            }))\r\n        }));\r\n        each(modules, (function() {\r\n            var extenders = this.extenders;\r\n            if (extenders) {\r\n                extenders.controllers && each(extenders.controllers, (function(name, extender) {\r\n                    if (controllerTypes[name]) {\r\n                        controllerTypes[name] = controllerTypes[name].inherit(extender)\r\n                    }\r\n                }));\r\n                extenders.views && each(extenders.views, (function(name, extender) {\r\n                    if (viewTypes[name]) {\r\n                        viewTypes[name] = viewTypes[name].inherit(extender)\r\n                    }\r\n                }))\r\n            }\r\n        }));\r\n        componentClass.controllerTypes = controllerTypes;\r\n        componentClass.viewTypes = viewTypes\r\n    }\r\n    var createModuleItems = function(moduleTypes) {\r\n        var moduleItems = {};\r\n        each(moduleTypes, (function(name, moduleType) {\r\n            var moduleItem = new moduleType(that);\r\n            moduleItem.name = name;\r\n            ! function(that, name, moduleItem) {\r\n                var publicMethods = moduleItem.publicMethods();\r\n                if (publicMethods) {\r\n                    each(publicMethods, (function(index, methodName) {\r\n                        if (moduleItem[methodName]) {\r\n                            if (!that[methodName]) {\r\n                                that[methodName] = function() {\r\n                                    return moduleItem[methodName].apply(moduleItem, arguments)\r\n                                }\r\n                            } else {\r\n                                throw errors.Error(\"E1005\", methodName)\r\n                            }\r\n                        } else {\r\n                            throw errors.Error(\"E1006\", name, methodName)\r\n                        }\r\n                    }))\r\n                }\r\n            }(that, name, moduleItem);\r\n            moduleItems[name] = moduleItem\r\n        }));\r\n        return moduleItems\r\n    };\r\n    that._controllers = createModuleItems(controllerTypes);\r\n    that._views = createModuleItems(viewTypes)\r\n};\r\nvar callModuleItemsMethod = function(that, methodName, args) {\r\n    args = args || [];\r\n    if (that._controllers) {\r\n        each(that._controllers, (function() {\r\n            this[methodName] && this[methodName].apply(this, args)\r\n        }))\r\n    }\r\n    if (that._views) {\r\n        each(that._views, (function() {\r\n            this[methodName] && this[methodName].apply(this, args)\r\n        }))\r\n    }\r\n};\r\nexport default {\r\n    modules: [],\r\n    View: View,\r\n    ViewController: ViewController,\r\n    Controller: Controller,\r\n    registerModule: function(name, module) {\r\n        var modules = this.modules;\r\n        for (var i = 0; i < modules.length; i++) {\r\n            if (modules[i].name === name) {\r\n                return\r\n            }\r\n        }\r\n        module.name = name;\r\n        modules.push(module);\r\n        delete this.controllerTypes;\r\n        delete this.viewTypes\r\n    },\r\n    registerModulesOrder: function(moduleNames) {\r\n        this.modulesOrder = moduleNames\r\n    },\r\n    unregisterModule: function(name) {\r\n        this.modules = grep(this.modules, (function(module) {\r\n            return module.name !== name\r\n        }));\r\n        delete this.controllerTypes;\r\n        delete this.viewTypes\r\n    },\r\n    processModules: processModules,\r\n    callModuleItemsMethod: callModuleItemsMethod\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport modules from \"../grid_core/ui.grid_core.modules\";\r\nexport default _extends({}, modules, gridCoreUtils, {\r\n    modules: []\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_state_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nvar COLUMN_INDICATORS_CLASS = \"dx-column-indicators\";\r\nvar GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\r\nexport default {\r\n    _applyColumnState: function(options) {\r\n        var _that$component;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var columnAlignment = this._getColumnAlignment(options.column.alignment, rtlEnabled);\r\n        var parameters = extend(true, {\r\n            columnAlignment: columnAlignment\r\n        }, options);\r\n        var isGroupPanelItem = parameters.rootElement.hasClass(GROUP_PANEL_ITEM_CLASS);\r\n        var $indicatorsContainer = this._createIndicatorContainer(parameters, isGroupPanelItem);\r\n        var $span = $(\"<span>\").addClass(this._getIndicatorClassName(options.name));\r\n        var columnsController = null === (_that$component = this.component) || void 0 === _that$component ? void 0 : _that$component.getController(\"columns\");\r\n        var indicatorAlignment = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getHeaderContentAlignment(columnAlignment)) || columnAlignment;\r\n        parameters.container = $indicatorsContainer;\r\n        parameters.indicator = $span;\r\n        this._renderIndicator(parameters);\r\n        $indicatorsContainer[(isGroupPanelItem || !options.showColumnLines) && \"left\" === indicatorAlignment ? \"appendTo\" : \"prependTo\"](options.rootElement);\r\n        return $span\r\n    },\r\n    _getIndicatorClassName: noop,\r\n    _getColumnAlignment: function(alignment, rtlEnabled) {\r\n        rtlEnabled = rtlEnabled || this.option(\"rtlEnabled\");\r\n        return alignment && \"center\" !== alignment ? alignment : getDefaultAlignment(rtlEnabled)\r\n    },\r\n    _createIndicatorContainer: function(options, ignoreIndicatorAlignment) {\r\n        var $indicatorsContainer = this._getIndicatorContainer(options.rootElement);\r\n        var indicatorAlignment = \"left\" === options.columnAlignment ? \"right\" : \"left\";\r\n        if (!$indicatorsContainer.length) {\r\n            $indicatorsContainer = $(\"<div>\").addClass(COLUMN_INDICATORS_CLASS)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $indicatorsContainer);\r\n        return $indicatorsContainer.css(\"float\", options.showColumnLines && !ignoreIndicatorAlignment ? indicatorAlignment : null)\r\n    },\r\n    _getIndicatorContainer: function($cell) {\r\n        return $cell && $cell.find(\".\" + COLUMN_INDICATORS_CLASS)\r\n    },\r\n    _getIndicatorElements: function($cell) {\r\n        var $indicatorContainer = this._getIndicatorContainer($cell);\r\n        return $indicatorContainer && $indicatorContainer.children()\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        $container && $indicator && $container.append($indicator)\r\n    },\r\n    _updateIndicators: function(indicatorName) {\r\n        var columns = this.getColumns();\r\n        var $cells = this.getColumnElements();\r\n        var $cell;\r\n        if (!$cells || columns.length !== $cells.length) {\r\n            return\r\n        }\r\n        for (var i = 0; i < columns.length; i++) {\r\n            $cell = $cells.eq(i);\r\n            this._updateIndicator($cell, columns[i], indicatorName);\r\n            var rowOptions = $cell.parent().data(\"options\");\r\n            if (rowOptions && rowOptions.cells) {\r\n                rowOptions.cells[$cell.index()].column = columns[i]\r\n            }\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        if (!column.command) {\r\n            return this._applyColumnState({\r\n                name: indicatorName,\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            })\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getWidth,\r\n    getOuterHeight,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    data as elementData\r\n} from \"../../core/element_data\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../events/double_click\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setWidth\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    isRenderer,\r\n    isFunction,\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport * as iteratorUtils from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport columnStateMixin from \"./ui.grid_core.column_state_mixin\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    nativeScrolling\r\n} from \"../../core/utils/support\";\r\nvar SCROLL_CONTAINER_CLASS = \"scroll-container\";\r\nvar SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar TABLE_CLASS = \"table\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\r\nvar CELL_HINT_VISIBLE = \"dxCellHintVisible\";\r\nvar FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar appendElementTemplate = {\r\n    render: function(options) {\r\n        options.container.append(options.content)\r\n    }\r\n};\r\nvar subscribeToRowEvents = function(that, $table) {\r\n    var touchTarget;\r\n    var touchCurrentTarget;\r\n    var timeoutId;\r\n\r\n    function clearTouchTargets(timeout) {\r\n        return setTimeout((function() {\r\n            touchTarget = touchCurrentTarget = null\r\n        }), timeout)\r\n    }\r\n    eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", (function(e) {\r\n        clearTimeout(timeoutId);\r\n        if (\"touchstart\" === e.type) {\r\n            touchTarget = e.target;\r\n            touchCurrentTarget = e.currentTarget;\r\n            timeoutId = clearTouchTargets(1e3)\r\n        } else {\r\n            timeoutId = clearTouchTargets()\r\n        }\r\n    }));\r\n    eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", {\r\n        useNative: that._isNativeClick()\r\n    }, that.createAction((function(e) {\r\n        var event = e.event;\r\n        if (touchTarget) {\r\n            event.target = touchTarget;\r\n            event.currentTarget = touchCurrentTarget\r\n        }\r\n        if (!$(event.target).closest(\"a\").length) {\r\n            e.rowIndex = that.getRowIndex(event.currentTarget);\r\n            if (e.rowIndex >= 0) {\r\n                e.rowElement = getPublicElement($(event.currentTarget));\r\n                e.columns = that.getColumns();\r\n                if (event.type === pointerEvents.down) {\r\n                    that._rowPointerDown(e)\r\n                } else if (event.type === clickEventName) {\r\n                    that._rowClick(e)\r\n                } else {\r\n                    that._rowDblClick(e)\r\n                }\r\n            }\r\n        }\r\n    })))\r\n};\r\nvar getWidthStyle = function(width) {\r\n    if (\"auto\" === width) {\r\n        return \"\"\r\n    }\r\n    return isNumeric(width) ? width + \"px\" : width\r\n};\r\nvar setCellWidth = function(cell, column, width) {\r\n    cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width\r\n};\r\nvar copyAttributes = function(element, newElement) {\r\n    if (!element || !newElement) {\r\n        return\r\n    }\r\n    var oldAttributes = element.attributes;\r\n    var newAttributes = newElement.attributes;\r\n    var i;\r\n    for (i = 0; i < oldAttributes.length; i++) {\r\n        var name = oldAttributes[i].nodeName;\r\n        if (!newElement.hasAttribute(name)) {\r\n            element.removeAttribute(name)\r\n        }\r\n    }\r\n    for (i = 0; i < newAttributes.length; i++) {\r\n        element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue)\r\n    }\r\n};\r\nexport var ColumnsView = modules.View.inherit(columnStateMixin).inherit({\r\n    _createScrollableOptions: function() {\r\n        var scrollingOptions = this.option(\"scrolling\");\r\n        var useNativeScrolling = this.option(\"scrolling.useNative\");\r\n        var options = extend({}, scrollingOptions, {\r\n            direction: \"both\",\r\n            bounceEnabled: false,\r\n            useKeyboard: false\r\n        });\r\n        if (void 0 === useNativeScrolling) {\r\n            useNativeScrolling = true\r\n        }\r\n        if (\"auto\" === useNativeScrolling) {\r\n            delete options.useNative;\r\n            delete options.useSimulatedScrollbar\r\n        } else {\r\n            options.useNative = !!useNativeScrolling;\r\n            options.useSimulatedScrollbar = !useNativeScrolling\r\n        }\r\n        return options\r\n    },\r\n    _updateCell: function($cell, parameters) {\r\n        if (parameters.rowType) {\r\n            this._cellPrepared($cell, parameters)\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var column = options.column;\r\n        var alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        var cell = domAdapter.createElement(\"td\");\r\n        cell.style.textAlign = alignment;\r\n        var $cell = $(cell);\r\n        if (\"data\" === options.rowType && column.headerId && !column.type) {\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n        }\r\n        if (column.cssClass) {\r\n            $cell.addClass(column.cssClass)\r\n        }\r\n        if (\"expand\" === column.command) {\r\n            $cell.addClass(column.cssClass);\r\n            $cell.addClass(this.addWidgetPrefix(GROUP_SPACE_CLASS))\r\n        }\r\n        if (column.colspan > 1) {\r\n            $cell.attr(\"colSpan\", column.colspan)\r\n        } else if (!column.isBand && \"auto\" !== column.visibleWidth && this.option(\"columnAutoWidth\")) {\r\n            if (column.width || column.minWidth) {\r\n                cell.style.minWidth = getWidthStyle(column.minWidth || column.width)\r\n            }\r\n            if (column.width) {\r\n                setCellWidth(cell, column, getWidthStyle(column.width))\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _createRow: function(rowObject, tagName) {\r\n        tagName = tagName || \"tr\";\r\n        var $element = $(\"<\".concat(tagName, \">\")).addClass(ROW_CLASS);\r\n        this.setAria(\"role\", \"row\", $element);\r\n        return $element\r\n    },\r\n    _isAltRow: function(row) {\r\n        return row && row.dataIndex % 2 === 1\r\n    },\r\n    _createTable: function(columns, isAppend) {\r\n        var that = this;\r\n        var $table = $(\"<table>\").addClass(that.addWidgetPrefix(TABLE_CLASS)).addClass(that.addWidgetPrefix(TABLE_FIXED_CLASS));\r\n        if (columns && !isAppend) {\r\n            $table.append(that._createColGroup(columns));\r\n            if (browser.safari) {\r\n                $table.append($(\"<thead>\").append(\"<tr>\"))\r\n            }\r\n            that.setAria(\"role\", \"presentation\", $table)\r\n        } else {\r\n            that.setAria(\"hidden\", true, $table)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\r\n        if (isAppend) {\r\n            return $table\r\n        }\r\n        if (browser.mozilla) {\r\n            eventsEngine.on($table, \"mousedown\", \"td\", (function(e) {\r\n                if (e.ctrlKey) {\r\n                    e.preventDefault()\r\n                }\r\n            }))\r\n        }\r\n        if (that.option(\"cellHintEnabled\")) {\r\n            eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction((function(args) {\r\n                var e = args.event;\r\n                var $element = $(e.target);\r\n                var $cell = $(e.currentTarget);\r\n                var $row = $cell.parent();\r\n                var isDataRow = $row.hasClass(\"dx-data-row\");\r\n                var isHeaderRow = $row.hasClass(\"dx-header-row\");\r\n                var isGroupRow = $row.hasClass(GROUP_ROW_CLASS);\r\n                var isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\r\n                var isFilterRow = $row.hasClass(that.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                var visibleColumns = that._columnsController.getVisibleColumns();\r\n                var rowOptions = $row.data(\"options\");\r\n                var columnIndex = $cell.index();\r\n                var cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\r\n                var column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\r\n                if (!isMasterDetailRow && !isFilterRow && (!isDataRow || isDataRow && column && !column.cellTemplate) && (!isHeaderRow || isHeaderRow && column && !column.headerCellTemplate) && (!isGroupRow || isGroupRow && column && (void 0 === column.groupIndex || !column.groupCellTemplate))) {\r\n                    if ($element.data(CELL_HINT_VISIBLE)) {\r\n                        $element.removeAttr(\"title\");\r\n                        $element.data(CELL_HINT_VISIBLE, false)\r\n                    }\r\n                    var difference = $element[0].scrollWidth - $element[0].clientWidth;\r\n                    if (difference > 0 && !isDefined($element.attr(\"title\"))) {\r\n                        $element.attr(\"title\", $element.text());\r\n                        $element.data(CELL_HINT_VISIBLE, true)\r\n                    }\r\n                }\r\n            })))\r\n        }\r\n        var getOptions = function(event) {\r\n            var $cell = $(event.currentTarget);\r\n            var $fieldItemContent = $(event.target).closest(\".\" + FORM_FIELD_ITEM_CONTENT_CLASS);\r\n            var $row = $cell.parent();\r\n            var rowOptions = $row.data(\"options\");\r\n            var options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\r\n            if (!$cell.closest(\"table\").is(event.delegateTarget)) {\r\n                return\r\n            }\r\n            var resultOptions = extend({}, options, {\r\n                cellElement: getPublicElement($cell),\r\n                event: event,\r\n                eventType: event.type\r\n            });\r\n            resultOptions.rowIndex = that.getRowIndex($row);\r\n            if ($fieldItemContent.length) {\r\n                var formItemOptions = $fieldItemContent.data(\"dx-form-item\");\r\n                if (formItemOptions.column) {\r\n                    resultOptions.column = formItemOptions.column;\r\n                    resultOptions.columnIndex = that._columnsController.getVisibleIndex(resultOptions.column.index)\r\n                }\r\n            }\r\n            return resultOptions\r\n        };\r\n        eventsEngine.on($table, \"mouseover\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, \"mouseout\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, clickEventName, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellClick\", options)\r\n        }));\r\n        eventsEngine.on($table, dblclickEvent, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellDblClick\", options)\r\n        }));\r\n        subscribeToRowEvents(that, $table);\r\n        return $table\r\n    },\r\n    _isNativeClick: noop,\r\n    _rowPointerDown: noop,\r\n    _rowClick: noop,\r\n    _rowDblClick: noop,\r\n    _createColGroup: function(columns) {\r\n        var colgroupElement = $(\"<colgroup>\");\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var colspan = columns[i].colspan || 1;\r\n            for (var j = 0; j < colspan; j++) {\r\n                colgroupElement.append(this._createCol(columns[i]))\r\n            }\r\n        }\r\n        return colgroupElement\r\n    },\r\n    _createCol: function(column) {\r\n        var width = column.visibleWidth || column.width;\r\n        if (\"adaptiveHidden\" === width) {\r\n            width = HIDDEN_COLUMNS_WIDTH\r\n        }\r\n        var col = $(\"<col>\");\r\n        setWidth(col, width);\r\n        return col\r\n    },\r\n    renderDelayedTemplates: function(change) {\r\n        var delayedTemplates = this._delayedTemplates;\r\n        var syncTemplates = delayedTemplates.filter(template => !template.async);\r\n        var asyncTemplates = delayedTemplates.filter(template => template.async);\r\n        this._delayedTemplates = [];\r\n        this._renderDelayedTemplatesCore(syncTemplates, false, change);\r\n        this._renderDelayedTemplatesCoreAsync(asyncTemplates)\r\n    },\r\n    _renderDelayedTemplatesCoreAsync: function(templates) {\r\n        var that = this;\r\n        if (templates.length) {\r\n            getWindow().setTimeout((function() {\r\n                that._renderDelayedTemplatesCore(templates, true)\r\n            }))\r\n        }\r\n    },\r\n    _renderDelayedTemplatesCore: function(templates, isAsync, change) {\r\n        var date = new Date;\r\n        while (templates.length) {\r\n            var templateParameters = templates.shift();\r\n            var options = templateParameters.options;\r\n            var doc = domAdapter.getDocument();\r\n            if (!isAsync || $(options.container).closest(doc).length) {\r\n                if (change) {\r\n                    options.change = change\r\n                }\r\n                templateParameters.template.render(options)\r\n            }\r\n            if (isAsync && new Date - date > 30) {\r\n                this._renderDelayedTemplatesCoreAsync(templates);\r\n                break\r\n            }\r\n        }\r\n        if (!templates.length && this._delayedTemplates.length) {\r\n            this.renderDelayedTemplates()\r\n        }\r\n    },\r\n    _processTemplate: function(template) {\r\n        var renderingTemplate;\r\n        if (template && template.render && !isRenderer(template)) {\r\n            renderingTemplate = {\r\n                allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\r\n                render: function(options) {\r\n                    template.render(options.container, options.model, options.change);\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else if (isFunction(template)) {\r\n            renderingTemplate = {\r\n                render: function(options) {\r\n                    var renderedTemplate = template(getPublicElement(options.container), options.model, options.change);\r\n                    if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\r\n                        options.container.append(renderedTemplate)\r\n                    }\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else {\r\n            var templateID = isString(template) ? template : $(template).attr(\"id\");\r\n            if (!templateID) {\r\n                renderingTemplate = this.getTemplate(template)\r\n            } else {\r\n                if (!this._templatesCache[templateID]) {\r\n                    this._templatesCache[templateID] = this.getTemplate(template)\r\n                }\r\n                renderingTemplate = this._templatesCache[templateID]\r\n            }\r\n        }\r\n        return renderingTemplate\r\n    },\r\n    renderTemplate: function(container, template, options, allowRenderToDetachedContainer, change) {\r\n        var renderingTemplate = this._processTemplate(template, options);\r\n        var column = options.column;\r\n        var isDataRow = \"data\" === options.rowType;\r\n        var templateDeferred = new Deferred;\r\n        var templateOptions = {\r\n            container: container,\r\n            model: options,\r\n            deferred: templateDeferred,\r\n            onRendered: () => {\r\n                templateDeferred.resolve()\r\n            }\r\n        };\r\n        if (renderingTemplate) {\r\n            options.component = this.component;\r\n            var async = column && (column.renderAsync && isDataRow || this.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\r\n            if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\r\n                renderingTemplate.render(templateOptions)\r\n            } else {\r\n                this._delayedTemplates.push({\r\n                    template: renderingTemplate,\r\n                    options: templateOptions,\r\n                    async: async\r\n                })\r\n            }\r\n            if (change) {\r\n                change.templateDeferreds = change.templateDeferreds || [];\r\n                change.templateDeferreds.push(templateDeferred)\r\n            }\r\n        } else {\r\n            templateDeferred.reject()\r\n        }\r\n        return templateDeferred.promise()\r\n    },\r\n    _getBodies: function(tableElement) {\r\n        return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\")\r\n    },\r\n    _wrapRowIfNeed: function($table, $row) {\r\n        var hasDataRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n        var $tBodies = hasDataRowTemplate && this._getBodies(this._tableElement || $table);\r\n        if ($tBodies && $tBodies.filter(\".\" + ROW_CLASS).length) {\r\n            var $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\r\n            this.setAria(\"role\", \"presentation\", $tbody);\r\n            return $tbody.append($row)\r\n        }\r\n        return $row\r\n    },\r\n    _appendRow: function($table, $row, appendTemplate) {\r\n        appendTemplate = appendTemplate || appendElementTemplate;\r\n        appendTemplate.render({\r\n            content: $row,\r\n            container: $table\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    _renderCore: function(e) {\r\n        var $root = this.element().parent();\r\n        if (!$root || $root.parent().length) {\r\n            this.renderDelayedTemplates(e)\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        options = options || {};\r\n        options.columns = this._columnsController.getVisibleColumns();\r\n        var changeType = options.change && options.change.changeType;\r\n        var $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\r\n        this._renderRows($table, options);\r\n        return $table\r\n    },\r\n    _renderRows: function($table, options) {\r\n        var rows = this._getRows(options.change);\r\n        var columnIndices = options.change && options.change.columnIndices || [];\r\n        var changeTypes = options.change && options.change.changeTypes || [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            this._renderRow($table, extend({\r\n                row: rows[i],\r\n                columnIndices: columnIndices[i],\r\n                changeType: changeTypes[i]\r\n            }, options))\r\n        }\r\n    },\r\n    _renderRow: function($table, options) {\r\n        if (!options.columnIndices) {\r\n            options.row.cells = []\r\n        }\r\n        var $row = this._createRow(options.row);\r\n        var $wrappedRow = this._wrapRowIfNeed($table, $row);\r\n        if (\"remove\" !== options.changeType) {\r\n            this._renderCells($row, options)\r\n        }\r\n        this._appendRow($table, $wrappedRow);\r\n        var rowOptions = extend({\r\n            columns: options.columns\r\n        }, options.row);\r\n        this._addWatchMethod(rowOptions, options.row);\r\n        this._rowPrepared($wrappedRow, rowOptions, options.row)\r\n    },\r\n    _needRenderCell: function(columnIndex, columnIndices) {\r\n        return !columnIndices || columnIndices.indexOf(columnIndex) >= 0\r\n    },\r\n    _renderCells: function($row, options) {\r\n        var columnIndex = 0;\r\n        var row = options.row;\r\n        var columns = options.columns;\r\n        for (var i = 0; i < columns.length; i++) {\r\n            if (this._needRenderCell(i, options.columnIndices)) {\r\n                this._renderCell($row, extend({\r\n                    column: columns[i],\r\n                    columnIndex: columnIndex,\r\n                    value: row.values && row.values[columnIndex],\r\n                    oldValue: row.oldValues && row.oldValues[columnIndex]\r\n                }, options))\r\n            }\r\n            if (columns[i].colspan > 1) {\r\n                columnIndex += columns[i].colspan\r\n            } else {\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    _updateCells: function($rowElement, $newRowElement, columnIndices) {\r\n        var $cells = $rowElement.children();\r\n        var $newCells = $newRowElement.children();\r\n        var highlightChanges = this.option(\"highlightChanges\");\r\n        var cellUpdatedClass = this.addWidgetPrefix(CELL_UPDATED_ANIMATION_CLASS);\r\n        columnIndices.forEach((function(columnIndex, index) {\r\n            var $cell = $cells.eq(columnIndex);\r\n            var $newCell = $newCells.eq(index);\r\n            $cell.replaceWith($newCell);\r\n            if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\r\n                $newCell.addClass(cellUpdatedClass)\r\n            }\r\n        }));\r\n        copyAttributes($rowElement.get(0), $newRowElement.get(0))\r\n    },\r\n    _setCellAriaAttributes: function($cell, cellOptions) {\r\n        if (\"freeSpace\" !== cellOptions.rowType) {\r\n            this.setAria(\"selected\", false, $cell);\r\n            this.setAria(\"role\", \"gridcell\", $cell);\r\n            var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n            var ariaColIndex = cellOptions.columnIndex + columnIndexOffset + 1;\r\n            this.setAria(\"colindex\", ariaColIndex, $cell)\r\n        }\r\n    },\r\n    _renderCell: function($row, options) {\r\n        var cellOptions = this._getCellOptions(options);\r\n        if (options.columnIndices) {\r\n            if (options.row.cells) {\r\n                options.row.cells[cellOptions.columnIndex] = cellOptions\r\n            }\r\n        } else {\r\n            options.row.cells.push(cellOptions)\r\n        }\r\n        var $cell = this._createCell(cellOptions);\r\n        this._setCellAriaAttributes($cell, cellOptions);\r\n        this._renderCellContent($cell, cellOptions);\r\n        $row.get(0).appendChild($cell.get(0));\r\n        return $cell\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var template = this._getCellTemplate(options);\r\n        when(!template || this.renderTemplate($cell, template, options)).done(() => {\r\n            this._updateCell($cell, options)\r\n        })\r\n    },\r\n    _getCellTemplate: function() {},\r\n    _getRows: function() {\r\n        return []\r\n    },\r\n    _getCellOptions: function(options) {\r\n        var cellOptions = {\r\n            column: options.column,\r\n            columnIndex: options.columnIndex,\r\n            rowType: options.row.rowType,\r\n            isAltRow: this._isAltRow(options.row)\r\n        };\r\n        this._addWatchMethod(cellOptions);\r\n        return cellOptions\r\n    },\r\n    _addWatchMethod: function(options, source) {\r\n        if (!this.option(\"repaintChangesOnly\")) {\r\n            return\r\n        }\r\n        var watchers = [];\r\n        source = source || options;\r\n        source.watch = source.watch || function(getter, updateValueFunc, updateRowFunc) {\r\n            var oldValue = getter(source.data);\r\n            var watcher = function(row) {\r\n                if (row && updateRowFunc) {\r\n                    updateRowFunc(row)\r\n                }\r\n                var newValue = getter(source.data);\r\n                if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\r\n                    if (row) {\r\n                        updateValueFunc(newValue)\r\n                    }\r\n                    oldValue = newValue\r\n                }\r\n            };\r\n            watchers.push(watcher);\r\n            return function() {\r\n                var index = watchers.indexOf(watcher);\r\n                if (index >= 0) {\r\n                    watchers.splice(index, 1)\r\n                }\r\n            }\r\n        };\r\n        source.update = source.update || function(row, keepRow) {\r\n            if (row) {\r\n                this.data = options.data = row.data;\r\n                this.rowIndex = options.rowIndex = row.rowIndex;\r\n                this.dataIndex = options.dataIndex = row.dataIndex;\r\n                this.isExpanded = options.isExpanded = row.isExpanded;\r\n                if (options.row && !keepRow) {\r\n                    options.row = row\r\n                }\r\n            }\r\n            watchers.forEach((function(watcher) {\r\n                watcher(row)\r\n            }))\r\n        };\r\n        if (source !== options) {\r\n            options.watch = source.watch.bind(source)\r\n        }\r\n        return options\r\n    },\r\n    _cellPrepared: function(cell, options) {\r\n        options.cellElement = getPublicElement($(cell));\r\n        this.executeAction(\"onCellPrepared\", options)\r\n    },\r\n    _rowPrepared: function($row, options) {\r\n        elementData($row.get(0), \"options\", options);\r\n        options.rowElement = getPublicElement($row);\r\n        this.executeAction(\"onRowPrepared\", options)\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var widths = iteratorUtils.map(visibleColumns, (function(column) {\r\n                var width = column.visibleWidth || column.width;\r\n                return isDefined(width) ? width : \"auto\"\r\n            }));\r\n            this.setColumnWidths({\r\n                widths: widths,\r\n                optionNames: optionNames\r\n            });\r\n            return\r\n        }\r\n        if (!this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var cellIndex = $cell.length ? $cell[0].cellIndex : -1;\r\n        return cellIndex\r\n    },\r\n    getTableElements: function() {\r\n        return this._tableElement || $()\r\n    },\r\n    getTableElement: function() {\r\n        return this._tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        this._tableElement = tableElement\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        switch (args.name) {\r\n            case \"cellHintEnabled\":\r\n            case \"onCellPrepared\":\r\n            case \"onRowPrepared\":\r\n            case \"onCellHoverChanged\":\r\n                this._invalidate(true, true);\r\n                args.handled = true\r\n        }\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._scrollLeft = -1;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._delayedTemplates = [];\r\n        that._templatesCache = {};\r\n        that.createAction(\"onCellClick\");\r\n        that.createAction(\"onRowClick\");\r\n        that.createAction(\"onCellDblClick\");\r\n        that.createAction(\"onRowDblClick\");\r\n        that.createAction(\"onCellHoverChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        that.createAction(\"onCellPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        that.createAction(\"onRowPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\",\r\n            afterExecute: function(e) {\r\n                that._afterRowPrepared(e)\r\n            }\r\n        });\r\n        that._columnsController.columnsChanged.add(that._columnOptionChanged.bind(that));\r\n        that._dataController && that._dataController.changed.add(that._handleDataChanged.bind(that))\r\n    },\r\n    _afterRowPrepared: noop,\r\n    _handleDataChanged: function() {},\r\n    callbackNames: function() {\r\n        return [\"scrollChanged\"]\r\n    },\r\n    _updateScrollLeftPosition: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    scrollTo: function(pos) {\r\n        var $element = this.element();\r\n        var $scrollContainer = $element && $element.children(\".\" + this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).not(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\r\n            this._scrollLeft = pos.left;\r\n            $scrollContainer && $scrollContainer.scrollLeft(pos.left)\r\n        }\r\n    },\r\n    _wrapTableInScrollContainer: function($table) {\r\n        var $scrollContainer = $(\"<div>\");\r\n        var useNative = this.option(\"scrolling.useNative\");\r\n        if (false === useNative || \"auto\" === useNative && !nativeScrolling) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(SCROLLABLE_SIMULATED_CLASS))\r\n        }\r\n        eventsEngine.on($scrollContainer, \"scroll\", () => {\r\n            var scrollLeft = $scrollContainer.scrollLeft();\r\n            if (scrollLeft !== this._scrollLeft) {\r\n                this.scrollChanged.fire({\r\n                    left: scrollLeft\r\n                }, this.name)\r\n            }\r\n        });\r\n        $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_CLASS)).addClass(this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).append($table).appendTo(this.element());\r\n        this.setAria(\"role\", \"presentation\", $scrollContainer);\r\n        return $scrollContainer\r\n    },\r\n    _updateContent: function($newTableElement) {\r\n        this.setTableElement($newTableElement);\r\n        this._wrapTableInScrollContainer($newTableElement)\r\n    },\r\n    _findContentElement: noop,\r\n    _getWidths: function($cellElements) {\r\n        var result = [];\r\n        var width;\r\n        if ($cellElements) {\r\n            iteratorUtils.each($cellElements, (function(index, item) {\r\n                width = item.offsetWidth;\r\n                if (item.getBoundingClientRect) {\r\n                    var clientRect = getBoundingRect(item);\r\n                    if (clientRect.width > width - 1) {\r\n                        width = clientRect.width\r\n                    }\r\n                }\r\n                result.push(width)\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    getColumnWidths: function($tableElement) {\r\n        var result = [];\r\n        var $rows;\r\n        var $cells;\r\n        (this.option(\"forceApplyBindings\") || noop)();\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement) {\r\n            $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                var $row = $rows.eq(i);\r\n                var isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\r\n                if (!$row.is(\".\" + GROUP_ROW_CLASS) && !$row.is(\".\" + DETAIL_ROW_CLASS) && !$row.is(\".\" + ERROR_ROW_CLASS) && isRowVisible) {\r\n                    $cells = $row.children(\"td\");\r\n                    break\r\n                }\r\n            }\r\n            result = this._getWidths($cells)\r\n        }\r\n        return result\r\n    },\r\n    getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n        return columnIndex\r\n    },\r\n    setColumnWidths: function(_ref) {\r\n        var {\r\n            widths: widths,\r\n            $tableElement: $tableElement,\r\n            columns: columns,\r\n            fixed: fixed\r\n        } = _ref;\r\n        var $cols;\r\n        var width;\r\n        var minWidth;\r\n        var columnIndex;\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement && $tableElement.length && widths) {\r\n            columnIndex = 0;\r\n            $cols = $tableElement.children(\"colgroup\").children(\"col\");\r\n            setWidth($cols, \"auto\");\r\n            columns = columns || this.getColumns(null, $tableElement);\r\n            for (var i = 0; i < columns.length; i++) {\r\n                if (columnAutoWidth && !fixed) {\r\n                    width = columns[i].width;\r\n                    if (width && !columns[i].command) {\r\n                        width = columns[i].visibleWidth || width;\r\n                        width = getWidthStyle(width);\r\n                        minWidth = getWidthStyle(columns[i].minWidth || width);\r\n                        var $rows = $rows || $tableElement.children().children(\".dx-row\").not(\".\" + DETAIL_ROW_CLASS);\r\n                        for (var rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\r\n                            var row = $rows[rowIndex];\r\n                            var cell = void 0;\r\n                            var visibleIndex = this.getVisibleColumnIndex(i, rowIndex);\r\n                            if (row.classList.contains(GROUP_ROW_CLASS)) {\r\n                                if (1 !== visibleIndex) {\r\n                                    cell = row.querySelector(\"td[aria-colindex='\".concat(visibleIndex + 1, \"']\"))\r\n                                }\r\n                            } else {\r\n                                cell = row.cells[visibleIndex]\r\n                            }\r\n                            if (cell) {\r\n                                setCellWidth(cell, columns[i], width);\r\n                                cell.style.minWidth = minWidth\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (columns[i].colspan) {\r\n                    columnIndex += columns[i].colspan;\r\n                    continue\r\n                }\r\n                width = widths[columnIndex];\r\n                if (\"adaptiveHidden\" === width) {\r\n                    width = HIDDEN_COLUMNS_WIDTH\r\n                }\r\n                if (\"number\" === typeof width) {\r\n                    width = width.toFixed(3) + \"px\"\r\n                }\r\n                setWidth($cols.eq(columnIndex), isDefined(width) ? width : \"auto\");\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    getCellElements: function(rowIndex) {\r\n        return this._getCellElementsCore(rowIndex)\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var $row = this._getRowElements().eq(rowIndex);\r\n        return $row.children()\r\n    },\r\n    _getCellElement: function(rowIndex, columnIdentifier) {\r\n        var $cell;\r\n        var $cells = this.getCellElements(rowIndex);\r\n        var columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\r\n        if ($cells.length && columnVisibleIndex >= 0) {\r\n            $cell = $cells.eq(columnVisibleIndex)\r\n        }\r\n        if ($cell && $cell.length) {\r\n            return $cell\r\n        }\r\n    },\r\n    _getRowElement: function(rowIndex) {\r\n        var that = this;\r\n        var $rowElement = $();\r\n        var $tableElements = that.getTableElements();\r\n        iteratorUtils.each($tableElements, (function(_, tableElement) {\r\n            $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex))\r\n        }));\r\n        if ($rowElement.length) {\r\n            return $rowElement\r\n        }\r\n    },\r\n    getCellElement: function(rowIndex, columnIdentifier) {\r\n        return getPublicElement(this._getCellElement(rowIndex, columnIdentifier))\r\n    },\r\n    getRowElement: function(rowIndex) {\r\n        var $rows = this._getRowElement(rowIndex);\r\n        var elements = [];\r\n        if ($rows && !getPublicElement($rows).get) {\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                elements.push($rows[i])\r\n            }\r\n        } else {\r\n            elements = $rows\r\n        }\r\n        return elements\r\n    },\r\n    _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n        if (isString(columnIdentifier)) {\r\n            var columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\r\n            return this._columnsController.getVisibleIndex(columnIndex)\r\n        }\r\n        return columnIdentifier\r\n    },\r\n    getColumnElements: function() {},\r\n    getColumns: function(rowIndex) {\r\n        return this._columnsController.getVisibleColumns(rowIndex)\r\n    },\r\n    getCell: function(cellPosition, rows) {\r\n        var $rows = rows || this._getRowElements();\r\n        var $cells;\r\n        if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\r\n            if (\"virtual\" !== this.option(\"scrolling.mode\") && \"virtual\" !== this.option(\"scrolling.rowRenderingMode\")) {\r\n                cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1\r\n            }\r\n            $cells = this.getCellElements(cellPosition.rowIndex);\r\n            if ($cells && $cells.length > 0) {\r\n                return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1)\r\n            }\r\n        }\r\n    },\r\n    getRowsCount: function() {\r\n        var tableElement = this.getTableElement();\r\n        if (tableElement && 1 === tableElement.length) {\r\n            return tableElement[0].rows.length\r\n        }\r\n        return 0\r\n    },\r\n    _getRowElementsCore: function(tableElement) {\r\n        tableElement = tableElement || this.getTableElement();\r\n        if (tableElement) {\r\n            var hasRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n            var tBodies = hasRowTemplate && tableElement.find(\"> tbody.\" + ROW_CLASS);\r\n            return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .\" + ROW_CLASS + \", > .\" + ROW_CLASS)\r\n        }\r\n        return $()\r\n    },\r\n    _getRowElements: function(tableElement) {\r\n        return this._getRowElementsCore(tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        return this._getRowElements().index($row)\r\n    },\r\n    getBoundingRect: function() {},\r\n    getName: function() {},\r\n    setScrollerSpacing: function(width) {\r\n        var $element = this.element();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        $element && $element.css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    },\r\n    isScrollbarVisible: function(isHorizontal) {\r\n        var $element = this.element();\r\n        var $tableElement = this._tableElement;\r\n        if ($element && $tableElement) {\r\n            return isHorizontal ? getOuterWidth($tableElement) - getWidth($element) > 0 : getOuterHeight($tableElement) - getHeight($element) > 0\r\n        }\r\n        return false\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/shared/accessibility.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUSED_ROW_SELECTOR = \".dx-row-focused\";\r\nvar GRID_ROW_SELECTOR = \".dx-datagrid-rowsview .dx-row\";\r\nvar GRID_CELL_SELECTOR = \"\".concat(GRID_ROW_SELECTOR, \" > td\");\r\nvar TREELIST_ROW_SELECTOR = \".dx-treelist-rowsview .dx-row\";\r\nvar TREELIST_CELL_SELECTOR = \"\".concat(TREELIST_ROW_SELECTOR, \" > td\");\r\nvar viewItemSelectorMap = {\r\n    groupPanel: [\".dx-datagrid-group-panel .dx-group-panel-item[tabindex]\"],\r\n    columnHeaders: [\".dx-datagrid-headers .dx-header-row > td.dx-datagrid-action\", \".dx-treelist-headers .dx-header-row > td.dx-treelist-action\"],\r\n    filterRow: [\".dx-datagrid-headers .dx-datagrid-filter-row .dx-editor-cell .dx-texteditor-input\", \".dx-treelist-headers .dx-treelist-filter-row .dx-editor-cell .dx-texteditor-input\"],\r\n    rowsView: [\"\".concat(FOCUSED_ROW_SELECTOR), \"\".concat(GRID_ROW_SELECTOR, \"[tabindex]\"), \"\".concat(GRID_CELL_SELECTOR, \"[tabindex]\"), \"\".concat(GRID_CELL_SELECTOR), \"\".concat(TREELIST_ROW_SELECTOR, \"[tabindex]\"), \"\".concat(TREELIST_CELL_SELECTOR, \"[tabindex]\"), \"\".concat(TREELIST_CELL_SELECTOR)],\r\n    footer: [\".dx-datagrid-total-footer .dx-datagrid-summary-item\", \".dx-treelist-total-footer .dx-treelist-summary-item\"],\r\n    filterPanel: [\".dx-datagrid-filter-panel .dx-icon-filter\", \".dx-treelist-filter-panel .dx-icon-filter\"],\r\n    pager: [\".dx-datagrid-pager [tabindex]\", \".dx-treelist-pager [tabindex]\"]\r\n};\r\nvar isMouseDown = false;\r\nvar isHiddenFocusing = false;\r\nvar focusedElementInfo = null;\r\n\r\nfunction processKeyDown(viewName, instance, event, action, $mainElement, executeKeyDown) {\r\n    var isHandled = fireKeyDownEvent(instance, event.originalEvent, executeKeyDown);\r\n    if (isHandled) {\r\n        return\r\n    }\r\n    var keyName = normalizeKeyName(event);\r\n    if (\"enter\" === keyName || \"space\" === keyName) {\r\n        saveFocusedElementInfo(event.target, instance);\r\n        action && action({\r\n            event: event\r\n        })\r\n    } else if (\"tab\" === keyName) {\r\n        $mainElement.addClass(FOCUS_STATE_CLASS)\r\n    } else {\r\n        selectView(viewName, instance, event)\r\n    }\r\n}\r\n\r\nfunction saveFocusedElementInfo(target, instance) {\r\n    var $target = $(target);\r\n    var ariaLabel = $target.attr(\"aria-label\");\r\n    var $activeElements = getActiveAccessibleElements(ariaLabel, instance.element());\r\n    var targetIndex = $activeElements.index($target);\r\n    focusedElementInfo = extend({}, {\r\n        ariaLabel: ariaLabel,\r\n        index: targetIndex\r\n    }, {\r\n        viewInstance: instance\r\n    })\r\n}\r\n\r\nfunction getActiveAccessibleElements(ariaLabel, viewElement) {\r\n    var $viewElement = $(viewElement);\r\n    var $activeElements;\r\n    if (ariaLabel) {\r\n        $activeElements = $viewElement.find('[aria-label=\"'.concat(ariaLabel, '\"][tabindex]'))\r\n    } else {\r\n        $activeElements = $viewElement.find(\"[tabindex]\")\r\n    }\r\n    return $activeElements\r\n}\r\n\r\nfunction findFocusedViewElement(viewSelectors) {\r\n    for (var index in viewSelectors) {\r\n        var selector = viewSelectors[index];\r\n        var $focusViewElement = $(selector).first();\r\n        if ($focusViewElement.length) {\r\n            return $focusViewElement\r\n        }\r\n    }\r\n}\r\n\r\nfunction fireKeyDownEvent(instance, event, executeAction) {\r\n    var args = {\r\n        event: event,\r\n        handled: false\r\n    };\r\n    if (executeAction) {\r\n        executeAction(args)\r\n    } else {\r\n        instance._createActionByOption(\"onKeyDown\")(args)\r\n    }\r\n    return args.handled\r\n}\r\n\r\nfunction onDocumentVisibilityChange() {\r\n    isHiddenFocusing = \"visible\" === domAdapter.getDocument().visibilityState\r\n}\r\nexport function subscribeVisibilityChange() {\r\n    eventsEngine.on(domAdapter.getDocument(), \"visibilitychange\", onDocumentVisibilityChange)\r\n}\r\nexport function unsubscribeVisibilityChange() {\r\n    eventsEngine.off(domAdapter.getDocument(), \"visibilitychange\", onDocumentVisibilityChange)\r\n}\r\nexport function hiddenFocus(element) {\r\n    isHiddenFocusing = true;\r\n    element.focus();\r\n    isHiddenFocusing = false\r\n}\r\nexport function registerKeyboardAction(viewName, instance, $element, selector, action, executeKeyDown) {\r\n    if (instance.option(\"useLegacyKeyboardNavigation\")) {\r\n        return noop\r\n    }\r\n    var getMainElement = () => $(instance.element());\r\n    var keyDownHandler = e => processKeyDown(viewName, instance, e, action, getMainElement(), executeKeyDown);\r\n    var mouseDownHandler = () => {\r\n        isMouseDown = true;\r\n        getMainElement().removeClass(FOCUS_STATE_CLASS)\r\n    };\r\n    var focusinHandler = () => {\r\n        var needShowOverlay = !isMouseDown && !isHiddenFocusing;\r\n        if (needShowOverlay) {\r\n            getMainElement().addClass(FOCUS_STATE_CLASS)\r\n        }\r\n        isMouseDown = false\r\n    };\r\n    eventsEngine.on($element, \"keydown\", selector, keyDownHandler);\r\n    eventsEngine.on($element, \"mousedown\", selector, mouseDownHandler);\r\n    eventsEngine.on($element, \"focusin\", selector, focusinHandler);\r\n    return () => {\r\n        eventsEngine.off($element, \"keydown\", selector, keyDownHandler);\r\n        eventsEngine.off($element, \"mousedown\", selector, mouseDownHandler);\r\n        eventsEngine.off($element, \"focusin\", selector, focusinHandler)\r\n    }\r\n}\r\nexport function restoreFocus(instance) {\r\n    if (!instance.option(\"useLegacyKeyboardNavigation\") && focusedElementInfo) {\r\n        var viewInstance = focusedElementInfo.viewInstance;\r\n        if (viewInstance) {\r\n            var $activeElements = getActiveAccessibleElements(focusedElementInfo.ariaLabel, viewInstance.element());\r\n            var $targetElement = $activeElements.eq(focusedElementInfo.index);\r\n            focusedElementInfo = null;\r\n            eventsEngine.trigger($targetElement, \"focus\")\r\n        }\r\n    }\r\n}\r\nexport function selectView(viewName, instance, event) {\r\n    var keyName = normalizeKeyName(event);\r\n    if (event.ctrlKey && (\"upArrow\" === keyName || \"downArrow\" === keyName)) {\r\n        var viewNames = Object.keys(viewItemSelectorMap);\r\n        var viewItemIndex = viewNames.indexOf(viewName);\r\n        while (viewItemIndex >= 0 && viewItemIndex < viewNames.length) {\r\n            viewItemIndex = \"upArrow\" === keyName ? --viewItemIndex : ++viewItemIndex;\r\n            var _viewName = viewNames[viewItemIndex];\r\n            var viewSelectors = viewItemSelectorMap[_viewName];\r\n            var $focusViewElement = findFocusedViewElement(viewSelectors);\r\n            if ($focusViewElement && $focusViewElement.length) {\r\n                $focusViewElement.attr(\"tabindex\", instance.option(\"tabindex\") || 0);\r\n                eventsEngine.trigger($focusViewElement, \"focus\");\r\n                $focusViewElement.removeClass(FOCUS_DISABLED_CLASS);\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function setTabIndex(instance, $element) {\r\n    if (!instance.option(\"useLegacyKeyboardnavigation\")) {\r\n        $element.attr(\"tabindex\", instance.option(\"tabindex\") || 0)\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.accessibility.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport * as accessibility from \"../../ui/shared/accessibility\";\r\nexport var registerKeyboardAction = function(viewName, instance, $element, selector, action) {\r\n    var keyboardController = instance.getController(\"keyboardNavigation\");\r\n    if (instance.option(\"useLegacyKeyboardNavigation\") || keyboardController && !keyboardController.isKeyboardEnabled()) {\r\n        return\r\n    }\r\n    instance.createAction(\"onKeyDown\");\r\n    accessibility.registerKeyboardAction(viewName, instance, $element, selector, action, args => {\r\n        instance.executeAction(\"onKeyDown\", args)\r\n    })\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_headers.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"./ui.grid_core.accessibility\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_CLASS = \"headers\";\r\nvar NOWRAP_CLASS = \"nowrap\";\r\nvar ROW_CLASS_SELECTOR = \".dx-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar CONTEXT_MENU_SORT_ASC_ICON = \"context-menu-sort-asc\";\r\nvar CONTEXT_MENU_SORT_DESC_ICON = \"context-menu-sort-desc\";\r\nvar CONTEXT_MENU_SORT_NONE_ICON = \"context-menu-sort-none\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar VISIBILITY_HIDDEN_CLASS = \"dx-visibility-hidden\";\r\nvar TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX = \"dx-text-content-alignment-\";\r\nvar SORT_INDICATOR_CLASS = \"dx-sort-indicator\";\r\nvar SORT_INDEX_INDICATOR_CLASS = \"dx-sort-index-indicator\";\r\nvar HEADER_FILTER_CLASS_SELECTOR = \".dx-header-filter\";\r\nvar HEADER_FILTER_INDICATOR_CLASS = \"dx-header-filter-indicator\";\r\nvar MULTI_ROW_HEADER_CLASS = \"dx-header-multi-row\";\r\nexport var columnHeadersModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            showColumnHeaders: true,\r\n            cellHintEnabled: true\r\n        }\r\n    },\r\n    views: {\r\n        columnHeadersView: ColumnsView.inherit(function() {\r\n            var createCellContent = function(that, $cell, options) {\r\n                var $cellContent = $(\"<div>\").addClass(that.addWidgetPrefix(CELL_CONTENT_CLASS));\r\n                that.setAria(\"role\", \"presentation\", $cellContent);\r\n                addCssClassesToCellContent(that, $cell, options.column, $cellContent);\r\n                var showColumnLines = that.option(\"showColumnLines\");\r\n                var contentAlignment = that.getController(\"columns\").getHeaderContentAlignment(options.column.alignment);\r\n                return $cellContent[showColumnLines || \"right\" === contentAlignment ? \"appendTo\" : \"prependTo\"]($cell)\r\n            };\r\n\r\n            function addCssClassesToCellContent(that, $cell, column, $cellContent) {\r\n                var $indicatorElements = that._getIndicatorElements($cell, true);\r\n                var $visibleIndicatorElements = that._getIndicatorElements($cell);\r\n                var indicatorCount = $indicatorElements && $indicatorElements.length;\r\n                var columnAlignment = that._getColumnAlignment(column.alignment);\r\n                var sortIndicatorClassName = \".\".concat(that._getIndicatorClassName(\"sort\"));\r\n                var sortIndexIndicatorClassName = \".\".concat(that._getIndicatorClassName(\"sortIndex\"));\r\n                var $sortIndicator = $visibleIndicatorElements.filter(sortIndicatorClassName);\r\n                var $sortIndexIndicator = $visibleIndicatorElements.children().filter(sortIndexIndicatorClassName);\r\n                $cellContent = $cellContent || $cell.children(\".\" + that.addWidgetPrefix(CELL_CONTENT_CLASS));\r\n                $cellContent.toggleClass(TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX + columnAlignment, indicatorCount > 0).toggleClass(TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX + (\"left\" === columnAlignment ? \"right\" : \"left\"), indicatorCount > 0 && \"center\" === column.alignment).toggleClass(SORT_INDICATOR_CLASS, !!$sortIndicator.length).toggleClass(SORT_INDEX_INDICATOR_CLASS, !!$sortIndexIndicator.length).toggleClass(HEADER_FILTER_INDICATOR_CLASS, !!$visibleIndicatorElements.filter(\".\" + that._getIndicatorClassName(\"headerFilter\")).length)\r\n            }\r\n            return {\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    eventsEngine.on($table, \"mousedown selectstart\", this.createAction((function(e) {\r\n                        var event = e.event;\r\n                        if (event.shiftKey) {\r\n                            event.preventDefault()\r\n                        }\r\n                    })));\r\n                    return $table\r\n                },\r\n                _isLegacyKeyboardNavigation() {\r\n                    return this.option(\"useLegacyKeyboardNavigation\")\r\n                },\r\n                _getDefaultTemplate: function(column) {\r\n                    var that = this;\r\n                    return function($container, options) {\r\n                        var $content = column.command ? $container : createCellContent(that, $container, options);\r\n                        var caption = \"expand\" !== column.command && column.caption;\r\n                        if (caption) {\r\n                            $content.text(caption)\r\n                        } else if (column.command) {\r\n                            $container.html(\"&nbsp;\")\r\n                        }\r\n                    }\r\n                },\r\n                _getHeaderTemplate: function(column) {\r\n                    return column.headerCellTemplate || {\r\n                        allowRenderToDetachedContainer: true,\r\n                        render: this._getDefaultTemplate(column)\r\n                    }\r\n                },\r\n                _processTemplate: function(template, options) {\r\n                    var that = this;\r\n                    var resultTemplate;\r\n                    var column = options.column;\r\n                    var renderingTemplate = that.callBase(template);\r\n                    if (\"header\" === options.rowType && renderingTemplate && column.headerCellTemplate && !column.command) {\r\n                        resultTemplate = {\r\n                            render: function(options) {\r\n                                var $content = createCellContent(that, options.container, options.model);\r\n                                renderingTemplate.render(extend({}, options, {\r\n                                    container: $content\r\n                                }))\r\n                            }\r\n                        }\r\n                    } else {\r\n                        resultTemplate = renderingTemplate\r\n                    }\r\n                    return resultTemplate\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    if (\"refresh\" !== e.changeType) {\r\n                        return\r\n                    }\r\n                    if (this._isGroupingChanged || this._requireReady) {\r\n                        this._isGroupingChanged = false;\r\n                        this.render()\r\n                    }\r\n                },\r\n                _renderCell: function($row, options) {\r\n                    var $cell = this.callBase($row, options);\r\n                    if (\"header\" === options.row.rowType) {\r\n                        $cell.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                        if (!this._isLegacyKeyboardNavigation()) {\r\n                            if (options.column && !options.column.type) {\r\n                                $cell.attr(\"tabindex\", this.option(\"tabindex\") || 0)\r\n                            }\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _setCellAriaAttributes: function($cell, cellOptions) {\r\n                    this.callBase($cell, cellOptions);\r\n                    if (\"header\" === cellOptions.rowType) {\r\n                        this.setAria(\"role\", \"columnheader\", $cell);\r\n                        if (cellOptions.column && !cellOptions.column.command && !cellOptions.column.isBand) {\r\n                            $cell.attr(\"id\", cellOptions.column.headerId);\r\n                            this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaColumn\") + \" \" + cellOptions.column.caption, $cell)\r\n                        }\r\n                    }\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    $row.toggleClass(COLUMN_LINES_CLASS, this.option(\"showColumnLines\"));\r\n                    if (\"header\" === row.rowType) {\r\n                        $row.addClass(HEADER_ROW_CLASS);\r\n                        if (!this._isLegacyKeyboardNavigation()) {\r\n                            registerKeyboardAction(\"columnHeaders\", this, $row, \"td\", this._handleActionKeyDown.bind(this))\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _handleActionKeyDown: function(args) {\r\n                    var event = args.event;\r\n                    var $target = $(event.target);\r\n                    this._lastActionElement = event.target;\r\n                    if ($target.is(HEADER_FILTER_CLASS_SELECTOR)) {\r\n                        var headerFilterController = this.getController(\"headerFilter\");\r\n                        var $column = $target.closest(\"td\");\r\n                        var columnIndex = this.getColumnIndexByElement($column);\r\n                        if (columnIndex >= 0) {\r\n                            headerFilterController.showHeaderFilterMenu(columnIndex, false)\r\n                        }\r\n                    } else {\r\n                        var $row = $target.closest(ROW_CLASS_SELECTOR);\r\n                        this._processHeaderAction(event, $row)\r\n                    }\r\n                    event.preventDefault()\r\n                },\r\n                _renderCore: function() {\r\n                    var that = this;\r\n                    var $container = that.element();\r\n                    if (that._tableElement && !that._dataController.isLoaded() && !that._hasRowElements) {\r\n                        return\r\n                    }\r\n                    $container.addClass(that.addWidgetPrefix(HEADERS_CLASS)).toggleClass(that.addWidgetPrefix(NOWRAP_CLASS), !that.option(\"wordWrapEnabled\")).empty();\r\n                    that.setAria(\"role\", \"presentation\", $container);\r\n                    that._updateContent(that._renderTable());\r\n                    if (that.getRowCount() > 1) {\r\n                        $container.addClass(MULTI_ROW_HEADER_CLASS)\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                },\r\n                _renderRows: function() {\r\n                    var that = this;\r\n                    if (that._dataController.isLoaded() || that._hasRowElements) {\r\n                        that.callBase.apply(that, arguments);\r\n                        that._hasRowElements = true\r\n                    }\r\n                },\r\n                _getRowVisibleColumns: function(rowIndex) {\r\n                    return this._columnsController.getVisibleColumns(rowIndex)\r\n                },\r\n                _renderRow: function($table, options) {\r\n                    options.columns = this._getRowVisibleColumns(options.row.rowIndex);\r\n                    this.callBase($table, options)\r\n                },\r\n                _createCell: function(options) {\r\n                    var column = options.column;\r\n                    var $cellElement = this.callBase.apply(this, arguments);\r\n                    column.rowspan > 1 && \"header\" === options.rowType && $cellElement.attr(\"rowSpan\", column.rowspan);\r\n                    return $cellElement\r\n                },\r\n                _getRows: function() {\r\n                    var result = [];\r\n                    var rowCount = this.getRowCount();\r\n                    if (this.option(\"showColumnHeaders\")) {\r\n                        for (var i = 0; i < rowCount; i++) {\r\n                            result.push({\r\n                                rowType: \"header\",\r\n                                rowIndex: i\r\n                            })\r\n                        }\r\n                    }\r\n                    return result\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    if (\"header\" === options.rowType) {\r\n                        return this._getHeaderTemplate(options.column)\r\n                    }\r\n                },\r\n                _columnOptionChanged: function(e) {\r\n                    var changeTypes = e.changeTypes;\r\n                    var optionNames = e.optionNames;\r\n                    if (changeTypes.grouping || changeTypes.groupExpanding) {\r\n                        if (changeTypes.grouping) {\r\n                            this._isGroupingChanged = true\r\n                        }\r\n                        return\r\n                    }\r\n                    this.callBase(e);\r\n                    if (optionNames.width || optionNames.visible) {\r\n                        this.resizeCompleted.fire()\r\n                    }\r\n                },\r\n                _isElementVisible: function(elementOptions) {\r\n                    return elementOptions && elementOptions.visible\r\n                },\r\n                _alignCaptionByCenter: function($cell) {\r\n                    var $indicatorsContainer = this._getIndicatorContainer($cell, true);\r\n                    if ($indicatorsContainer && $indicatorsContainer.length) {\r\n                        $indicatorsContainer.filter(\".\" + VISIBILITY_HIDDEN_CLASS).remove();\r\n                        $indicatorsContainer = this._getIndicatorContainer($cell);\r\n                        $indicatorsContainer.clone().addClass(VISIBILITY_HIDDEN_CLASS).css(\"float\", \"\").insertBefore($cell.children(\".\" + this.addWidgetPrefix(CELL_CONTENT_CLASS)))\r\n                    }\r\n                },\r\n                _updateCell: function($cell, options) {\r\n                    if (\"header\" === options.rowType && \"center\" === options.column.alignment) {\r\n                        this._alignCaptionByCenter($cell)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _updateIndicator: function($cell, column, indicatorName) {\r\n                    var $indicatorElement = this.callBase.apply(this, arguments);\r\n                    if (\"center\" === column.alignment) {\r\n                        this._alignCaptionByCenter($cell)\r\n                    }\r\n                    addCssClassesToCellContent(this, $cell, column);\r\n                    return $indicatorElement\r\n                },\r\n                _getIndicatorContainer: function($cell, returnAll) {\r\n                    var $indicatorsContainer = this.callBase($cell);\r\n                    return returnAll ? $indicatorsContainer : $indicatorsContainer.filter(\":not(.\" + VISIBILITY_HIDDEN_CLASS + \")\")\r\n                },\r\n                _isSortableElement: function() {\r\n                    return true\r\n                },\r\n                getHeadersRowHeight: function() {\r\n                    var $tableElement = this.getTableElement();\r\n                    var $headerRows = $tableElement && $tableElement.find(\".\" + HEADER_ROW_CLASS);\r\n                    return $headerRows && $headerRows.toArray().reduce((function(sum, headerRow) {\r\n                        return sum + getHeight(headerRow)\r\n                    }), 0) || 0\r\n                },\r\n                getHeaderElement: function(index) {\r\n                    var columnElements = this.getColumnElements();\r\n                    return columnElements && columnElements.eq(index)\r\n                },\r\n                getColumnElements: function(index, bandColumnIndex) {\r\n                    var that = this;\r\n                    var $cellElement;\r\n                    var columnsController = that._columnsController;\r\n                    var rowCount = that.getRowCount();\r\n                    if (that.option(\"showColumnHeaders\")) {\r\n                        if (rowCount > 1 && (!isDefined(index) || isDefined(bandColumnIndex))) {\r\n                            var result = [];\r\n                            var visibleColumns = isDefined(bandColumnIndex) ? columnsController.getChildrenByBandColumn(bandColumnIndex, true) : columnsController.getVisibleColumns();\r\n                            each(visibleColumns, (function(_, column) {\r\n                                var rowIndex = isDefined(index) ? index : columnsController.getRowIndex(column.index);\r\n                                $cellElement = that._getCellElement(rowIndex, columnsController.getVisibleIndex(column.index, rowIndex));\r\n                                $cellElement && result.push($cellElement.get(0))\r\n                            }));\r\n                            return $(result)\r\n                        } else if (!index || index < rowCount) {\r\n                            return that.getCellElements(index || 0)\r\n                        }\r\n                    }\r\n                },\r\n                getColumnIndexByElement: function($cell) {\r\n                    var cellIndex = this.getCellIndex($cell);\r\n                    var $row = $cell.closest(\".dx-row\");\r\n                    var rowIndex = $row[0].rowIndex;\r\n                    var column = this.getColumns(rowIndex)[cellIndex];\r\n                    return column ? column.index : -1\r\n                },\r\n                getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n                    var column = this.getColumns()[columnIndex];\r\n                    return column ? this._columnsController.getVisibleIndex(column.index, rowIndex) : -1\r\n                },\r\n                getColumnWidths: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    if ($columnElements && $columnElements.length) {\r\n                        return this._getWidths($columnElements)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                allowDragging: function(column, sourceLocation, draggingPanels) {\r\n                    var i;\r\n                    var draggableColumnCount = 0;\r\n                    var rowIndex = column && this._columnsController.getRowIndex(column.index);\r\n                    var columns = this.getColumns(0 === rowIndex ? 0 : null);\r\n                    var canHideColumn = (null === column || void 0 === column ? void 0 : column.allowHiding) && columns.length > 1;\r\n                    var allowDrag = function(column) {\r\n                        return column.allowReordering || column.allowGrouping || column.allowHiding\r\n                    };\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        if (allowDrag(columns[i])) {\r\n                            draggableColumnCount++\r\n                        }\r\n                    }\r\n                    if (draggableColumnCount <= 1 && !canHideColumn) {\r\n                        return false\r\n                    } else if (!draggingPanels) {\r\n                        return (this.option(\"allowColumnReordering\") || this._columnsController.isColumnOptionUsed(\"allowReordering\")) && column && column.allowReordering\r\n                    }\r\n                    for (i = 0; i < draggingPanels.length; i++) {\r\n                        var draggingPanel = draggingPanels[i];\r\n                        if (draggingPanel && draggingPanel.allowDragging(column, sourceLocation)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                },\r\n                getBoundingRect: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    if ($columnElements && $columnElements.length) {\r\n                        var offset = this.getTableElement().offset();\r\n                        return {\r\n                            top: offset.top\r\n                        }\r\n                    }\r\n                    return null\r\n                },\r\n                getName: function() {\r\n                    return \"headers\"\r\n                },\r\n                getColumnCount: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    return $columnElements ? $columnElements.length : 0\r\n                },\r\n                isVisible: function() {\r\n                    return this.option(\"showColumnHeaders\")\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"showColumnHeaders\":\r\n                        case \"wordWrapEnabled\":\r\n                        case \"showColumnLines\":\r\n                            this._invalidate(true, true);\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                getHeight: function() {\r\n                    return this.getElementHeight()\r\n                },\r\n                getContextMenuItems: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    if (options.row && (\"header\" === options.row.rowType || \"detailAdaptive\" === options.row.rowType)) {\r\n                        var sortingOptions = that.option(\"sorting\");\r\n                        if (sortingOptions && \"none\" !== sortingOptions.mode && column && column.allowSorting) {\r\n                            var onItemClick = function(params) {\r\n                                setTimeout((function() {\r\n                                    that._columnsController.changeSortOrder(column.index, params.itemData.value)\r\n                                }))\r\n                            };\r\n                            return [{\r\n                                text: sortingOptions.ascendingText,\r\n                                value: \"asc\",\r\n                                disabled: \"asc\" === column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_ASC_ICON,\r\n                                onItemClick: onItemClick\r\n                            }, {\r\n                                text: sortingOptions.descendingText,\r\n                                value: \"desc\",\r\n                                disabled: \"desc\" === column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_DESC_ICON,\r\n                                onItemClick: onItemClick\r\n                            }, {\r\n                                text: sortingOptions.clearText,\r\n                                value: \"none\",\r\n                                disabled: !column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_NONE_ICON,\r\n                                onItemClick: onItemClick\r\n                            }]\r\n                        }\r\n                    }\r\n                },\r\n                getRowCount: function() {\r\n                    return this._columnsController && this._columnsController.getRowCount()\r\n                },\r\n                setRowsOpacity: function(columnIndex, value, rowIndex) {\r\n                    var that = this;\r\n                    var i;\r\n                    var columnElements;\r\n                    var rowCount = that.getRowCount();\r\n                    var columns = that._columnsController.getColumns();\r\n                    var column = columns && columns[columnIndex];\r\n                    var columnID = column && column.isBand && column.index;\r\n                    var setColumnOpacity = function(index, column) {\r\n                        if (column.ownerBand === columnID) {\r\n                            columnElements.eq(index).css({\r\n                                opacity: value\r\n                            });\r\n                            if (column.isBand) {\r\n                                that.setRowsOpacity(column.index, value, i + 1)\r\n                            }\r\n                        }\r\n                    };\r\n                    if (isDefined(columnID)) {\r\n                        rowIndex = rowIndex || 0;\r\n                        for (i = rowIndex; i < rowCount; i++) {\r\n                            columnElements = that.getCellElements(i);\r\n                            each(that.getColumns(i), setColumnOpacity)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_headers.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnHeadersModule\r\n} from \"../grid_core/ui.grid_core.column_headers\";\r\nexport var ColumnHeadersView = columnHeadersModule.views.columnHeadersView;\r\ngridCore.registerModule(\"columnHeaders\", columnHeadersModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isNumeric,\r\n    isFunction,\r\n    isObject,\r\n    isPlainObject,\r\n    type\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    inArray,\r\n    normalizeIndexes\r\n} from \"../../core/utils/array\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    orderEach,\r\n    deepExtendArraySafe\r\n} from \"../../core/utils/object\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport numberLocalization from \"../../localization/number\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Store from \"../../data/abstract_store\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport filterUtils from \"../shared/filtering\";\r\nvar USER_STATE_FIELD_NAMES_15_1 = [\"filterValues\", \"filterType\", \"fixed\", \"fixedPosition\"];\r\nvar USER_STATE_FIELD_NAMES = [\"visibleIndex\", \"dataField\", \"name\", \"dataType\", \"width\", \"visible\", \"sortOrder\", \"lastSortOrder\", \"sortIndex\", \"groupIndex\", \"filterValue\", \"selectedFilterOperation\", \"added\"].concat(USER_STATE_FIELD_NAMES_15_1);\r\nvar IGNORE_COLUMN_OPTION_NAMES = {\r\n    visibleWidth: true,\r\n    bestFitWidth: true,\r\n    bufferedFilterValue: true\r\n};\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\nvar GROUP_COMMAND_COLUMN_NAME = \"groupExpand\";\r\nvar regExp = /columns\\[(\\d+)\\]\\.?/gi;\r\nvar globalColumnId = 1;\r\nexport var columnsControllerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            commonColumnSettings: {\r\n                allowFiltering: true,\r\n                allowHiding: true,\r\n                allowSorting: true,\r\n                allowEditing: true,\r\n                encodeHtml: true,\r\n                trueText: messageLocalization.format(\"dxDataGrid-trueText\"),\r\n                falseText: messageLocalization.format(\"dxDataGrid-falseText\")\r\n            },\r\n            allowColumnReordering: false,\r\n            allowColumnResizing: false,\r\n            columnResizingMode: \"nextColumn\",\r\n            columnMinWidth: void 0,\r\n            columnWidth: void 0,\r\n            adaptColumnWidthByRatio: true,\r\n            columns: void 0,\r\n            regenerateColumnsByVisibleItems: false,\r\n            customizeColumns: null,\r\n            dateSerializationFormat: void 0\r\n        }\r\n    },\r\n    controllers: {\r\n        columns: modules.Controller.inherit(function() {\r\n            var DEFAULT_COLUMN_OPTIONS = {\r\n                visible: true,\r\n                showInColumnChooser: true\r\n            };\r\n            var DATATYPE_OPERATIONS = {\r\n                number: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"],\r\n                string: [\"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\"],\r\n                date: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"],\r\n                datetime: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"]\r\n            };\r\n            var COLUMN_INDEX_OPTIONS = {\r\n                visibleIndex: true,\r\n                groupIndex: true,\r\n                grouped: true,\r\n                sortIndex: true,\r\n                sortOrder: true\r\n            };\r\n            var setFilterOperationsAsDefaultValues = function(column) {\r\n                column.filterOperations = column.defaultFilterOperations\r\n            };\r\n            var createColumn = function(that, columnOptions, userStateColumnOptions, bandColumn) {\r\n                var commonColumnOptions = {};\r\n                if (columnOptions) {\r\n                    if (isString(columnOptions)) {\r\n                        columnOptions = {\r\n                            dataField: columnOptions\r\n                        }\r\n                    }\r\n                    that.setName(columnOptions);\r\n                    var result = {};\r\n                    if (columnOptions.command) {\r\n                        result = deepExtendArraySafe(commonColumnOptions, columnOptions)\r\n                    } else {\r\n                        commonColumnOptions = that.getCommonSettings(columnOptions);\r\n                        if (userStateColumnOptions && userStateColumnOptions.name && userStateColumnOptions.dataField) {\r\n                            columnOptions = extend({}, columnOptions, {\r\n                                dataField: userStateColumnOptions.dataField\r\n                            })\r\n                        }\r\n                        var calculatedColumnOptions = that._createCalculatedColumnOptions(columnOptions, bandColumn);\r\n                        if (!columnOptions.type) {\r\n                            result = {\r\n                                headerId: \"dx-col-\".concat(globalColumnId++)\r\n                            }\r\n                        }\r\n                        result = deepExtendArraySafe(result, DEFAULT_COLUMN_OPTIONS);\r\n                        deepExtendArraySafe(result, commonColumnOptions);\r\n                        deepExtendArraySafe(result, calculatedColumnOptions);\r\n                        deepExtendArraySafe(result, columnOptions);\r\n                        deepExtendArraySafe(result, {\r\n                            selector: null\r\n                        })\r\n                    }\r\n                    if (columnOptions.filterOperations === columnOptions.defaultFilterOperations) {\r\n                        setFilterOperationsAsDefaultValues(result)\r\n                    }\r\n                    return result\r\n                }\r\n            };\r\n            var createColumnsFromOptions = function createColumnsFromOptions(that, columnsOptions, bandColumn) {\r\n                var result = [];\r\n                if (columnsOptions) {\r\n                    each(columnsOptions, (function(index, columnOptions) {\r\n                        var userStateColumnOptions = that._columnsUserState && checkUserStateColumn(columnOptions, that._columnsUserState[index]) && that._columnsUserState[index];\r\n                        var column = createColumn(that, columnOptions, userStateColumnOptions, bandColumn);\r\n                        if (column) {\r\n                            if (bandColumn) {\r\n                                column.ownerBand = bandColumn\r\n                            }\r\n                            result.push(column);\r\n                            if (column.columns) {\r\n                                result = result.concat(createColumnsFromOptions(that, column.columns, column));\r\n                                delete column.columns;\r\n                                column.hasColumns = true\r\n                            }\r\n                        }\r\n                    }))\r\n                }\r\n                return result\r\n            };\r\n            var getParentBandColumns = function(columnIndex, columnParentByIndex) {\r\n                var result = [];\r\n                var parent = columnParentByIndex[columnIndex];\r\n                while (parent) {\r\n                    result.unshift(parent);\r\n                    columnIndex = parent.index;\r\n                    parent = columnParentByIndex[columnIndex]\r\n                }\r\n                return result\r\n            };\r\n            var _getChildrenByBandColumn = function(columnIndex, columnChildrenByIndex, recursive) {\r\n                var result = [];\r\n                var children = columnChildrenByIndex[columnIndex];\r\n                if (children) {\r\n                    for (var i = 0; i < children.length; i++) {\r\n                        var column = children[i];\r\n                        if (!isDefined(column.groupIndex) || column.showWhenGrouped) {\r\n                            result.push(column);\r\n                            if (recursive && column.isBand) {\r\n                                result = result.concat(_getChildrenByBandColumn(column.index, columnChildrenByIndex, recursive))\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            };\r\n            var getColumnFullPath = function(that, column) {\r\n                var result = [];\r\n                var columns;\r\n                var bandColumnsCache = that.getBandColumnsCache();\r\n                var callbackFilter = function(item) {\r\n                    return item.ownerBand === column.ownerBand\r\n                };\r\n                if (bandColumnsCache.isPlain) {\r\n                    var columnIndex = that._columns.indexOf(column);\r\n                    if (columnIndex >= 0) {\r\n                        result = [\"columns[\".concat(columnIndex, \"]\")]\r\n                    }\r\n                } else {\r\n                    columns = that._columns.filter(callbackFilter);\r\n                    while (columns.length && -1 !== columns.indexOf(column)) {\r\n                        result.unshift(\"columns[\".concat(columns.indexOf(column), \"]\"));\r\n                        column = bandColumnsCache.columnParentByIndex[column.index];\r\n                        columns = column ? that._columns.filter(callbackFilter) : []\r\n                    }\r\n                }\r\n                return result.join(\".\")\r\n            };\r\n            var calculateColspan = function calculateColspan(that, columnID) {\r\n                var colspan = 0;\r\n                var columns = that.getChildrenByBandColumn(columnID, true);\r\n                each(columns, (function(_, column) {\r\n                    if (column.isBand) {\r\n                        column.colspan = column.colspan || calculateColspan(that, column.index);\r\n                        colspan += column.colspan || 1\r\n                    } else {\r\n                        colspan += 1\r\n                    }\r\n                }));\r\n                return colspan\r\n            };\r\n            var getValueDataType = function(value) {\r\n                var dataType = type(value);\r\n                if (\"string\" !== dataType && \"boolean\" !== dataType && \"number\" !== dataType && \"date\" !== dataType && \"object\" !== dataType) {\r\n                    dataType = void 0\r\n                }\r\n                return dataType\r\n            };\r\n            var getSerializationFormat = function(dataType, value) {\r\n                switch (dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        return dateSerialization.getDateSerializationFormat(value);\r\n                    case \"number\":\r\n                        if (isString(value)) {\r\n                            return \"string\"\r\n                        }\r\n                        if (isNumeric(value)) {\r\n                            return null\r\n                        }\r\n                }\r\n            };\r\n            var updateSerializers = function(options, dataType) {\r\n                if (!options.deserializeValue) {\r\n                    if (gridCoreUtils.isDateType(dataType)) {\r\n                        options.deserializeValue = function(value) {\r\n                            return dateSerialization.deserializeDate(value)\r\n                        };\r\n                        options.serializeValue = function(value) {\r\n                            return isString(value) ? value : dateSerialization.serializeDate(value, this.serializationFormat)\r\n                        }\r\n                    }\r\n                    if (\"number\" === dataType) {\r\n                        options.deserializeValue = function(value) {\r\n                            var parsedValue = parseFloat(value);\r\n                            return isNaN(parsedValue) ? value : parsedValue\r\n                        };\r\n                        options.serializeValue = function(value, target) {\r\n                            if (\"filter\" === target) {\r\n                                return value\r\n                            }\r\n                            return isDefined(value) && \"string\" === this.serializationFormat ? value.toString() : value\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            var customizeTextForBooleanDataType = function(e) {\r\n                if (true === e.value) {\r\n                    return this.trueText || \"true\"\r\n                } else if (false === e.value) {\r\n                    return this.falseText || \"false\"\r\n                } else {\r\n                    return e.valueText || \"\"\r\n                }\r\n            };\r\n            var getCustomizeTextByDataType = function(dataType) {\r\n                if (\"boolean\" === dataType) {\r\n                    return customizeTextForBooleanDataType\r\n                }\r\n            };\r\n            var updateColumnIndexes = function(that) {\r\n                each(that._columns, (function(index, column) {\r\n                    column.index = index\r\n                }));\r\n                each(that._columns, (function(index, column) {\r\n                    if (isObject(column.ownerBand)) {\r\n                        column.ownerBand = column.ownerBand.index\r\n                    }\r\n                }));\r\n                each(that._commandColumns, (function(index, column) {\r\n                    column.index = -(index + 1)\r\n                }))\r\n            };\r\n            var updateColumnGroupIndexes = function(that, currentColumn) {\r\n                normalizeIndexes(that._columns, \"groupIndex\", currentColumn, (function(column) {\r\n                    var grouped = column.grouped;\r\n                    delete column.grouped;\r\n                    return grouped\r\n                }))\r\n            };\r\n            var getColumnIndexByVisibleIndex = function(that, visibleIndex, location) {\r\n                var rowIndex = isObject(visibleIndex) ? visibleIndex.rowIndex : null;\r\n                var columns = \"group\" === location ? that.getGroupColumns() : \"columnChooser\" === location ? that.getChooserColumns() : that.getVisibleColumns(rowIndex);\r\n                var column;\r\n                visibleIndex = isObject(visibleIndex) ? visibleIndex.columnIndex : visibleIndex;\r\n                column = columns[visibleIndex];\r\n                if (column && column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                    column = that._columns.filter(col => column.type === col.type)[0] || column\r\n                }\r\n                return column && isDefined(column.index) ? column.index : -1\r\n            };\r\n\r\n            function checkUserStateColumn(column, userStateColumn) {\r\n                return column && userStateColumn && userStateColumn.name === (column.name || column.dataField) && (userStateColumn.dataField === column.dataField || column.name)\r\n            }\r\n            var applyUserState = function(that) {\r\n                var columnsUserState = that._columnsUserState;\r\n                var ignoreColumnOptionNames = that._ignoreColumnOptionNames || [];\r\n                var columns = that._columns;\r\n                var columnCountById = {};\r\n                var resultColumns = [];\r\n                var allColumnsHaveState = true;\r\n                var userStateColumnIndexes = [];\r\n                var column;\r\n                var userStateColumnIndex;\r\n                var i;\r\n\r\n                function applyFieldsState(column, userStateColumn) {\r\n                    if (!userStateColumn) {\r\n                        return\r\n                    }\r\n                    for (var index = 0; index < USER_STATE_FIELD_NAMES.length; index++) {\r\n                        var fieldName = USER_STATE_FIELD_NAMES[index];\r\n                        if (inArray(fieldName, ignoreColumnOptionNames) >= 0) {\r\n                            continue\r\n                        }\r\n                        if (\"dataType\" === fieldName) {\r\n                            column[fieldName] = column[fieldName] || userStateColumn[fieldName]\r\n                        } else if (inArray(fieldName, USER_STATE_FIELD_NAMES_15_1) >= 0) {\r\n                            if (fieldName in userStateColumn) {\r\n                                column[fieldName] = userStateColumn[fieldName]\r\n                            }\r\n                        } else {\r\n                            if (\"selectedFilterOperation\" === fieldName && userStateColumn[fieldName]) {\r\n                                column.defaultSelectedFilterOperation = column[fieldName] || null\r\n                            }\r\n                            column[fieldName] = userStateColumn[fieldName]\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function findUserStateColumn(columnsUserState, column) {\r\n                    var id = column.name || column.dataField;\r\n                    var count = columnCountById[id] || 0;\r\n                    for (var j = 0; j < columnsUserState.length; j++) {\r\n                        if (checkUserStateColumn(column, columnsUserState[j])) {\r\n                            if (count) {\r\n                                count--\r\n                            } else {\r\n                                columnCountById[id] = columnCountById[id] || 0;\r\n                                columnCountById[id]++;\r\n                                return j\r\n                            }\r\n                        }\r\n                    }\r\n                    return -1\r\n                }\r\n                if (columnsUserState) {\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        userStateColumnIndex = findUserStateColumn(columnsUserState, columns[i]);\r\n                        allColumnsHaveState = allColumnsHaveState && userStateColumnIndex >= 0;\r\n                        userStateColumnIndexes.push(userStateColumnIndex)\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        column = columns[i];\r\n                        userStateColumnIndex = userStateColumnIndexes[i];\r\n                        if (that._hasUserState || allColumnsHaveState) {\r\n                            applyFieldsState(column, columnsUserState[userStateColumnIndex])\r\n                        }\r\n                        if (userStateColumnIndex >= 0 && isDefined(columnsUserState[userStateColumnIndex].initialIndex)) {\r\n                            resultColumns[userStateColumnIndex] = column\r\n                        } else {\r\n                            resultColumns.push(column)\r\n                        }\r\n                    }\r\n                    var hasAddedBands = false;\r\n                    for (i = 0; i < columnsUserState.length; i++) {\r\n                        var columnUserState = columnsUserState[i];\r\n                        if (columnUserState.added && findUserStateColumn(columns, columnUserState) < 0) {\r\n                            column = createColumn(that, columnUserState.added);\r\n                            applyFieldsState(column, columnUserState);\r\n                            resultColumns.push(column);\r\n                            if (columnUserState.added.columns) {\r\n                                hasAddedBands = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (hasAddedBands) {\r\n                        updateColumnIndexes(that);\r\n                        resultColumns = createColumnsFromOptions(that, resultColumns)\r\n                    }\r\n                    assignColumns(that, resultColumns)\r\n                }\r\n            };\r\n            var updateIndexes = function(that, column) {\r\n                updateColumnIndexes(that);\r\n                updateColumnGroupIndexes(that, column);\r\n                ! function(that, currentColumn) {\r\n                    each(that._columns, (function(index, column) {\r\n                        if (isDefined(column.sortIndex) && !isSortOrderValid(column.sortOrder)) {\r\n                            delete column.sortIndex\r\n                        }\r\n                    }));\r\n                    normalizeIndexes(that._columns, \"sortIndex\", currentColumn, (function(column) {\r\n                        return !isDefined(column.groupIndex) && isSortOrderValid(column.sortOrder)\r\n                    }))\r\n                }(that, column);\r\n                resetBandColumnsCache(that);\r\n                ! function(that, currentColumn) {\r\n                    var key;\r\n                    var column;\r\n                    var bandColumns = {};\r\n                    var result = [];\r\n                    var bandColumnsCache = that.getBandColumnsCache();\r\n                    var columns = that._columns.filter(column => !column.command);\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        column = columns[i];\r\n                        var parentBandColumns = getParentBandColumns(i, bandColumnsCache.columnParentByIndex);\r\n                        if (parentBandColumns.length) {\r\n                            var bandColumnIndex = parentBandColumns[parentBandColumns.length - 1].index;\r\n                            bandColumns[bandColumnIndex] = bandColumns[bandColumnIndex] || [];\r\n                            bandColumns[bandColumnIndex].push(column)\r\n                        } else {\r\n                            result.push(column)\r\n                        }\r\n                    }\r\n                    for (key in bandColumns) {\r\n                        normalizeIndexes(bandColumns[key], \"visibleIndex\", currentColumn)\r\n                    }\r\n                    normalizeIndexes(result, \"visibleIndex\", currentColumn)\r\n                }(that, column)\r\n            };\r\n            var resetColumnsCache = function(that) {\r\n                that.resetColumnsCache()\r\n            };\r\n\r\n            function assignColumns(that, columns) {\r\n                that._columns = columns;\r\n                resetColumnsCache(that);\r\n                that.updateColumnDataTypes()\r\n            }\r\n            var updateColumnChanges = function(that, changeType, optionName, columnIndex) {\r\n                var columnChanges = that._columnChanges || {\r\n                    optionNames: {\r\n                        length: 0\r\n                    },\r\n                    changeTypes: {\r\n                        length: 0\r\n                    },\r\n                    columnIndex: columnIndex\r\n                };\r\n                optionName = optionName || \"all\";\r\n                optionName = optionName.split(\".\")[0];\r\n                var changeTypes = columnChanges.changeTypes;\r\n                if (changeType && !changeTypes[changeType]) {\r\n                    changeTypes[changeType] = true;\r\n                    changeTypes.length++\r\n                }\r\n                var optionNames = columnChanges.optionNames;\r\n                if (optionName && !optionNames[optionName]) {\r\n                    optionNames[optionName] = true;\r\n                    optionNames.length++\r\n                }\r\n                if (void 0 === columnIndex || columnIndex !== columnChanges.columnIndex) {\r\n                    delete columnChanges.columnIndex\r\n                }\r\n                that._columnChanges = columnChanges;\r\n                resetColumnsCache(that)\r\n            };\r\n            var fireColumnsChanged = function(that) {\r\n                var onColumnsChanging = that.option(\"onColumnsChanging\");\r\n                var columnChanges = that._columnChanges;\r\n                var reinitOptionNames = [\"dataField\", \"lookup\", \"dataType\", \"columns\"];\r\n                if (that.isInitialized() && !that._updateLockCount && columnChanges) {\r\n                    if (onColumnsChanging) {\r\n                        that._updateLockCount++;\r\n                        onColumnsChanging(extend({\r\n                            component: that.component\r\n                        }, columnChanges));\r\n                        that._updateLockCount--\r\n                    }\r\n                    that._columnChanges = void 0;\r\n                    if (options = columnChanges.optionNames, options && reinitOptionNames.some(name => options[name])) {\r\n                        that.reinit()\r\n                    } else {\r\n                        that.columnsChanged.fire(columnChanges)\r\n                    }\r\n                }\r\n                var options\r\n            };\r\n            var updateSortOrderWhenGrouping = function(that, column, groupIndex, prevGroupIndex) {\r\n                var columnWasGrouped = prevGroupIndex >= 0;\r\n                if (groupIndex >= 0) {\r\n                    if (!columnWasGrouped) {\r\n                        column.lastSortOrder = column.sortOrder\r\n                    }\r\n                } else {\r\n                    var sortMode = that.option(\"sorting.mode\");\r\n                    var sortOrder = column.lastSortOrder;\r\n                    if (\"single\" === sortMode) {\r\n                        var sortedByAnotherColumn = that._columns.some(col => col !== column && isDefined(col.sortIndex));\r\n                        if (sortedByAnotherColumn) {\r\n                            sortOrder = void 0\r\n                        }\r\n                    }\r\n                    column.sortOrder = sortOrder\r\n                }\r\n            };\r\n            var fireOptionChanged = function(that, options) {\r\n                var value = options.value;\r\n                var optionName = options.optionName;\r\n                var prevValue = options.prevValue;\r\n                var fullOptionName = options.fullOptionName;\r\n                var fullOptionPath = \"\".concat(fullOptionName, \".\").concat(optionName);\r\n                if (!IGNORE_COLUMN_OPTION_NAMES[optionName] && that._skipProcessingColumnsChange !== fullOptionPath) {\r\n                    that._skipProcessingColumnsChange = fullOptionPath;\r\n                    that.component._notifyOptionChanged(fullOptionPath, value, prevValue);\r\n                    that._skipProcessingColumnsChange = false\r\n                }\r\n            };\r\n            var columnOptionCore = function(that, column, optionName, value, notFireEvent) {\r\n                var optionGetter = compileGetter(optionName);\r\n                var columnIndex = column.index;\r\n                var columns;\r\n                var changeType;\r\n                var initialColumn;\r\n                if (3 === arguments.length) {\r\n                    return optionGetter(column, {\r\n                        functionsAsIs: true\r\n                    })\r\n                }\r\n                var prevValue = optionGetter(column, {\r\n                    functionsAsIs: true\r\n                });\r\n                if (prevValue !== value) {\r\n                    if (\"groupIndex\" === optionName || \"calculateGroupValue\" === optionName) {\r\n                        changeType = \"grouping\";\r\n                        updateSortOrderWhenGrouping(that, column, value, prevValue)\r\n                    } else if (\"sortIndex\" === optionName || \"sortOrder\" === optionName || \"calculateSortValue\" === optionName) {\r\n                        changeType = \"sorting\"\r\n                    } else {\r\n                        changeType = \"columns\"\r\n                    }\r\n                    var optionSetter = compileSetter(optionName);\r\n                    optionSetter(column, value, {\r\n                        functionsAsIs: true\r\n                    });\r\n                    var fullOptionName = getColumnFullPath(that, column);\r\n                    if (COLUMN_INDEX_OPTIONS[optionName]) {\r\n                        updateIndexes(that, column);\r\n                        value = optionGetter(column)\r\n                    }\r\n                    if (\"name\" === optionName || \"allowEditing\" === optionName) {\r\n                        that._checkColumns()\r\n                    }\r\n                    fullOptionName && fireOptionChanged(that, {\r\n                        fullOptionName: fullOptionName,\r\n                        optionName: optionName,\r\n                        value: value,\r\n                        prevValue: prevValue\r\n                    });\r\n                    if (!isDefined(prevValue) && !isDefined(value) && 0 !== optionName.indexOf(\"buffer\")) {\r\n                        notFireEvent = true\r\n                    }\r\n                    if (!notFireEvent) {\r\n                        if (inArray(optionName, USER_STATE_FIELD_NAMES) < 0 && \"visibleWidth\" !== optionName) {\r\n                            columns = that.option(\"columns\");\r\n                            initialColumn = that.getColumnByPath(fullOptionName, columns);\r\n                            if (isString(initialColumn)) {\r\n                                initialColumn = columns[columnIndex] = {\r\n                                    dataField: initialColumn\r\n                                }\r\n                            }\r\n                            if (initialColumn && checkUserStateColumn(initialColumn, column)) {\r\n                                optionSetter(initialColumn, value, {\r\n                                    functionsAsIs: true\r\n                                })\r\n                            }\r\n                        }\r\n                        updateColumnChanges(that, changeType, optionName, columnIndex)\r\n                    } else {\r\n                        resetColumnsCache(that)\r\n                    }\r\n                }\r\n            };\r\n\r\n            function isSortOrderValid(sortOrder) {\r\n                return \"asc\" === sortOrder || \"desc\" === sortOrder\r\n            }\r\n            var defaultSetCellValue = function(data, value) {\r\n                var path = this.dataField.split(\".\");\r\n                var dotCount = path.length - 1;\r\n                if (this.serializeValue) {\r\n                    value = this.serializeValue(value)\r\n                }\r\n                for (var i = 0; i < dotCount; i++) {\r\n                    var name = path[i];\r\n                    data = data[name] = data[name] || {}\r\n                }\r\n                data[path[dotCount]] = value\r\n            };\r\n            var isCustomCommandColumn = (that, commandColumn) => !!that._columns.filter(column => column.type === commandColumn.type).length;\r\n            var getFixedPosition = function(that, column) {\r\n                var rtlEnabled = that.option(\"rtlEnabled\");\r\n                if (column.command && !isCustomCommandColumn(that, column) || !column.fixedPosition) {\r\n                    return rtlEnabled ? \"right\" : \"left\"\r\n                }\r\n                return column.fixedPosition\r\n            };\r\n            var processExpandColumns = function(columns, expandColumns, type, columnIndex) {\r\n                var customColumnIndex;\r\n                var rowCount = this.getRowCount();\r\n                var rowspan = columns[columnIndex] && columns[columnIndex].rowspan;\r\n                var expandColumnsByType = expandColumns.filter(column => column.type === type);\r\n                columns.forEach((column, index) => {\r\n                    if (column.type === type) {\r\n                        customColumnIndex = index;\r\n                        rowspan = columns[index + 1] ? columns[index + 1].rowspan : rowCount\r\n                    }\r\n                });\r\n                if (rowspan > 1) {\r\n                    expandColumnsByType = map(expandColumnsByType, (function(expandColumn) {\r\n                        return extend({}, expandColumn, {\r\n                            rowspan: rowspan\r\n                        })\r\n                    }))\r\n                }\r\n                expandColumnsByType.unshift.apply(expandColumnsByType, isDefined(customColumnIndex) ? [customColumnIndex, 1] : [columnIndex, 0]);\r\n                columns.splice.apply(columns, expandColumnsByType);\r\n                return rowspan || 1\r\n            };\r\n            var numberToString = function(number, digitsCount) {\r\n                var str = number ? number.toString() : \"0\";\r\n                while (str.length < digitsCount) {\r\n                    str = \"0\" + str\r\n                }\r\n                return str\r\n            };\r\n            var mergeColumns = (that, columns, commandColumns, needToExtend) => {\r\n                var column;\r\n                var commandColumnIndex;\r\n                var result = columns.slice().map(column => extend({}, column));\r\n                var isColumnFixing = that._isColumnFixing();\r\n                var defaultCommandColumns = commandColumns.slice().map(column => extend({\r\n                    fixed: isColumnFixing\r\n                }, column));\r\n                var getCommandColumnIndex = column => commandColumns.reduce((result, commandColumn, index) => {\r\n                    var columnType = needToExtend && column.type === GROUP_COMMAND_COLUMN_NAME ? \"expand\" : column.type;\r\n                    return commandColumn.type === columnType || commandColumn.command === column.command ? index : result\r\n                }, -1);\r\n                var callbackFilter = commandColumn => commandColumn.command !== commandColumns[commandColumnIndex].command;\r\n                for (var i = 0; i < columns.length; i++) {\r\n                    column = columns[i];\r\n                    commandColumnIndex = column && (column.type || column.command) ? getCommandColumnIndex(column) : -1;\r\n                    if (commandColumnIndex >= 0) {\r\n                        if (needToExtend) {\r\n                            result[i] = extend({\r\n                                fixed: isColumnFixing\r\n                            }, commandColumns[commandColumnIndex], column);\r\n                            if (column.type !== GROUP_COMMAND_COLUMN_NAME) {\r\n                                defaultCommandColumns = defaultCommandColumns.filter(callbackFilter)\r\n                            }\r\n                        } else {\r\n                            var columnOptions = {\r\n                                visibleIndex: column.visibleIndex,\r\n                                index: column.index,\r\n                                headerId: column.headerId,\r\n                                allowFixing: 0 === column.groupIndex,\r\n                                allowReordering: 0 === column.groupIndex,\r\n                                groupIndex: column.groupIndex\r\n                            };\r\n                            result[i] = extend({}, column, commandColumns[commandColumnIndex], column.type === GROUP_COMMAND_COLUMN_NAME && columnOptions)\r\n                        }\r\n                    }\r\n                }\r\n                if (columns.length && needToExtend && defaultCommandColumns.length) {\r\n                    result = result.concat(defaultCommandColumns)\r\n                }\r\n                return result\r\n            };\r\n            var isColumnFixed = (that, column) => isDefined(column.fixed) || !column.type ? column.fixed : that._isColumnFixing();\r\n            var resetBandColumnsCache = that => {\r\n                that._bandColumnsCache = void 0\r\n            };\r\n            var findColumn = (columns, identifier) => {\r\n                var identifierOptionName = isString(identifier) && identifier.substr(0, identifier.indexOf(\":\"));\r\n                var column;\r\n                if (void 0 === identifier) {\r\n                    return\r\n                }\r\n                if (identifierOptionName) {\r\n                    identifier = identifier.substr(identifierOptionName.length + 1)\r\n                }\r\n                if (identifierOptionName) {\r\n                    column = columns.filter(column => \"\" + column[identifierOptionName] === identifier)[0]\r\n                } else {\r\n                    [\"index\", \"name\", \"dataField\", \"caption\"].some(optionName => {\r\n                        column = columns.filter(column => column[optionName] === identifier)[0];\r\n                        return !!column\r\n                    })\r\n                }\r\n                return column\r\n            };\r\n            return {\r\n                _getExpandColumnOptions: function() {\r\n                    return {\r\n                        type: \"expand\",\r\n                        command: \"expand\",\r\n                        width: \"auto\",\r\n                        cssClass: COMMAND_EXPAND_CLASS,\r\n                        allowEditing: false,\r\n                        allowGrouping: false,\r\n                        allowSorting: false,\r\n                        allowResizing: false,\r\n                        allowReordering: false,\r\n                        allowHiding: false\r\n                    }\r\n                },\r\n                _getFirstItems: function(dataSource) {\r\n                    var groupsCount;\r\n                    var items = [];\r\n                    if (dataSource && dataSource.items().length > 0) {\r\n                        groupsCount = gridCoreUtils.normalizeSortingInfo(dataSource.group()).length;\r\n                        items = function getFirstItemsCore(items, groupsCount) {\r\n                            if (!items || !groupsCount) {\r\n                                return items\r\n                            }\r\n                            for (var i = 0; i < items.length; i++) {\r\n                                var childItems = getFirstItemsCore(items[i].items || items[i].collapsedItems, groupsCount - 1);\r\n                                if (childItems && childItems.length) {\r\n                                    return childItems\r\n                                }\r\n                            }\r\n                        }(dataSource.items(), groupsCount) || []\r\n                    }\r\n                    return items\r\n                },\r\n                _endUpdateCore: function() {\r\n                    !this._skipProcessingColumnsChange && fireColumnsChanged(this)\r\n                },\r\n                init: function() {\r\n                    var columns = this.option(\"columns\");\r\n                    this._commandColumns = this._commandColumns || [];\r\n                    this._columns = this._columns || [];\r\n                    this._isColumnsFromOptions = !!columns;\r\n                    if (this._isColumnsFromOptions) {\r\n                        assignColumns(this, columns ? createColumnsFromOptions(this, columns) : []);\r\n                        applyUserState(this)\r\n                    } else {\r\n                        assignColumns(this, this._columnsUserState ? createColumnsFromOptions(this, this._columnsUserState) : this._columns)\r\n                    }! function(that) {\r\n                        var options = that._getExpandColumnOptions();\r\n                        that.addCommandColumn(options)\r\n                    }(this);\r\n                    if (this._dataSourceApplied) {\r\n                        this.applyDataSource(this._dataSource, true)\r\n                    } else {\r\n                        updateIndexes(this)\r\n                    }\r\n                    this._checkColumns()\r\n                },\r\n                callbackNames: function() {\r\n                    return [\"columnsChanged\"]\r\n                },\r\n                getColumnByPath: function(path, columns) {\r\n                    var column;\r\n                    var columnIndexes = [];\r\n                    path.replace(regExp, (function(_, columnIndex) {\r\n                        columnIndexes.push(parseInt(columnIndex));\r\n                        return \"\"\r\n                    }));\r\n                    if (columnIndexes.length) {\r\n                        if (columns) {\r\n                            column = columnIndexes.reduce((function(column, index) {\r\n                                return column && column.columns && column.columns[index]\r\n                            }), {\r\n                                columns: columns\r\n                            })\r\n                        } else {\r\n                            column = function(that, columnIndexes) {\r\n                                var result;\r\n                                var columns;\r\n                                var bandColumnsCache = that.getBandColumnsCache();\r\n                                var callbackFilter = function(column) {\r\n                                    var ownerBand = result ? result.index : void 0;\r\n                                    return column.ownerBand === ownerBand\r\n                                };\r\n                                if (bandColumnsCache.isPlain) {\r\n                                    result = that._columns[columnIndexes[0]]\r\n                                } else {\r\n                                    columns = that._columns.filter(callbackFilter);\r\n                                    for (var i = 0; i < columnIndexes.length; i++) {\r\n                                        result = columns[columnIndexes[i]];\r\n                                        if (result) {\r\n                                            columns = that._columns.filter(callbackFilter)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return result\r\n                            }(this, columnIndexes)\r\n                        }\r\n                    }\r\n                    return column\r\n                },\r\n                optionChanged: function(args) {\r\n                    var needUpdateRequireResize;\r\n                    switch (args.name) {\r\n                        case \"adaptColumnWidthByRatio\":\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"dataSource\":\r\n                            if (args.value !== args.previousValue && !this.option(\"columns\") && (!Array.isArray(args.value) || !Array.isArray(args.previousValue))) {\r\n                                this._columns = []\r\n                            }\r\n                            break;\r\n                        case \"columns\":\r\n                            needUpdateRequireResize = this._skipProcessingColumnsChange;\r\n                            args.handled = true;\r\n                            if (!this._skipProcessingColumnsChange) {\r\n                                if (args.name === args.fullName) {\r\n                                    this._columnsUserState = null;\r\n                                    this._ignoreColumnOptionNames = null;\r\n                                    this.init()\r\n                                } else {\r\n                                    this._columnOptionChanged(args);\r\n                                    needUpdateRequireResize = true\r\n                                }\r\n                            }\r\n                            if (needUpdateRequireResize) {\r\n                                this._updateRequireResize(args)\r\n                            }\r\n                            break;\r\n                        case \"commonColumnSettings\":\r\n                        case \"columnAutoWidth\":\r\n                        case \"allowColumnResizing\":\r\n                        case \"allowColumnReordering\":\r\n                        case \"columnFixing\":\r\n                        case \"grouping\":\r\n                        case \"groupPanel\":\r\n                        case \"regenerateColumnsByVisibleItems\":\r\n                        case \"customizeColumns\":\r\n                        case \"columnHidingEnabled\":\r\n                        case \"dateSerializationFormat\":\r\n                        case \"columnResizingMode\":\r\n                        case \"columnMinWidth\":\r\n                        case \"columnWidth\":\r\n                            args.handled = true;\r\n                            var ignoreColumnOptionNames = \"columnWidth\" === args.fullName && [\"width\"];\r\n                            this.reinit(ignoreColumnOptionNames);\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            this.reinit();\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                _columnOptionChanged: function(args) {\r\n                    var columnOptionValue = {};\r\n                    var column = this.getColumnByPath(args.fullName);\r\n                    var columnOptionName = args.fullName.replace(regExp, \"\");\r\n                    if (column) {\r\n                        if (columnOptionName) {\r\n                            columnOptionValue[columnOptionName] = args.value\r\n                        } else {\r\n                            columnOptionValue = args.value\r\n                        }\r\n                        this._skipProcessingColumnsChange = args.fullName;\r\n                        this.columnOption(column.index, columnOptionValue);\r\n                        this._skipProcessingColumnsChange = false\r\n                    }\r\n                },\r\n                _updateRequireResize: function(args) {\r\n                    var component = this.component;\r\n                    if (\"width\" === args.fullName.replace(regExp, \"\") && component._updateLockCount) {\r\n                        component._requireResize = true\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"addColumn\", \"deleteColumn\", \"columnOption\", \"columnCount\", \"clearSorting\", \"clearGrouping\", \"getVisibleColumns\", \"getVisibleColumnIndex\"]\r\n                },\r\n                applyDataSource: function(dataSource, forceApplying) {\r\n                    var isDataSourceLoaded = dataSource && dataSource.isLoaded();\r\n                    this._dataSource = dataSource;\r\n                    if (!this._dataSourceApplied || 0 === this._dataSourceColumnsCount || forceApplying || this.option(\"regenerateColumnsByVisibleItems\")) {\r\n                        if (isDataSourceLoaded) {\r\n                            if (!this._isColumnsFromOptions) {\r\n                                var columnsFromDataSource = function(that, dataSource) {\r\n                                    var firstItems = that._getFirstItems(dataSource);\r\n                                    var fieldName;\r\n                                    var processedFields = {};\r\n                                    var result = [];\r\n                                    for (var i = 0; i < firstItems.length; i++) {\r\n                                        if (firstItems[i]) {\r\n                                            for (fieldName in firstItems[i]) {\r\n                                                if (!isFunction(firstItems[i][fieldName]) || variableWrapper.isWrapped(firstItems[i][fieldName])) {\r\n                                                    processedFields[fieldName] = true\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    for (fieldName in processedFields) {\r\n                                        if (0 !== fieldName.indexOf(\"__\")) {\r\n                                            var column = createColumn(that, fieldName);\r\n                                            result.push(column)\r\n                                        }\r\n                                    }\r\n                                    return result\r\n                                }(this, dataSource);\r\n                                if (columnsFromDataSource.length) {\r\n                                    assignColumns(this, columnsFromDataSource);\r\n                                    this._dataSourceColumnsCount = this._columns.length;\r\n                                    applyUserState(this)\r\n                                }\r\n                            }\r\n                            return this.updateColumns(dataSource, forceApplying)\r\n                        } else {\r\n                            this._dataSourceApplied = false\r\n                        }\r\n                    } else if (isDataSourceLoaded && !this.isAllDataTypesDefined(true) && this.updateColumnDataTypes(dataSource)) {\r\n                        updateColumnChanges(this, \"columns\");\r\n                        fireColumnsChanged(this);\r\n                        return (new Deferred).reject().promise()\r\n                    }\r\n                },\r\n                reset: function() {\r\n                    this._dataSource = null;\r\n                    this._dataSourceApplied = false;\r\n                    this._dataSourceColumnsCount = void 0;\r\n                    this.reinit()\r\n                },\r\n                resetColumnsCache: function() {\r\n                    this._visibleColumns = void 0;\r\n                    this._fixedColumns = void 0;\r\n                    this._rowCount = void 0;\r\n                    resetBandColumnsCache(this)\r\n                },\r\n                reinit: function(ignoreColumnOptionNames) {\r\n                    this._columnsUserState = this.getUserState();\r\n                    this._ignoreColumnOptionNames = ignoreColumnOptionNames || null;\r\n                    this.init();\r\n                    if (ignoreColumnOptionNames) {\r\n                        this._ignoreColumnOptionNames = null\r\n                    }\r\n                },\r\n                isInitialized: function() {\r\n                    return !!this._columns.length || !!this.option(\"columns\")\r\n                },\r\n                isDataSourceApplied: function() {\r\n                    return this._dataSourceApplied\r\n                },\r\n                getCommonSettings: function(column) {\r\n                    var commonColumnSettings = (!column || !column.type) && this.option(\"commonColumnSettings\") || {};\r\n                    var groupingOptions = this.option(\"grouping\") || {};\r\n                    var groupPanelOptions = this.option(\"groupPanel\") || {};\r\n                    return extend({\r\n                        allowFixing: this.option(\"columnFixing.enabled\"),\r\n                        allowResizing: this.option(\"allowColumnResizing\") || void 0,\r\n                        allowReordering: this.option(\"allowColumnReordering\"),\r\n                        minWidth: this.option(\"columnMinWidth\"),\r\n                        width: this.option(\"columnWidth\"),\r\n                        autoExpandGroup: groupingOptions.autoExpandAll,\r\n                        allowCollapsing: groupingOptions.allowCollapsing,\r\n                        allowGrouping: groupPanelOptions.allowColumnDragging && groupPanelOptions.visible || groupingOptions.contextMenuEnabled\r\n                    }, commonColumnSettings)\r\n                },\r\n                isColumnOptionUsed: function(optionName) {\r\n                    for (var i = 0; i < this._columns.length; i++) {\r\n                        if (this._columns[i][optionName]) {\r\n                            return true\r\n                        }\r\n                    }\r\n                },\r\n                isAllDataTypesDefined: function(checkSerializers) {\r\n                    var columns = this._columns;\r\n                    if (!columns.length) {\r\n                        return false\r\n                    }\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        if (!columns[i].dataField && columns[i].calculateCellValue === columns[i].defaultCalculateCellValue) {\r\n                            continue\r\n                        }\r\n                        if (!columns[i].dataType || checkSerializers && columns[i].deserializeValue && void 0 === columns[i].serializationFormat) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                getColumns: function() {\r\n                    return this._columns\r\n                },\r\n                isBandColumnsUsed: function() {\r\n                    return this.getColumns().some((function(column) {\r\n                        return column.isBand\r\n                    }))\r\n                },\r\n                getGroupColumns: function() {\r\n                    var result = [];\r\n                    each(this._columns, (function() {\r\n                        if (isDefined(this.groupIndex)) {\r\n                            result[this.groupIndex] = this\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                getVisibleColumns: function(rowIndex) {\r\n                    this._visibleColumns = this._visibleColumns || this._getVisibleColumnsCore();\r\n                    rowIndex = isDefined(rowIndex) ? rowIndex : this._visibleColumns.length - 1;\r\n                    return this._visibleColumns[rowIndex] || []\r\n                },\r\n                getFixedColumns: function(rowIndex) {\r\n                    this._fixedColumns = this._fixedColumns || this._getFixedColumnsCore();\r\n                    rowIndex = isDefined(rowIndex) ? rowIndex : this._fixedColumns.length - 1;\r\n                    return this._fixedColumns[rowIndex] || []\r\n                },\r\n                getFilteringColumns: function() {\r\n                    return this.getColumns().filter(item => (item.dataField || item.name) && (item.allowFiltering || item.allowHeaderFiltering)).map(item => {\r\n                        var field = extend(true, {}, item);\r\n                        if (!isDefined(field.dataField)) {\r\n                            field.dataField = field.name\r\n                        }\r\n                        field.filterOperations = item.filterOperations !== item.defaultFilterOperations ? field.filterOperations : null;\r\n                        return field\r\n                    })\r\n                },\r\n                getColumnIndexOffset: function() {\r\n                    return 0\r\n                },\r\n                _getFixedColumnsCore: function() {\r\n                    var result = [];\r\n                    var rowCount = this.getRowCount();\r\n                    var isColumnFixing = this._isColumnFixing();\r\n                    var transparentColumn = {\r\n                        command: \"transparent\"\r\n                    };\r\n                    var transparentColspan = 0;\r\n                    var notFixedColumnCount;\r\n                    var transparentColumnIndex;\r\n                    var lastFixedPosition;\r\n                    if (isColumnFixing) {\r\n                        for (var i = 0; i <= rowCount; i++) {\r\n                            notFixedColumnCount = 0;\r\n                            lastFixedPosition = null;\r\n                            transparentColumnIndex = null;\r\n                            var visibleColumns = this.getVisibleColumns(i, true);\r\n                            for (var j = 0; j < visibleColumns.length; j++) {\r\n                                var prevColumn = visibleColumns[j - 1];\r\n                                var column = visibleColumns[j];\r\n                                if (!column.fixed) {\r\n                                    if (0 === i) {\r\n                                        if (column.isBand && column.colspan) {\r\n                                            transparentColspan += column.colspan\r\n                                        } else {\r\n                                            transparentColspan++\r\n                                        }\r\n                                    }\r\n                                    notFixedColumnCount++;\r\n                                    if (!isDefined(transparentColumnIndex)) {\r\n                                        transparentColumnIndex = j\r\n                                    }\r\n                                } else if (prevColumn && prevColumn.fixed && getFixedPosition(this, prevColumn) !== getFixedPosition(this, column)) {\r\n                                    if (!isDefined(transparentColumnIndex)) {\r\n                                        transparentColumnIndex = j\r\n                                    }\r\n                                } else {\r\n                                    lastFixedPosition = column.fixedPosition\r\n                                }\r\n                            }\r\n                            if (0 === i && (0 === notFixedColumnCount || notFixedColumnCount >= visibleColumns.length)) {\r\n                                return []\r\n                            }\r\n                            if (!isDefined(transparentColumnIndex)) {\r\n                                transparentColumnIndex = \"right\" === lastFixedPosition ? 0 : visibleColumns.length\r\n                            }\r\n                            result[i] = visibleColumns.slice(0);\r\n                            if (!transparentColumn.colspan) {\r\n                                transparentColumn.colspan = transparentColspan\r\n                            }\r\n                            result[i].splice(transparentColumnIndex, notFixedColumnCount, transparentColumn)\r\n                        }\r\n                    }\r\n                    return result.map(columns => columns.map(column => {\r\n                        var newColumn = _extends({}, column);\r\n                        if (newColumn.headerId) {\r\n                            newColumn.headerId += \"-fixed\"\r\n                        }\r\n                        return newColumn\r\n                    }))\r\n                },\r\n                _isColumnFixing: function() {\r\n                    var isColumnFixing = this.option(\"columnFixing.enabled\");\r\n                    !isColumnFixing && each(this._columns, (function(_, column) {\r\n                        if (column.fixed) {\r\n                            isColumnFixing = true;\r\n                            return false\r\n                        }\r\n                    }));\r\n                    return isColumnFixing\r\n                },\r\n                _getExpandColumnsCore: function() {\r\n                    return this.getGroupColumns()\r\n                },\r\n                getExpandColumns: function() {\r\n                    var expandColumns = this._getExpandColumnsCore();\r\n                    var expandColumn;\r\n                    var firstGroupColumn = expandColumns.filter(column => 0 === column.groupIndex)[0];\r\n                    var isFixedFirstGroupColumn = firstGroupColumn && firstGroupColumn.fixed;\r\n                    var isColumnFixing = this._isColumnFixing();\r\n                    if (expandColumns.length) {\r\n                        expandColumn = this.columnOption(\"command:expand\")\r\n                    }\r\n                    expandColumns = map(expandColumns, column => extend({}, column, {\r\n                        visibleWidth: null,\r\n                        minWidth: null,\r\n                        cellTemplate: !isDefined(column.groupIndex) ? column.cellTemplate : null,\r\n                        headerCellTemplate: null,\r\n                        fixed: !isDefined(column.groupIndex) || !isFixedFirstGroupColumn ? isColumnFixing : true\r\n                    }, expandColumn, {\r\n                        index: column.index,\r\n                        type: column.type || GROUP_COMMAND_COLUMN_NAME\r\n                    }));\r\n                    return expandColumns\r\n                },\r\n                getBandColumnsCache: function() {\r\n                    if (!this._bandColumnsCache) {\r\n                        var columns = this._columns;\r\n                        var columnChildrenByIndex = {};\r\n                        var columnParentByIndex = {};\r\n                        var isPlain = true;\r\n                        columns.forEach((function(column) {\r\n                            var ownerBand = column.ownerBand;\r\n                            var parentIndex = isObject(ownerBand) ? ownerBand.index : ownerBand;\r\n                            var parent = columns[parentIndex];\r\n                            if (column.hasColumns) {\r\n                                isPlain = false\r\n                            }\r\n                            if (column.colspan) {\r\n                                column.colspan = void 0\r\n                            }\r\n                            if (column.rowspan) {\r\n                                column.rowspan = void 0\r\n                            }\r\n                            if (parent) {\r\n                                columnParentByIndex[column.index] = parent\r\n                            } else {\r\n                                parentIndex = -1\r\n                            }\r\n                            columnChildrenByIndex[parentIndex] = columnChildrenByIndex[parentIndex] || [];\r\n                            columnChildrenByIndex[parentIndex].push(column)\r\n                        }));\r\n                        this._bandColumnsCache = {\r\n                            isPlain: isPlain,\r\n                            columnChildrenByIndex: columnChildrenByIndex,\r\n                            columnParentByIndex: columnParentByIndex\r\n                        }\r\n                    }\r\n                    return this._bandColumnsCache\r\n                },\r\n                _isColumnVisible: function(column) {\r\n                    return column.visible && this.isParentColumnVisible(column.index)\r\n                },\r\n                _getVisibleColumnsCore: function() {\r\n                    var that = this;\r\n                    var i;\r\n                    var result = [];\r\n                    var rowspanGroupColumns = 0;\r\n                    var rowspanExpandColumns = 0;\r\n                    var rowCount = that.getRowCount();\r\n                    var positiveIndexedColumns = [];\r\n                    var negativeIndexedColumns = [];\r\n                    var notGroupedColumnsCount = 0;\r\n                    var isFixedToEnd;\r\n                    var rtlEnabled = that.option(\"rtlEnabled\");\r\n                    var bandColumnsCache = that.getBandColumnsCache();\r\n                    var expandColumns = mergeColumns(that, that.getExpandColumns(), that._columns);\r\n                    var columns = mergeColumns(that, that._columns, that._commandColumns, true);\r\n                    var columnDigitsCount = function(number) {\r\n                        var i;\r\n                        for (i = 0; number > 1; i++) {\r\n                            number /= 10\r\n                        }\r\n                        return i\r\n                    }(columns.length);\r\n                    ! function(that, columns, bandColumnsCache) {\r\n                        var rowspan;\r\n                        for (var i = 0; i < columns.length; i++) {\r\n                            var column = columns[i];\r\n                            if (column.visible || column.command) {\r\n                                if (column.isBand) {\r\n                                    column.colspan = column.colspan || calculateColspan(that, column.index)\r\n                                }\r\n                                if (!column.isBand || !column.colspan) {\r\n                                    rowspan = that.getRowCount();\r\n                                    if (!column.command && (!isDefined(column.groupIndex) || column.showWhenGrouped)) {\r\n                                        rowspan -= getParentBandColumns(column.index, bandColumnsCache.columnParentByIndex).length\r\n                                    }\r\n                                    if (rowspan > 1) {\r\n                                        column.rowspan = rowspan\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }(that, columns, bandColumnsCache);\r\n                    for (i = 0; i < rowCount; i++) {\r\n                        result[i] = [];\r\n                        negativeIndexedColumns[i] = [{}];\r\n                        positiveIndexedColumns[i] = [{}, {}, {}]\r\n                    }\r\n                    each(columns, (function() {\r\n                        var visibleIndex = this.visibleIndex;\r\n                        var indexedColumns;\r\n                        var parentBandColumns = getParentBandColumns(this.index, bandColumnsCache.columnParentByIndex);\r\n                        var visible = that._isColumnVisible(this);\r\n                        if (visible && (!isDefined(this.groupIndex) || this.showWhenGrouped)) {\r\n                            var rowIndex = parentBandColumns.length;\r\n                            if (visibleIndex < 0) {\r\n                                visibleIndex = -visibleIndex;\r\n                                indexedColumns = negativeIndexedColumns[rowIndex]\r\n                            } else {\r\n                                this.fixed = parentBandColumns.length ? parentBandColumns[0].fixed : this.fixed;\r\n                                this.fixedPosition = parentBandColumns.length ? parentBandColumns[0].fixedPosition : this.fixedPosition;\r\n                                if (this.fixed) {\r\n                                    isFixedToEnd = \"right\" === this.fixedPosition;\r\n                                    if (rtlEnabled && (!this.command || isCustomCommandColumn(that, this))) {\r\n                                        isFixedToEnd = !isFixedToEnd\r\n                                    }\r\n                                    if (isFixedToEnd) {\r\n                                        indexedColumns = positiveIndexedColumns[rowIndex][2]\r\n                                    } else {\r\n                                        indexedColumns = positiveIndexedColumns[rowIndex][0]\r\n                                    }\r\n                                } else {\r\n                                    indexedColumns = positiveIndexedColumns[rowIndex][1]\r\n                                }\r\n                            }\r\n                            if (parentBandColumns.length) {\r\n                                visibleIndex = numberToString(visibleIndex, columnDigitsCount);\r\n                                for (i = parentBandColumns.length - 1; i >= 0; i--) {\r\n                                    visibleIndex = numberToString(parentBandColumns[i].visibleIndex, columnDigitsCount) + visibleIndex\r\n                                }\r\n                            }\r\n                            indexedColumns[visibleIndex] = indexedColumns[visibleIndex] || [];\r\n                            indexedColumns[visibleIndex].push(this);\r\n                            notGroupedColumnsCount++\r\n                        }\r\n                    }));\r\n                    each(result, (function(rowIndex) {\r\n                        orderEach(negativeIndexedColumns[rowIndex], (function(_, columns) {\r\n                            result[rowIndex].unshift.apply(result[rowIndex], columns)\r\n                        }));\r\n                        var firstPositiveIndexColumn = result[rowIndex].length;\r\n                        each(positiveIndexedColumns[rowIndex], (function(index, columnsByFixing) {\r\n                            orderEach(columnsByFixing, (function(_, columnsByVisibleIndex) {\r\n                                result[rowIndex].push.apply(result[rowIndex], columnsByVisibleIndex)\r\n                            }))\r\n                        }));\r\n                        if (rowspanExpandColumns < rowIndex + 1) {\r\n                            rowspanExpandColumns += processExpandColumns.call(that, result[rowIndex], expandColumns, \"detailExpand\", firstPositiveIndexColumn)\r\n                        }\r\n                        if (rowspanGroupColumns < rowIndex + 1) {\r\n                            rowspanGroupColumns += processExpandColumns.call(that, result[rowIndex], expandColumns, GROUP_COMMAND_COLUMN_NAME, firstPositiveIndexColumn)\r\n                        }\r\n                    }));\r\n                    result.push(function getDataColumns(columns, rowIndex, bandColumnID) {\r\n                        var result = [];\r\n                        rowIndex = rowIndex || 0;\r\n                        columns[rowIndex] && each(columns[rowIndex], (function(_, column) {\r\n                            if (column.ownerBand === bandColumnID || column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                                if (!column.isBand || !column.colspan) {\r\n                                    if (!column.command || rowIndex < 1) {\r\n                                        result.push(column)\r\n                                    }\r\n                                } else {\r\n                                    result.push.apply(result, getDataColumns(columns, rowIndex + 1, column.index))\r\n                                }\r\n                            }\r\n                        }));\r\n                        return result\r\n                    }(result));\r\n                    if (!notGroupedColumnsCount && that._columns.length) {\r\n                        result[rowCount].push({\r\n                            command: \"empty\"\r\n                        })\r\n                    }\r\n                    return result\r\n                },\r\n                getInvisibleColumns: function(columns, bandColumnIndex) {\r\n                    var that = this;\r\n                    var result = [];\r\n                    var hiddenColumnsByBand;\r\n                    columns = columns || that._columns;\r\n                    each(columns, (function(_, column) {\r\n                        if (column.ownerBand !== bandColumnIndex) {\r\n                            return\r\n                        }\r\n                        if (column.isBand) {\r\n                            if (!column.visible) {\r\n                                hiddenColumnsByBand = that.getChildrenByBandColumn(column.index)\r\n                            } else {\r\n                                hiddenColumnsByBand = that.getInvisibleColumns(that.getChildrenByBandColumn(column.index), column.index)\r\n                            }\r\n                            if (hiddenColumnsByBand.length) {\r\n                                result.push(column);\r\n                                result = result.concat(hiddenColumnsByBand)\r\n                            }\r\n                            return\r\n                        }\r\n                        if (!column.visible) {\r\n                            result.push(column)\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                getChooserColumns: function(getAllColumns) {\r\n                    var columns = getAllColumns ? this.getColumns() : this.getInvisibleColumns();\r\n                    var columnChooserColumns = columns.filter(column => column.showInColumnChooser);\r\n                    var sortOrder = this.option(\"columnChooser.sortOrder\");\r\n                    return ((columns, sortOrder) => {\r\n                        if (\"asc\" !== sortOrder && \"desc\" !== sortOrder) {\r\n                            return columns\r\n                        }\r\n                        var sign = \"asc\" === sortOrder ? 1 : -1;\r\n                        columns.sort((function(column1, column2) {\r\n                            var caption1 = column1.caption || \"\";\r\n                            var caption2 = column2.caption || \"\";\r\n                            return sign * caption1.localeCompare(caption2)\r\n                        }));\r\n                        return columns\r\n                    })(columnChooserColumns, sortOrder)\r\n                },\r\n                allowMoveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var columnIndex = getColumnIndexByVisibleIndex(this, fromVisibleIndex, sourceLocation);\r\n                    var sourceColumn = this._columns[columnIndex];\r\n                    if (sourceColumn && (sourceColumn.allowReordering || sourceColumn.allowGrouping || sourceColumn.allowHiding)) {\r\n                        if (sourceLocation === targetLocation) {\r\n                            if (\"columnChooser\" === sourceLocation) {\r\n                                return false\r\n                            }\r\n                            fromVisibleIndex = isObject(fromVisibleIndex) ? fromVisibleIndex.columnIndex : fromVisibleIndex;\r\n                            toVisibleIndex = isObject(toVisibleIndex) ? toVisibleIndex.columnIndex : toVisibleIndex;\r\n                            return fromVisibleIndex !== toVisibleIndex && fromVisibleIndex + 1 !== toVisibleIndex\r\n                        } else if (\"group\" === sourceLocation && \"columnChooser\" !== targetLocation || \"group\" === targetLocation) {\r\n                            return sourceColumn && sourceColumn.allowGrouping\r\n                        } else if (\"columnChooser\" === sourceLocation || \"columnChooser\" === targetLocation) {\r\n                            return sourceColumn && sourceColumn.allowHiding\r\n                        }\r\n                        return true\r\n                    }\r\n                    return false\r\n                },\r\n                moveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var options = {};\r\n                    var prevGroupIndex;\r\n                    var fromIndex = getColumnIndexByVisibleIndex(this, fromVisibleIndex, sourceLocation);\r\n                    var toIndex = getColumnIndexByVisibleIndex(this, toVisibleIndex, targetLocation);\r\n                    var targetGroupIndex;\r\n                    if (fromIndex >= 0) {\r\n                        var column = this._columns[fromIndex];\r\n                        toVisibleIndex = isObject(toVisibleIndex) ? toVisibleIndex.columnIndex : toVisibleIndex;\r\n                        targetGroupIndex = toIndex >= 0 ? this._columns[toIndex].groupIndex : -1;\r\n                        if (isDefined(column.groupIndex) && \"group\" === sourceLocation) {\r\n                            if (targetGroupIndex > column.groupIndex) {\r\n                                targetGroupIndex--\r\n                            }\r\n                            if (\"group\" !== targetLocation) {\r\n                                options.groupIndex = void 0\r\n                            } else {\r\n                                prevGroupIndex = column.groupIndex;\r\n                                delete column.groupIndex;\r\n                                updateColumnGroupIndexes(this)\r\n                            }\r\n                        }\r\n                        if (\"group\" === targetLocation) {\r\n                            options.groupIndex = function(that, column, groupIndex) {\r\n                                var groupColumns = that.getGroupColumns();\r\n                                var i;\r\n                                if (groupIndex >= 0) {\r\n                                    for (i = 0; i < groupColumns.length; i++) {\r\n                                        if (groupColumns[i].groupIndex >= groupIndex) {\r\n                                            groupColumns[i].groupIndex++\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    groupIndex = 0;\r\n                                    for (i = 0; i < groupColumns.length; i++) {\r\n                                        groupIndex = Math.max(groupIndex, groupColumns[i].groupIndex + 1)\r\n                                    }\r\n                                }\r\n                                return groupIndex\r\n                            }(this, 0, targetGroupIndex);\r\n                            column.groupIndex = prevGroupIndex\r\n                        } else if (toVisibleIndex >= 0) {\r\n                            var targetColumn = this._columns[toIndex];\r\n                            if (!targetColumn || column.ownerBand !== targetColumn.ownerBand) {\r\n                                options.visibleIndex = MAX_SAFE_INTEGER\r\n                            } else if (isColumnFixed(this, column) ^ isColumnFixed(this, targetColumn)) {\r\n                                options.visibleIndex = MAX_SAFE_INTEGER\r\n                            } else {\r\n                                options.visibleIndex = targetColumn.visibleIndex\r\n                            }\r\n                        }\r\n                        var isVisible = \"columnChooser\" !== targetLocation;\r\n                        if (column.visible !== isVisible) {\r\n                            options.visible = isVisible\r\n                        }\r\n                        this.columnOption(column.index, options)\r\n                    }\r\n                },\r\n                changeSortOrder: function(columnIndex, sortOrder) {\r\n                    var options = {};\r\n                    var sortingOptions = this.option(\"sorting\");\r\n                    var sortingMode = sortingOptions && sortingOptions.mode;\r\n                    var needResetSorting = \"single\" === sortingMode || !sortOrder;\r\n                    var allowSorting = \"single\" === sortingMode || \"multiple\" === sortingMode;\r\n                    var column = this._columns[columnIndex];\r\n                    if (allowSorting && column && column.allowSorting) {\r\n                        if (needResetSorting && !isDefined(column.groupIndex)) {\r\n                            each(this._columns, (function(index) {\r\n                                if (index !== columnIndex && this.sortOrder) {\r\n                                    if (!isDefined(this.groupIndex)) {\r\n                                        delete this.sortOrder\r\n                                    }\r\n                                    delete this.sortIndex\r\n                                }\r\n                            }))\r\n                        }\r\n                        if (isSortOrderValid(sortOrder)) {\r\n                            if (column.sortOrder !== sortOrder) {\r\n                                options.sortOrder = sortOrder\r\n                            }\r\n                        } else if (\"none\" === sortOrder) {\r\n                            if (column.sortOrder) {\r\n                                options.sortIndex = void 0;\r\n                                options.sortOrder = void 0\r\n                            }\r\n                        } else {\r\n                            ! function(column) {\r\n                                if (\"ctrl\" === sortOrder) {\r\n                                    if (!(\"sortOrder\" in column && \"sortIndex\" in column)) {\r\n                                        return false\r\n                                    }\r\n                                    options.sortOrder = void 0;\r\n                                    options.sortIndex = void 0\r\n                                } else if (isDefined(column.groupIndex) || isDefined(column.sortIndex)) {\r\n                                    options.sortOrder = \"desc\" === column.sortOrder ? \"asc\" : \"desc\"\r\n                                } else {\r\n                                    options.sortOrder = \"asc\"\r\n                                }\r\n                                return true\r\n                            }(column)\r\n                        }\r\n                    }\r\n                    this.columnOption(column.index, options)\r\n                },\r\n                getSortDataSourceParameters: function(useLocalSelector) {\r\n                    var sortColumns = [];\r\n                    var sort = [];\r\n                    each(this._columns, (function() {\r\n                        if ((this.dataField || this.selector || this.calculateCellValue) && isDefined(this.sortIndex) && !isDefined(this.groupIndex)) {\r\n                            sortColumns[this.sortIndex] = this\r\n                        }\r\n                    }));\r\n                    each(sortColumns, (function() {\r\n                        var sortOrder = this && this.sortOrder;\r\n                        if (isSortOrderValid(sortOrder)) {\r\n                            var sortItem = {\r\n                                selector: this.calculateSortValue || this.displayField || this.calculateDisplayValue || useLocalSelector && this.selector || this.dataField || this.calculateCellValue,\r\n                                desc: \"desc\" === this.sortOrder\r\n                            };\r\n                            if (this.sortingMethod) {\r\n                                sortItem.compare = this.sortingMethod.bind(this)\r\n                            }\r\n                            sort.push(sortItem)\r\n                        }\r\n                    }));\r\n                    return sort.length > 0 ? sort : null\r\n                },\r\n                getGroupDataSourceParameters: function(useLocalSelector) {\r\n                    var group = [];\r\n                    each(this.getGroupColumns(), (function() {\r\n                        var selector = this.calculateGroupValue || this.displayField || this.calculateDisplayValue || useLocalSelector && this.selector || this.dataField || this.calculateCellValue;\r\n                        if (selector) {\r\n                            var groupItem = {\r\n                                selector: selector,\r\n                                desc: \"desc\" === this.sortOrder,\r\n                                isExpanded: !!this.autoExpandGroup\r\n                            };\r\n                            if (this.sortingMethod) {\r\n                                groupItem.compare = this.sortingMethod.bind(this)\r\n                            }\r\n                            group.push(groupItem)\r\n                        }\r\n                    }));\r\n                    return group.length > 0 ? group : null\r\n                },\r\n                refresh: function(updateNewLookupsOnly) {\r\n                    var deferreds = [];\r\n                    each(this._columns, (function() {\r\n                        var lookup = this.lookup;\r\n                        if (lookup && !this.calculateDisplayValue) {\r\n                            if (updateNewLookupsOnly && lookup.valueMap) {\r\n                                return\r\n                            }\r\n                            if (lookup.update) {\r\n                                deferreds.push(lookup.update())\r\n                            }\r\n                        }\r\n                    }));\r\n                    return when.apply($, deferreds).done(resetColumnsCache.bind(null, this))\r\n                },\r\n                _updateColumnOptions: function(column, columnIndex) {\r\n                    column.selector = column.selector || function(data) {\r\n                        return column.calculateCellValue(data)\r\n                    };\r\n                    each([\"calculateSortValue\", \"calculateGroupValue\", \"calculateDisplayValue\"], (function(_, calculateCallbackName) {\r\n                        var calculateCallback = column[calculateCallbackName];\r\n                        if (isFunction(calculateCallback)) {\r\n                            if (!calculateCallback.originalCallback) {\r\n                                var context = {\r\n                                    column: column\r\n                                };\r\n                                column[calculateCallbackName] = function(data) {\r\n                                    return calculateCallback.call(context.column, data)\r\n                                };\r\n                                column[calculateCallbackName].originalCallback = calculateCallback;\r\n                                column[calculateCallbackName].columnIndex = columnIndex;\r\n                                column[calculateCallbackName].context = context\r\n                            } else {\r\n                                column[calculateCallbackName].context.column = column\r\n                            }\r\n                        }\r\n                    }));\r\n                    if (isString(column.calculateDisplayValue)) {\r\n                        column.displayField = column.calculateDisplayValue;\r\n                        column.calculateDisplayValue = compileGetter(column.displayField)\r\n                    }\r\n                    if (column.calculateDisplayValue) {\r\n                        column.displayValueMap = column.displayValueMap || {}\r\n                    }\r\n                    updateSerializers(column, column.dataType);\r\n                    var lookup = column.lookup;\r\n                    if (lookup) {\r\n                        updateSerializers(lookup, lookup.dataType)\r\n                    }\r\n                    var dataType = lookup ? lookup.dataType : column.dataType;\r\n                    if (dataType) {\r\n                        column.alignment = column.alignment || function(dataType, isRTL) {\r\n                            switch (dataType) {\r\n                                case \"number\":\r\n                                    return \"right\";\r\n                                case \"boolean\":\r\n                                    return \"center\";\r\n                                default:\r\n                                    return getDefaultAlignment(isRTL)\r\n                            }\r\n                        }(dataType, this.option(\"rtlEnabled\"));\r\n                        column.format = column.format || gridCoreUtils.getFormatByDataType(dataType);\r\n                        column.customizeText = column.customizeText || getCustomizeTextByDataType(dataType);\r\n                        column.defaultFilterOperations = column.defaultFilterOperations || !lookup && DATATYPE_OPERATIONS[dataType] || [];\r\n                        if (!isDefined(column.filterOperations)) {\r\n                            setFilterOperationsAsDefaultValues(column)\r\n                        }\r\n                        column.defaultFilterOperation = column.filterOperations && column.filterOperations[0] || \"=\";\r\n                        column.showEditorAlways = isDefined(column.showEditorAlways) ? column.showEditorAlways : \"boolean\" === dataType && !column.cellTemplate && !column.lookup\r\n                    }\r\n                },\r\n                updateColumnDataTypes: function(dataSource) {\r\n                    var that = this;\r\n                    var dateSerializationFormat = that.option(\"dateSerializationFormat\");\r\n                    var firstItems = that._getFirstItems(dataSource);\r\n                    var isColumnDataTypesUpdated = false;\r\n                    each(that._columns, (function(index, column) {\r\n                        var i;\r\n                        var value;\r\n                        var dataType;\r\n                        var lookupDataType;\r\n                        var valueDataType;\r\n                        var lookup = column.lookup;\r\n                        if (gridCoreUtils.isDateType(column.dataType) && void 0 === column.serializationFormat) {\r\n                            column.serializationFormat = dateSerializationFormat\r\n                        }\r\n                        if (lookup && gridCoreUtils.isDateType(lookup.dataType) && void 0 === column.serializationFormat) {\r\n                            lookup.serializationFormat = dateSerializationFormat\r\n                        }\r\n                        if (column.calculateCellValue && firstItems.length) {\r\n                            if (!column.dataType || lookup && !lookup.dataType) {\r\n                                for (i = 0; i < firstItems.length; i++) {\r\n                                    value = column.calculateCellValue(firstItems[i]);\r\n                                    if (!column.dataType) {\r\n                                        valueDataType = getValueDataType(value);\r\n                                        dataType = dataType || valueDataType;\r\n                                        if (dataType && valueDataType && dataType !== valueDataType) {\r\n                                            dataType = \"string\"\r\n                                        }\r\n                                    }\r\n                                    if (lookup && !lookup.dataType) {\r\n                                        valueDataType = getValueDataType(gridCoreUtils.getDisplayValue(column, value, firstItems[i]));\r\n                                        lookupDataType = lookupDataType || valueDataType;\r\n                                        if (lookupDataType && valueDataType && lookupDataType !== valueDataType) {\r\n                                            lookupDataType = \"string\"\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (dataType || lookupDataType) {\r\n                                    if (dataType) {\r\n                                        column.dataType = dataType\r\n                                    }\r\n                                    if (lookup && lookupDataType) {\r\n                                        lookup.dataType = lookupDataType\r\n                                    }\r\n                                    isColumnDataTypesUpdated = true\r\n                                }\r\n                            }\r\n                            if (void 0 === column.serializationFormat || lookup && void 0 === lookup.serializationFormat) {\r\n                                for (i = 0; i < firstItems.length; i++) {\r\n                                    value = column.calculateCellValue(firstItems[i], true);\r\n                                    if (void 0 === column.serializationFormat) {\r\n                                        column.serializationFormat = getSerializationFormat(column.dataType, value)\r\n                                    }\r\n                                    if (lookup && void 0 === lookup.serializationFormat) {\r\n                                        lookup.serializationFormat = getSerializationFormat(lookup.dataType, lookup.calculateCellValue(value, true))\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        that._updateColumnOptions(column, index)\r\n                    }));\r\n                    return isColumnDataTypesUpdated\r\n                },\r\n                _customizeColumns: function(columns) {\r\n                    var customizeColumns = this.option(\"customizeColumns\");\r\n                    if (customizeColumns) {\r\n                        var hasOwnerBand = columns.some((function(column) {\r\n                            return isObject(column.ownerBand)\r\n                        }));\r\n                        if (hasOwnerBand) {\r\n                            updateIndexes(this)\r\n                        }\r\n                        customizeColumns(columns);\r\n                        assignColumns(this, createColumnsFromOptions(this, columns))\r\n                    }\r\n                },\r\n                updateColumns: function(dataSource, forceApplying) {\r\n                    if (!forceApplying) {\r\n                        this.updateSortingGrouping(dataSource)\r\n                    }\r\n                    if (!dataSource || dataSource.isLoaded()) {\r\n                        var sortParameters = dataSource ? dataSource.sort() || [] : this.getSortDataSourceParameters();\r\n                        var groupParameters = dataSource ? dataSource.group() || [] : this.getGroupDataSourceParameters();\r\n                        var filterParameters = null === dataSource || void 0 === dataSource ? void 0 : dataSource.lastLoadOptions().filter;\r\n                        this._customizeColumns(this._columns);\r\n                        updateIndexes(this);\r\n                        var columns = this._columns;\r\n                        return when(this.refresh(true)).always(() => {\r\n                            if (this._columns !== columns) {\r\n                                return\r\n                            }\r\n                            this._updateChanges(dataSource, {\r\n                                sorting: sortParameters,\r\n                                grouping: groupParameters,\r\n                                filtering: filterParameters\r\n                            });\r\n                            fireColumnsChanged(this)\r\n                        })\r\n                    }\r\n                },\r\n                _updateChanges: function(dataSource, parameters) {\r\n                    if (dataSource) {\r\n                        this.updateColumnDataTypes(dataSource);\r\n                        this._dataSourceApplied = true\r\n                    }\r\n                    if (!gridCoreUtils.equalSortParameters(parameters.sorting, this.getSortDataSourceParameters())) {\r\n                        updateColumnChanges(this, \"sorting\")\r\n                    }\r\n                    if (!gridCoreUtils.equalSortParameters(parameters.grouping, this.getGroupDataSourceParameters())) {\r\n                        updateColumnChanges(this, \"grouping\")\r\n                    }\r\n                    var dataController = this.getController(\"data\");\r\n                    if (dataController && !gridCoreUtils.equalFilterParameters(parameters.filtering, dataController.getCombinedFilter())) {\r\n                        updateColumnChanges(this, \"filtering\")\r\n                    }\r\n                    updateColumnChanges(this, \"columns\")\r\n                },\r\n                updateSortingGrouping: function(dataSource, fromDataSource) {\r\n                    var that = this;\r\n                    var sortParameters;\r\n                    var isColumnsChanged;\r\n                    var updateSortGroupParameterIndexes = function(columns, sortParameters, indexParameterName) {\r\n                        each(columns, (function(index, column) {\r\n                            delete column[indexParameterName];\r\n                            if (sortParameters) {\r\n                                for (var i = 0; i < sortParameters.length; i++) {\r\n                                    var selector = sortParameters[i].selector;\r\n                                    var isExpanded = sortParameters[i].isExpanded;\r\n                                    if (selector === column.dataField || selector === column.name || selector === column.selector || selector === column.calculateCellValue || selector === column.calculateGroupValue || selector === column.calculateDisplayValue) {\r\n                                        column.sortOrder = column.sortOrder || (sortParameters[i].desc ? \"desc\" : \"asc\");\r\n                                        if (void 0 !== isExpanded) {\r\n                                            column.autoExpandGroup = isExpanded\r\n                                        }\r\n                                        column[indexParameterName] = i;\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        }))\r\n                    };\r\n                    if (dataSource) {\r\n                        sortParameters = gridCoreUtils.normalizeSortingInfo(dataSource.sort());\r\n                        var groupParameters = gridCoreUtils.normalizeSortingInfo(dataSource.group());\r\n                        var columnsGroupParameters = that.getGroupDataSourceParameters();\r\n                        var columnsSortParameters = that.getSortDataSourceParameters();\r\n                        var groupingChanged = !gridCoreUtils.equalSortParameters(groupParameters, columnsGroupParameters, true);\r\n                        var groupExpandingChanged = !groupingChanged && !gridCoreUtils.equalSortParameters(groupParameters, columnsGroupParameters);\r\n                        if (!that._columns.length) {\r\n                            each(groupParameters, (function(index, group) {\r\n                                that._columns.push(group.selector)\r\n                            }));\r\n                            each(sortParameters, (function(index, sort) {\r\n                                that._columns.push(sort.selector)\r\n                            }));\r\n                            assignColumns(that, createColumnsFromOptions(that, that._columns))\r\n                        }\r\n                        if ((fromDataSource || !columnsGroupParameters && !that._hasUserState) && (groupingChanged || groupExpandingChanged)) {\r\n                            updateSortGroupParameterIndexes(that._columns, groupParameters, \"groupIndex\");\r\n                            if (fromDataSource) {\r\n                                groupingChanged && updateColumnChanges(that, \"grouping\");\r\n                                groupExpandingChanged && updateColumnChanges(that, \"groupExpanding\");\r\n                                isColumnsChanged = true\r\n                            }\r\n                        }\r\n                        if ((fromDataSource || !columnsSortParameters && !that._hasUserState) && !gridCoreUtils.equalSortParameters(sortParameters, columnsSortParameters)) {\r\n                            updateSortGroupParameterIndexes(that._columns, sortParameters, \"sortIndex\");\r\n                            if (fromDataSource) {\r\n                                updateColumnChanges(that, \"sorting\");\r\n                                isColumnsChanged = true\r\n                            }\r\n                        }\r\n                        if (isColumnsChanged) {\r\n                            fireColumnsChanged(that)\r\n                        }\r\n                    }\r\n                },\r\n                updateFilter: function(filter, remoteFiltering, columnIndex, filterValue) {\r\n                    if (!Array.isArray(filter)) {\r\n                        return filter\r\n                    }\r\n                    filter = extend([], filter);\r\n                    columnIndex = void 0 !== filter.columnIndex ? filter.columnIndex : columnIndex;\r\n                    filterValue = void 0 !== filter.filterValue ? filter.filterValue : filterValue;\r\n                    if (isString(filter[0]) && \"!\" !== filter[0]) {\r\n                        var column = this.columnOption(filter[0]);\r\n                        if (remoteFiltering) {\r\n                            if (config().forceIsoDateParsing && column && column.serializeValue && filter.length > 1) {\r\n                                filter[filter.length - 1] = column.serializeValue(filter[filter.length - 1], \"filter\")\r\n                            }\r\n                        } else if (column && column.selector) {\r\n                            filter[0] = column.selector;\r\n                            filter[0].columnIndex = column.index\r\n                        }\r\n                    } else if (isFunction(filter[0])) {\r\n                        filter[0].columnIndex = columnIndex;\r\n                        filter[0].filterValue = filterValue\r\n                    }\r\n                    for (var i = 0; i < filter.length; i++) {\r\n                        filter[i] = this.updateFilter(filter[i], remoteFiltering, columnIndex, filterValue)\r\n                    }\r\n                    return filter\r\n                },\r\n                columnCount: function() {\r\n                    return this._columns ? this._columns.length : 0\r\n                },\r\n                columnOption: function(identifier, option, value, notFireEvent) {\r\n                    var that = this;\r\n                    var columns = that._columns.concat(that._commandColumns);\r\n                    var column = findColumn(columns, identifier);\r\n                    if (column) {\r\n                        if (1 === arguments.length) {\r\n                            return extend({}, column)\r\n                        }\r\n                        if (isString(option)) {\r\n                            if (2 === arguments.length) {\r\n                                return columnOptionCore(that, column, option)\r\n                            } else {\r\n                                columnOptionCore(that, column, option, value, notFireEvent)\r\n                            }\r\n                        } else if (isObject(option)) {\r\n                            each(option, (function(optionName, value) {\r\n                                columnOptionCore(that, column, optionName, value, notFireEvent)\r\n                            }))\r\n                        }\r\n                        fireColumnsChanged(that)\r\n                    }\r\n                },\r\n                clearSorting: function() {\r\n                    var columnCount = this.columnCount();\r\n                    this.beginUpdate();\r\n                    for (var i = 0; i < columnCount; i++) {\r\n                        this.columnOption(i, \"sortOrder\", void 0)\r\n                    }\r\n                    this.endUpdate()\r\n                },\r\n                clearGrouping: function() {\r\n                    var columnCount = this.columnCount();\r\n                    this.beginUpdate();\r\n                    for (var i = 0; i < columnCount; i++) {\r\n                        this.columnOption(i, \"groupIndex\", void 0)\r\n                    }\r\n                    this.endUpdate()\r\n                },\r\n                getVisibleIndex: function(index, rowIndex) {\r\n                    var columns = this.getVisibleColumns(rowIndex);\r\n                    for (var i = columns.length - 1; i >= 0; i--) {\r\n                        if (columns[i].index === index) {\r\n                            return i\r\n                        }\r\n                    }\r\n                    return -1\r\n                },\r\n                getVisibleIndexByColumn: function(column, rowIndex) {\r\n                    var visibleColumns = this.getVisibleColumns(rowIndex);\r\n                    var visibleColumn = visibleColumns.filter(col => col.index === column.index && col.command === column.command)[0];\r\n                    return visibleColumns.indexOf(visibleColumn)\r\n                },\r\n                getVisibleColumnIndex: function(id, rowIndex) {\r\n                    var index = this.columnOption(id, \"index\");\r\n                    return this.getVisibleIndex(index, rowIndex)\r\n                },\r\n                addColumn: function(options) {\r\n                    var column = createColumn(this, options);\r\n                    var index = this._columns.length;\r\n                    this._columns.push(column);\r\n                    if (column.isBand) {\r\n                        this._columns = createColumnsFromOptions(this, this._columns);\r\n                        column = this._columns[index]\r\n                    }\r\n                    column.added = options;\r\n                    updateIndexes(this, column);\r\n                    this.updateColumns(this._dataSource);\r\n                    this._checkColumns()\r\n                },\r\n                deleteColumn: function(id) {\r\n                    var column = this.columnOption(id);\r\n                    if (column && column.index >= 0) {\r\n                        columns = this._columns, void columns.forEach(column => {\r\n                            if (isDefined(column.ownerBand)) {\r\n                                column.ownerBand = columns[column.ownerBand]\r\n                            }\r\n                        });\r\n                        this._columns.splice(column.index, 1);\r\n                        if (column.isBand) {\r\n                            var childIndexes = this.getChildrenByBandColumn(column.index).map(column => column.index);\r\n                            this._columns = this._columns.filter(column => childIndexes.indexOf(column.index) < 0)\r\n                        }\r\n                        updateIndexes(this);\r\n                        this.updateColumns(this._dataSource)\r\n                    }\r\n                    var columns\r\n                },\r\n                addCommandColumn: function(options) {\r\n                    var commandColumn = this._commandColumns.filter(column => column.command === options.command)[0];\r\n                    if (!commandColumn) {\r\n                        commandColumn = options;\r\n                        this._commandColumns.push(commandColumn)\r\n                    }\r\n                },\r\n                getUserState: function() {\r\n                    var columns = this._columns;\r\n                    var result = [];\r\n                    var i;\r\n\r\n                    function handleStateField(index, value) {\r\n                        if (void 0 !== columns[i][value]) {\r\n                            result[i][value] = columns[i][value]\r\n                        }\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        result[i] = {};\r\n                        each(USER_STATE_FIELD_NAMES, handleStateField)\r\n                    }\r\n                    return result\r\n                },\r\n                setName: function(column) {\r\n                    column.name = column.name || column.dataField || column.type\r\n                },\r\n                setUserState: function(state) {\r\n                    var dataSource = this._dataSource;\r\n                    var ignoreColumnOptionNames = this.option(\"stateStoring.ignoreColumnOptionNames\");\r\n                    null === state || void 0 === state ? void 0 : state.forEach(this.setName);\r\n                    if (!ignoreColumnOptionNames) {\r\n                        ignoreColumnOptionNames = [];\r\n                        var commonColumnSettings = this.getCommonSettings();\r\n                        if (!this.option(\"columnChooser.enabled\")) {\r\n                            ignoreColumnOptionNames.push(\"visible\")\r\n                        }\r\n                        if (\"none\" === this.option(\"sorting.mode\")) {\r\n                            ignoreColumnOptionNames.push(\"sortIndex\", \"sortOrder\")\r\n                        }\r\n                        if (!commonColumnSettings.allowGrouping) {\r\n                            ignoreColumnOptionNames.push(\"groupIndex\")\r\n                        }\r\n                        if (!commonColumnSettings.allowFixing) {\r\n                            ignoreColumnOptionNames.push(\"fixed\", \"fixedPosition\")\r\n                        }\r\n                        if (!commonColumnSettings.allowResizing) {\r\n                            ignoreColumnOptionNames.push(\"width\", \"visibleWidth\")\r\n                        }\r\n                        var isFilterPanelHidden = !this.option(\"filterPanel.visible\");\r\n                        if (!this.option(\"filterRow.visible\") && isFilterPanelHidden) {\r\n                            ignoreColumnOptionNames.push(\"filterValue\", \"selectedFilterOperation\")\r\n                        }\r\n                        if (!this.option(\"headerFilter.visible\") && isFilterPanelHidden) {\r\n                            ignoreColumnOptionNames.push(\"filterValues\", \"filterType\")\r\n                        }\r\n                    }\r\n                    this._columnsUserState = state;\r\n                    this._ignoreColumnOptionNames = ignoreColumnOptionNames;\r\n                    this._hasUserState = !!state;\r\n                    updateColumnChanges(this, \"filtering\");\r\n                    this.init();\r\n                    if (dataSource) {\r\n                        dataSource.sort(this.getSortDataSourceParameters());\r\n                        dataSource.group(this.getGroupDataSourceParameters())\r\n                    }\r\n                },\r\n                _checkColumns: function() {\r\n                    var usedNames = {};\r\n                    var hasEditableColumnWithoutName = false;\r\n                    var duplicatedNames = [];\r\n                    this._columns.forEach(column => {\r\n                        var _column$columns;\r\n                        var name = column.name;\r\n                        var isBand = null === (_column$columns = column.columns) || void 0 === _column$columns ? void 0 : _column$columns.length;\r\n                        var isEditable = column.allowEditing && (column.dataField || column.setCellValue) && !isBand;\r\n                        if (name) {\r\n                            if (usedNames[name]) {\r\n                                duplicatedNames.push('\"'.concat(name, '\"'))\r\n                            }\r\n                            usedNames[name] = true\r\n                        } else if (isEditable) {\r\n                            hasEditableColumnWithoutName = true\r\n                        }\r\n                    });\r\n                    if (duplicatedNames.length) {\r\n                        errors.log(\"E1059\", duplicatedNames.join(\", \"))\r\n                    }\r\n                    if (hasEditableColumnWithoutName) {\r\n                        errors.log(\"E1060\")\r\n                    }\r\n                },\r\n                _createCalculatedColumnOptions: function(columnOptions, bandColumn) {\r\n                    var calculatedColumnOptions = {};\r\n                    var dataField = columnOptions.dataField;\r\n                    if (Array.isArray(columnOptions.columns) && columnOptions.columns.length || columnOptions.isBand) {\r\n                        calculatedColumnOptions.isBand = true;\r\n                        dataField = null\r\n                    }\r\n                    if (dataField) {\r\n                        if (isString(dataField)) {\r\n                            var getter = compileGetter(dataField);\r\n                            calculatedColumnOptions = {\r\n                                caption: captionize(dataField),\r\n                                calculateCellValue: function(data, skipDeserialization) {\r\n                                    var value = getter(data);\r\n                                    return this.deserializeValue && !skipDeserialization ? this.deserializeValue(value) : value\r\n                                },\r\n                                setCellValue: defaultSetCellValue,\r\n                                parseValue: function(text) {\r\n                                    var result;\r\n                                    var parsedValue;\r\n                                    if (\"number\" === this.dataType) {\r\n                                        if (isString(text) && this.format) {\r\n                                            result = function(text, format) {\r\n                                                var parsedValue = numberLocalization.parse(text, format);\r\n                                                if (isNumeric(parsedValue)) {\r\n                                                    var formattedValue = numberLocalization.format(parsedValue, format);\r\n                                                    var formattedValueWithDefaultFormat = numberLocalization.format(parsedValue, \"decimal\");\r\n                                                    if (formattedValue === text || formattedValueWithDefaultFormat === text) {\r\n                                                        return parsedValue\r\n                                                    }\r\n                                                }\r\n                                            }(text.trim(), this.format)\r\n                                        } else if (isDefined(text) && isNumeric(text)) {\r\n                                            result = Number(text)\r\n                                        }\r\n                                    } else if (\"boolean\" === this.dataType) {\r\n                                        if (text === this.trueText) {\r\n                                            result = true\r\n                                        } else if (text === this.falseText) {\r\n                                            result = false\r\n                                        }\r\n                                    } else if (gridCoreUtils.isDateType(this.dataType)) {\r\n                                        parsedValue = dateLocalization.parse(text, this.format);\r\n                                        if (parsedValue) {\r\n                                            result = parsedValue\r\n                                        }\r\n                                    } else {\r\n                                        result = text\r\n                                    }\r\n                                    return result\r\n                                }\r\n                            }\r\n                        }\r\n                        calculatedColumnOptions.allowFiltering = true\r\n                    } else {\r\n                        calculatedColumnOptions.allowFiltering = !!columnOptions.calculateFilterExpression\r\n                    }\r\n                    calculatedColumnOptions.calculateFilterExpression = function() {\r\n                        return filterUtils.defaultCalculateFilterExpression.apply(this, arguments)\r\n                    };\r\n                    calculatedColumnOptions.createFilterExpression = function(filterValue) {\r\n                        var result;\r\n                        if (this.calculateFilterExpression) {\r\n                            result = this.calculateFilterExpression.apply(this, arguments)\r\n                        }\r\n                        if (isFunction(result)) {\r\n                            result = [result, \"=\", true]\r\n                        }\r\n                        if (result) {\r\n                            result.columnIndex = this.index;\r\n                            result.filterValue = filterValue\r\n                        }\r\n                        return result\r\n                    };\r\n                    if (!dataField || !isString(dataField)) {\r\n                        extend(true, calculatedColumnOptions, {\r\n                            allowSorting: false,\r\n                            allowGrouping: false,\r\n                            calculateCellValue: function() {\r\n                                return null\r\n                            }\r\n                        })\r\n                    }\r\n                    if (bandColumn) {\r\n                        calculatedColumnOptions.allowFixing = false\r\n                    }\r\n                    if (columnOptions.dataType) {\r\n                        calculatedColumnOptions.userDataType = columnOptions.dataType\r\n                    }\r\n                    if (columnOptions.selectedFilterOperation && !(\"defaultSelectedFilterOperation\" in calculatedColumnOptions)) {\r\n                        calculatedColumnOptions.defaultSelectedFilterOperation = columnOptions.selectedFilterOperation\r\n                    }\r\n                    if (columnOptions.lookup) {\r\n                        calculatedColumnOptions.lookup = {\r\n                            calculateCellValue: function(value, skipDeserialization) {\r\n                                if (this.valueExpr) {\r\n                                    value = this.valueMap && this.valueMap[value]\r\n                                }\r\n                                return this.deserializeValue && !skipDeserialization ? this.deserializeValue(value) : value\r\n                            },\r\n                            updateValueMap: function() {\r\n                                this.valueMap = {};\r\n                                if (this.items) {\r\n                                    var calculateValue = compileGetter(this.valueExpr);\r\n                                    var calculateDisplayValue = compileGetter(this.displayExpr);\r\n                                    for (var i = 0; i < this.items.length; i++) {\r\n                                        var item = this.items[i];\r\n                                        var displayValue = calculateDisplayValue(item);\r\n                                        this.valueMap[calculateValue(item)] = displayValue;\r\n                                        this.dataType = this.dataType || getValueDataType(displayValue)\r\n                                    }\r\n                                }\r\n                            },\r\n                            update: function() {\r\n                                var that = this;\r\n                                var dataSource = that.dataSource;\r\n                                if (dataSource) {\r\n                                    if (isFunction(dataSource) && !variableWrapper.isWrapped(dataSource)) {\r\n                                        dataSource = dataSource({})\r\n                                    }\r\n                                    if (isPlainObject(dataSource) || dataSource instanceof Store || Array.isArray(dataSource)) {\r\n                                        if (that.valueExpr) {\r\n                                            var dataSourceOptions = normalizeDataSourceOptions(dataSource);\r\n                                            dataSourceOptions.paginate = false;\r\n                                            dataSource = new DataSource(dataSourceOptions);\r\n                                            return dataSource.load().done((function(data) {\r\n                                                that.items = data;\r\n                                                that.updateValueMap && that.updateValueMap()\r\n                                            }))\r\n                                        }\r\n                                    } else {\r\n                                        errors.log(\"E1016\")\r\n                                    }\r\n                                } else {\r\n                                    that.updateValueMap && that.updateValueMap()\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    calculatedColumnOptions.resizedCallbacks = Callbacks();\r\n                    if (columnOptions.resized) {\r\n                        calculatedColumnOptions.resizedCallbacks.add(columnOptions.resized.bind(columnOptions))\r\n                    }\r\n                    each(calculatedColumnOptions, (function(optionName) {\r\n                        if (isFunction(calculatedColumnOptions[optionName]) && 0 !== optionName.indexOf(\"default\")) {\r\n                            var defaultOptionName = \"default\" + optionName.charAt(0).toUpperCase() + optionName.substr(1);\r\n                            calculatedColumnOptions[defaultOptionName] = calculatedColumnOptions[optionName]\r\n                        }\r\n                    }));\r\n                    return calculatedColumnOptions\r\n                },\r\n                getRowCount: function() {\r\n                    this._rowCount = this._rowCount || function(that) {\r\n                        var rowCount = 1;\r\n                        var bandColumnsCache = that.getBandColumnsCache();\r\n                        var columnParentByIndex = bandColumnsCache.columnParentByIndex;\r\n                        that._columns.forEach((function(column) {\r\n                            var parents = getParentBandColumns(column.index, columnParentByIndex);\r\n                            var invisibleParents = parents.filter((function(column) {\r\n                                return !column.visible\r\n                            }));\r\n                            if (column.visible && !invisibleParents.length) {\r\n                                rowCount = Math.max(rowCount, parents.length + 1)\r\n                            }\r\n                        }));\r\n                        return rowCount\r\n                    }(this);\r\n                    return this._rowCount\r\n                },\r\n                getRowIndex: function(columnIndex, alwaysGetRowIndex) {\r\n                    var column = this._columns[columnIndex];\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    return column && (alwaysGetRowIndex || column.visible && !(column.command || isDefined(column.groupIndex))) ? getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex).length : 0\r\n                },\r\n                getChildrenByBandColumn: function(bandColumnIndex, onlyVisibleDirectChildren) {\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var result = _getChildrenByBandColumn(bandColumnIndex, bandColumnsCache.columnChildrenByIndex, !onlyVisibleDirectChildren);\r\n                    if (onlyVisibleDirectChildren) {\r\n                        return result.filter((function(column) {\r\n                            return column.visible && !column.command\r\n                        })).sort((function(column1, column2) {\r\n                            return column1.visibleIndex - column2.visibleIndex\r\n                        }))\r\n                    }\r\n                    return result\r\n                },\r\n                isParentBandColumn: function(columnIndex, bandColumnIndex) {\r\n                    var result = false;\r\n                    var column = this._columns[columnIndex];\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var parentBandColumns = column && getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex);\r\n                    if (parentBandColumns) {\r\n                        each(parentBandColumns, (function(_, bandColumn) {\r\n                            if (bandColumn.index === bandColumnIndex) {\r\n                                result = true;\r\n                                return false\r\n                            }\r\n                        }))\r\n                    }\r\n                    return result\r\n                },\r\n                isParentColumnVisible: function(columnIndex) {\r\n                    var result = true;\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var bandColumns = columnIndex >= 0 && getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex);\r\n                    bandColumns && each(bandColumns, (function(_, bandColumn) {\r\n                        result = result && bandColumn.visible;\r\n                        return result\r\n                    }));\r\n                    return result\r\n                },\r\n                getColumnId: function(column) {\r\n                    if (column.command && column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                        if (isCustomCommandColumn(this, column)) {\r\n                            return \"type:\" + column.type\r\n                        }\r\n                        return \"command:\" + column.command\r\n                    }\r\n                    return column.index\r\n                },\r\n                getCustomizeTextByDataType: getCustomizeTextByDataType,\r\n                getHeaderContentAlignment: function(columnAlignment) {\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    if (rtlEnabled) {\r\n                        return \"left\" === columnAlignment ? \"right\" : \"left\"\r\n                    }\r\n                    return columnAlignment\r\n                }\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.columns_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnsControllerModule\r\n} from \"../grid_core/ui.grid_core.columns_controller\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\ngridCore.registerModule(\"columns\", {\r\n    defaultOptions: function() {\r\n        return extend(true, {}, columnsControllerModule.defaultOptions(), {\r\n            commonColumnSettings: {\r\n                allowExporting: true\r\n            }\r\n        })\r\n    },\r\n    controllers: columnsControllerModule.controllers\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_source_adapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport gridCore from \"../data_grid/ui.data_grid.core\";\r\nimport {\r\n    executeAsync,\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport {\r\n    applyBatch\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nexport default gridCore.Controller.inherit(function() {\r\n    function cloneItems(items, groupCount) {\r\n        if (items) {\r\n            items = items.slice(0);\r\n            if (groupCount) {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    items[i] = extend({\r\n                        key: items[i].key\r\n                    }, items[i]);\r\n                    items[i].items = cloneItems(items[i].items, groupCount - 1)\r\n                }\r\n            }\r\n        }\r\n        return items\r\n    }\r\n\r\n    function calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload) {\r\n        var operationTypes = {\r\n            reload: true,\r\n            fullReload: true\r\n        };\r\n        if (lastLoadOptions) {\r\n            operationTypes = {\r\n                sorting: !gridCore.equalSortParameters(loadOptions.sort, lastLoadOptions.sort),\r\n                grouping: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group, true),\r\n                groupExpanding: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group) || lastLoadOptions.groupExpand,\r\n                filtering: !gridCore.equalFilterParameters(loadOptions.filter, lastLoadOptions.filter),\r\n                pageIndex: loadOptions.pageIndex !== lastLoadOptions.pageIndex,\r\n                skip: loadOptions.skip !== lastLoadOptions.skip,\r\n                take: loadOptions.take !== lastLoadOptions.take,\r\n                pageSize: loadOptions.pageSize !== lastLoadOptions.pageSize,\r\n                fullReload: isFullReload\r\n            };\r\n            operationTypes.reload = isFullReload || operationTypes.sorting || operationTypes.grouping || operationTypes.filtering;\r\n            operationTypes.paging = operationTypes.pageIndex || operationTypes.pageSize || operationTypes.take\r\n        }\r\n        return operationTypes\r\n    }\r\n\r\n    function getPageDataFromCache(options, updatePaging) {\r\n        var groupCount = gridCore.normalizeSortingInfo(options.group || options.storeLoadOptions.group || options.loadOptions.group).length;\r\n        var items = [];\r\n        if (fillItemsFromCache(items, options, groupCount)) {\r\n            return items\r\n        } else if (updatePaging) {\r\n            ! function(cacheItemsFromBegin, options, groupCount) {\r\n                var cacheItemBeginCount = cacheItemsFromBegin.length;\r\n                var {\r\n                    storeLoadOptions: storeLoadOptions\r\n                } = options;\r\n                if (void 0 !== storeLoadOptions.skip && storeLoadOptions.take && !groupCount) {\r\n                    var cacheItemsFromEnd = [];\r\n                    fillItemsFromCache(cacheItemsFromEnd, options, groupCount, true);\r\n                    var cacheItemEndCount = cacheItemsFromEnd.length;\r\n                    if (cacheItemBeginCount || cacheItemEndCount) {\r\n                        var _options$skip2, _options$take2;\r\n                        options.skip = null !== (_options$skip2 = options.skip) && void 0 !== _options$skip2 ? _options$skip2 : storeLoadOptions.skip;\r\n                        options.take = null !== (_options$take2 = options.take) && void 0 !== _options$take2 ? _options$take2 : storeLoadOptions.take\r\n                    }\r\n                    if (cacheItemBeginCount) {\r\n                        storeLoadOptions.skip += cacheItemBeginCount;\r\n                        storeLoadOptions.take -= cacheItemBeginCount;\r\n                        options.cachedDataPartBegin = cacheItemsFromBegin\r\n                    }\r\n                    if (cacheItemEndCount) {\r\n                        storeLoadOptions.take -= cacheItemEndCount;\r\n                        options.cachedDataPartEnd = cacheItemsFromEnd.reverse()\r\n                    }\r\n                }\r\n            }(items, options, groupCount)\r\n        }\r\n    }\r\n\r\n    function fillItemsFromCache(items, options, groupCount, fromEnd) {\r\n        var _ref, _options$take, _options$cachedData;\r\n        var {\r\n            storeLoadOptions: storeLoadOptions\r\n        } = options;\r\n        var take = null !== (_ref = null !== (_options$take = options.take) && void 0 !== _options$take ? _options$take : storeLoadOptions.take) && void 0 !== _ref ? _ref : 0;\r\n        var cachedItems = null === (_options$cachedData = options.cachedData) || void 0 === _options$cachedData ? void 0 : _options$cachedData.items;\r\n        if (take && cachedItems) {\r\n            var _ref2, _options$skip;\r\n            var skip = null !== (_ref2 = null !== (_options$skip = options.skip) && void 0 !== _options$skip ? _options$skip : storeLoadOptions.skip) && void 0 !== _ref2 ? _ref2 : 0;\r\n            for (var i = 0; i < take; i++) {\r\n                var localIndex = fromEnd ? take - 1 - i : i;\r\n                var cacheItemIndex = localIndex + skip;\r\n                var cacheItem = cachedItems[cacheItemIndex];\r\n                if (void 0 === cacheItem && cacheItemIndex in cachedItems) {\r\n                    return true\r\n                }\r\n                var item = getItemFromCache(options, cacheItem, groupCount, localIndex, take);\r\n                if (item) {\r\n                    items.push(item)\r\n                } else {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    function getItemFromCache(options, cacheItem, groupCount, index, take) {\r\n        if (groupCount && cacheItem) {\r\n            var skips = 0 === index && options.skips || [];\r\n            var takes = index === take - 1 && options.takes || [];\r\n            return function getGroupItemFromCache(cacheItem, groupCount, skips, takes) {\r\n                if (groupCount && cacheItem) {\r\n                    var result = _extends({}, cacheItem);\r\n                    var skip = skips[0] || 0;\r\n                    var take = takes[0];\r\n                    var items = cacheItem.items;\r\n                    if (items) {\r\n                        if (void 0 === take && !items[skip]) {\r\n                            return\r\n                        }\r\n                        result.items = [];\r\n                        if (skips.length) {\r\n                            result.isContinuation = true\r\n                        }\r\n                        if (takes.length) {\r\n                            result.isContinuationOnNextPage = true\r\n                        }\r\n                        for (var i = 0; void 0 === take ? items[i + skip] : i < take; i++) {\r\n                            var childCacheItem = items[i + skip];\r\n                            var item = getGroupItemFromCache(childCacheItem, groupCount - 1, skips.slice(1), takes.slice(1));\r\n                            if (void 0 !== item) {\r\n                                result.items.push(item)\r\n                            } else {\r\n                                return\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n                return cacheItem\r\n            }(cacheItem, groupCount, skips, takes)\r\n        } else {\r\n            return cacheItem\r\n        }\r\n    }\r\n\r\n    function getCacheItem(cacheItem, loadedItem, groupCount, skips) {\r\n        if (groupCount && loadedItem) {\r\n            var result = _extends({}, loadedItem);\r\n            delete result.isContinuation;\r\n            delete result.isContinuationOnNextPage;\r\n            var skip = skips[0] || 0;\r\n            if (loadedItem.items) {\r\n                result.items = (null === cacheItem || void 0 === cacheItem ? void 0 : cacheItem.items) || {};\r\n                loadedItem.items.forEach((item, index) => {\r\n                    var globalIndex = index + skip;\r\n                    var childSkips = 0 === index ? skips.slice(1) : [];\r\n                    result.items[globalIndex] = getCacheItem(result.items[globalIndex], item, groupCount - 1, childSkips)\r\n                })\r\n            }\r\n            return result\r\n        }\r\n        return loadedItem\r\n    }\r\n    return {\r\n        init: function(dataSource, remoteOperations) {\r\n            var that = this;\r\n            that._dataSource = dataSource;\r\n            that._remoteOperations = remoteOperations || {};\r\n            that._isLastPage = !dataSource.isLastPage();\r\n            that._hasLastPage = false;\r\n            that._currentTotalCount = 0;\r\n            that._cachedData = {\r\n                items: {}\r\n            };\r\n            that._lastOperationTypes = {};\r\n            that._eventsStrategy = dataSource._eventsStrategy;\r\n            that._totalCountCorrection = 0;\r\n            that._isLoadingAll = false;\r\n            that.changed = Callbacks();\r\n            that.loadingChanged = Callbacks();\r\n            that.loadError = Callbacks();\r\n            that.customizeStoreLoadOptions = Callbacks();\r\n            that.changing = Callbacks();\r\n            that.pushed = Callbacks();\r\n            that._dataChangedHandler = that._handleDataChanged.bind(that);\r\n            that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n            that._dataLoadedHandler = that._handleDataLoaded.bind(that);\r\n            that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n            that._loadErrorHandler = that._handleLoadError.bind(that);\r\n            that._pushHandler = that._handlePush.bind(that);\r\n            that._changingHandler = that._handleChanging.bind(that);\r\n            dataSource.on(\"changed\", that._dataChangedHandler);\r\n            dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\r\n            dataSource.on(\"customizeLoadResult\", that._dataLoadedHandler);\r\n            dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.on(\"loadError\", that._loadErrorHandler);\r\n            dataSource.on(\"changing\", that._changingHandler);\r\n            dataSource.store().on(\"beforePush\", that._pushHandler);\r\n            each(dataSource, (function(memberName, member) {\r\n                if (!that[memberName] && isFunction(member)) {\r\n                    that[memberName] = function() {\r\n                        return this._dataSource[memberName].apply(this._dataSource, arguments)\r\n                    }\r\n                }\r\n            }))\r\n        },\r\n        remoteOperations: function() {\r\n            return this._remoteOperations\r\n        },\r\n        dispose: function(isSharedDataSource) {\r\n            var dataSource = this._dataSource;\r\n            var store = dataSource.store();\r\n            dataSource.off(\"changed\", this._dataChangedHandler);\r\n            dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler);\r\n            dataSource.off(\"customizeLoadResult\", this._dataLoadedHandler);\r\n            dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\r\n            dataSource.off(\"loadError\", this._loadErrorHandler);\r\n            dataSource.off(\"changing\", this._changingHandler);\r\n            store && store.off(\"beforePush\", this._pushHandler);\r\n            if (!isSharedDataSource) {\r\n                dataSource.dispose()\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var dataSource = this._dataSource;\r\n            if (operationTypes.reload) {\r\n                this.resetCurrentTotalCount();\r\n                this._isLastPage = !dataSource.paginate();\r\n                this._hasLastPage = this._isLastPage\r\n            }\r\n        },\r\n        resetCurrentTotalCount: function() {\r\n            this._currentTotalCount = 0;\r\n            this._totalCountCorrection = 0\r\n        },\r\n        resetCache: function() {\r\n            this._cachedStoreData = void 0;\r\n            this._cachedPagingData = void 0\r\n        },\r\n        resetPagesCache: function() {\r\n            this._cachedData = {\r\n                items: {}\r\n            }\r\n        },\r\n        _needClearStoreDataCache: function() {\r\n            var remoteOperations = this.remoteOperations();\r\n            var operationTypes = calculateOperationTypes(this._lastLoadOptions || {}, {});\r\n            var isLocalOperations = Object.keys(remoteOperations).every(operationName => !operationTypes[operationName] || !remoteOperations[operationName]);\r\n            return !isLocalOperations\r\n        },\r\n        push: function(changes, fromStore) {\r\n            var store = this.store();\r\n            if (this._needClearStoreDataCache()) {\r\n                this._cachedStoreData = void 0\r\n            }\r\n            this._cachedPagingData = void 0;\r\n            this.resetPagesCache(true);\r\n            if (this._cachedStoreData) {\r\n                applyBatch({\r\n                    keyInfo: store,\r\n                    data: this._cachedStoreData,\r\n                    changes: changes\r\n                })\r\n            }\r\n            if (!fromStore) {\r\n                this._applyBatch(changes)\r\n            }\r\n            this.pushed.fire(changes)\r\n        },\r\n        getDataIndexGetter: function() {\r\n            if (!this._dataIndexGetter) {\r\n                var indexByKey;\r\n                var storeData;\r\n                var store = this.store();\r\n                this._dataIndexGetter = data => {\r\n                    var isCacheUpdated = storeData && storeData !== this._cachedStoreData;\r\n                    if (!indexByKey || isCacheUpdated) {\r\n                        storeData = this._cachedStoreData || [];\r\n                        indexByKey = {};\r\n                        for (var i = 0; i < storeData.length; i++) {\r\n                            indexByKey[getKeyHash(store.keyOf(storeData[i]))] = i\r\n                        }\r\n                    }\r\n                    return indexByKey[getKeyHash(store.keyOf(data))]\r\n                }\r\n            }\r\n            return this._dataIndexGetter\r\n        },\r\n        _getKeyInfo: function() {\r\n            return this.store()\r\n        },\r\n        _applyBatch: function(changes) {\r\n            var keyInfo = this._getKeyInfo();\r\n            var dataSource = this._dataSource;\r\n            var groupCount = gridCore.normalizeSortingInfo(this.group()).length;\r\n            var totalCount = this.totalCount();\r\n            var isVirtualMode = \"virtual\" === this.option(\"scrolling.mode\");\r\n            changes = changes.filter((function(change) {\r\n                return !dataSource.paginate() || \"insert\" !== change.type || void 0 !== change.index\r\n            }));\r\n            var getItemCount = () => groupCount ? this.itemsCount() : this.items().length;\r\n            var oldItemCount = getItemCount();\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: this._items,\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: dataSource.items(),\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            if (this._currentTotalCount > 0 || isVirtualMode && totalCount === oldItemCount) {\r\n                this._totalCountCorrection += getItemCount() - oldItemCount\r\n            }\r\n            changes.splice(0, changes.length)\r\n        },\r\n        _handlePush: function(_ref5) {\r\n            var {\r\n                changes: changes\r\n            } = _ref5;\r\n            this.push(changes, true)\r\n        },\r\n        _handleChanging: function(e) {\r\n            this.changing.fire(e);\r\n            this._applyBatch(e.changes)\r\n        },\r\n        _needCleanCacheByOperation: function(operationType, remoteOperations) {\r\n            var operationTypesByOrder = [\"filtering\", \"sorting\", \"paging\"];\r\n            var operationTypeIndex = operationTypesByOrder.indexOf(operationType);\r\n            var currentOperationTypes = operationTypeIndex >= 0 ? operationTypesByOrder.slice(operationTypeIndex) : [operationType];\r\n            return currentOperationTypes.some(operationType => remoteOperations[operationType])\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var cachedStoreData = this._cachedStoreData;\r\n            var cachedPagingData = this._cachedPagingData;\r\n            var cachedData = this._cachedData;\r\n            if (options.storeLoadOptions.filter && !options.remoteOperations.filtering || options.storeLoadOptions.sort && !options.remoteOperations.sorting) {\r\n                options.remoteOperations = {\r\n                    filtering: options.remoteOperations.filtering\r\n                }\r\n            }\r\n            if (operationTypes.fullReload) {\r\n                cachedStoreData = void 0;\r\n                cachedPagingData = void 0;\r\n                cachedData = {\r\n                    items: {}\r\n                }\r\n            } else {\r\n                if (operationTypes.reload) {\r\n                    cachedPagingData = void 0;\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                } else if (operationTypes.groupExpanding) {\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                }\r\n                each(operationTypes, (operationType, value) => {\r\n                    if (value && this._needCleanCacheByOperation(operationType, options.remoteOperations)) {\r\n                        cachedStoreData = void 0;\r\n                        cachedPagingData = void 0\r\n                    }\r\n                })\r\n            }\r\n            if (cachedPagingData) {\r\n                options.remoteOperations.paging = false\r\n            }\r\n            options.cachedStoreData = cachedStoreData;\r\n            options.cachedPagingData = cachedPagingData;\r\n            options.cachedData = cachedData;\r\n            if (!options.isCustomLoading) {\r\n                this._cachedStoreData = cachedStoreData;\r\n                this._cachedPagingData = cachedPagingData;\r\n                this._cachedData = cachedData\r\n            }\r\n        },\r\n        _handleCustomizeStoreLoadOptions(options) {\r\n            var _options$data;\r\n            this._handleDataLoading(options);\r\n            if (!(0 === (null === (_options$data = options.data) || void 0 === _options$data ? void 0 : _options$data.length))) {\r\n                options.data = getPageDataFromCache(options, true) || options.cachedStoreData\r\n            }\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var dataSource = this._dataSource;\r\n            var lastLoadOptions = this._lastLoadOptions;\r\n            this.customizeStoreLoadOptions.fire(options);\r\n            options.delay = this.option(\"loadingTimeout\");\r\n            options.originalStoreLoadOptions = options.storeLoadOptions;\r\n            options.remoteOperations = extend({}, this.remoteOperations());\r\n            var isFullReload = !this.isLoaded() && !this._isRefreshing;\r\n            if (this.option(\"integrationOptions.renderedOnServer\") && !this.isLoaded()) {\r\n                options.delay = void 0\r\n            }\r\n            var loadOptions = extend({\r\n                pageIndex: this.pageIndex(),\r\n                pageSize: this.pageSize()\r\n            }, options.storeLoadOptions);\r\n            var operationTypes = calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload);\r\n            this._customizeRemoteOperations(options, operationTypes);\r\n            if (!options.isCustomLoading) {\r\n                var isRefreshing = this._isRefreshing;\r\n                options.pageIndex = dataSource.pageIndex();\r\n                options.lastLoadOptions = loadOptions;\r\n                options.operationTypes = operationTypes;\r\n                this._loadingOperationTypes = operationTypes;\r\n                this._isRefreshing = true;\r\n                when(isRefreshing || this._isRefreshed || this.refresh(options, operationTypes)).done(() => {\r\n                    if (this._lastOperationId === options.operationId) {\r\n                        this._isRefreshed = true;\r\n                        this.load().always(() => {\r\n                            this._isRefreshed = false\r\n                        })\r\n                    }\r\n                }).fail(() => {\r\n                    dataSource.cancel(options.operationId)\r\n                }).always(() => {\r\n                    this._isRefreshing = false\r\n                });\r\n                dataSource.cancel(this._lastOperationId);\r\n                this._lastOperationId = options.operationId;\r\n                if (this._isRefreshing) {\r\n                    dataSource.cancel(this._lastOperationId)\r\n                }\r\n            }\r\n            this._handleDataLoadingCore(options)\r\n        },\r\n        _handleDataLoadingCore: function(options) {\r\n            var remoteOperations = options.remoteOperations;\r\n            options.loadOptions = {};\r\n            var cachedExtra = options.cachedData.extra;\r\n            var localLoadOptionNames = {\r\n                filter: !remoteOperations.filtering,\r\n                sort: !remoteOperations.sorting,\r\n                group: !remoteOperations.grouping,\r\n                summary: !remoteOperations.summary,\r\n                skip: !remoteOperations.paging,\r\n                take: !remoteOperations.paging,\r\n                requireTotalCount: cachedExtra && \"totalCount\" in cachedExtra || !remoteOperations.paging\r\n            };\r\n            each(options.storeLoadOptions, (function(optionName, optionValue) {\r\n                if (localLoadOptionNames[optionName]) {\r\n                    options.loadOptions[optionName] = optionValue;\r\n                    delete options.storeLoadOptions[optionName]\r\n                }\r\n            }));\r\n            if (cachedExtra) {\r\n                options.extra = cachedExtra\r\n            }\r\n        },\r\n        _handleDataLoaded: function(options) {\r\n            var loadOptions = options.loadOptions;\r\n            var localPaging = options.remoteOperations && !options.remoteOperations.paging;\r\n            var cachedData = options.cachedData;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var needCache = false !== this.option(\"cacheEnabled\") && storeLoadOptions;\r\n            var needPageCache = needCache && !options.isCustomLoading && cachedData && (!localPaging || storeLoadOptions.group);\r\n            var needPagingCache = needCache && localPaging;\r\n            var needStoreCache = needPagingCache && !options.isCustomLoading;\r\n            if (!loadOptions) {\r\n                this._dataSource.cancel(options.operationId);\r\n                return\r\n            }\r\n            if (localPaging) {\r\n                options.skip = loadOptions.skip;\r\n                options.take = loadOptions.take;\r\n                delete loadOptions.skip;\r\n                delete loadOptions.take\r\n            }\r\n            if (loadOptions.group) {\r\n                loadOptions.group = options.group || loadOptions.group\r\n            }\r\n            var groupCount = gridCore.normalizeSortingInfo(options.group || storeLoadOptions.group || loadOptions.group).length;\r\n            if (options.cachedDataPartBegin) {\r\n                options.data = options.cachedDataPartBegin.concat(options.data)\r\n            }\r\n            if (options.cachedDataPartEnd) {\r\n                options.data = options.data.concat(options.cachedDataPartEnd)\r\n            }\r\n            if (!needPageCache || !getPageDataFromCache(options)) {\r\n                if (needPagingCache && options.cachedPagingData) {\r\n                    options.data = cloneItems(options.cachedPagingData, groupCount)\r\n                } else {\r\n                    if (needStoreCache) {\r\n                        if (!this._cachedStoreData) {\r\n                            this._cachedStoreData = cloneItems(options.data, gridCore.normalizeSortingInfo(storeLoadOptions.group).length)\r\n                        } else if (options.mergeStoreLoadData) {\r\n                            options.data = this._cachedStoreData = this._cachedStoreData.concat(options.data)\r\n                        }\r\n                    }\r\n                    new ArrayStore(options.data).load(loadOptions).done(data => {\r\n                        options.data = data;\r\n                        if (needStoreCache) {\r\n                            this._cachedPagingData = cloneItems(options.data, groupCount)\r\n                        }\r\n                    }).fail(error => {\r\n                        options.data = (new Deferred).reject(error)\r\n                    })\r\n                }\r\n                if (loadOptions.requireTotalCount && localPaging) {\r\n                    options.extra = isPlainObject(options.extra) ? options.extra : {};\r\n                    options.extra.totalCount = options.data.length\r\n                }\r\n                if (options.extra && options.extra.totalCount >= 0 && (false === storeLoadOptions.requireTotalCount || false === loadOptions.requireTotalCount)) {\r\n                    options.extra.totalCount = -1\r\n                }\r\n                this._handleDataLoadedCore(options);\r\n                if (needPageCache) {\r\n                    cachedData.extra = cachedData.extra || extend({}, options.extra);\r\n                    when(options.data).done(data => {\r\n                        ! function(options, data, groupCount) {\r\n                            var _ref3, _options$skip3, _ref4, _options$take3;\r\n                            var {\r\n                                storeLoadOptions: storeLoadOptions\r\n                            } = options;\r\n                            var skip = null !== (_ref3 = null !== (_options$skip3 = options.skip) && void 0 !== _options$skip3 ? _options$skip3 : storeLoadOptions.skip) && void 0 !== _ref3 ? _ref3 : 0;\r\n                            var take = null !== (_ref4 = null !== (_options$take3 = options.take) && void 0 !== _options$take3 ? _options$take3 : storeLoadOptions.take) && void 0 !== _ref4 ? _ref4 : 0;\r\n                            for (var i = 0; i < take; i++) {\r\n                                var globalIndex = i + skip;\r\n                                var cacheItems = options.cachedData.items;\r\n                                var skips = 0 === i && options.skips || [];\r\n                                cacheItems[globalIndex] = getCacheItem(cacheItems[globalIndex], data[i], groupCount, skips)\r\n                            }\r\n                        }(options, data, groupCount)\r\n                    })\r\n                }\r\n            }\r\n            when(options.data).done(() => {\r\n                if (options.lastLoadOptions) {\r\n                    this._lastLoadOptions = options.lastLoadOptions;\r\n                    Object.keys(options.operationTypes).forEach(operationType => {\r\n                        this._lastOperationTypes[operationType] = this._lastOperationTypes[operationType] || options.operationTypes[operationType]\r\n                    })\r\n                }\r\n            });\r\n            options.storeLoadOptions = options.originalStoreLoadOptions\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            if (options.remoteOperations && !options.remoteOperations.paging && Array.isArray(options.data)) {\r\n                if (void 0 !== options.skip) {\r\n                    options.data = options.data.slice(options.skip)\r\n                }\r\n                if (void 0 !== options.take) {\r\n                    options.data = options.data.slice(0, options.take)\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            this.loadingChanged.fire(isLoading)\r\n        },\r\n        _handleLoadError: function(error) {\r\n            this.loadError.fire(error);\r\n            this.changed.fire({\r\n                changeType: \"loadError\",\r\n                error: error\r\n            })\r\n        },\r\n        _loadPageSize: function() {\r\n            return this.pageSize()\r\n        },\r\n        _handleDataChanged: function(args) {\r\n            var currentTotalCount;\r\n            var dataSource = this._dataSource;\r\n            var isLoading = false;\r\n            var isDataLoading = !args || isDefined(args.changeType);\r\n            var itemsCount = this.itemsCount();\r\n            if (isDataLoading) {\r\n                this._isLastPage = !itemsCount || !this._loadPageSize() || itemsCount < this._loadPageSize();\r\n                if (this._isLastPage) {\r\n                    this._hasLastPage = true\r\n                }\r\n            }\r\n            if (dataSource.totalCount() >= 0) {\r\n                if (dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    this.pageIndex(dataSource.pageIndex());\r\n                    this.resetPagesCache();\r\n                    dataSource.load();\r\n                    isLoading = true\r\n                }\r\n            } else if (isDataLoading) {\r\n                currentTotalCount = dataSource.pageIndex() * this.pageSize() + itemsCount;\r\n                if (currentTotalCount > this._currentTotalCount) {\r\n                    this._currentTotalCount = currentTotalCount;\r\n                    if (0 === dataSource.pageIndex() || !this.option(\"scrolling.legacyMode\")) {\r\n                        this._totalCountCorrection = 0\r\n                    }\r\n                }\r\n                if (0 === itemsCount && dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    if (\"infinite\" !== this.option(\"scrolling.mode\")) {\r\n                        dataSource.load();\r\n                        isLoading = true\r\n                    }\r\n                }\r\n            }\r\n            if (!isLoading) {\r\n                this._operationTypes = this._lastOperationTypes;\r\n                this._lastOperationTypes = {};\r\n                this.component._optionCache = {};\r\n                this.changed.fire(args);\r\n                this.component._optionCache = void 0\r\n            }\r\n        },\r\n        _scheduleCustomLoadCallbacks: function(deferred) {\r\n            var that = this;\r\n            that._isCustomLoading = true;\r\n            deferred.always((function() {\r\n                that._isCustomLoading = false\r\n            }))\r\n        },\r\n        loadingOperationTypes: function() {\r\n            return this._loadingOperationTypes\r\n        },\r\n        operationTypes: function() {\r\n            return this._operationTypes\r\n        },\r\n        lastLoadOptions: function() {\r\n            return this._lastLoadOptions || {}\r\n        },\r\n        isLastPage: function() {\r\n            return this._isLastPage\r\n        },\r\n        totalCount: function() {\r\n            return parseInt((this._currentTotalCount || this._dataSource.totalCount()) + this._totalCountCorrection)\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        itemsCount: function() {\r\n            return this._dataSource.items().length\r\n        },\r\n        totalItemsCount: function() {\r\n            return this.totalCount()\r\n        },\r\n        pageSize: function() {\r\n            var dataSource = this._dataSource;\r\n            if (!arguments.length && !dataSource.paginate()) {\r\n                return 0\r\n            }\r\n            return dataSource.pageSize.apply(dataSource, arguments)\r\n        },\r\n        pageCount: function() {\r\n            var count = this.totalItemsCount() - this._totalCountCorrection;\r\n            var pageSize = this.pageSize();\r\n            if (pageSize && count > 0) {\r\n                return Math.max(1, Math.ceil(count / pageSize))\r\n            }\r\n            return 1\r\n        },\r\n        hasKnownLastPage: function() {\r\n            return this._hasLastPage || this._dataSource.totalCount() >= 0\r\n        },\r\n        loadFromStore: function(loadOptions, store) {\r\n            var dataSource = this._dataSource;\r\n            var d = new Deferred;\r\n            if (!dataSource) {\r\n                return\r\n            }\r\n            store = store || dataSource.store();\r\n            store.load(loadOptions).done((function(data, extra) {\r\n                if (data && !Array.isArray(data) && Array.isArray(data.data)) {\r\n                    extra = data;\r\n                    data = data.data\r\n                }\r\n                d.resolve(data, extra)\r\n            })).fail(d.reject);\r\n            return d\r\n        },\r\n        isCustomLoading: function() {\r\n            return !!this._isCustomLoading\r\n        },\r\n        load: function(options) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var d = new Deferred;\r\n            if (options) {\r\n                var store = dataSource.store();\r\n                var dataSourceLoadOptions = dataSource.loadOptions();\r\n                var loadResult = {\r\n                    storeLoadOptions: options,\r\n                    isCustomLoading: true\r\n                };\r\n                each(store._customLoadOptions() || [], (function(_, optionName) {\r\n                    if (!(optionName in loadResult.storeLoadOptions)) {\r\n                        loadResult.storeLoadOptions[optionName] = dataSourceLoadOptions[optionName]\r\n                    }\r\n                }));\r\n                this._isLoadingAll = options.isLoadingAll;\r\n                that._scheduleCustomLoadCallbacks(d);\r\n                dataSource._scheduleLoadCallbacks(d);\r\n                that._handleCustomizeStoreLoadOptions(loadResult);\r\n                ! function(action, timeout) {\r\n                    if (isDefined(timeout)) {\r\n                        executeAsync(action, timeout)\r\n                    } else {\r\n                        action()\r\n                    }\r\n                }((function() {\r\n                    if (!dataSource.store()) {\r\n                        return d.reject(\"canceled\")\r\n                    }\r\n                    when(loadResult.data || that.loadFromStore(loadResult.storeLoadOptions)).done((function(data, extra) {\r\n                        loadResult.data = data;\r\n                        loadResult.extra = extra || {};\r\n                        that._handleDataLoaded(loadResult);\r\n                        if (options.requireTotalCount && void 0 === loadResult.extra.totalCount) {\r\n                            loadResult.extra.totalCount = store.totalCount(loadResult.storeLoadOptions)\r\n                        }\r\n                        when(loadResult.data, loadResult.extra.totalCount).done((function(data, totalCount) {\r\n                            loadResult.extra.totalCount = totalCount;\r\n                            d.resolve(data, loadResult.extra)\r\n                        })).fail(d.reject)\r\n                    })).fail(d.reject)\r\n                }), that.option(\"loadingTimeout\"));\r\n                return d.fail((function() {\r\n                    that._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n                })).always(() => {\r\n                    this._isLoadingAll = false\r\n                }).promise()\r\n            } else {\r\n                return dataSource.load()\r\n            }\r\n        },\r\n        reload: function(full) {\r\n            return full ? this._dataSource.reload() : this._dataSource.load()\r\n        },\r\n        getCachedStoreData: function() {\r\n            return this._cachedStoreData\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.data_source_adapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataSourceAdapter from \"../grid_core/ui.grid_core.data_source_adapter\";\r\nvar dataSourceAdapterType = DataSourceAdapter;\r\nexport default {\r\n    extend: function(extender) {\r\n        dataSourceAdapterType = dataSourceAdapterType.inherit(extender)\r\n    },\r\n    create: function(component) {\r\n        return new dataSourceAdapterType(component)\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport CustomStore from \"../../data/custom_store\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    noop,\r\n    deferRender,\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport DataHelperMixin from \"../../data_helper\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    findChanges\r\n} from \"../../core/utils/array_compare\";\r\nexport var dataControllerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            loadingTimeout: 0,\r\n            dataSource: null,\r\n            cacheEnabled: true,\r\n            repaintChangesOnly: false,\r\n            highlightChanges: false,\r\n            onDataErrorOccurred: null,\r\n            remoteOperations: \"auto\",\r\n            paging: {\r\n                enabled: true,\r\n                pageSize: void 0,\r\n                pageIndex: void 0\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        data: modules.Controller.inherit({}).include(DataHelperMixin).inherit(function() {\r\n            var changePaging = function(that, optionName, value) {\r\n                var dataSource = that._dataSource;\r\n                if (dataSource) {\r\n                    if (void 0 !== value) {\r\n                        var oldValue = that._getPagingOptionValue(optionName);\r\n                        if (oldValue !== value) {\r\n                            if (\"pageSize\" === optionName) {\r\n                                dataSource.pageIndex(0)\r\n                            }\r\n                            dataSource[optionName](value);\r\n                            that._skipProcessingPagingChange = true;\r\n                            that.option(\"paging.\" + optionName, value);\r\n                            that._skipProcessingPagingChange = false;\r\n                            var pageIndex = dataSource.pageIndex();\r\n                            return dataSource[\"pageIndex\" === optionName ? \"load\" : \"reload\"]().done(() => that.pageChanged.fire(pageIndex))\r\n                        }\r\n                        return Deferred().resolve().promise()\r\n                    }\r\n                    return dataSource[optionName]()\r\n                }\r\n                return 0\r\n            };\r\n            var members = {\r\n                init: function() {\r\n                    var that = this;\r\n                    that._items = [];\r\n                    that._cachedProcessedItems = null;\r\n                    that._columnsController = that.getController(\"columns\");\r\n                    that._currentOperationTypes = null;\r\n                    that._dataChangedHandler = e => {\r\n                        that._currentOperationTypes = this._dataSource.operationTypes();\r\n                        that._handleDataChanged(e);\r\n                        that._currentOperationTypes = null\r\n                    };\r\n                    that._columnsChangedHandler = that._handleColumnsChanged.bind(that);\r\n                    that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n                    that._loadErrorHandler = that._handleLoadError.bind(that);\r\n                    that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n                    that._changingHandler = that._handleChanging.bind(that);\r\n                    that._dataPushedHandler = that._handleDataPushed.bind(that);\r\n                    that._columnsController.columnsChanged.add(that._columnsChangedHandler);\r\n                    that._isLoading = false;\r\n                    that._isCustomLoading = false;\r\n                    that._repaintChangesOnly = void 0;\r\n                    that._changes = [];\r\n                    that.createAction(\"onDataErrorOccurred\");\r\n                    that.dataErrorOccurred.add((function(error) {\r\n                        return that.executeAction(\"onDataErrorOccurred\", {\r\n                            error: error\r\n                        })\r\n                    }));\r\n                    that._refreshDataSource()\r\n                },\r\n                _getPagingOptionValue: function(optionName) {\r\n                    return this._dataSource[optionName]()\r\n                },\r\n                callbackNames: function() {\r\n                    return [\"changed\", \"loadingChanged\", \"dataErrorOccurred\", \"pageChanged\", \"dataSourceChanged\", \"pushed\"]\r\n                },\r\n                callbackFlags: function(name) {\r\n                    if (\"dataErrorOccurred\" === name) {\r\n                        return {\r\n                            stopOnFalse: true\r\n                        }\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"beginCustomLoading\", \"endCustomLoading\", \"refresh\", \"filter\", \"clearFilter\", \"getCombinedFilter\", \"keyOf\", \"byKey\", \"getDataByKeys\", \"pageIndex\", \"pageSize\", \"pageCount\", \"totalCount\", \"_disposeDataSource\", \"getKeyByRowIndex\", \"getRowIndexByKey\", \"getDataSource\", \"getVisibleRows\", \"repaintRows\"]\r\n                },\r\n                reset: function() {\r\n                    this._columnsController.reset();\r\n                    this._items = [];\r\n                    this._refreshDataSource()\r\n                },\r\n                optionChanged: function(args) {\r\n                    var that = this;\r\n                    var dataSource;\r\n\r\n                    function handled() {\r\n                        args.handled = true\r\n                    }\r\n                    if (\"dataSource\" === args.name && args.name === args.fullName && (args.value === args.previousValue || that.option(\"columns\") && Array.isArray(args.value) && Array.isArray(args.previousValue))) {\r\n                        var _this$_dataSource;\r\n                        var isValueChanged = args.value !== args.previousValue;\r\n                        if (isValueChanged) {\r\n                            var store = that.store();\r\n                            if (store) {\r\n                                store._array = args.value\r\n                            }\r\n                        }\r\n                        handled();\r\n                        var isParasiteChange = Array.isArray(args.value) && !isValueChanged && (null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.isLoading());\r\n                        if (!isParasiteChange) {\r\n                            that.refresh(that.option(\"repaintChangesOnly\"))\r\n                        }\r\n                        return\r\n                    }\r\n                    switch (args.name) {\r\n                        case \"cacheEnabled\":\r\n                        case \"repaintChangesOnly\":\r\n                        case \"highlightChanges\":\r\n                        case \"loadingTimeout\":\r\n                            handled();\r\n                            break;\r\n                        case \"remoteOperations\":\r\n                        case \"keyExpr\":\r\n                        case \"dataSource\":\r\n                        case \"scrolling\":\r\n                            handled();\r\n                            that.reset();\r\n                            break;\r\n                        case \"paging\":\r\n                            dataSource = that.dataSource();\r\n                            if (dataSource && that._setPagingOptions(dataSource)) {\r\n                                var pageIndex = dataSource.pageIndex();\r\n                                dataSource.load().done(() => that.pageChanged.fire(pageIndex))\r\n                            }\r\n                            handled();\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            that.reset();\r\n                            break;\r\n                        case \"columns\":\r\n                            dataSource = that.dataSource();\r\n                            if (dataSource && dataSource.isLoading() && args.name === args.fullName) {\r\n                                this._useSortingGroupingFromColumns = true;\r\n                                dataSource.load()\r\n                            }\r\n                            break;\r\n                        default:\r\n                            that.callBase(args)\r\n                    }\r\n                },\r\n                isReady: function() {\r\n                    return !this._isLoading\r\n                },\r\n                getDataSource: function() {\r\n                    return this._dataSource && this._dataSource._dataSource\r\n                },\r\n                getCombinedFilter: function(returnDataField) {\r\n                    return this.combinedFilter(void 0, returnDataField)\r\n                },\r\n                combinedFilter: function(filter, returnDataField) {\r\n                    var dataSource = this._dataSource;\r\n                    var columnsController = this._columnsController;\r\n                    if (dataSource) {\r\n                        if (void 0 === filter) {\r\n                            filter = dataSource.filter()\r\n                        }\r\n                        var additionalFilter = this._calculateAdditionalFilter();\r\n                        if (additionalFilter) {\r\n                            if (columnsController.isDataSourceApplied() || columnsController.isAllDataTypesDefined()) {\r\n                                filter = gridCoreUtils.combineFilters([additionalFilter, filter])\r\n                            }\r\n                        }\r\n                        filter = columnsController.updateFilter(filter, returnDataField || dataSource.remoteOperations().filtering)\r\n                    }\r\n                    return filter\r\n                },\r\n                waitReady: function() {\r\n                    if (this._updateLockCount) {\r\n                        this._readyDeferred = new Deferred;\r\n                        return this._readyDeferred\r\n                    }\r\n                    return when()\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var changes = this._changes;\r\n                    if (changes.length) {\r\n                        this._changes = [];\r\n                        var repaintChangesOnly = changes.every(change => change.repaintChangesOnly);\r\n                        this.updateItems(1 === changes.length ? changes[0] : {\r\n                            repaintChangesOnly: repaintChangesOnly\r\n                        })\r\n                    }\r\n                    if (this._readyDeferred) {\r\n                        this._readyDeferred.resolve();\r\n                        this._readyDeferred = null\r\n                    }\r\n                },\r\n                _handleCustomizeStoreLoadOptions: function(e) {\r\n                    var _storeLoadOptions$fil;\r\n                    var columnsController = this._columnsController;\r\n                    var dataSource = this._dataSource;\r\n                    var storeLoadOptions = e.storeLoadOptions;\r\n                    if (e.isCustomLoading && !storeLoadOptions.isLoadingAll) {\r\n                        return\r\n                    }\r\n                    storeLoadOptions.filter = this.combinedFilter(storeLoadOptions.filter);\r\n                    if (1 === (null === (_storeLoadOptions$fil = storeLoadOptions.filter) || void 0 === _storeLoadOptions$fil ? void 0 : _storeLoadOptions$fil.length) && \"!\" === storeLoadOptions.filter[0]) {\r\n                        e.data = [];\r\n                        e.extra = e.extra || {};\r\n                        e.extra.totalCount = 0\r\n                    }\r\n                    if (!columnsController.isDataSourceApplied()) {\r\n                        columnsController.updateColumnDataTypes(dataSource)\r\n                    }\r\n                    this._columnsUpdating = true;\r\n                    columnsController.updateSortingGrouping(dataSource, !this._useSortingGroupingFromColumns);\r\n                    this._columnsUpdating = false;\r\n                    storeLoadOptions.sort = columnsController.getSortDataSourceParameters();\r\n                    storeLoadOptions.group = columnsController.getGroupDataSourceParameters();\r\n                    dataSource.sort(storeLoadOptions.sort);\r\n                    dataSource.group(storeLoadOptions.group);\r\n                    storeLoadOptions.sort = columnsController.getSortDataSourceParameters(!dataSource.remoteOperations().sorting);\r\n                    e.group = columnsController.getGroupDataSourceParameters(!dataSource.remoteOperations().grouping)\r\n                },\r\n                _handleColumnsChanged: function(e) {\r\n                    var that = this;\r\n                    var changeTypes = e.changeTypes;\r\n                    var optionNames = e.optionNames;\r\n                    var filterValue;\r\n                    var filterValues;\r\n                    var filterApplied;\r\n                    if (changeTypes.sorting || changeTypes.grouping) {\r\n                        if (that._dataSource && !that._columnsUpdating) {\r\n                            that._dataSource.group(that._columnsController.getGroupDataSourceParameters());\r\n                            that._dataSource.sort(that._columnsController.getSortDataSourceParameters());\r\n                            that.reload()\r\n                        }\r\n                    } else if (changeTypes.columns) {\r\n                        filterValues = that._columnsController.columnOption(e.columnIndex, \"filterValues\");\r\n                        if (optionNames.filterValues || optionNames.filterType && Array.isArray(filterValues) || optionNames.filterValue || optionNames.selectedFilterOperation || optionNames.allowFiltering) {\r\n                            filterValue = that._columnsController.columnOption(e.columnIndex, \"filterValue\");\r\n                            if (Array.isArray(filterValues) || void 0 === e.columnIndex || isDefined(filterValue) || !optionNames.selectedFilterOperation || optionNames.filterValue) {\r\n                                that._applyFilter();\r\n                                filterApplied = true\r\n                            }\r\n                        }\r\n                        if (!that._needApplyFilter && !gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\", \"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"filterValues\", \"filterType\"])) {\r\n                            that._columnsController.columnsChanged.add((function updateItemsHandler() {\r\n                                that._columnsController.columnsChanged.remove(updateItemsHandler);\r\n                                that.updateItems({\r\n                                    virtualColumnsScrolling: e.changeTypes.virtualColumnsScrolling\r\n                                })\r\n                            }))\r\n                        }\r\n                        if (isDefined(optionNames.visible)) {\r\n                            var column = that._columnsController.columnOption(e.columnIndex);\r\n                            if (column && (isDefined(column.filterValue) || isDefined(column.filterValues))) {\r\n                                that._applyFilter();\r\n                                filterApplied = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!filterApplied && changeTypes.filtering) {\r\n                        that.reload()\r\n                    }\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var columnsController = that._columnsController;\r\n                    var isAsyncDataSourceApplying = false;\r\n                    this._useSortingGroupingFromColumns = false;\r\n                    if (dataSource && !that._isDataSourceApplying) {\r\n                        that._isDataSourceApplying = true;\r\n                        when(that._columnsController.applyDataSource(dataSource)).done((function() {\r\n                            if (that._isLoading) {\r\n                                that._handleLoadingChanged(false)\r\n                            }\r\n                            if (isAsyncDataSourceApplying && e && e.isDelayed) {\r\n                                e.isDelayed = false\r\n                            }\r\n                            that._isDataSourceApplying = false;\r\n                            var needApplyFilter = that._needApplyFilter;\r\n                            that._needApplyFilter = false;\r\n                            if (needApplyFilter && !that._isAllDataTypesDefined && (additionalFilter = that._calculateAdditionalFilter(), additionalFilter && additionalFilter.length)) {\r\n                                errors.log(\"W1005\", that.component.NAME);\r\n                                that._applyFilter()\r\n                            } else {\r\n                                that.updateItems(e, true)\r\n                            }\r\n                            var additionalFilter\r\n                        })).fail((function() {\r\n                            that._isDataSourceApplying = false\r\n                        }));\r\n                        if (that._isDataSourceApplying) {\r\n                            isAsyncDataSourceApplying = true;\r\n                            that._handleLoadingChanged(true)\r\n                        }\r\n                        that._needApplyFilter = !that._columnsController.isDataSourceApplied();\r\n                        that._isAllDataTypesDefined = columnsController.isAllDataTypesDefined()\r\n                    }\r\n                },\r\n                _handleLoadingChanged: function(isLoading) {\r\n                    this._isLoading = isLoading;\r\n                    this._fireLoadingChanged()\r\n                },\r\n                _handleLoadError: function(e) {\r\n                    this.dataErrorOccurred.fire(e)\r\n                },\r\n                _handleDataPushed: function(changes) {\r\n                    this.pushed.fire(changes)\r\n                },\r\n                fireError: function() {\r\n                    this.dataErrorOccurred.fire(errors.Error.apply(errors, arguments))\r\n                },\r\n                _setPagingOptions: function(dataSource) {\r\n                    var pageIndex = this.option(\"paging.pageIndex\");\r\n                    var pageSize = this.option(\"paging.pageSize\");\r\n                    var pagingEnabled = this.option(\"paging.enabled\");\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var appendMode = \"infinite\" === scrollingMode;\r\n                    var virtualMode = \"virtual\" === scrollingMode;\r\n                    var paginate = pagingEnabled || virtualMode || appendMode;\r\n                    var isChanged = false;\r\n                    dataSource.requireTotalCount(!appendMode);\r\n                    if (void 0 !== pagingEnabled && dataSource.paginate() !== paginate) {\r\n                        dataSource.paginate(paginate);\r\n                        isChanged = true\r\n                    }\r\n                    if (void 0 !== pageSize && dataSource.pageSize() !== pageSize) {\r\n                        dataSource.pageSize(pageSize);\r\n                        isChanged = true\r\n                    }\r\n                    if (void 0 !== pageIndex && dataSource.pageIndex() !== pageIndex) {\r\n                        dataSource.pageIndex(pageIndex);\r\n                        isChanged = true\r\n                    }\r\n                    return isChanged\r\n                },\r\n                _getSpecificDataSourceOption: function() {\r\n                    var dataSource = this.option(\"dataSource\");\r\n                    if (Array.isArray(dataSource)) {\r\n                        return {\r\n                            store: {\r\n                                type: \"array\",\r\n                                data: dataSource,\r\n                                key: this.option(\"keyExpr\")\r\n                            }\r\n                        }\r\n                    }\r\n                    return dataSource\r\n                },\r\n                _initDataSource: function() {\r\n                    var dataSource = this.option(\"dataSource\");\r\n                    var oldDataSource = this._dataSource;\r\n                    this.callBase();\r\n                    dataSource = this._dataSource;\r\n                    this._useSortingGroupingFromColumns = true;\r\n                    this._cachedProcessedItems = null;\r\n                    if (dataSource) {\r\n                        this._setPagingOptions(dataSource);\r\n                        this.setDataSource(dataSource)\r\n                    } else if (oldDataSource) {\r\n                        this.updateItems()\r\n                    }\r\n                },\r\n                _loadDataSource: function() {\r\n                    var dataSource = this._dataSource;\r\n                    var result = new Deferred;\r\n                    when(this._columnsController.refresh(true)).always((function() {\r\n                        if (dataSource) {\r\n                            dataSource.load().done(result.resolve).fail(result.reject)\r\n                        } else {\r\n                            result.resolve()\r\n                        }\r\n                    }));\r\n                    return result.promise()\r\n                },\r\n                _beforeProcessItems: function(items) {\r\n                    return items.slice(0)\r\n                },\r\n                getRowIndexDelta: function() {\r\n                    return 0\r\n                },\r\n                _processItems: function(items, change) {\r\n                    var that = this;\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    var changeType = change.changeType;\r\n                    var visibleColumns = that._columnsController.getVisibleColumns(null, \"loadingAll\" === changeType);\r\n                    var visibleItems = that._items;\r\n                    var lastVisibleItem = \"append\" === changeType && visibleItems.length > 0 ? visibleItems[visibleItems.length - 1] : null;\r\n                    var dataIndex = isDefined(null === lastVisibleItem || void 0 === lastVisibleItem ? void 0 : lastVisibleItem.dataIndex) ? lastVisibleItem.dataIndex + 1 : 0;\r\n                    var options = {\r\n                        visibleColumns: visibleColumns,\r\n                        dataIndex: dataIndex\r\n                    };\r\n                    var result = [];\r\n                    each(items, (function(index, item) {\r\n                        if (isDefined(item)) {\r\n                            options.rowIndex = index - rowIndexDelta;\r\n                            item = that._processItem(item, options);\r\n                            result.push(item)\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                _processItem: function(item, options) {\r\n                    item = this._generateDataItem(item, options);\r\n                    item = this._processDataItem(item, options);\r\n                    item.dataIndex = options.dataIndex++;\r\n                    return item\r\n                },\r\n                _generateDataItem: function(data) {\r\n                    return {\r\n                        rowType: \"data\",\r\n                        data: data,\r\n                        key: this.keyOf(data)\r\n                    }\r\n                },\r\n                _processDataItem: function(dataItem, options) {\r\n                    dataItem.values = this.generateDataValues(dataItem.data, options.visibleColumns);\r\n                    return dataItem\r\n                },\r\n                generateDataValues: function(data, columns, isModified) {\r\n                    var values = [];\r\n                    var value;\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        var column = columns[i];\r\n                        value = isModified ? void 0 : null;\r\n                        if (!column.command) {\r\n                            if (column.calculateCellValue) {\r\n                                value = column.calculateCellValue(data)\r\n                            } else if (column.dataField) {\r\n                                value = data[column.dataField]\r\n                            }\r\n                        }\r\n                        values.push(value)\r\n                    }\r\n                    return values\r\n                },\r\n                _applyChange: function(change) {\r\n                    if (\"update\" === change.changeType) {\r\n                        this._applyChangeUpdate(change)\r\n                    } else if (this.items().length && change.repaintChangesOnly && \"refresh\" === change.changeType) {\r\n                        this._applyChangesOnly(change)\r\n                    } else if (\"refresh\" === change.changeType) {\r\n                        this._applyChangeFull(change)\r\n                    }\r\n                },\r\n                _applyChangeFull: function(change) {\r\n                    this._items = change.items.slice(0)\r\n                },\r\n                _getRowIndices: function(change) {\r\n                    var rowIndices = change.rowIndices.slice(0);\r\n                    var rowIndexDelta = this.getRowIndexDelta();\r\n                    rowIndices.sort((function(a, b) {\r\n                        return a - b\r\n                    }));\r\n                    for (var i = 0; i < rowIndices.length; i++) {\r\n                        var correctedRowIndex = rowIndices[i];\r\n                        if (change.allowInvisibleRowIndices) {\r\n                            correctedRowIndex += rowIndexDelta\r\n                        }\r\n                        if (correctedRowIndex < 0) {\r\n                            rowIndices.splice(i, 1);\r\n                            i--\r\n                        }\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                _applyChangeUpdate: function(change) {\r\n                    var that = this;\r\n                    var items = change.items;\r\n                    var rowIndices = that._getRowIndices(change);\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    var repaintChangesOnly = that.option(\"repaintChangesOnly\");\r\n                    var prevIndex = -1;\r\n                    var rowIndexCorrection = 0;\r\n                    var changeType;\r\n                    change.items = [];\r\n                    change.rowIndices = [];\r\n                    change.columnIndices = [];\r\n                    change.changeTypes = [];\r\n                    var equalItems = function(item1, item2, strict) {\r\n                        var result = item1 && item2 && equalByValue(item1.key, item2.key);\r\n                        if (result && strict) {\r\n                            result = item1.rowType === item2.rowType && (\"detail\" !== item2.rowType || item1.isEditing === item2.isEditing)\r\n                        }\r\n                        return result\r\n                    };\r\n                    each(rowIndices, (function(index, rowIndex) {\r\n                        var columnIndices;\r\n                        rowIndex += rowIndexCorrection + rowIndexDelta;\r\n                        if (prevIndex === rowIndex) {\r\n                            return\r\n                        }\r\n                        prevIndex = rowIndex;\r\n                        var oldItem = that._items[rowIndex];\r\n                        var oldNextItem = that._items[rowIndex + 1];\r\n                        var newItem = items[rowIndex];\r\n                        var newNextItem = items[rowIndex + 1];\r\n                        var strict = equalItems(oldItem, oldNextItem) || equalItems(newItem, newNextItem);\r\n                        if (newItem) {\r\n                            newItem.rowIndex = rowIndex;\r\n                            change.items.push(newItem)\r\n                        }\r\n                        if (oldItem && newItem && equalItems(oldItem, newItem, strict)) {\r\n                            changeType = \"update\";\r\n                            that._items[rowIndex] = newItem;\r\n                            if (oldItem.visible !== newItem.visible) {\r\n                                change.items.splice(-1, 1, {\r\n                                    visible: newItem.visible\r\n                                })\r\n                            } else if (repaintChangesOnly && !change.isFullUpdate) {\r\n                                columnIndices = that._partialUpdateRow(oldItem, newItem, rowIndex - rowIndexDelta)\r\n                            }\r\n                        } else if (newItem && !oldItem || newNextItem && equalItems(oldItem, newNextItem, strict)) {\r\n                            changeType = \"insert\";\r\n                            that._items.splice(rowIndex, 0, newItem);\r\n                            rowIndexCorrection++\r\n                        } else if (oldItem && !newItem || oldNextItem && equalItems(newItem, oldNextItem, strict)) {\r\n                            changeType = \"remove\";\r\n                            that._items.splice(rowIndex, 1);\r\n                            rowIndexCorrection--;\r\n                            prevIndex = -1\r\n                        } else if (newItem) {\r\n                            changeType = \"update\";\r\n                            that._items[rowIndex] = newItem\r\n                        } else {\r\n                            return\r\n                        }\r\n                        change.rowIndices.push(rowIndex - rowIndexDelta);\r\n                        change.changeTypes.push(changeType);\r\n                        change.columnIndices.push(columnIndices)\r\n                    }))\r\n                },\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    if (JSON.stringify(oldRow.values[columnIndex]) !== JSON.stringify(newRow.values[columnIndex])) {\r\n                        return true\r\n                    }\r\n\r\n                    function isCellModified(row, columnIndex) {\r\n                        return row.modifiedValues ? void 0 !== row.modifiedValues[columnIndex] : false\r\n                    }\r\n                    if (isCellModified(oldRow, columnIndex) !== isCellModified(newRow, columnIndex)) {\r\n                        return true\r\n                    }\r\n                    return false\r\n                },\r\n                _getChangedColumnIndices: function(oldItem, newItem, visibleRowIndex, isLiveUpdate) {\r\n                    var columnIndices;\r\n                    if (oldItem.rowType === newItem.rowType) {\r\n                        if (\"group\" !== newItem.rowType && \"groupFooter\" !== newItem.rowType) {\r\n                            columnIndices = [];\r\n                            if (\"detail\" !== newItem.rowType) {\r\n                                for (var columnIndex = 0; columnIndex < oldItem.values.length; columnIndex++) {\r\n                                    if (this._isCellChanged(oldItem, newItem, visibleRowIndex, columnIndex, isLiveUpdate)) {\r\n                                        columnIndices.push(columnIndex)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (\"group\" === newItem.rowType && newItem.isExpanded === oldItem.isExpanded && oldItem.cells) {\r\n                            columnIndices = oldItem.cells.map((cell, index) => {\r\n                                var _cell$column;\r\n                                return \"groupExpand\" !== (null === (_cell$column = cell.column) || void 0 === _cell$column ? void 0 : _cell$column.type) ? index : -1\r\n                            }).filter(index => index >= 0)\r\n                        }\r\n                    }\r\n                    return columnIndices\r\n                },\r\n                _partialUpdateRow: function(oldItem, newItem, visibleRowIndex, isLiveUpdate) {\r\n                    var _changedColumnIndices;\r\n                    var changedColumnIndices = this._getChangedColumnIndices(oldItem, newItem, visibleRowIndex, isLiveUpdate);\r\n                    if (null !== (_changedColumnIndices = changedColumnIndices) && void 0 !== _changedColumnIndices && _changedColumnIndices.length && this.option(\"dataRowTemplate\")) {\r\n                        changedColumnIndices = void 0\r\n                    }\r\n                    if (changedColumnIndices) {\r\n                        oldItem.cells && oldItem.cells.forEach((function(cell, columnIndex) {\r\n                            var isCellChanged = changedColumnIndices.indexOf(columnIndex) >= 0;\r\n                            if (!isCellChanged && cell && cell.update) {\r\n                                cell.update(newItem)\r\n                            }\r\n                        }));\r\n                        newItem.update = oldItem.update;\r\n                        newItem.watch = oldItem.watch;\r\n                        newItem.cells = oldItem.cells;\r\n                        if (isLiveUpdate) {\r\n                            newItem.oldValues = oldItem.values\r\n                        }\r\n                        oldItem.update && oldItem.update(newItem)\r\n                    }\r\n                    return changedColumnIndices\r\n                },\r\n                _isItemEquals: function(item1, item2) {\r\n                    if (JSON.stringify(item1.values) !== JSON.stringify(item2.values)) {\r\n                        return false\r\n                    }\r\n                    if ([\"modified\", \"isNewRow\", \"removed\", \"isEditing\"].some(field => item1[field] !== item2[field])) {\r\n                        return false\r\n                    }\r\n                    if (\"group\" === item1.rowType || \"groupFooter\" === item1.rowType) {\r\n                        var _item1$data, _item2$data, _item1$data2, _item2$data2;\r\n                        var expandedMatch = item1.isExpanded === item2.isExpanded;\r\n                        var summaryCellsMatch = JSON.stringify(item1.summaryCells) === JSON.stringify(item2.summaryCells);\r\n                        var continuationMatch = (null === (_item1$data = item1.data) || void 0 === _item1$data ? void 0 : _item1$data.isContinuation) === (null === (_item2$data = item2.data) || void 0 === _item2$data ? void 0 : _item2$data.isContinuation) && (null === (_item1$data2 = item1.data) || void 0 === _item1$data2 ? void 0 : _item1$data2.isContinuationOnNextPage) === (null === (_item2$data2 = item2.data) || void 0 === _item2$data2 ? void 0 : _item2$data2.isContinuationOnNextPage);\r\n                        if (!expandedMatch || !summaryCellsMatch || !continuationMatch) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _applyChangesOnly: function(change) {\r\n                    var rowIndices = [];\r\n                    var columnIndices = [];\r\n                    var changeTypes = [];\r\n                    var items = [];\r\n                    var newIndexByKey = {};\r\n\r\n                    function getRowKey(row) {\r\n                        if (row) {\r\n                            return row.rowType + \",\" + JSON.stringify(row.key)\r\n                        }\r\n                    }\r\n                    var currentItems = this._items;\r\n                    var oldItems = currentItems.slice();\r\n                    change.items.forEach((function(item, index) {\r\n                        var key = getRowKey(item);\r\n                        newIndexByKey[key] = index;\r\n                        item.rowIndex = index\r\n                    }));\r\n                    var result = findChanges(oldItems, change.items, getRowKey, (item1, item2) => {\r\n                        if (!this._isItemEquals(item1, item2)) {\r\n                            return false\r\n                        }\r\n                        if (item1.cells) {\r\n                            item1.update && item1.update(item2);\r\n                            item1.cells.forEach((function(cell) {\r\n                                if (cell && cell.update) {\r\n                                    cell.update(item2, true)\r\n                                }\r\n                            }))\r\n                        }\r\n                        return true\r\n                    });\r\n                    if (!result) {\r\n                        this._applyChangeFull(change);\r\n                        return\r\n                    }\r\n                    result.forEach(change => {\r\n                        switch (change.type) {\r\n                            case \"update\":\r\n                                var index = change.index;\r\n                                var newItem = change.data;\r\n                                var oldItem = change.oldItem;\r\n                                var changedColumnIndices = this._partialUpdateRow(oldItem, newItem, index, true);\r\n                                rowIndices.push(index);\r\n                                changeTypes.push(\"update\");\r\n                                items.push(newItem);\r\n                                currentItems[index] = newItem;\r\n                                columnIndices.push(changedColumnIndices);\r\n                                break;\r\n                            case \"insert\":\r\n                                rowIndices.push(change.index);\r\n                                changeTypes.push(\"insert\");\r\n                                items.push(change.data);\r\n                                columnIndices.push(void 0);\r\n                                currentItems.splice(change.index, 0, change.data);\r\n                                break;\r\n                            case \"remove\":\r\n                                rowIndices.push(change.index);\r\n                                changeTypes.push(\"remove\");\r\n                                currentItems.splice(change.index, 1);\r\n                                items.push(change.oldItem);\r\n                                columnIndices.push(void 0)\r\n                        }\r\n                    });\r\n                    change.repaintChangesOnly = true;\r\n                    change.changeType = \"update\";\r\n                    change.rowIndices = rowIndices;\r\n                    change.columnIndices = columnIndices;\r\n                    change.changeTypes = changeTypes;\r\n                    change.items = items;\r\n                    if (oldItems.length) {\r\n                        change.isLiveUpdate = true\r\n                    }\r\n                    this._correctRowIndices(rowIndex => {\r\n                        var oldRowIndexOffset = this._rowIndexOffset || 0;\r\n                        var rowIndexOffset = this.getRowIndexOffset();\r\n                        var oldItem = oldItems[rowIndex - oldRowIndexOffset];\r\n                        var key = getRowKey(oldItem);\r\n                        var newVisibleRowIndex = newIndexByKey[key];\r\n                        return newVisibleRowIndex >= 0 ? newVisibleRowIndex + rowIndexOffset - rowIndex : 0\r\n                    })\r\n                },\r\n                _correctRowIndices: noop,\r\n                _afterProcessItems: function(items) {\r\n                    return items\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    var items;\r\n                    var dataSource = this._dataSource;\r\n                    var changeType = change.changeType || \"refresh\";\r\n                    change.changeType = changeType;\r\n                    if (dataSource) {\r\n                        var cachedProcessedItems = this._cachedProcessedItems;\r\n                        if (change.useProcessedItemsCache && cachedProcessedItems) {\r\n                            items = cachedProcessedItems\r\n                        } else {\r\n                            items = change.items || dataSource.items();\r\n                            items = this._beforeProcessItems(items);\r\n                            items = this._processItems(items, change);\r\n                            this._cachedProcessedItems = items\r\n                        }\r\n                        items = this._afterProcessItems(items, change);\r\n                        change.items = items;\r\n                        var oldItems = this._items.length === items.length && this._items;\r\n                        this._applyChange(change);\r\n                        var rowIndexDelta = this.getRowIndexDelta();\r\n                        each(this._items, (index, item) => {\r\n                            item.rowIndex = index - rowIndexDelta;\r\n                            if (oldItems) {\r\n                                item.cells = oldItems[index].cells || []\r\n                            }\r\n                            var newItem = items[index];\r\n                            if (newItem) {\r\n                                item.loadIndex = newItem.loadIndex\r\n                            }\r\n                        });\r\n                        this._rowIndexOffset = this.getRowIndexOffset()\r\n                    } else {\r\n                        this._items = []\r\n                    }\r\n                },\r\n                _handleChanging: function(e) {\r\n                    var rows = this.getVisibleRows();\r\n                    var dataSource = this.dataSource();\r\n                    if (dataSource) {\r\n                        e.changes.forEach((function(change) {\r\n                            if (\"insert\" === change.type && change.index >= 0) {\r\n                                var dataIndex = 0;\r\n                                for (var i = 0; i < change.index; i++) {\r\n                                    var row = rows[i];\r\n                                    if (row && (\"data\" === row.rowType || \"group\" === row.rowType)) {\r\n                                        dataIndex++\r\n                                    }\r\n                                }\r\n                                change.index = dataIndex\r\n                            }\r\n                        }))\r\n                    }\r\n                },\r\n                updateItems: function(change, isDataChanged) {\r\n                    change = change || {};\r\n                    if (void 0 !== this._repaintChangesOnly) {\r\n                        change.repaintChangesOnly = change.repaintChangesOnly || this._repaintChangesOnly;\r\n                        change.needUpdateDimensions = change.needUpdateDimensions || this._needUpdateDimensions\r\n                    } else if (change.changes) {\r\n                        change.repaintChangesOnly = this.option(\"repaintChangesOnly\")\r\n                    } else if (isDataChanged) {\r\n                        var operationTypes = this.dataSource().operationTypes();\r\n                        change.repaintChangesOnly = operationTypes && !operationTypes.grouping && !operationTypes.filtering && this.option(\"repaintChangesOnly\");\r\n                        change.isDataChanged = true;\r\n                        if (operationTypes && (operationTypes.reload || operationTypes.paging || operationTypes.groupExpanding)) {\r\n                            change.needUpdateDimensions = true\r\n                        }\r\n                    }\r\n                    if (this._updateLockCount) {\r\n                        this._changes.push(change);\r\n                        return\r\n                    }\r\n                    this._updateItemsCore(change);\r\n                    if (change.cancel) {\r\n                        return\r\n                    }\r\n                    this._fireChanged(change)\r\n                },\r\n                loadingOperationTypes: function() {\r\n                    var dataSource = this.dataSource();\r\n                    return dataSource && dataSource.loadingOperationTypes() || {}\r\n                },\r\n                _fireChanged: function(change) {\r\n                    if (this._currentOperationTypes) {\r\n                        change.operationTypes = this._currentOperationTypes;\r\n                        this._currentOperationTypes = null\r\n                    }\r\n                    deferRender(() => {\r\n                        this.changed.fire(change)\r\n                    })\r\n                },\r\n                isLoading: function() {\r\n                    return this._isLoading || this._isCustomLoading\r\n                },\r\n                _fireLoadingChanged: function() {\r\n                    this.loadingChanged.fire(this.isLoading(), this._loadingText)\r\n                },\r\n                _calculateAdditionalFilter: function() {\r\n                    return null\r\n                },\r\n                _applyFilter: function() {\r\n                    var dataSource = this._dataSource;\r\n                    if (dataSource) {\r\n                        dataSource.pageIndex(0);\r\n                        this._isFilterApplying = true;\r\n                        return this.reload().done(() => {\r\n                            if (this._isFilterApplying) {\r\n                                this.pageChanged.fire()\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                resetFilterApplying: function() {\r\n                    this._isFilterApplying = false\r\n                },\r\n                filter: function(filterExpr) {\r\n                    var dataSource = this._dataSource;\r\n                    var filter = dataSource && dataSource.filter();\r\n                    if (0 === arguments.length) {\r\n                        return filter\r\n                    }\r\n                    filterExpr = arguments.length > 1 ? Array.prototype.slice.call(arguments, 0) : filterExpr;\r\n                    if (gridCoreUtils.equalFilterParameters(filter, filterExpr)) {\r\n                        return\r\n                    }\r\n                    if (dataSource) {\r\n                        dataSource.filter(filterExpr)\r\n                    }\r\n                    this._applyFilter()\r\n                },\r\n                clearFilter: function(filterName) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var clearColumnOption = function(optionName) {\r\n                        var columnCount = columnsController.columnCount();\r\n                        for (var index = 0; index < columnCount; index++) {\r\n                            columnsController.columnOption(index, optionName, void 0)\r\n                        }\r\n                    };\r\n                    that.component.beginUpdate();\r\n                    if (arguments.length > 0) {\r\n                        switch (filterName) {\r\n                            case \"dataSource\":\r\n                                that.filter(null);\r\n                                break;\r\n                            case \"search\":\r\n                                that.searchByText(\"\");\r\n                                break;\r\n                            case \"header\":\r\n                                clearColumnOption(\"filterValues\");\r\n                                break;\r\n                            case \"row\":\r\n                                clearColumnOption(\"filterValue\")\r\n                        }\r\n                    } else {\r\n                        that.filter(null);\r\n                        that.searchByText(\"\");\r\n                        clearColumnOption(\"filterValue\");\r\n                        clearColumnOption(\"bufferedFilterValue\");\r\n                        clearColumnOption(\"filterValues\")\r\n                    }\r\n                    that.component.endUpdate()\r\n                },\r\n                _fireDataSourceChanged: function() {\r\n                    var that = this;\r\n                    that.changed.add((function changedHandler() {\r\n                        that.changed.remove(changedHandler);\r\n                        that.dataSourceChanged.fire()\r\n                    }))\r\n                },\r\n                _getDataSourceAdapter: noop,\r\n                _createDataSourceAdapterCore: function(dataSource, remoteOperations) {\r\n                    var dataSourceAdapterProvider = this._getDataSourceAdapter();\r\n                    var dataSourceAdapter = dataSourceAdapterProvider.create(this.component);\r\n                    dataSourceAdapter.init(dataSource, remoteOperations);\r\n                    return dataSourceAdapter\r\n                },\r\n                isLocalStore: function(store) {\r\n                    store = store || this.store();\r\n                    return store instanceof ArrayStore\r\n                },\r\n                isCustomStore: function(store) {\r\n                    store = store || this.store();\r\n                    return store instanceof CustomStore\r\n                },\r\n                _createDataSourceAdapter: function(dataSource) {\r\n                    var remoteOperations = this.option(\"remoteOperations\");\r\n                    var store = dataSource.store();\r\n                    var enabledRemoteOperations = {\r\n                        filtering: true,\r\n                        sorting: true,\r\n                        paging: true,\r\n                        grouping: true,\r\n                        summary: true\r\n                    };\r\n                    if (remoteOperations && remoteOperations.groupPaging) {\r\n                        remoteOperations = extend({}, enabledRemoteOperations, remoteOperations)\r\n                    }\r\n                    if (\"auto\" === remoteOperations) {\r\n                        remoteOperations = this.isLocalStore(store) || this.isCustomStore(store) ? {} : {\r\n                            filtering: true,\r\n                            sorting: true,\r\n                            paging: true\r\n                        }\r\n                    }\r\n                    if (true === remoteOperations) {\r\n                        remoteOperations = enabledRemoteOperations\r\n                    }\r\n                    return this._createDataSourceAdapterCore(dataSource, remoteOperations)\r\n                },\r\n                setDataSource: function(dataSource) {\r\n                    var oldDataSource = this._dataSource;\r\n                    if (!dataSource && oldDataSource) {\r\n                        oldDataSource.cancelAll();\r\n                        oldDataSource.changed.remove(this._dataChangedHandler);\r\n                        oldDataSource.loadingChanged.remove(this._loadingChangedHandler);\r\n                        oldDataSource.loadError.remove(this._loadErrorHandler);\r\n                        oldDataSource.customizeStoreLoadOptions.remove(this._customizeStoreLoadOptionsHandler);\r\n                        oldDataSource.changing.remove(this._changingHandler);\r\n                        oldDataSource.pushed.remove(this._dataPushedHandler);\r\n                        oldDataSource.dispose(this._isSharedDataSource)\r\n                    }\r\n                    if (dataSource) {\r\n                        dataSource = this._createDataSourceAdapter(dataSource)\r\n                    }\r\n                    this._dataSource = dataSource;\r\n                    if (dataSource) {\r\n                        this._fireDataSourceChanged();\r\n                        this._isLoading = !dataSource.isLoaded();\r\n                        this._needApplyFilter = true;\r\n                        this._isAllDataTypesDefined = this._columnsController.isAllDataTypesDefined();\r\n                        dataSource.changed.add(this._dataChangedHandler);\r\n                        dataSource.loadingChanged.add(this._loadingChangedHandler);\r\n                        dataSource.loadError.add(this._loadErrorHandler);\r\n                        dataSource.customizeStoreLoadOptions.add(this._customizeStoreLoadOptionsHandler);\r\n                        dataSource.changing.add(this._changingHandler);\r\n                        dataSource.pushed.add(this._dataPushedHandler)\r\n                    }\r\n                },\r\n                items: function() {\r\n                    return this._items\r\n                },\r\n                isEmpty: function() {\r\n                    return !this.items().length\r\n                },\r\n                pageCount: function() {\r\n                    return this._dataSource ? this._dataSource.pageCount() : 1\r\n                },\r\n                dataSource: function() {\r\n                    return this._dataSource\r\n                },\r\n                store: function() {\r\n                    var dataSource = this._dataSource;\r\n                    return dataSource && dataSource.store()\r\n                },\r\n                loadAll: function(data) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    var dataSource = that._dataSource;\r\n                    if (dataSource) {\r\n                        if (data) {\r\n                            var options = {\r\n                                data: data,\r\n                                isCustomLoading: true,\r\n                                storeLoadOptions: {\r\n                                    isLoadingAll: true\r\n                                },\r\n                                loadOptions: {\r\n                                    filter: that.getCombinedFilter(),\r\n                                    group: dataSource.group(),\r\n                                    sort: dataSource.sort()\r\n                                }\r\n                            };\r\n                            dataSource._handleDataLoaded(options);\r\n                            when(options.data).done((function(data) {\r\n                                data = that._beforeProcessItems(data);\r\n                                d.resolve(that._processItems(data, {\r\n                                    changeType: \"loadingAll\"\r\n                                }), options.extra && options.extra.summary)\r\n                            })).fail(d.reject)\r\n                        } else if (!dataSource.isLoading()) {\r\n                            var loadOptions = extend({}, dataSource.loadOptions(), {\r\n                                isLoadingAll: true,\r\n                                requireTotalCount: false\r\n                            });\r\n                            dataSource.load(loadOptions).done((function(items, extra) {\r\n                                items = that._beforeProcessItems(items);\r\n                                items = that._processItems(items, {\r\n                                    changeType: \"loadingAll\"\r\n                                });\r\n                                d.resolve(items, extra && extra.summary)\r\n                            })).fail(d.reject)\r\n                        } else {\r\n                            d.reject()\r\n                        }\r\n                    } else {\r\n                        d.resolve([])\r\n                    }\r\n                    return d\r\n                },\r\n                getKeyByRowIndex: function(rowIndex, byLoaded) {\r\n                    var item = this.items(byLoaded)[rowIndex];\r\n                    if (item) {\r\n                        return item.key\r\n                    }\r\n                },\r\n                getRowIndexByKey: function(key, byLoaded) {\r\n                    return gridCoreUtils.getIndexByKey(key, this.items(byLoaded))\r\n                },\r\n                keyOf: function(data) {\r\n                    var store = this.store();\r\n                    if (store) {\r\n                        return store.keyOf(data)\r\n                    }\r\n                },\r\n                byKey: function(key) {\r\n                    var store = this.store();\r\n                    var rowIndex = this.getRowIndexByKey(key);\r\n                    var result;\r\n                    if (!store) {\r\n                        return\r\n                    }\r\n                    if (rowIndex >= 0) {\r\n                        result = (new Deferred).resolve(this.items()[rowIndex].data)\r\n                    }\r\n                    return result || store.byKey(key)\r\n                },\r\n                key: function() {\r\n                    var store = this.store();\r\n                    if (store) {\r\n                        return store.key()\r\n                    }\r\n                },\r\n                getRowIndexOffset: function() {\r\n                    return 0\r\n                },\r\n                getDataByKeys: function(rowKeys) {\r\n                    var that = this;\r\n                    var result = new Deferred;\r\n                    var deferreds = [];\r\n                    var data = [];\r\n                    each(rowKeys, (function(index, key) {\r\n                        deferreds.push(that.byKey(key).done((function(keyData) {\r\n                            data[index] = keyData\r\n                        })))\r\n                    }));\r\n                    when.apply($, deferreds).always((function() {\r\n                        result.resolve(data)\r\n                    }));\r\n                    return result\r\n                },\r\n                pageIndex: function(value) {\r\n                    return changePaging(this, \"pageIndex\", value)\r\n                },\r\n                pageSize: function(value) {\r\n                    return changePaging(this, \"pageSize\", value)\r\n                },\r\n                beginCustomLoading: function(messageText) {\r\n                    this._isCustomLoading = true;\r\n                    this._loadingText = messageText || \"\";\r\n                    this._fireLoadingChanged()\r\n                },\r\n                endCustomLoading: function() {\r\n                    this._isCustomLoading = false;\r\n                    this._loadingText = void 0;\r\n                    this._fireLoadingChanged()\r\n                },\r\n                refresh: function(options) {\r\n                    if (true === options) {\r\n                        options = {\r\n                            reload: true,\r\n                            changesOnly: true\r\n                        }\r\n                    } else if (!options) {\r\n                        options = {\r\n                            lookup: true,\r\n                            selection: true,\r\n                            reload: true\r\n                        }\r\n                    }\r\n                    var that = this;\r\n                    var dataSource = that.getDataSource();\r\n                    var changesOnly = options.changesOnly;\r\n                    var d = new Deferred;\r\n                    var customizeLoadResult = function() {\r\n                        that._repaintChangesOnly = !!changesOnly\r\n                    };\r\n                    when(!options.lookup || that._columnsController.refresh()).always((function() {\r\n                        if (options.load || options.reload) {\r\n                            dataSource && dataSource.on(\"customizeLoadResult\", customizeLoadResult);\r\n                            when(that.reload(options.reload, changesOnly)).always((function() {\r\n                                dataSource && dataSource.off(\"customizeLoadResult\", customizeLoadResult);\r\n                                that._repaintChangesOnly = void 0\r\n                            })).done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            that.updateItems({\r\n                                repaintChangesOnly: options.changesOnly\r\n                            });\r\n                            d.resolve()\r\n                        }\r\n                    }));\r\n                    return d.promise()\r\n                },\r\n                getVisibleRows: function() {\r\n                    return this.items()\r\n                },\r\n                _disposeDataSource: function() {\r\n                    this.setDataSource(null)\r\n                },\r\n                dispose: function() {\r\n                    this._disposeDataSource();\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                repaintRows: function(rowIndexes, changesOnly) {\r\n                    rowIndexes = Array.isArray(rowIndexes) ? rowIndexes : [rowIndexes];\r\n                    if (rowIndexes.length > 1 || isDefined(rowIndexes[0])) {\r\n                        this.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: rowIndexes,\r\n                            isFullUpdate: !changesOnly\r\n                        })\r\n                    }\r\n                },\r\n                skipProcessingPagingChange: function(fullName) {\r\n                    return this._skipProcessingPagingChange && (\"paging.pageIndex\" === fullName || \"paging.pageSize\" === fullName)\r\n                },\r\n                getUserState: function() {\r\n                    return {\r\n                        searchText: this.option(\"searchPanel.text\"),\r\n                        pageIndex: this.pageIndex(),\r\n                        pageSize: this.pageSize()\r\n                    }\r\n                },\r\n                getCachedStoreData: function() {\r\n                    return this._dataSource && this._dataSource.getCachedStoreData()\r\n                },\r\n                isLastPageLoaded: function() {\r\n                    var pageIndex = this.pageIndex();\r\n                    var pageCount = this.pageCount();\r\n                    return pageIndex === pageCount - 1\r\n                }\r\n            };\r\n            gridCoreUtils.proxyMethod(members, \"load\");\r\n            gridCoreUtils.proxyMethod(members, \"reload\");\r\n            gridCoreUtils.proxyMethod(members, \"push\");\r\n            gridCoreUtils.proxyMethod(members, \"itemsCount\", 0);\r\n            gridCoreUtils.proxyMethod(members, \"totalItemsCount\", 0);\r\n            gridCoreUtils.proxyMethod(members, \"hasKnownLastPage\", true);\r\n            gridCoreUtils.proxyMethod(members, \"isLoaded\", true);\r\n            gridCoreUtils.proxyMethod(members, \"totalCount\", 0);\r\n            return members\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.data_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport dataSourceAdapterProvider from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    dataControllerModule\r\n} from \"../grid_core/ui.grid_core.data_controller\";\r\nexport var DataController = dataControllerModule.controllers.data.inherit({\r\n    _getDataSourceAdapter: function() {\r\n        return dataSourceAdapterProvider\r\n    },\r\n    _getSpecificDataSourceOption: function() {\r\n        var dataSource = this.option(\"dataSource\");\r\n        if (dataSource && !Array.isArray(dataSource) && this.option(\"keyExpr\")) {\r\n            errors.log(\"W1011\")\r\n        }\r\n        return this.callBase()\r\n    }\r\n});\r\ngridCore.registerModule(\"data\", {\r\n    defaultOptions: dataControllerModule.defaultOptions,\r\n    controllers: {\r\n        data: DataController\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.sorting_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport $ from \"../../core/renderer\";\r\nvar SORT_CLASS = \"dx-sort\";\r\nvar SORT_NONE_CLASS = \"dx-sort-none\";\r\nvar SORTUP_CLASS = \"dx-sort-up\";\r\nvar SORTDOWN_CLASS = \"dx-sort-down\";\r\nvar SORT_INDEX_CLASS = \"dx-sort-index\";\r\nvar SORT_INDEX_ICON_CLASS = \"dx-sort-index-icon\";\r\nvar HEADERS_ACTION_CLASS = \"action\";\r\nexport default {\r\n    _applyColumnState: function(options) {\r\n        var ariaSortState;\r\n        var $sortIndicator;\r\n        var sortingMode = this.option(\"sorting.mode\");\r\n        var rootElement = options.rootElement;\r\n        var column = options.column;\r\n        var $indicatorsContainer = this._getIndicatorContainer(rootElement);\r\n        if (\"sort\" === options.name) {\r\n            rootElement.find(\".\" + SORT_CLASS).remove();\r\n            !$indicatorsContainer.children().length && $indicatorsContainer.remove();\r\n            var isSortingAllowed = \"none\" !== sortingMode && column.allowSorting;\r\n            if (!isDefined(column.groupIndex) && (isSortingAllowed || isDefined(column.sortOrder))) {\r\n                ariaSortState = \"asc\" === column.sortOrder ? \"ascending\" : \"descending\";\r\n                $sortIndicator = this.callBase(options).toggleClass(SORTUP_CLASS, \"asc\" === column.sortOrder).toggleClass(SORTDOWN_CLASS, \"desc\" === column.sortOrder);\r\n                var hasSeveralSortIndexes = this.getController && !!this.getController(\"columns\").columnOption(\"sortIndex:1\");\r\n                if (hasSeveralSortIndexes && this.option(\"sorting.showSortIndexes\") && column.sortIndex >= 0) {\r\n                    $(\"<span>\").addClass(SORT_INDEX_ICON_CLASS).text(column.sortIndex + 1).appendTo($sortIndicator);\r\n                    $sortIndicator.addClass(SORT_INDEX_CLASS)\r\n                }\r\n                if (isSortingAllowed) {\r\n                    options.rootElement.addClass(this.addWidgetPrefix(HEADERS_ACTION_CLASS))\r\n                }\r\n            }\r\n            if (!isDefined(column.sortOrder)) {\r\n                this.setAria(\"sort\", \"none\", rootElement)\r\n            } else {\r\n                this.setAria(\"sort\", ariaSortState, rootElement)\r\n            }\r\n            return $sortIndicator\r\n        } else {\r\n            return this.callBase(options)\r\n        }\r\n    },\r\n    _getIndicatorClassName: function(name) {\r\n        if (\"sort\" === name) {\r\n            return SORT_CLASS\r\n        } else if (\"sortIndex\" === name) {\r\n            return SORT_INDEX_ICON_CLASS\r\n        }\r\n        return this.callBase(name)\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var column = options.column;\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        if (\"sort\" === options.name) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            if (!isDefined(column.sortOrder)) {\r\n                $indicator && $indicator.addClass(SORT_NONE_CLASS)\r\n            }\r\n            if ($container.children().length && (!rtlEnabled && \"left\" === options.columnAlignment || rtlEnabled && \"right\" === options.columnAlignment)) {\r\n                $container.prepend($indicator);\r\n                return\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        if (\"sort\" === indicatorName && isDefined(column.groupIndex)) {\r\n            return\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _getIndicatorElements: function($cell, returnAll) {\r\n        var $indicatorElements = this.callBase($cell);\r\n        return returnAll ? $indicatorElements : $indicatorElements && $indicatorElements.not(\".\" + SORT_NONE_CLASS)\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.sorting.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport sortingMixin from \"../grid_core/ui.grid_core.sorting_mixin\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nvar COLUMN_HEADERS_VIEW_NAMESPACE = \"dxDataGridColumnHeadersView\";\r\nvar ColumnHeadersViewSortingExtender = extend({}, sortingMixin, {\r\n    _createRow(row) {\r\n        var $row = this.callBase(row);\r\n        if (\"header\" === row.rowType) {\r\n            eventsEngine.on($row, addNamespace(clickEventName, COLUMN_HEADERS_VIEW_NAMESPACE), \"td\", this.createAction(e => {\r\n                this._processHeaderAction(e.event, $row)\r\n            }))\r\n        }\r\n        return $row\r\n    },\r\n    _processHeaderAction: function(event, $row) {\r\n        if ($(event.currentTarget).parent().get(0) !== $row.get(0)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var keyName = null;\r\n        var $cellElementFromEvent = $(event.currentTarget);\r\n        var rowIndex = $cellElementFromEvent.parent().index();\r\n        var columnIndex = -1;\r\n        [].slice.call(that.getCellElements(rowIndex)).some(($cellElement, index) => {\r\n            if ($cellElement === $cellElementFromEvent.get(0)) {\r\n                columnIndex = index;\r\n                return true\r\n            }\r\n        });\r\n        var visibleColumns = that._columnsController.getVisibleColumns(rowIndex);\r\n        var column = visibleColumns[columnIndex];\r\n        var editingController = that.getController(\"editing\");\r\n        var editingMode = that.option(\"editing.mode\");\r\n        var isCellEditing = editingController && editingController.isEditing() && (\"batch\" === editingMode || \"cell\" === editingMode);\r\n        if (isCellEditing || !that._isSortableElement($(event.target))) {\r\n            return\r\n        }\r\n        if (column && !isDefined(column.groupIndex) && !column.command) {\r\n            if (event.shiftKey) {\r\n                keyName = \"shift\"\r\n            } else if (isCommandKeyPressed(event)) {\r\n                keyName = \"ctrl\"\r\n            }\r\n            setTimeout(() => {\r\n                that._columnsController.changeSortOrder(column.index, keyName)\r\n            })\r\n        }\r\n    },\r\n    _renderCellContent($cell, options) {\r\n        var column = options.column;\r\n        if (!column.command && \"header\" === options.rowType) {\r\n            this._applyColumnState({\r\n                name: \"sort\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            })\r\n        }\r\n        this.callBase($cell, options)\r\n    },\r\n    _columnOptionChanged(e) {\r\n        var changeTypes = e.changeTypes;\r\n        if (1 === changeTypes.length && changeTypes.sorting) {\r\n            this._updateIndicators(\"sort\");\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"sorting\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar HeaderPanelSortingExtender = extend({}, sortingMixin, {\r\n    _createGroupPanelItem($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase(...arguments);\r\n        eventsEngine.on($item, addNamespace(clickEventName, \"dxDataGridHeaderPanel\"), that.createAction(() => {\r\n            that._processGroupItemAction(groupColumn.index)\r\n        }));\r\n        that._applyColumnState({\r\n            name: \"sort\",\r\n            rootElement: $item,\r\n            column: {\r\n                alignment: that.option(\"rtlEnabled\") ? \"right\" : \"left\",\r\n                allowSorting: groupColumn.allowSorting,\r\n                sortOrder: \"desc\" === groupColumn.sortOrder ? \"desc\" : \"asc\"\r\n            },\r\n            showColumnLines: true\r\n        });\r\n        return $item\r\n    },\r\n    _processGroupItemAction(groupColumnIndex) {\r\n        setTimeout(() => this.getController(\"columns\").changeSortOrder(groupColumnIndex))\r\n    },\r\n    optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"sorting\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var sortingModule = {\r\n    defaultOptions: () => ({\r\n        sorting: {\r\n            mode: \"single\",\r\n            ascendingText: messageLocalization.format(\"dxDataGrid-sortingAscendingText\"),\r\n            descendingText: messageLocalization.format(\"dxDataGrid-sortingDescendingText\"),\r\n            clearText: messageLocalization.format(\"dxDataGrid-sortingClearText\"),\r\n            showSortIndexes: true\r\n        }\r\n    }),\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewSortingExtender,\r\n            headerPanel: HeaderPanelSortingExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.sorting.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    sortingModule\r\n} from \"../grid_core/ui.grid_core.sorting\";\r\ngridCore.registerModule(\"sorting\", sortingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.rows.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getHeight,\r\n    getOuterHeight,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    deferRender,\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setHeight\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    isDefined,\r\n    isNumeric,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    isEmpty\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport {\r\n    removeEvent\r\n} from \"../../events/remove\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar NOWRAP_CLASS = \"nowrap\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar FREE_SPACE_CLASS = \"dx-freespace-row\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar ROW_ALTERNATION_CLASS = \"dx-row-alt\";\r\nvar LAST_ROW_BORDER = \"dx-last-row-border\";\r\nvar EMPTY_CLASS = \"dx-empty\";\r\nvar ROW_INSERTED_ANIMATION_CLASS = \"row-inserted-animation\";\r\nvar LOADPANEL_HIDE_TIMEOUT = 200;\r\n\r\nfunction getMaxHorizontalScrollOffset(scrollable) {\r\n    return scrollable ? Math.round(scrollable.scrollWidth() - scrollable.clientWidth()) : 0\r\n}\r\nexport var rowsModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            hoverStateEnabled: false,\r\n            scrolling: {\r\n                useNative: \"auto\"\r\n            },\r\n            loadPanel: {\r\n                enabled: \"auto\",\r\n                text: messageLocalization.format(\"Loading\"),\r\n                width: 200,\r\n                height: 90,\r\n                showIndicator: true,\r\n                indicatorSrc: \"\",\r\n                showPane: true\r\n            },\r\n            dataRowTemplate: null,\r\n            columnAutoWidth: false,\r\n            noDataText: messageLocalization.format(\"dxDataGrid-noDataText\"),\r\n            wordWrapEnabled: false,\r\n            showColumnLines: true,\r\n            showRowLines: false,\r\n            rowAlternationEnabled: false,\r\n            activeStateEnabled: false,\r\n            twoWayBindingEnabled: true\r\n        }\r\n    },\r\n    views: {\r\n        rowsView: ColumnsView.inherit(function() {\r\n            var defaultCellTemplate = function($container, options) {\r\n                var isDataTextEmpty = isEmpty(options.text) && \"data\" === options.rowType;\r\n                var text = options.text;\r\n                var container = $container.get(0);\r\n                if (isDataTextEmpty) {\r\n                    gridCoreUtils.setEmptyText($container)\r\n                } else if (options.column.encodeHtml) {\r\n                    container.textContent = text\r\n                } else {\r\n                    container.innerHTML = text\r\n                }\r\n            };\r\n            return {\r\n                _getDefaultTemplate: function(column) {\r\n                    switch (column.command) {\r\n                        case \"empty\":\r\n                            return function(container) {\r\n                                container.html(\"&nbsp;\")\r\n                            };\r\n                        default:\r\n                            return defaultCellTemplate\r\n                    }\r\n                },\r\n                _getDefaultGroupTemplate: function(column) {\r\n                    var summaryTexts = this.option(\"summary.texts\");\r\n                    return function($container, options) {\r\n                        var data = options.data;\r\n                        var text = options.column.caption + \": \" + options.text;\r\n                        var container = $container.get(0);\r\n                        if (options.summaryItems && options.summaryItems.length) {\r\n                            text += \" \" + gridCoreUtils.getGroupRowSummaryText(options.summaryItems, summaryTexts)\r\n                        }\r\n                        if (data) {\r\n                            if (options.groupContinuedMessage && options.groupContinuesMessage) {\r\n                                text += \" (\" + options.groupContinuedMessage + \". \" + options.groupContinuesMessage + \")\"\r\n                            } else if (options.groupContinuesMessage) {\r\n                                text += \" (\" + options.groupContinuesMessage + \")\"\r\n                            } else if (options.groupContinuedMessage) {\r\n                                text += \" (\" + options.groupContinuedMessage + \")\"\r\n                            }\r\n                        }\r\n                        $container.addClass(GROUP_CELL_CLASS);\r\n                        if (column.encodeHtml) {\r\n                            container.textContent = text\r\n                        } else {\r\n                            container.innerHTML = text\r\n                        }\r\n                    }\r\n                },\r\n                _update: function() {},\r\n                _getCellTemplate: function(options) {\r\n                    var column = options.column;\r\n                    var template;\r\n                    if (\"group\" === options.rowType && isDefined(column.groupIndex) && !column.showWhenGrouped && !column.command) {\r\n                        template = column.groupCellTemplate || {\r\n                            allowRenderToDetachedContainer: true,\r\n                            render: this._getDefaultGroupTemplate(column)\r\n                        }\r\n                    } else if ((\"data\" === options.rowType || column.command) && column.cellTemplate) {\r\n                        template = column.cellTemplate\r\n                    } else {\r\n                        template = {\r\n                            allowRenderToDetachedContainer: true,\r\n                            render: this._getDefaultTemplate(column)\r\n                        }\r\n                    }\r\n                    return template\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isGroup = \"group\" === row.rowType;\r\n                        var isDataRow = \"data\" === row.rowType;\r\n                        isDataRow && $row.addClass(DATA_ROW_CLASS);\r\n                        isDataRow && this.option(\"showRowLines\") && $row.addClass(ROW_LINES_CLASS);\r\n                        this.option(\"showColumnLines\") && $row.addClass(COLUMN_LINES_CLASS);\r\n                        if (false === row.visible) {\r\n                            $row.hide()\r\n                        }\r\n                        if (isGroup) {\r\n                            $row.addClass(GROUP_ROW_CLASS);\r\n                            var isRowExpanded = row.isExpanded;\r\n                            this.setAria(\"role\", \"row\", $row);\r\n                            this.setAria(\"expanded\", isDefined(isRowExpanded) && isRowExpanded.toString(), $row)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _rowPrepared: function($row, rowOptions, row) {\r\n                    if (\"data\" === rowOptions.rowType) {\r\n                        if (this.option(\"rowAlternationEnabled\")) {\r\n                            this._isAltRow(row) && $row.addClass(ROW_ALTERNATION_CLASS);\r\n                            rowOptions.watch && rowOptions.watch(() => this._isAltRow(row), value => {\r\n                                $row.toggleClass(ROW_ALTERNATION_CLASS, value)\r\n                            })\r\n                        }\r\n                        this._setAriaRowIndex(rowOptions, $row);\r\n                        rowOptions.watch && rowOptions.watch(() => rowOptions.rowIndex, () => this._setAriaRowIndex(rowOptions, $row))\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _setAriaRowIndex: function(row, $row) {\r\n                    var component = this.component;\r\n                    var isPagerMode = \"standard\" === component.option(\"scrolling.mode\") && !gridCoreUtils.isVirtualRowRendering(component);\r\n                    var rowIndex = row.rowIndex + 1;\r\n                    if (isPagerMode) {\r\n                        rowIndex = component.pageIndex() * component.pageSize() + rowIndex\r\n                    } else {\r\n                        rowIndex += this._dataController.getRowIndexOffset()\r\n                    }\r\n                    this.setAria(\"rowindex\", rowIndex, $row)\r\n                },\r\n                _afterRowPrepared: function(e) {\r\n                    var arg = e.args[0];\r\n                    var dataController = this._dataController;\r\n                    var row = dataController.getVisibleRows()[arg.rowIndex];\r\n                    var watch = this.option(\"integrationOptions.watchMethod\");\r\n                    if (!arg.data || \"data\" !== arg.rowType || arg.isNewRow || !this.option(\"twoWayBindingEnabled\") || !watch || !row) {\r\n                        return\r\n                    }\r\n                    var dispose = watch(() => dataController.generateDataValues(arg.data, arg.columns), () => {\r\n                        dataController.repaintRows([row.rowIndex], this.option(\"repaintChangesOnly\"))\r\n                    }, {\r\n                        deep: true,\r\n                        skipImmediate: true\r\n                    });\r\n                    eventsEngine.on(arg.rowElement, removeEvent, dispose)\r\n                },\r\n                _renderScrollable: function(force) {\r\n                    var $element = this.element();\r\n                    if (!$element.children().length) {\r\n                        $element.append(\"<div>\")\r\n                    }\r\n                    if (force || !this._loadPanel) {\r\n                        this._renderLoadPanel($element, $element.parent(), this._dataController.isLocalStore())\r\n                    }\r\n                    if ((force || !this.getScrollable()) && this._dataController.isLoaded()) {\r\n                        var columns = this.getColumns();\r\n                        var allColumnsHasWidth = true;\r\n                        for (var i = 0; i < columns.length; i++) {\r\n                            if (!columns[i].width && !columns[i].minWidth) {\r\n                                allColumnsHasWidth = false;\r\n                                break\r\n                            }\r\n                        }\r\n                        if (this.option(\"columnAutoWidth\") || this._hasHeight || allColumnsHasWidth || this._columnsController._isColumnFixing()) {\r\n                            this._renderScrollableCore($element)\r\n                        }\r\n                    }\r\n                },\r\n                _handleScroll: function(e) {\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    var isNativeScrolling = e.component.option(\"useNative\");\r\n                    this._scrollTop = e.scrollOffset.top;\r\n                    this._scrollLeft = e.scrollOffset.left;\r\n                    var scrollLeft = e.scrollOffset.left;\r\n                    if (rtlEnabled) {\r\n                        this._scrollRight = getMaxHorizontalScrollOffset(e.component) - this._scrollLeft;\r\n                        if (isNativeScrolling) {\r\n                            scrollLeft = -this._scrollRight\r\n                        }\r\n                        if (!this.isScrollbarVisible(true)) {\r\n                            this._scrollLeft = -1\r\n                        }\r\n                    }\r\n                    this.scrollChanged.fire(_extends({}, e.scrollOffset, {\r\n                        left: scrollLeft\r\n                    }), this.name)\r\n                },\r\n                _renderScrollableCore: function($element) {\r\n                    var dxScrollableOptions = this._createScrollableOptions();\r\n                    var scrollHandler = this._handleScroll.bind(this);\r\n                    dxScrollableOptions.onScroll = scrollHandler;\r\n                    this._scrollable = this._createComponent($element, Scrollable, dxScrollableOptions);\r\n                    this._scrollableContainer = this._scrollable && $(this._scrollable.container())\r\n                },\r\n                _renderLoadPanel: gridCoreUtils.renderLoadPanel,\r\n                _renderContent: function(contentElement, tableElement) {\r\n                    contentElement.empty().append(tableElement);\r\n                    return this._findContentElement()\r\n                },\r\n                _updateContent: function(newTableElement, change) {\r\n                    var that = this;\r\n                    var tableElement = that.getTableElement();\r\n                    var contentElement = that._findContentElement();\r\n                    var changeType = change && change.changeType;\r\n                    var executors = [];\r\n                    var highlightChanges = this.option(\"highlightChanges\");\r\n                    var rowInsertedClass = this.addWidgetPrefix(ROW_INSERTED_ANIMATION_CLASS);\r\n                    switch (changeType) {\r\n                        case \"update\":\r\n                            each(change.rowIndices, (function(index, rowIndex) {\r\n                                var $newRowElement = that._getRowElements(newTableElement).eq(index);\r\n                                var changeType = change.changeTypes && change.changeTypes[index];\r\n                                var item = change.items && change.items[index];\r\n                                executors.push((function() {\r\n                                    var $rowsElement = that._getRowElements();\r\n                                    var $rowElement = $rowsElement.eq(rowIndex);\r\n                                    switch (changeType) {\r\n                                        case \"update\":\r\n                                            if (item) {\r\n                                                var columnIndices = change.columnIndices && change.columnIndices[index];\r\n                                                if (isDefined(item.visible) && item.visible !== $rowElement.is(\":visible\")) {\r\n                                                    $rowElement.toggle(item.visible)\r\n                                                } else if (columnIndices) {\r\n                                                    that._updateCells($rowElement, $newRowElement, columnIndices)\r\n                                                } else {\r\n                                                    $rowElement.replaceWith($newRowElement)\r\n                                                }\r\n                                            }\r\n                                            break;\r\n                                        case \"insert\":\r\n                                            if (!$rowsElement.length) {\r\n                                                if (tableElement) {\r\n                                                    var target = $newRowElement.is(\"tbody\") ? tableElement : tableElement.children(\"tbody\");\r\n                                                    $newRowElement.prependTo(target)\r\n                                                }\r\n                                            } else if ($rowElement.length) {\r\n                                                $newRowElement.insertBefore($rowElement)\r\n                                            } else {\r\n                                                $newRowElement.insertAfter($rowsElement.last())\r\n                                            }\r\n                                            if (highlightChanges && change.isLiveUpdate) {\r\n                                                $newRowElement.addClass(rowInsertedClass)\r\n                                            }\r\n                                            break;\r\n                                        case \"remove\":\r\n                                            $rowElement.remove()\r\n                                    }\r\n                                }))\r\n                            }));\r\n                            each(executors, (function() {\r\n                                this()\r\n                            }));\r\n                            newTableElement.remove();\r\n                            break;\r\n                        default:\r\n                            that.setTableElement(newTableElement);\r\n                            contentElement.addClass(that.addWidgetPrefix(CONTENT_CLASS));\r\n                            that._renderContent(contentElement, newTableElement)\r\n                    }\r\n                },\r\n                _createEmptyRow: function(className, isFixed, height) {\r\n                    var $cell;\r\n                    var $row = this._createRow();\r\n                    var columns = isFixed ? this.getFixedColumns() : this.getColumns();\r\n                    $row.addClass(className).toggleClass(COLUMN_LINES_CLASS, this.option(\"showColumnLines\"));\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        $cell = this._createCell({\r\n                            column: columns[i],\r\n                            rowType: \"freeSpace\",\r\n                            columnIndex: i,\r\n                            columns: columns\r\n                        });\r\n                        isNumeric(height) && $cell.css(\"height\", height);\r\n                        $row.append($cell)\r\n                    }\r\n                    this.setAria(\"role\", \"presentation\", $row);\r\n                    return $row\r\n                },\r\n                _appendEmptyRow: function($table, $emptyRow, location) {\r\n                    var $tBodies = this._getBodies($table);\r\n                    var isTableContainer = !$tBodies.length || $emptyRow.is(\"tbody\");\r\n                    var $container = isTableContainer ? $table : $tBodies;\r\n                    if (\"top\" === location) {\r\n                        $container.first().prepend($emptyRow);\r\n                        if (isTableContainer) {\r\n                            var $colgroup = $container.children(\"colgroup\");\r\n                            $container.prepend($colgroup)\r\n                        }\r\n                    } else {\r\n                        $container.last().append($emptyRow)\r\n                    }\r\n                },\r\n                _renderFreeSpaceRow: function($tableElement) {\r\n                    var $freeSpaceRowElement = this._createEmptyRow(FREE_SPACE_CLASS);\r\n                    $freeSpaceRowElement = this._wrapRowIfNeed($tableElement, $freeSpaceRowElement);\r\n                    this._appendEmptyRow($tableElement, $freeSpaceRowElement)\r\n                },\r\n                _checkRowKeys: function(options) {\r\n                    var that = this;\r\n                    var rows = that._getRows(options);\r\n                    var keyExpr = that._dataController.store() && that._dataController.store().key();\r\n                    keyExpr && rows.some((function(row) {\r\n                        if (\"data\" === row.rowType && void 0 === row.key) {\r\n                            that._dataController.fireError(\"E1046\", keyExpr);\r\n                            return true\r\n                        }\r\n                    }))\r\n                },\r\n                _needUpdateRowHeight: function(itemsCount) {\r\n                    return itemsCount > 0 && !this._rowHeight\r\n                },\r\n                _getRowsHeight: function($tableElement) {\r\n                    var $rowElements = $tableElement.children(\"tbody\").children().not(\".dx-virtual-row\").not(\".\" + FREE_SPACE_CLASS);\r\n                    return $rowElements.toArray().reduce((function(sum, row) {\r\n                        return sum + getBoundingRect(row).height\r\n                    }), 0)\r\n                },\r\n                _updateRowHeight: function() {\r\n                    var $tableElement = this.getTableElement();\r\n                    var itemsCount = this._dataController.items().length;\r\n                    if ($tableElement && this._needUpdateRowHeight(itemsCount)) {\r\n                        var rowsHeight = this._getRowsHeight($tableElement);\r\n                        this._rowHeight = rowsHeight / itemsCount\r\n                    }\r\n                },\r\n                _findContentElement: function() {\r\n                    var $content = this.element();\r\n                    var scrollable = this.getScrollable();\r\n                    if ($content) {\r\n                        if (scrollable) {\r\n                            $content = $(scrollable.content())\r\n                        }\r\n                        return $content.children().first()\r\n                    }\r\n                },\r\n                _getRowElements: function(tableElement) {\r\n                    var $rows = this.callBase(tableElement);\r\n                    return $rows && $rows.not(\".\" + FREE_SPACE_CLASS)\r\n                },\r\n                _getFreeSpaceRowElements: function($table) {\r\n                    var tableElements = $table || this.getTableElements();\r\n                    return tableElements && tableElements.children(\"tbody\").children(\".\" + FREE_SPACE_CLASS)\r\n                },\r\n                _getNoDataText: function() {\r\n                    return this.option(\"noDataText\")\r\n                },\r\n                _rowClick: function(e) {\r\n                    var item = this._dataController.items()[e.rowIndex] || {};\r\n                    this.executeAction(\"onRowClick\", extend({\r\n                        evaluate: function(expr) {\r\n                            var getter = compileGetter(expr);\r\n                            return getter(item.data)\r\n                        }\r\n                    }, e, item))\r\n                },\r\n                _rowDblClick: function(e) {\r\n                    var item = this._dataController.items()[e.rowIndex] || {};\r\n                    this.executeAction(\"onRowDblClick\", extend({}, e, item))\r\n                },\r\n                _getColumnsCountBeforeGroups: function(columns) {\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        if (\"groupExpand\" === columns[i].type) {\r\n                            return i\r\n                        }\r\n                    }\r\n                    return 0\r\n                },\r\n                _getGroupCellOptions: function(options) {\r\n                    var columnsCountBeforeGroups = this._getColumnsCountBeforeGroups(options.columns);\r\n                    var columnIndex = (options.row.groupIndex || 0) + columnsCountBeforeGroups;\r\n                    return {\r\n                        columnIndex: columnIndex,\r\n                        colspan: options.columns.length - columnIndex - 1\r\n                    }\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    if (\"group\" === options.row.rowType) {\r\n                        this._renderGroupedCells($row, options)\r\n                    } else if (options.row.values) {\r\n                        this.callBase($row, options)\r\n                    }\r\n                },\r\n                _renderGroupedCells: function($row, options) {\r\n                    var row = options.row;\r\n                    var expandColumn;\r\n                    var columns = options.columns;\r\n                    var rowIndex = row.rowIndex;\r\n                    var isExpanded;\r\n                    var groupCellOptions = this._getGroupCellOptions(options);\r\n                    for (var i = 0; i <= groupCellOptions.columnIndex; i++) {\r\n                        if (i === groupCellOptions.columnIndex && columns[i].allowCollapsing && \"infinite\" !== options.scrollingMode) {\r\n                            isExpanded = !!row.isExpanded;\r\n                            expandColumn = columns[i]\r\n                        } else {\r\n                            isExpanded = null;\r\n                            expandColumn = {\r\n                                command: \"expand\",\r\n                                cssClass: columns[i].cssClass\r\n                            }\r\n                        }\r\n                        if (this._needRenderCell(i, options.columnIndices)) {\r\n                            this._renderCell($row, {\r\n                                value: isExpanded,\r\n                                row: row,\r\n                                rowIndex: rowIndex,\r\n                                column: expandColumn,\r\n                                columnIndex: i,\r\n                                columnIndices: options.columnIndices\r\n                            })\r\n                        }\r\n                    }\r\n                    var groupColumnAlignment = getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n                    var groupColumn = extend({}, columns[groupCellOptions.columnIndex], {\r\n                        command: null,\r\n                        type: null,\r\n                        cssClass: null,\r\n                        width: null,\r\n                        showWhenGrouped: false,\r\n                        alignment: groupColumnAlignment\r\n                    });\r\n                    if (groupCellOptions.colspan > 1) {\r\n                        groupColumn.colspan = groupCellOptions.colspan\r\n                    }\r\n                    if (this._needRenderCell(groupCellOptions.columnIndex + 1, options.columnIndices)) {\r\n                        this._renderCell($row, {\r\n                            value: row.values[row.groupIndex],\r\n                            row: row,\r\n                            rowIndex: rowIndex,\r\n                            column: groupColumn,\r\n                            columnIndex: groupCellOptions.columnIndex + 1,\r\n                            columnIndices: options.columnIndices\r\n                        })\r\n                    }\r\n                },\r\n                _renderRows: function($table, options) {\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    this.callBase($table, extend({\r\n                        scrollingMode: scrollingMode\r\n                    }, options));\r\n                    this._checkRowKeys(options.change);\r\n                    this._renderFreeSpaceRow($table);\r\n                    if (!this._hasHeight) {\r\n                        this.updateFreeSpaceRowHeight($table)\r\n                    }\r\n                },\r\n                _renderDataRowByTemplate($table, options, dataRowTemplate) {\r\n                    var row = options.row;\r\n                    var rowOptions = extend({\r\n                        columns: options.columns\r\n                    }, row);\r\n                    var $tbody = this._createRow(row, \"tbody\");\r\n                    $tbody.appendTo($table);\r\n                    this.renderTemplate($tbody, dataRowTemplate, rowOptions, true, options.change);\r\n                    this._rowPrepared($tbody, rowOptions, options.row)\r\n                },\r\n                _renderRow: function($table, options) {\r\n                    var row = options.row;\r\n                    var rowTemplate = this.option().rowTemplate;\r\n                    var dataRowTemplate = this.option(\"dataRowTemplate\");\r\n                    if (\"data\" === row.rowType && dataRowTemplate) {\r\n                        this._renderDataRowByTemplate($table, options, dataRowTemplate)\r\n                    } else if ((\"data\" === row.rowType || \"group\" === row.rowType) && !isDefined(row.groupIndex) && rowTemplate) {\r\n                        this.renderTemplate($table, rowTemplate, extend({\r\n                            columns: options.columns\r\n                        }, row), true)\r\n                    } else {\r\n                        this.callBase($table, options)\r\n                    }\r\n                },\r\n                _renderTable: function(options) {\r\n                    var that = this;\r\n                    var $table = that.callBase(options);\r\n                    if (!isDefined(that.getTableElement())) {\r\n                        that.setTableElement($table);\r\n                        that._renderScrollable(true);\r\n                        that.resizeCompleted.add((function resizeCompletedHandler() {\r\n                            var scrollableInstance = that.getScrollable();\r\n                            if (scrollableInstance && that.element().closest(getWindow().document).length) {\r\n                                that.resizeCompleted.remove(resizeCompletedHandler);\r\n                                scrollableInstance._visibilityChanged(true)\r\n                            }\r\n                        }))\r\n                    } else {\r\n                        that._renderScrollable()\r\n                    }\r\n                    return $table\r\n                },\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    if (this.option().rowTemplate || this.option().dataRowTemplate) {\r\n                        $table.appendTo(this.component.$element())\r\n                    }\r\n                    return $table\r\n                },\r\n                _renderCore: function(change) {\r\n                    var $element = this.element();\r\n                    $element.addClass(this.addWidgetPrefix(ROWS_VIEW_CLASS)).toggleClass(this.addWidgetPrefix(NOWRAP_CLASS), !this.option(\"wordWrapEnabled\"));\r\n                    $element.toggleClass(EMPTY_CLASS, this._dataController.isEmpty());\r\n                    this.setAria(\"role\", \"presentation\", $element);\r\n                    var $table = this._renderTable({\r\n                        change: change\r\n                    });\r\n                    this._updateContent($table, change);\r\n                    this.callBase(change);\r\n                    this._lastColumnWidths = null\r\n                },\r\n                _getRows: function(change) {\r\n                    return change && change.items || this._dataController.items()\r\n                },\r\n                _getCellOptions: function(options) {\r\n                    var column = options.column;\r\n                    var row = options.row;\r\n                    var data = row.data;\r\n                    var summaryCells = row && row.summaryCells;\r\n                    var value = options.value;\r\n                    var displayValue = gridCoreUtils.getDisplayValue(column, value, data, row.rowType);\r\n                    var parameters = this.callBase(options);\r\n                    parameters.value = value;\r\n                    parameters.oldValue = options.oldValue;\r\n                    parameters.displayValue = displayValue;\r\n                    parameters.row = row;\r\n                    parameters.key = row.key;\r\n                    parameters.data = data;\r\n                    parameters.rowType = row.rowType;\r\n                    parameters.values = row.values;\r\n                    parameters.text = !column.command ? gridCoreUtils.formatValue(displayValue, column) : \"\";\r\n                    parameters.rowIndex = row.rowIndex;\r\n                    parameters.summaryItems = summaryCells && summaryCells[options.columnIndex];\r\n                    parameters.resized = column.resizedCallbacks;\r\n                    if (isDefined(column.groupIndex) && !column.command) {\r\n                        var groupingTextsOptions = this.option(\"grouping.texts\");\r\n                        var scrollingMode = this.option(\"scrolling.mode\");\r\n                        if (\"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode) {\r\n                            parameters.groupContinuesMessage = data && data.isContinuationOnNextPage && groupingTextsOptions && groupingTextsOptions.groupContinuesMessage;\r\n                            parameters.groupContinuedMessage = data && data.isContinuation && groupingTextsOptions && groupingTextsOptions.groupContinuedMessage\r\n                        }\r\n                    }\r\n                    return parameters\r\n                },\r\n                _setRowsOpacityCore: function($rows, visibleColumns, columnIndex, value) {\r\n                    var columnsController = this._columnsController;\r\n                    var columns = columnsController.getColumns();\r\n                    var column = columns && columns[columnIndex];\r\n                    var columnID = column && column.isBand && column.index;\r\n                    each($rows, (function(rowIndex, row) {\r\n                        if (!$(row).hasClass(GROUP_ROW_CLASS)) {\r\n                            for (var i = 0; i < visibleColumns.length; i++) {\r\n                                if (isNumeric(columnID) && columnsController.isParentBandColumn(visibleColumns[i].index, columnID) || visibleColumns[i].index === columnIndex) {\r\n                                    $rows.eq(rowIndex).children().eq(i).css({\r\n                                        opacity: value\r\n                                    });\r\n                                    if (!isNumeric(columnID)) {\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }))\r\n                },\r\n                _getDevicePixelRatio: function() {\r\n                    return getWindow().devicePixelRatio\r\n                },\r\n                renderNoDataText: gridCoreUtils.renderNoDataText,\r\n                getCellOptions: function(rowIndex, columnIdentifier) {\r\n                    var rowOptions = this._dataController.items()[rowIndex];\r\n                    var cellOptions;\r\n                    var column;\r\n                    if (rowOptions) {\r\n                        if (isString(columnIdentifier)) {\r\n                            column = this._columnsController.columnOption(columnIdentifier)\r\n                        } else {\r\n                            column = this._columnsController.getVisibleColumns()[columnIdentifier]\r\n                        }\r\n                        if (column) {\r\n                            cellOptions = this._getCellOptions({\r\n                                value: column.calculateCellValue(rowOptions.data),\r\n                                rowIndex: rowOptions.rowIndex,\r\n                                row: rowOptions,\r\n                                column: column\r\n                            })\r\n                        }\r\n                    }\r\n                    return cellOptions\r\n                },\r\n                getRow: function(index) {\r\n                    if (index >= 0) {\r\n                        var rows = this._getRowElements();\r\n                        if (rows.length > index) {\r\n                            return $(rows[index])\r\n                        }\r\n                    }\r\n                },\r\n                updateFreeSpaceRowHeight: function($table) {\r\n                    var dataController = this._dataController;\r\n                    var itemCount = dataController.items(true).length;\r\n                    var contentElement = this._findContentElement();\r\n                    var freeSpaceRowElements = this._getFreeSpaceRowElements($table);\r\n                    if (freeSpaceRowElements && contentElement && dataController.totalCount() >= 0) {\r\n                        var isFreeSpaceRowVisible = false;\r\n                        if (itemCount > 0) {\r\n                            if (!this._hasHeight) {\r\n                                var freeSpaceRowCount = dataController.pageSize() - itemCount;\r\n                                var scrollingMode = this.option(\"scrolling.mode\");\r\n                                if (freeSpaceRowCount > 0 && dataController.pageCount() > 1 && \"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode) {\r\n                                    setHeight(freeSpaceRowElements, freeSpaceRowCount * this._rowHeight);\r\n                                    isFreeSpaceRowVisible = true\r\n                                }\r\n                                if (!isFreeSpaceRowVisible && $table) {\r\n                                    setHeight(freeSpaceRowElements, 0)\r\n                                } else {\r\n                                    freeSpaceRowElements.toggle(isFreeSpaceRowVisible)\r\n                                }\r\n                                this._updateLastRowBorder(isFreeSpaceRowVisible)\r\n                            } else {\r\n                                freeSpaceRowElements.hide();\r\n                                deferUpdate(() => {\r\n                                    var scrollbarWidth = this.getScrollbarWidth(true);\r\n                                    var elementHeightWithoutScrollbar = getHeight(this.element()) - scrollbarWidth;\r\n                                    var contentHeight = getOuterHeight(contentElement);\r\n                                    var showFreeSpaceRow = elementHeightWithoutScrollbar - contentHeight > 0;\r\n                                    var rowsHeight = this._getRowsHeight(contentElement.children().first());\r\n                                    var $tableElement = $table || this.getTableElements();\r\n                                    var borderTopWidth = Math.ceil(parseFloat($tableElement.css(\"borderTopWidth\")));\r\n                                    var heightCorrection = this._getHeightCorrection();\r\n                                    var resultHeight = elementHeightWithoutScrollbar - rowsHeight - borderTopWidth - heightCorrection;\r\n                                    if (showFreeSpaceRow) {\r\n                                        deferRender(() => {\r\n                                            freeSpaceRowElements.css(\"height\", resultHeight);\r\n                                            isFreeSpaceRowVisible = true;\r\n                                            freeSpaceRowElements.show()\r\n                                        })\r\n                                    }\r\n                                    deferRender(() => this._updateLastRowBorder(isFreeSpaceRowVisible))\r\n                                })\r\n                            }\r\n                        } else {\r\n                            freeSpaceRowElements.css(\"height\", 0);\r\n                            freeSpaceRowElements.show();\r\n                            this._updateLastRowBorder(true)\r\n                        }\r\n                    }\r\n                },\r\n                _getHeightCorrection: function() {\r\n                    var isZoomedWebkit = browser.webkit && this._getDevicePixelRatio() >= 2;\r\n                    var isChromeLatest = browser.chrome && browser.version >= 91;\r\n                    var hasExtraBorderTop = browser.mozilla && browser.version >= 70 && !this.option(\"showRowLines\");\r\n                    return isZoomedWebkit || hasExtraBorderTop || isChromeLatest ? 1 : 0\r\n                },\r\n                _columnOptionChanged: function(e) {\r\n                    var optionNames = e.optionNames;\r\n                    if (e.changeTypes.grouping) {\r\n                        return\r\n                    }\r\n                    if (optionNames.width || optionNames.visibleWidth) {\r\n                        this.callBase(e);\r\n                        this._fireColumnResizedCallbacks()\r\n                    }\r\n                },\r\n                getScrollable: function() {\r\n                    return this._scrollable\r\n                },\r\n                init: function() {\r\n                    var that = this;\r\n                    var dataController = that.getController(\"data\");\r\n                    that.callBase();\r\n                    that._editorFactoryController = that.getController(\"editorFactory\");\r\n                    that._rowHeight = 0;\r\n                    that._scrollTop = 0;\r\n                    that._scrollLeft = -1;\r\n                    that._scrollRight = 0;\r\n                    that._hasHeight = false;\r\n                    dataController.loadingChanged.add((function(isLoading, messageText) {\r\n                        that.setLoading(isLoading, messageText)\r\n                    }));\r\n                    dataController.dataSourceChanged.add((function() {\r\n                        if (that._scrollLeft >= 0) {\r\n                            that._handleScroll({\r\n                                component: that.getScrollable(),\r\n                                scrollOffset: {\r\n                                    top: that._scrollTop,\r\n                                    left: that._scrollLeft\r\n                                }\r\n                            })\r\n                        }\r\n                    }))\r\n                },\r\n                _handleDataChanged: function(change) {\r\n                    switch (change.changeType) {\r\n                        case \"refresh\":\r\n                        case \"prepend\":\r\n                        case \"append\":\r\n                        case \"update\":\r\n                            this.render(null, change);\r\n                            break;\r\n                        default:\r\n                            this._update(change)\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"isScrollbarVisible\", \"getTopVisibleRowData\", \"getScrollbarWidth\", \"getCellElement\", \"getRowElement\", \"getScrollable\"]\r\n                },\r\n                contentWidth: function() {\r\n                    return getWidth(this.element()) - this.getScrollbarWidth()\r\n                },\r\n                getScrollbarWidth: function(isHorizontal) {\r\n                    var scrollableContainer = this._scrollableContainer && this._scrollableContainer.get(0);\r\n                    var scrollbarWidth = 0;\r\n                    if (scrollableContainer) {\r\n                        if (!isHorizontal) {\r\n                            scrollbarWidth = scrollableContainer.clientWidth ? scrollableContainer.offsetWidth - scrollableContainer.clientWidth : 0\r\n                        } else {\r\n                            scrollbarWidth = scrollableContainer.clientHeight ? scrollableContainer.offsetHeight - scrollableContainer.clientHeight : 0;\r\n                            scrollbarWidth += (that = this, scrollable = that.getScrollable(), scrollable ? Math.ceil(parseFloat($(scrollable.content()).css(\"paddingBottom\"))) : 0)\r\n                        }\r\n                    }\r\n                    var that, scrollable;\r\n                    return scrollbarWidth > 0 ? scrollbarWidth : 0\r\n                },\r\n                _fireColumnResizedCallbacks: function() {\r\n                    var lastColumnWidths = this._lastColumnWidths || [];\r\n                    var columnWidths = [];\r\n                    var columns = this.getColumns();\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        columnWidths[i] = columns[i].visibleWidth;\r\n                        if (columns[i].resizedCallbacks && !isDefined(columns[i].groupIndex) && lastColumnWidths[i] !== columnWidths[i]) {\r\n                            columns[i].resizedCallbacks.fire(columnWidths[i])\r\n                        }\r\n                    }\r\n                    this._lastColumnWidths = columnWidths\r\n                },\r\n                _updateLastRowBorder: function(isFreeSpaceRowVisible) {\r\n                    if (this.option(\"showBorders\") && this.option(\"showRowLines\") && !isFreeSpaceRowVisible) {\r\n                        this.element().addClass(LAST_ROW_BORDER)\r\n                    } else {\r\n                        this.element().removeClass(LAST_ROW_BORDER)\r\n                    }\r\n                },\r\n                _updateScrollable: function() {\r\n                    var dxScrollable = Scrollable.getInstance(this.element());\r\n                    if (dxScrollable) {\r\n                        dxScrollable.update();\r\n                        this._updateHorizontalScrollPosition()\r\n                    }\r\n                },\r\n                _updateHorizontalScrollPosition: function() {\r\n                    var scrollable = this.getScrollable();\r\n                    var scrollLeft = scrollable && scrollable.scrollOffset().left;\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    if (rtlEnabled) {\r\n                        var maxHorizontalScrollOffset = getMaxHorizontalScrollOffset(scrollable);\r\n                        var scrollRight = maxHorizontalScrollOffset - scrollLeft;\r\n                        if (scrollRight !== this._scrollRight) {\r\n                            this._scrollLeft = maxHorizontalScrollOffset - this._scrollRight\r\n                        }\r\n                    }\r\n                    if (this._scrollLeft >= 0 && scrollLeft !== this._scrollLeft) {\r\n                        scrollable.scrollTo({\r\n                            x: this._scrollLeft\r\n                        })\r\n                    }\r\n                },\r\n                _resizeCore: function() {\r\n                    var that = this;\r\n                    that._fireColumnResizedCallbacks();\r\n                    that._updateRowHeight();\r\n                    deferRender((function() {\r\n                        that._renderScrollable();\r\n                        that.renderNoDataText();\r\n                        that.updateFreeSpaceRowHeight();\r\n                        deferUpdate((function() {\r\n                            that._updateScrollable()\r\n                        }))\r\n                    }))\r\n                },\r\n                scrollTo: function(location) {\r\n                    var $element = this.element();\r\n                    var dxScrollable = $element && Scrollable.getInstance($element);\r\n                    if (dxScrollable) {\r\n                        dxScrollable.scrollTo(location)\r\n                    }\r\n                },\r\n                height: function(_height, hasHeight) {\r\n                    var that = this;\r\n                    var $element = this.element();\r\n                    if (0 === arguments.length) {\r\n                        return $element ? getOuterHeight($element, true) : 0\r\n                    }\r\n                    that._hasHeight = void 0 === hasHeight ? \"auto\" !== _height : hasHeight;\r\n                    if (isDefined(_height) && $element) {\r\n                        setHeight($element, _height)\r\n                    }\r\n                },\r\n                setLoading: function(isLoading, messageText) {\r\n                    var loadPanel = this._loadPanel;\r\n                    var dataController = this._dataController;\r\n                    var loadPanelOptions = this.option(\"loadPanel\") || {};\r\n                    var animation = dataController.isLoaded() ? loadPanelOptions.animation : null;\r\n                    var $element = this.element();\r\n                    if (!hasWindow()) {\r\n                        return\r\n                    }\r\n                    if (!loadPanel && void 0 !== messageText && dataController.isLocalStore() && \"auto\" === loadPanelOptions.enabled && $element) {\r\n                        this._renderLoadPanel($element, $element.parent());\r\n                        loadPanel = this._loadPanel\r\n                    }\r\n                    if (loadPanel) {\r\n                        var visibilityOptions = {\r\n                            message: messageText || loadPanelOptions.text,\r\n                            animation: animation,\r\n                            visible: isLoading\r\n                        };\r\n                        if (isLoading) {\r\n                            visibilityOptions.position = gridCoreUtils.calculateLoadPanelPosition($element)\r\n                        }\r\n                        clearTimeout(this._hideLoadingTimeoutID);\r\n                        if (loadPanel.option(\"visible\") && !isLoading) {\r\n                            this._hideLoadingTimeoutID = setTimeout((function() {\r\n                                loadPanel.option(visibilityOptions)\r\n                            }), LOADPANEL_HIDE_TIMEOUT)\r\n                        } else {\r\n                            loadPanel.option(visibilityOptions)\r\n                        }\r\n                    }\r\n                },\r\n                setRowsOpacity: function(columnIndex, value) {\r\n                    var $rows = this._getRowElements().not(\".\" + GROUP_ROW_CLASS) || [];\r\n                    this._setRowsOpacityCore($rows, this.getColumns(), columnIndex, value)\r\n                },\r\n                _getCellElementsCore: function(rowIndex) {\r\n                    var $cells = this.callBase.apply(this, arguments);\r\n                    if ($cells) {\r\n                        var groupCellIndex = $cells.filter(\".\" + GROUP_CELL_CLASS).index();\r\n                        if (groupCellIndex >= 0 && $cells.length > groupCellIndex + 1) {\r\n                            return $cells.slice(0, groupCellIndex + 1)\r\n                        }\r\n                    }\r\n                    return $cells\r\n                },\r\n                _getBoundaryVisibleItemIndex: function(isTop, isFloor) {\r\n                    var itemIndex = 0;\r\n                    var prevOffset = 0;\r\n                    var offset = 0;\r\n                    var viewportBoundary = this._scrollTop;\r\n                    var $contentElement = this._findContentElement();\r\n                    var contentElementOffsetTop = $contentElement && $contentElement.offset().top;\r\n                    var dataController = this.getController(\"data\");\r\n                    var items = dataController.items();\r\n                    var tableElement = this.getTableElement();\r\n                    if (items.length && tableElement) {\r\n                        var rowElements = this._getRowElements(tableElement).filter(\":visible\");\r\n                        if (!isTop) {\r\n                            var height = this._hasHeight ? getOuterHeight(this.element()) : $(getWindow()).outerHeight();\r\n                            viewportBoundary += height\r\n                        }\r\n                        for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\r\n                            prevOffset = offset;\r\n                            var $rowElement = $(rowElements).eq(itemIndex);\r\n                            if ($rowElement.length) {\r\n                                offset = $rowElement.offset();\r\n                                offset = (isTop ? offset.top : offset.top + getOuterHeight($rowElement)) - contentElementOffsetTop;\r\n                                if (offset > viewportBoundary) {\r\n                                    if (itemIndex) {\r\n                                        if (isFloor || 2 * viewportBoundary < Math.round(offset + prevOffset)) {\r\n                                            itemIndex--\r\n                                        }\r\n                                    }\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n                        if (itemIndex && itemIndex === items.length) {\r\n                            itemIndex--\r\n                        }\r\n                    }\r\n                    return itemIndex\r\n                },\r\n                getTopVisibleItemIndex: function(isFloor) {\r\n                    return this._getBoundaryVisibleItemIndex(true, isFloor)\r\n                },\r\n                getBottomVisibleItemIndex: function(isFloor) {\r\n                    return this._getBoundaryVisibleItemIndex(false, isFloor)\r\n                },\r\n                getTopVisibleRowData: function() {\r\n                    var itemIndex = this.getTopVisibleItemIndex();\r\n                    var items = this._dataController.items();\r\n                    if (items[itemIndex]) {\r\n                        return items[itemIndex].data\r\n                    }\r\n                },\r\n                _scrollToElement: function($element, offset) {\r\n                    var scrollable = this.getScrollable();\r\n                    scrollable && scrollable.scrollToElement($element, offset)\r\n                },\r\n                optionChanged: function(args) {\r\n                    this.callBase(args);\r\n                    switch (args.name) {\r\n                        case \"wordWrapEnabled\":\r\n                        case \"showColumnLines\":\r\n                        case \"showRowLines\":\r\n                        case \"rowAlternationEnabled\":\r\n                        case \"rowTemplate\":\r\n                        case \"dataRowTemplate\":\r\n                        case \"twoWayBindingEnabled\":\r\n                            this._invalidate(true, true);\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"scrolling\":\r\n                            this._rowHeight = null;\r\n                            this._tableElement = null;\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            this._rowHeight = null;\r\n                            this._tableElement = null;\r\n                            break;\r\n                        case \"loadPanel\":\r\n                            this._tableElement = null;\r\n                            this._invalidate(true, \"loadPanel.enabled\" !== args.fullName);\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"noDataText\":\r\n                            this.renderNoDataText();\r\n                            args.handled = true\r\n                    }\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._hideLoadingTimeoutID);\r\n                    this._scrollable && this._scrollable.dispose()\r\n                },\r\n                setScrollerSpacing: function() {},\r\n                _restoreErrorRow: function() {}\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.rows.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    rowsModule\r\n} from \"../grid_core/ui.grid_core.rows\";\r\nexport var RowsView = rowsModule.views.rowsView;\r\ngridCore.registerModule(\"rows\", rowsModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.context_menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport ContextMenu from \"../context_menu\";\r\nvar CONTEXT_MENU = \"dx-context-menu\";\r\nvar viewName = {\r\n    columnHeadersView: \"header\",\r\n    rowsView: \"content\",\r\n    footerView: \"footer\",\r\n    headerPanel: \"headerPanel\"\r\n};\r\nvar VIEW_NAMES = [\"columnHeadersView\", \"rowsView\", \"footerView\", \"headerPanel\"];\r\nvar ContextMenuController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this.createAction(\"onContextMenuPreparing\")\r\n    },\r\n    getContextMenuItems: function(dxEvent) {\r\n        if (!dxEvent) {\r\n            return false\r\n        }\r\n        var that = this;\r\n        var $targetElement = $(dxEvent.target);\r\n        var $element;\r\n        var $targetRowElement;\r\n        var $targetCellElement;\r\n        var menuItems;\r\n        each(VIEW_NAMES, (function() {\r\n            var view = that.getView(this);\r\n            $element = view && view.element();\r\n            if ($element && ($element.is($targetElement) || $element.find($targetElement).length)) {\r\n                var _rowOptions$cells;\r\n                $targetCellElement = $targetElement.closest(\".dx-row > td, .dx-row > tr\");\r\n                $targetRowElement = $targetCellElement.parent();\r\n                var rowIndex = view.getRowIndex($targetRowElement);\r\n                var columnIndex = $targetCellElement[0] && $targetCellElement[0].cellIndex;\r\n                var rowOptions = $targetRowElement.data(\"options\");\r\n                var options = {\r\n                    event: dxEvent,\r\n                    targetElement: getPublicElement($targetElement),\r\n                    target: viewName[this],\r\n                    rowIndex: rowIndex,\r\n                    row: view._getRows()[rowIndex],\r\n                    columnIndex: columnIndex,\r\n                    column: null === rowOptions || void 0 === rowOptions ? void 0 : null === (_rowOptions$cells = rowOptions.cells) || void 0 === _rowOptions$cells ? void 0 : _rowOptions$cells[columnIndex].column\r\n                };\r\n                options.items = view.getContextMenuItems && view.getContextMenuItems(options);\r\n                that.executeAction(\"onContextMenuPreparing\", options);\r\n                that._contextMenuPrepared(options);\r\n                menuItems = options.items;\r\n                if (menuItems) {\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return menuItems\r\n    },\r\n    _contextMenuPrepared: noop\r\n});\r\nvar ContextMenuView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(CONTEXT_MENU);\r\n        this.setAria(\"role\", \"presentation\", $element);\r\n        this._createComponent($element, ContextMenu, {\r\n            onPositioning: function(actionArgs) {\r\n                var event = actionArgs.event;\r\n                var contextMenuInstance = actionArgs.component;\r\n                var items = that.getController(\"contextMenu\").getContextMenuItems(event);\r\n                if (items) {\r\n                    contextMenuInstance.option(\"items\", items);\r\n                    event.stopPropagation()\r\n                } else {\r\n                    actionArgs.cancel = true\r\n                }\r\n            },\r\n            onItemClick: function(params) {\r\n                params.itemData.onItemClick && params.itemData.onItemClick(params)\r\n            },\r\n            cssClass: that.getWidgetContainerClass(),\r\n            target: that.component.$element()\r\n        })\r\n    }\r\n});\r\nexport var contextMenuModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            onContextMenuPreparing: null\r\n        }\r\n    },\r\n    controllers: {\r\n        contextMenu: ContextMenuController\r\n    },\r\n    views: {\r\n        contextMenuView: ContextMenuView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.context_menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport treeListCore from \"./ui.data_grid.core\";\r\nimport {\r\n    contextMenuModule\r\n} from \"../grid_core/ui.grid_core.context_menu\";\r\ntreeListCore.registerModule(\"contextMenu\", contextMenuModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.error_handling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar ERROR_MESSAGE_CLASS = \"dx-error-message\";\r\nvar ERROR_CLOSEBUTTON_CLASS = \"dx-closebutton\";\r\nvar ACTION_CLASS = \"action\";\r\nvar ErrorHandlingController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        this._rowsView = this.getView(\"rowsView\")\r\n    },\r\n    _createErrorRow: function(error, $tableElements) {\r\n        var that = this;\r\n        var $errorRow;\r\n        var $closeButton;\r\n        var $errorMessage = this._renderErrorMessage(error);\r\n        if ($tableElements) {\r\n            $errorRow = $(\"<tr>\").addClass(ERROR_ROW_CLASS);\r\n            $closeButton = $(\"<div>\").addClass(ERROR_CLOSEBUTTON_CLASS).addClass(that.addWidgetPrefix(ACTION_CLASS));\r\n            eventsEngine.on($closeButton, clickEventName, that.createAction((function(args) {\r\n                var e = args.event;\r\n                var $errorRow;\r\n                var errorRowIndex = $(e.currentTarget).closest(\".\" + ERROR_ROW_CLASS).index();\r\n                e.stopPropagation();\r\n                each($tableElements, (function(_, tableElement) {\r\n                    $errorRow = $(tableElement).children(\"tbody\").children(\"tr\").eq(errorRowIndex);\r\n                    that.removeErrorRow($errorRow)\r\n                }));\r\n                that.getController(\"resizing\") && that.getController(\"resizing\").fireContentReadyAction()\r\n            })));\r\n            $(\"<td>\").attr({\r\n                colSpan: that.getController(\"columns\").getVisibleColumns().length,\r\n                role: \"presentation\"\r\n            }).prepend($closeButton).append($errorMessage).appendTo($errorRow);\r\n            return $errorRow\r\n        }\r\n        return $errorMessage\r\n    },\r\n    _renderErrorMessage: function(error) {\r\n        var message = error.url ? error.message.replace(error.url, \"\") : error.message || error;\r\n        var $message = $(\"<div>\").addClass(ERROR_MESSAGE_CLASS).text(message);\r\n        if (error.url) {\r\n            $(\"<a>\").attr(\"href\", error.url).text(error.url).appendTo($message)\r\n        }\r\n        return $message\r\n    },\r\n    renderErrorRow: function(error, rowIndex, $popupContent) {\r\n        var that = this;\r\n        var $errorMessageElement;\r\n        var $firstErrorRow;\r\n        if ($popupContent) {\r\n            $popupContent.find(\".\" + ERROR_MESSAGE_CLASS).remove();\r\n            $errorMessageElement = that._createErrorRow(error);\r\n            $popupContent.prepend($errorMessageElement);\r\n            return $errorMessageElement\r\n        }\r\n        var viewElement = rowIndex >= 0 || !that._columnHeadersView.isVisible() ? that._rowsView : that._columnHeadersView;\r\n        var $tableElements = viewElement.getTableElements();\r\n        each($tableElements, (function(_, tableElement) {\r\n            $errorMessageElement = that._createErrorRow(error, $tableElements);\r\n            $firstErrorRow = $firstErrorRow || $errorMessageElement;\r\n            if (rowIndex >= 0) {\r\n                var $row = viewElement._getRowElements($(tableElement)).eq(rowIndex);\r\n                that.removeErrorRow($row.next());\r\n                $errorMessageElement.insertAfter($row)\r\n            } else {\r\n                var $tbody = $(tableElement).children(\"tbody\");\r\n                var rowElements = $tbody.children(\"tr\");\r\n                if (that._columnHeadersView.isVisible()) {\r\n                    that.removeErrorRow(rowElements.last());\r\n                    $(tableElement).append($errorMessageElement)\r\n                } else {\r\n                    that.removeErrorRow(rowElements.first());\r\n                    $tbody.first().prepend($errorMessageElement)\r\n                }\r\n            }\r\n        }));\r\n        var resizingController = that.getController(\"resizing\");\r\n        resizingController && resizingController.fireContentReadyAction();\r\n        return $firstErrorRow\r\n    },\r\n    removeErrorRow: function($row) {\r\n        if (!$row) {\r\n            var $columnHeaders = this._columnHeadersView && this._columnHeadersView.element();\r\n            $row = $columnHeaders && $columnHeaders.find(\".\" + ERROR_ROW_CLASS);\r\n            if (!$row || !$row.length) {\r\n                var $rowsViewElement = this._rowsView.element();\r\n                $row = $rowsViewElement && $rowsViewElement.find(\".\" + ERROR_ROW_CLASS)\r\n            }\r\n        }\r\n        $row && $row.hasClass(ERROR_ROW_CLASS) && $row.remove()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"errorRowEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var errorHandlingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            errorRowEnabled: true\r\n        }\r\n    },\r\n    controllers: {\r\n        errorHandling: ErrorHandlingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var errorHandlingController = that.getController(\"errorHandling\");\r\n                    that.callBase();\r\n                    that.dataErrorOccurred.add((function(error, $popupContent) {\r\n                        if (that.option(\"errorRowEnabled\")) {\r\n                            errorHandlingController.renderErrorRow(error, void 0, $popupContent)\r\n                        }\r\n                    }));\r\n                    that.changed.add((function(e) {\r\n                        if (e && \"loadError\" === e.changeType) {\r\n                            return\r\n                        }\r\n                        var errorHandlingController = that.getController(\"errorHandling\");\r\n                        var editingController = that.getController(\"editing\");\r\n                        if (editingController && !editingController.hasChanges()) {\r\n                            errorHandlingController && errorHandlingController.removeErrorRow()\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.error_handling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    errorHandlingModule\r\n} from \"../grid_core/ui.grid_core.error_handling\";\r\ngridCore.registerModule(\"errorHandling\", errorHandlingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.grid_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getInnerWidth,\r\n    getWidth,\r\n    getHeight,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    deferRender,\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    hasWindow,\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport * as accessibility from \"../shared/accessibility\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar BORDERS_CLASS = \"borders\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar IMPORTANT_MARGIN_CLASS = \"important-margin\";\r\nvar GRIDBASE_CONTAINER_CLASS = \"dx-gridbase-container\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"adaptiveHidden\";\r\nvar VIEW_NAMES = [\"columnsSeparatorView\", \"blockSeparatorView\", \"trackerView\", \"headerPanel\", \"columnHeadersView\", \"rowsView\", \"footerView\", \"columnChooserView\", \"filterPanelView\", \"pagerView\", \"draggingHeaderView\", \"contextMenuView\", \"errorView\", \"headerFilterView\", \"filterBuilderView\"];\r\nvar isPercentWidth = function(width) {\r\n    return isString(width) && \"%\" === width.slice(-1)\r\n};\r\nvar isPixelWidth = function(width) {\r\n    return isString(width) && \"px\" === width.slice(-2)\r\n};\r\nvar getContainerHeight = function($container) {\r\n    var clientHeight = $container.get(0).clientHeight;\r\n    var paddingTop = parseFloat($container.css(\"paddingTop\"));\r\n    var paddingBottom = parseFloat($container.css(\"paddingBottom\"));\r\n    return clientHeight - paddingTop - paddingBottom\r\n};\r\nvar calculateFreeWidth = function(that, widths) {\r\n    var contentWidth = that._rowsView.contentWidth();\r\n    var totalWidth = that._getTotalWidth(widths, contentWidth);\r\n    return contentWidth - totalWidth\r\n};\r\nvar calculateFreeWidthWithCurrentMinWidth = function(that, columnIndex, currentMinWidth, widths) {\r\n    return calculateFreeWidth(that, widths.map((function(width, index) {\r\n        return index === columnIndex ? currentMinWidth : width\r\n    })))\r\n};\r\nvar restoreFocus = function(focusedElement, selectionRange) {\r\n    accessibility.hiddenFocus(focusedElement);\r\n    gridCoreUtils.setSelectionRange(focusedElement, selectionRange)\r\n};\r\nvar ResizingController = modules.ViewController.inherit({\r\n    _initPostRenderHandlers: function() {\r\n        var dataController = this._dataController;\r\n        if (!this._refreshSizesHandler) {\r\n            this._refreshSizesHandler = e => {\r\n                dataController.changed.remove(this._refreshSizesHandler);\r\n                var templateDeferreds = e && e.templateDeferreds || [];\r\n                when.apply(this, templateDeferreds).done(() => {\r\n                    this._refreshSizes(e)\r\n                })\r\n            };\r\n            dataController.changed.add(() => {\r\n                dataController.changed.add(this._refreshSizesHandler)\r\n            })\r\n        }\r\n    },\r\n    _refreshSizes: function(e) {\r\n        var resizeDeferred;\r\n        var that = this;\r\n        var changeType = e && e.changeType;\r\n        var isDelayed = e && e.isDelayed;\r\n        var items = that._dataController.items();\r\n        if (!e || \"refresh\" === changeType || \"prepend\" === changeType || \"append\" === changeType) {\r\n            if (!isDelayed) {\r\n                resizeDeferred = that.resize()\r\n            }\r\n        } else if (\"update\" === changeType) {\r\n            var _e$changeTypes;\r\n            if (0 === (null === (_e$changeTypes = e.changeTypes) || void 0 === _e$changeTypes ? void 0 : _e$changeTypes.length)) {\r\n                return\r\n            }\r\n            if ((items.length > 1 || \"insert\" !== e.changeTypes[0]) && !(0 === items.length && \"remove\" === e.changeTypes[0]) && !e.needUpdateDimensions) {\r\n                deferUpdate(() => deferRender(() => deferUpdate(() => {\r\n                    that._setScrollerSpacing(that._hasHeight);\r\n                    that._rowsView.resize()\r\n                })))\r\n            } else {\r\n                resizeDeferred = that.resize()\r\n            }\r\n        }\r\n        if (changeType && \"updateSelection\" !== changeType && \"updateFocusedRow\" !== changeType && \"pageIndex\" !== changeType && !isDelayed) {\r\n            when(resizeDeferred).done((function() {\r\n                that._setAriaRowColCount();\r\n                that.fireContentReadyAction()\r\n            }))\r\n        }\r\n    },\r\n    fireContentReadyAction: function() {\r\n        this.component._fireContentReadyAction()\r\n    },\r\n    _setAriaRowColCount: function() {\r\n        var component = this.component;\r\n        component.setAria({\r\n            rowCount: this._dataController.totalItemsCount(),\r\n            colCount: component.columnCount()\r\n        }, component.$element().children(\".\" + GRIDBASE_CONTAINER_CLASS))\r\n    },\r\n    _getBestFitWidths: function() {\r\n        var _widths;\r\n        var rowsView = this._rowsView;\r\n        var columnHeadersView = this._columnHeadersView;\r\n        var widths = rowsView.getColumnWidths();\r\n        if (!(null !== (_widths = widths) && void 0 !== _widths && _widths.length)) {\r\n            var _rowsView$getTableEle;\r\n            var headersTableElement = columnHeadersView.getTableElement();\r\n            columnHeadersView.setTableElement(null === (_rowsView$getTableEle = rowsView.getTableElement()) || void 0 === _rowsView$getTableEle ? void 0 : _rowsView$getTableEle.children(\".dx-header\"));\r\n            widths = columnHeadersView.getColumnWidths();\r\n            columnHeadersView.setTableElement(headersTableElement)\r\n        }\r\n        return widths\r\n    },\r\n    _setVisibleWidths: function(visibleColumns, widths) {\r\n        var columnsController = this._columnsController;\r\n        columnsController.beginUpdate();\r\n        each(visibleColumns, (function(index, column) {\r\n            var columnId = columnsController.getColumnId(column);\r\n            columnsController.columnOption(columnId, \"visibleWidth\", widths[index])\r\n        }));\r\n        columnsController.endUpdate()\r\n    },\r\n    _toggleBestFitModeForView: function(view, className, isBestFit) {\r\n        if (!view || !view.isVisible()) {\r\n            return\r\n        }\r\n        var $rowsTables = this._rowsView.getTableElements();\r\n        var $viewTables = view.getTableElements();\r\n        each($rowsTables, (index, tableElement) => {\r\n            var $tableBody;\r\n            var $rowsTable = $(tableElement);\r\n            var $viewTable = $viewTables.eq(index);\r\n            if ($viewTable && $viewTable.length) {\r\n                if (isBestFit) {\r\n                    $tableBody = $viewTable.children(\"tbody\").appendTo($rowsTable)\r\n                } else {\r\n                    $tableBody = $rowsTable.children(\".\" + className).appendTo($viewTable)\r\n                }\r\n                $tableBody.toggleClass(className, isBestFit);\r\n                $tableBody.toggleClass(this.addWidgetPrefix(\"best-fit\"), isBestFit)\r\n            }\r\n        })\r\n    },\r\n    _toggleBestFitMode: function(isBestFit) {\r\n        var $rowsTable = this._rowsView.getTableElement();\r\n        var $rowsFixedTable = this._rowsView.getTableElements().eq(1);\r\n        if (!$rowsTable) {\r\n            return\r\n        }\r\n        $rowsTable.css(\"tableLayout\", isBestFit ? \"auto\" : \"fixed\");\r\n        $rowsTable.children(\"colgroup\").css(\"display\", isBestFit ? \"none\" : \"\");\r\n        $rowsFixedTable.toggleClass(this.addWidgetPrefix(TABLE_FIXED_CLASS), !isBestFit);\r\n        this._toggleBestFitModeForView(this._columnHeadersView, \"dx-header\", isBestFit);\r\n        this._toggleBestFitModeForView(this._footerView, \"dx-footer\", isBestFit);\r\n        this._toggleContentMinHeight(isBestFit);\r\n        if (this._needStretch()) {\r\n            $rowsTable.get(0).style.width = isBestFit ? \"auto\" : \"\"\r\n        }\r\n    },\r\n    _toggleContentMinHeight: function(isBestFit) {\r\n        if (this.option(\"wordWrapEnabled\")) {\r\n            var scrollable = this._rowsView.getScrollable();\r\n            var $contentElement = this._rowsView._findContentElement();\r\n            if (false === (null === scrollable || void 0 === scrollable ? void 0 : scrollable.option(\"useNative\"))) {\r\n                $contentElement.css({\r\n                    minHeight: isBestFit ? gridCoreUtils.getContentHeightLimit(browser) : \"\"\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _synchronizeColumns: function() {\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        var needBestFit = this._needBestFit();\r\n        var hasMinWidth = false;\r\n        var resetBestFitMode;\r\n        var isColumnWidthsCorrected = false;\r\n        var resultWidths = [];\r\n        var focusedElement;\r\n        var selectionRange;\r\n        !needBestFit && each(visibleColumns, (function(index, column) {\r\n            if (\"auto\" === column.width) {\r\n                needBestFit = true;\r\n                return false\r\n            }\r\n        }));\r\n        each(visibleColumns, (function(index, column) {\r\n            if (column.minWidth) {\r\n                hasMinWidth = true;\r\n                return false\r\n            }\r\n        }));\r\n        this._setVisibleWidths(visibleColumns, []);\r\n        if (needBestFit) {\r\n            focusedElement = domAdapter.getActiveElement();\r\n            selectionRange = gridCoreUtils.getSelectionRange(focusedElement);\r\n            this._toggleBestFitMode(true);\r\n            resetBestFitMode = true\r\n        }\r\n        var $element = this.component.$element();\r\n        if ($element && $element[0] && this._maxWidth) {\r\n            delete this._maxWidth;\r\n            $element[0].style.maxWidth = \"\"\r\n        }\r\n        deferUpdate(() => {\r\n            if (needBestFit) {\r\n                resultWidths = this._getBestFitWidths();\r\n                each(visibleColumns, (function(index, column) {\r\n                    var columnId = columnsController.getColumnId(column);\r\n                    columnsController.columnOption(columnId, \"bestFitWidth\", resultWidths[index], true)\r\n                }))\r\n            } else if (hasMinWidth) {\r\n                resultWidths = this._getBestFitWidths()\r\n            }\r\n            each(visibleColumns, (function(index) {\r\n                var width = this.width;\r\n                if (\"auto\" !== width) {\r\n                    if (isDefined(width)) {\r\n                        resultWidths[index] = isNumeric(width) || isPixelWidth(width) ? parseFloat(width) : width\r\n                    } else if (!columnAutoWidth) {\r\n                        resultWidths[index] = void 0\r\n                    }\r\n                }\r\n            }));\r\n            if (resetBestFitMode) {\r\n                this._toggleBestFitMode(false);\r\n                resetBestFitMode = false;\r\n                if (focusedElement && focusedElement !== domAdapter.getActiveElement()) {\r\n                    var isFocusOutsideWindow = getBoundingRect(focusedElement).bottom < 0;\r\n                    if (!isFocusOutsideWindow) {\r\n                        restoreFocus(focusedElement, selectionRange)\r\n                    }\r\n                }\r\n            }\r\n            isColumnWidthsCorrected = this._correctColumnWidths(resultWidths, visibleColumns);\r\n            if (columnAutoWidth) {\r\n                ! function() {\r\n                    var expandColumnWidth;\r\n                    each(visibleColumns, (function(index, column) {\r\n                        if (\"groupExpand\" === column.type) {\r\n                            expandColumnWidth = resultWidths[index]\r\n                        }\r\n                    }));\r\n                    each(visibleColumns, (function(index, column) {\r\n                        if (\"groupExpand\" === column.type && expandColumnWidth) {\r\n                            resultWidths[index] = expandColumnWidth\r\n                        }\r\n                    }))\r\n                }();\r\n                if (this._needStretch()) {\r\n                    this._processStretch(resultWidths, visibleColumns)\r\n                }\r\n            }\r\n            deferRender(() => {\r\n                if (needBestFit || isColumnWidthsCorrected) {\r\n                    this._setVisibleWidths(visibleColumns, resultWidths)\r\n                }\r\n            })\r\n        })\r\n    },\r\n    _needBestFit: function() {\r\n        return this.option(\"columnAutoWidth\")\r\n    },\r\n    _needStretch: function() {\r\n        return this._columnsController.getVisibleColumns().some(c => \"auto\" === c.width && !c.command)\r\n    },\r\n    _getAverageColumnsWidth: function(resultWidths) {\r\n        var freeWidth = calculateFreeWidth(this, resultWidths);\r\n        var columnCountWithoutWidth = resultWidths.filter((function(width) {\r\n            return void 0 === width\r\n        })).length;\r\n        return freeWidth / columnCountWithoutWidth\r\n    },\r\n    _correctColumnWidths: function(resultWidths, visibleColumns) {\r\n        var that = this;\r\n        var i;\r\n        var hasPercentWidth = false;\r\n        var hasAutoWidth = false;\r\n        var isColumnWidthsCorrected = false;\r\n        var $element = that.component.$element();\r\n        var hasWidth = that._hasWidth;\r\n        var _loop = function() {\r\n            var index = i;\r\n            var column = visibleColumns[index];\r\n            var isHiddenColumn = resultWidths[index] === HIDDEN_COLUMNS_WIDTH;\r\n            var width = resultWidths[index];\r\n            var minWidth = column.minWidth;\r\n            if (minWidth) {\r\n                if (void 0 === width) {\r\n                    var averageColumnsWidth = that._getAverageColumnsWidth(resultWidths);\r\n                    width = averageColumnsWidth\r\n                } else if (isPercentWidth(width)) {\r\n                    var freeWidth = calculateFreeWidthWithCurrentMinWidth(that, index, minWidth, resultWidths);\r\n                    if (freeWidth < 0) {\r\n                        width = -1\r\n                    }\r\n                }\r\n            }\r\n            var realColumnWidth = that._getRealColumnWidth(index, resultWidths.map((function(columnWidth, columnIndex) {\r\n                return index === columnIndex ? width : columnWidth\r\n            })));\r\n            if (minWidth && !isHiddenColumn && realColumnWidth < minWidth) {\r\n                resultWidths[index] = minWidth;\r\n                isColumnWidthsCorrected = true;\r\n                i = -1\r\n            }\r\n            if (!isDefined(column.width)) {\r\n                hasAutoWidth = true\r\n            }\r\n            if (isPercentWidth(column.width)) {\r\n                hasPercentWidth = true\r\n            }\r\n        };\r\n        for (i = 0; i < visibleColumns.length; i++) {\r\n            _loop()\r\n        }\r\n        if (!hasAutoWidth && resultWidths.length) {\r\n            var $rowsViewElement = that._rowsView.element();\r\n            var contentWidth = that._rowsView.contentWidth();\r\n            var scrollbarWidth = that._rowsView.getScrollbarWidth();\r\n            var totalWidth = that._getTotalWidth(resultWidths, contentWidth);\r\n            if (totalWidth < contentWidth) {\r\n                var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns, resultWidths);\r\n                if (lastColumnIndex >= 0) {\r\n                    resultWidths[lastColumnIndex] = \"auto\";\r\n                    isColumnWidthsCorrected = true;\r\n                    if (false === hasWidth && !hasPercentWidth) {\r\n                        var borderWidth = that.option(\"showBorders\") ? Math.ceil(getOuterWidth($rowsViewElement) - getInnerWidth($rowsViewElement)) : 0;\r\n                        that._maxWidth = totalWidth + scrollbarWidth + borderWidth;\r\n                        $element.css(\"maxWidth\", that._maxWidth)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return isColumnWidthsCorrected\r\n    },\r\n    _processStretch: function(resultSizes, visibleColumns) {\r\n        var groupSize = this._rowsView.contentWidth();\r\n        var tableSize = this._getTotalWidth(resultSizes, groupSize);\r\n        var unusedIndexes = {\r\n            length: 0\r\n        };\r\n        if (!resultSizes.length) {\r\n            return\r\n        }\r\n        each(visibleColumns, (function(index) {\r\n            if (this.width || resultSizes[index] === HIDDEN_COLUMNS_WIDTH) {\r\n                unusedIndexes[index] = true;\r\n                unusedIndexes.length++\r\n            }\r\n        }));\r\n        var diff = groupSize - tableSize;\r\n        var diffElement = Math.floor(diff / (resultSizes.length - unusedIndexes.length));\r\n        var onePixelElementsCount = diff - diffElement * (resultSizes.length - unusedIndexes.length);\r\n        if (diff >= 0) {\r\n            for (var i = 0; i < resultSizes.length; i++) {\r\n                if (unusedIndexes[i]) {\r\n                    continue\r\n                }\r\n                resultSizes[i] += diffElement;\r\n                if (onePixelElementsCount > 0) {\r\n                    if (onePixelElementsCount < 1) {\r\n                        resultSizes[i] += onePixelElementsCount;\r\n                        onePixelElementsCount = 0\r\n                    } else {\r\n                        resultSizes[i]++;\r\n                        onePixelElementsCount--\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _getRealColumnWidth: function(columnIndex, columnWidths, groupWidth) {\r\n        var ratio = 1;\r\n        var width = columnWidths[columnIndex];\r\n        if (!isPercentWidth(width)) {\r\n            return parseFloat(width)\r\n        }\r\n        var percentTotalWidth = columnWidths.reduce((sum, width, index) => {\r\n            if (!isPercentWidth(width)) {\r\n                return sum\r\n            }\r\n            return sum + parseFloat(width)\r\n        }, 0);\r\n        var pixelTotalWidth = columnWidths.reduce((sum, width) => {\r\n            if (!width || width === HIDDEN_COLUMNS_WIDTH || isPercentWidth(width)) {\r\n                return sum\r\n            }\r\n            return sum + parseFloat(width)\r\n        }, 0);\r\n        groupWidth = groupWidth || this._rowsView.contentWidth();\r\n        var freeSpace = groupWidth - pixelTotalWidth;\r\n        var percentTotalWidthInPixel = percentTotalWidth * groupWidth / 100;\r\n        if (pixelTotalWidth > 0 && percentTotalWidthInPixel + pixelTotalWidth >= groupWidth) {\r\n            ratio = percentTotalWidthInPixel > freeSpace ? freeSpace / percentTotalWidthInPixel : 1\r\n        }\r\n        return parseFloat(width) * groupWidth * ratio / 100\r\n    },\r\n    _getTotalWidth: function(widths, groupWidth) {\r\n        var result = 0;\r\n        for (var i = 0; i < widths.length; i++) {\r\n            var width = widths[i];\r\n            if (width && width !== HIDDEN_COLUMNS_WIDTH) {\r\n                result += this._getRealColumnWidth(i, widths, groupWidth)\r\n            }\r\n        }\r\n        return Math.ceil(result)\r\n    },\r\n    updateSize: function(rootElement) {\r\n        var $groupElement;\r\n        var width;\r\n        var $rootElement = $(rootElement);\r\n        var importantMarginClass = this.addWidgetPrefix(IMPORTANT_MARGIN_CLASS);\r\n        if (void 0 === this._hasHeight && $rootElement && $rootElement.is(\":visible\") && getWidth($rootElement)) {\r\n            $groupElement = $rootElement.children(\".\" + this.getWidgetContainerClass());\r\n            if ($groupElement.length) {\r\n                $groupElement.detach()\r\n            }\r\n            this._hasHeight = !!getContainerHeight($rootElement);\r\n            width = getWidth($rootElement);\r\n            $rootElement.addClass(importantMarginClass);\r\n            this._hasWidth = getWidth($rootElement) === width;\r\n            $rootElement.removeClass(importantMarginClass);\r\n            if ($groupElement.length) {\r\n                $groupElement.appendTo($rootElement)\r\n            }\r\n        }\r\n    },\r\n    publicMethods: function() {\r\n        return [\"resize\", \"updateDimensions\"]\r\n    },\r\n    resize: function() {\r\n        return !this.component._requireResize && this.updateDimensions()\r\n    },\r\n    updateDimensions: function(checkSize) {\r\n        var that = this;\r\n        that._initPostRenderHandlers();\r\n        if (!that._checkSize(checkSize)) {\r\n            return\r\n        }\r\n        var prevResult = that._resizeDeferred;\r\n        var result = that._resizeDeferred = new Deferred;\r\n        when(prevResult).always((function() {\r\n            deferRender((function() {\r\n                if (that._dataController.isLoaded()) {\r\n                    that._synchronizeColumns()\r\n                }\r\n                that._resetGroupElementHeight();\r\n                deferUpdate((function() {\r\n                    deferRender((function() {\r\n                        deferUpdate((function() {\r\n                            that._updateDimensionsCore()\r\n                        }))\r\n                    }))\r\n                }))\r\n            })).done(result.resolve).fail(result.reject)\r\n        }));\r\n        return result.promise()\r\n    },\r\n    _resetGroupElementHeight: function() {\r\n        var groupElement = this.component.$element().children().get(0);\r\n        var scrollable = this._rowsView.getScrollable();\r\n        if (groupElement && groupElement.style.height && (!scrollable || !scrollable.scrollTop())) {\r\n            groupElement.style.height = \"\"\r\n        }\r\n    },\r\n    _checkSize: function(checkSize) {\r\n        var $rootElement = this.component.$element();\r\n        if (checkSize && (this._lastWidth === getWidth($rootElement) && this._lastHeight === getHeight($rootElement) && this._devicePixelRatio === getWindow().devicePixelRatio || !$rootElement.is(\":visible\"))) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _setScrollerSpacingCore: function(hasHeight) {\r\n        var that = this;\r\n        var vScrollbarWidth = hasHeight ? that._rowsView.getScrollbarWidth() : 0;\r\n        var hScrollbarWidth = that._rowsView.getScrollbarWidth(true);\r\n        deferRender((function() {\r\n            that._columnHeadersView && that._columnHeadersView.setScrollerSpacing(vScrollbarWidth);\r\n            that._footerView && that._footerView.setScrollerSpacing(vScrollbarWidth);\r\n            that._rowsView.setScrollerSpacing(vScrollbarWidth, hScrollbarWidth)\r\n        }))\r\n    },\r\n    _setScrollerSpacing: function(hasHeight) {\r\n        if (true === this.option(\"scrolling.useNative\")) {\r\n            deferRender(() => {\r\n                deferUpdate(() => {\r\n                    this._setScrollerSpacingCore(hasHeight)\r\n                })\r\n            })\r\n        } else {\r\n            this._setScrollerSpacingCore(hasHeight)\r\n        }\r\n    },\r\n    _updateDimensionsCore: function() {\r\n        var that = this;\r\n        var dataController = that._dataController;\r\n        var rowsView = that._rowsView;\r\n        var $rootElement = that.component.$element();\r\n        var groupElement = $rootElement.children().get(0);\r\n        var rootElementHeight = $rootElement && ($rootElement.get(0).clientHeight || getHeight($rootElement));\r\n        var maxHeight = parseInt($rootElement.css(\"maxHeight\"));\r\n        var maxHeightHappened = maxHeight && rootElementHeight >= maxHeight;\r\n        var height = that.option(\"height\") || $rootElement.get(0).style.height;\r\n        var editorFactory = that.getController(\"editorFactory\");\r\n        var isMaxHeightApplied = maxHeightHappened && groupElement.scrollHeight === groupElement.offsetHeight;\r\n        var $testDiv;\r\n        that.updateSize($rootElement);\r\n        var hasHeight = that._hasHeight || maxHeightHappened;\r\n        if (height && that._hasHeight ^ \"auto\" !== height) {\r\n            $testDiv = $(\"<div>\");\r\n            setHeight($testDiv, height);\r\n            $testDiv.appendTo($rootElement);\r\n            that._hasHeight = !!getHeight($testDiv);\r\n            $testDiv.remove()\r\n        }\r\n        deferRender((function() {\r\n            rowsView.height(null, hasHeight);\r\n            if (maxHeightHappened && !isMaxHeightApplied) {\r\n                $(groupElement).css(\"height\", maxHeight)\r\n            }\r\n            if (!dataController.isLoaded()) {\r\n                rowsView.setLoading(dataController.isLoading());\r\n                return\r\n            }\r\n            deferUpdate((function() {\r\n                that._updateLastSizes($rootElement);\r\n                that._setScrollerSpacing(hasHeight);\r\n                each(VIEW_NAMES, (function(index, viewName) {\r\n                    var view = that.getView(viewName);\r\n                    if (view) {\r\n                        view.resize()\r\n                    }\r\n                }));\r\n                editorFactory && editorFactory.resize()\r\n            }))\r\n        }))\r\n    },\r\n    _updateLastSizes: function($rootElement) {\r\n        this._lastWidth = getWidth($rootElement);\r\n        this._lastHeight = getHeight($rootElement);\r\n        this._devicePixelRatio = getWindow().devicePixelRatio\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"width\":\r\n            case \"height\":\r\n                this.component._renderDimensions();\r\n                this.resize();\r\n            case \"renderAsync\":\r\n                args.handled = true;\r\n                return;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        this._footerView = this.getView(\"footerView\");\r\n        this._rowsView = this.getView(\"rowsView\")\r\n    }\r\n});\r\nvar SynchronizeScrollingController = modules.ViewController.inherit({\r\n    _scrollChangedHandler: function(views, pos, viewName) {\r\n        for (var j = 0; j < views.length; j++) {\r\n            if (views[j] && views[j].name !== viewName) {\r\n                views[j].scrollTo({\r\n                    left: pos.left,\r\n                    top: pos.top\r\n                })\r\n            }\r\n        }\r\n    },\r\n    init: function() {\r\n        var views = [this.getView(\"columnHeadersView\"), this.getView(\"footerView\"), this.getView(\"rowsView\")];\r\n        for (var i = 0; i < views.length; i++) {\r\n            var view = views[i];\r\n            if (view) {\r\n                view.scrollChanged.add(this._scrollChangedHandler.bind(this, views))\r\n            }\r\n        }\r\n    }\r\n});\r\nvar GridView = modules.View.inherit({\r\n    _endUpdateCore: function() {\r\n        if (this.component._requireResize) {\r\n            this.component._requireResize = false;\r\n            this._resizingController.resize()\r\n        }\r\n    },\r\n    _getWidgetAriaLabel: function() {\r\n        return \"dxDataGrid-ariaDataGrid\"\r\n    },\r\n    init: function() {\r\n        this._resizingController = this.getController(\"resizing\");\r\n        this._dataController = this.getController(\"data\")\r\n    },\r\n    getView: function(name) {\r\n        return this.component._views[name]\r\n    },\r\n    element: function() {\r\n        return this._groupElement\r\n    },\r\n    optionChanged: function(args) {\r\n        if (isDefined(this._groupElement) && \"showBorders\" === args.name) {\r\n            this._groupElement.toggleClass(this.addWidgetPrefix(BORDERS_CLASS), !!args.value);\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _renderViews: function($groupElement) {\r\n        var that = this;\r\n        each(VIEW_NAMES, (function(index, viewName) {\r\n            var view = that.getView(viewName);\r\n            if (view) {\r\n                view.render($groupElement)\r\n            }\r\n        }))\r\n    },\r\n    _getTableRoleName: function() {\r\n        return \"grid\"\r\n    },\r\n    render: function($rootElement) {\r\n        var isFirstRender = !this._groupElement;\r\n        var $groupElement = this._groupElement || $(\"<div>\").addClass(this.getWidgetContainerClass());\r\n        $groupElement.addClass(GRIDBASE_CONTAINER_CLASS);\r\n        $groupElement.toggleClass(this.addWidgetPrefix(BORDERS_CLASS), !!this.option(\"showBorders\"));\r\n        this.setAria(\"role\", \"presentation\", $rootElement);\r\n        this.component.setAria({\r\n            role: this._getTableRoleName(),\r\n            label: messageLocalization.format(this._getWidgetAriaLabel())\r\n        }, $groupElement);\r\n        this._rootElement = $rootElement || this._rootElement;\r\n        if (isFirstRender) {\r\n            this._groupElement = $groupElement;\r\n            hasWindow() && this.getController(\"resizing\").updateSize($rootElement);\r\n            $groupElement.appendTo($rootElement)\r\n        }\r\n        this._renderViews($groupElement)\r\n    },\r\n    update: function() {\r\n        var $rootElement = this._rootElement;\r\n        var $groupElement = this._groupElement;\r\n        var resizingController = this.getController(\"resizing\");\r\n        if ($rootElement && $groupElement) {\r\n            resizingController.resize();\r\n            if (this._dataController.isLoaded()) {\r\n                this._resizingController.fireContentReadyAction()\r\n            }\r\n        }\r\n    }\r\n});\r\nexport var gridViewModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            showBorders: false,\r\n            renderAsync: false\r\n        }\r\n    },\r\n    controllers: {\r\n        resizing: ResizingController,\r\n        synchronizeScrolling: SynchronizeScrollingController\r\n    },\r\n    views: {\r\n        gridView: GridView\r\n    },\r\n    VIEW_NAMES: VIEW_NAMES\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grid_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    gridViewModule\r\n} from \"../grid_core/ui.grid_core.grid_view\";\r\ngridCore.registerModule(\"gridView\", gridViewModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Toolbar from \"../toolbar\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport \"../drop_down_menu\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getPathParts\r\n} from \"../../core/utils/data\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar TOOLBAR_BUTTON_CLASS = \"toolbar-button\";\r\nvar TOOLBAR_ARIA_LABEL = \"-ariaToolbar\";\r\nvar HeaderPanel = ColumnsView.inherit({\r\n    _getToolbarItems: function() {\r\n        return []\r\n    },\r\n    _getButtonContainer: function() {\r\n        return $(\"<div>\").addClass(this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS))\r\n    },\r\n    _getToolbarButtonClass: function(specificClass) {\r\n        var secondClass = specificClass ? \" \" + specificClass : \"\";\r\n        return this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS) + secondClass\r\n    },\r\n    _getToolbarOptions: function() {\r\n        var userToolbarOptions = this.option(\"toolbar\");\r\n        var options = {\r\n            toolbarOptions: {\r\n                items: this._getToolbarItems(),\r\n                visible: null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.visible,\r\n                disabled: null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.disabled,\r\n                onItemRendered: function(e) {\r\n                    var itemRenderedCallback = e.itemData.onItemRendered;\r\n                    if (itemRenderedCallback) {\r\n                        itemRenderedCallback(e)\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var userItems = null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.items;\r\n        options.toolbarOptions.items = this._normalizeToolbarItems(options.toolbarOptions.items, userItems);\r\n        this.executeAction(\"onToolbarPreparing\", options);\r\n        if (options.toolbarOptions && !isDefined(options.toolbarOptions.visible)) {\r\n            var toolbarItems = options.toolbarOptions.items;\r\n            options.toolbarOptions.visible = !!(null !== toolbarItems && void 0 !== toolbarItems && toolbarItems.length)\r\n        }\r\n        return options.toolbarOptions\r\n    },\r\n    _normalizeToolbarItems(defaultItems, userItems) {\r\n        var defaultProps = {\r\n            location: \"after\"\r\n        };\r\n        var isArray = Array.isArray(userItems);\r\n        if (!isDefined(userItems)) {\r\n            return defaultItems\r\n        }\r\n        if (!isArray) {\r\n            userItems = [userItems]\r\n        }\r\n        var defaultButtonsByNames = {};\r\n        defaultItems.forEach(button => {\r\n            defaultButtonsByNames[button.name] = button\r\n        });\r\n        var normalizedItems = userItems.map(button => {\r\n            var needHideButton = false;\r\n            if (isString(button)) {\r\n                button = {\r\n                    name: button\r\n                };\r\n                needHideButton = true\r\n            }\r\n            if (isDefined(button.name)) {\r\n                if (isDefined(defaultButtonsByNames[button.name])) {\r\n                    button = extend(true, {}, defaultButtonsByNames[button.name], button)\r\n                } else if (needHideButton) {\r\n                    button.visible = false\r\n                }\r\n            }\r\n            return extend(true, {}, defaultProps, button)\r\n        });\r\n        return isArray ? normalizedItems : normalizedItems[0]\r\n    },\r\n    _renderCore: function() {\r\n        if (!this._toolbar) {\r\n            var $headerPanel = this.element();\r\n            $headerPanel.addClass(this.addWidgetPrefix(HEADER_PANEL_CLASS));\r\n            var label = messageLocalization.format(this.component.NAME + TOOLBAR_ARIA_LABEL);\r\n            var $toolbar = $(\"<div>\").attr(\"aria-label\", label).appendTo($headerPanel);\r\n            this._toolbar = this._createComponent($toolbar, Toolbar, this._toolbarOptions)\r\n        } else {\r\n            this._toolbar.option(this._toolbarOptions)\r\n        }\r\n    },\r\n    _columnOptionChanged: noop,\r\n    _handleDataChanged: function() {\r\n        if (this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this.createAction(\"onToolbarPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    render: function() {\r\n        this._toolbarOptions = this._getToolbarOptions();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    setToolbarItemDisabled: function(name, optionValue) {\r\n        var toolbarInstance = this._toolbar;\r\n        if (toolbarInstance) {\r\n            var items = toolbarInstance.option(\"items\") || [];\r\n            var itemIndex = items.indexOf(items.filter((function(item) {\r\n                return item.name === name\r\n            }))[0]);\r\n            if (itemIndex >= 0) {\r\n                var itemOptionPrefix = \"items[\" + itemIndex + \"]\";\r\n                if (toolbarInstance.option(itemOptionPrefix + \".options\")) {\r\n                    toolbarInstance.option(itemOptionPrefix + \".options.disabled\", optionValue)\r\n                } else {\r\n                    toolbarInstance.option(itemOptionPrefix + \".disabled\", optionValue)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateToolbarDimensions: function() {\r\n        var _this$_toolbar;\r\n        null === (_this$_toolbar = this._toolbar) || void 0 === _this$_toolbar ? void 0 : _this$_toolbar.updateDimensions()\r\n    },\r\n    getHeaderPanel: function() {\r\n        return this.element()\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"onToolbarPreparing\" === args.name) {\r\n            this._invalidate();\r\n            args.handled = true\r\n        }\r\n        if (\"toolbar\" === args.name) {\r\n            args.handled = true;\r\n            if (this._toolbar) {\r\n                var parts = getPathParts(args.fullName);\r\n                var optionName = args.fullName.replace(/^toolbar\\./, \"\");\r\n                if (1 === parts.length) {\r\n                    var toolbarOptions = this._getToolbarOptions();\r\n                    this._toolbar.option(toolbarOptions)\r\n                } else if (\"items\" === parts[1]) {\r\n                    if (2 === parts.length) {\r\n                        var _toolbarOptions = this._getToolbarOptions();\r\n                        this._toolbar.option(\"items\", _toolbarOptions.items)\r\n                    } else if (3 === parts.length) {\r\n                        var normalizedItem = this._normalizeToolbarItems(this._getToolbarItems(), args.value);\r\n                        this._toolbar.option(optionName, normalizedItem)\r\n                    } else if (parts.length >= 4) {\r\n                        this._toolbar.option(optionName, args.value)\r\n                    }\r\n                } else {\r\n                    this._toolbar.option(optionName, args.value)\r\n                }\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    isVisible: function() {\r\n        return this._toolbarOptions && this._toolbarOptions.visible\r\n    },\r\n    allowDragging: noop\r\n});\r\nexport var headerPanelModule = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    views: {\r\n        headerPanel: HeaderPanel\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            resizing: {\r\n                _updateDimensionsCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this.getView(\"headerPanel\").updateToolbarDimensions()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.header_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    headerPanelModule\r\n} from \"../grid_core/ui.grid_core.header_panel\";\r\nexport var HeaderPanel = headerPanelModule.views.headerPanel;\r\ngridCore.registerModule(\"headerPanel\", headerPanelModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.base.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    deferRender,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    logger\r\n} from \"../../core/utils/console\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nvar DATAGRID_ROW_SELECTOR = \".dx-row\";\r\nvar DATAGRID_DEPRECATED_TEMPLATE_WARNING = \"Specifying grid templates with the jQuery selector name is now deprecated. Use the DOM Node or the jQuery object that references this selector instead.\";\r\nimport \"./ui.data_grid.column_headers\";\r\nimport \"./ui.data_grid.columns_controller\";\r\nimport \"./ui.data_grid.data_controller\";\r\nimport \"./ui.data_grid.sorting\";\r\nimport \"./ui.data_grid.rows\";\r\nimport \"./ui.data_grid.context_menu\";\r\nimport \"./ui.data_grid.error_handling\";\r\nimport \"./ui.data_grid.grid_view\";\r\nimport \"./ui.data_grid.header_panel\";\r\ngridCore.registerModulesOrder([\"stateStoring\", \"columns\", \"selection\", \"editorFactory\", \"columnChooser\", \"grouping\", \"editing\", \"editingRowBased\", \"editingFormBased\", \"editingCellBased\", \"masterDetail\", \"validating\", \"adaptivity\", \"data\", \"virtualScrolling\", \"columnHeaders\", \"filterRow\", \"headerPanel\", \"headerFilter\", \"sorting\", \"search\", \"rows\", \"pager\", \"columnsResizingReordering\", \"contextMenu\", \"keyboardNavigation\", \"errorHandling\", \"summary\", \"columnFixing\", \"export\", \"gridView\"]);\r\nvar DataGrid = Widget.inherit({\r\n    _activeStateUnit: DATAGRID_ROW_SELECTOR,\r\n    _getDefaultOptions: function() {\r\n        var result = this.callBase();\r\n        each(gridCore.modules, (function() {\r\n            if (isFunction(this.defaultOptions)) {\r\n                extend(true, result, this.defaultOptions())\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase();\r\n        extend(this._deprecatedOptions, {\r\n            useKeyboard: {\r\n                since: \"19.2\",\r\n                alias: \"keyboardNavigation.enabled\"\r\n            },\r\n            rowTemplate: {\r\n                since: \"21.2\",\r\n                message: 'Use the \"dataRowTemplate\" option instead'\r\n            },\r\n            onToolbarPreparing: {\r\n                since: \"21.2\",\r\n                message: 'Use the \"toolbar\" option instead'\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                showRowLines: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                showRowLines: true,\r\n                showColumnLines: false,\r\n                headerFilter: {\r\n                    height: 315\r\n                },\r\n                editing: {\r\n                    useIcons: true\r\n                },\r\n                selection: {\r\n                    showCheckBoxesMode: \"always\"\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return browser.webkit\r\n            },\r\n            options: {\r\n                loadingTimeout: 30,\r\n                loadPanel: {\r\n                    animation: {\r\n                        show: {\r\n                            easing: \"cubic-bezier(1, 0, 1, 0)\",\r\n                            duration: 500,\r\n                            from: {\r\n                                opacity: 0\r\n                            },\r\n                            to: {\r\n                                opacity: 1\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return \"desktop\" !== _device.deviceType\r\n            },\r\n            options: {\r\n                grouping: {\r\n                    expandMode: \"rowClick\"\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        gridCore.processModules(this, gridCore);\r\n        gridCore.callModuleItemsMethod(this, \"init\")\r\n    },\r\n    _clean: noop,\r\n    _optionChanged: function(args) {\r\n        gridCore.callModuleItemsMethod(this, \"optionChanged\", [args]);\r\n        if (!args.handled) {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.updateDimensions(true)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this.updateDimensions()\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this.getView(\"gridView\").render(this.$element())\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.getView(\"gridView\").update()\r\n    },\r\n    _renderContent: function() {\r\n        var that = this;\r\n        deferRender((function() {\r\n            that._renderContentImpl()\r\n        }))\r\n    },\r\n    _getTemplate: function(templateName) {\r\n        var template = templateName;\r\n        if (isString(template) && \"#\" === template[0]) {\r\n            template = $(templateName);\r\n            logger.warn(DATAGRID_DEPRECATED_TEMPLATE_WARNING)\r\n        }\r\n        return this.callBase(template)\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        gridCore.callModuleItemsMethod(this, \"dispose\")\r\n    },\r\n    isReady: function() {\r\n        return this.getController(\"data\").isReady()\r\n    },\r\n    beginUpdate: function() {\r\n        this.callBase();\r\n        gridCore.callModuleItemsMethod(this, \"beginUpdate\")\r\n    },\r\n    endUpdate: function() {\r\n        gridCore.callModuleItemsMethod(this, \"endUpdate\");\r\n        this.callBase()\r\n    },\r\n    getController: function(name) {\r\n        return this._controllers[name]\r\n    },\r\n    getView: function(name) {\r\n        return this._views[name]\r\n    },\r\n    focus: function(element) {\r\n        this.getController(\"keyboardNavigation\").focus(element)\r\n    }\r\n});\r\nDataGrid.registerModule = gridCore.registerModule.bind(gridCore);\r\nregisterComponent(\"dxDataGrid\", DataGrid);\r\nexport default DataGrid;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.state_storing_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    sessionStorage\r\n} from \"../../core/utils/storage\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nvar DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/;\r\nvar parseDates = function parseDates(state) {\r\n    if (!state) {\r\n        return\r\n    }\r\n    each(state, (function(key, value) {\r\n        if (isPlainObject(value) || Array.isArray(value)) {\r\n            parseDates(value)\r\n        } else if (\"string\" === typeof value) {\r\n            var date = DATE_REGEX.exec(value);\r\n            if (date) {\r\n                state[key] = new Date(Date.UTC(+date[1], +date[2] - 1, +date[3], +date[4], +date[5], +date[6]))\r\n            }\r\n        }\r\n    }))\r\n};\r\nexport var StateStoringController = modules.ViewController.inherit(function() {\r\n    var getStorage = function(options) {\r\n        var storage = \"sessionStorage\" === options.type ? sessionStorage() : getWindow().localStorage;\r\n        if (!storage) {\r\n            throw new Error(\"E1007\")\r\n        }\r\n        return storage\r\n    };\r\n    var getUniqueStorageKey = function(options) {\r\n        return isDefined(options.storageKey) ? options.storageKey : \"storage\"\r\n    };\r\n    return {\r\n        _loadState: function() {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                return options.customLoad && options.customLoad()\r\n            }\r\n            try {\r\n                return JSON.parse(getStorage(options).getItem(getUniqueStorageKey(options)))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        _saveState: function(state) {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                options.customSave && options.customSave(state);\r\n                return\r\n            }\r\n            try {\r\n                getStorage(options).setItem(getUniqueStorageKey(options), JSON.stringify(state))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"state\"]\r\n        },\r\n        isEnabled: function() {\r\n            return this.option(\"stateStoring.enabled\")\r\n        },\r\n        init: function() {\r\n            var that = this;\r\n            that._state = {};\r\n            that._isLoaded = false;\r\n            that._isLoading = false;\r\n            that._windowUnloadHandler = function() {\r\n                if (void 0 !== that._savingTimeoutID) {\r\n                    that._saveState(that.state())\r\n                }\r\n            };\r\n            eventsEngine.on(getWindow(), \"unload\", that._windowUnloadHandler);\r\n            return that\r\n        },\r\n        isLoaded: function() {\r\n            return this._isLoaded\r\n        },\r\n        isLoading: function() {\r\n            return this._isLoading\r\n        },\r\n        load: function() {\r\n            this._isLoading = true;\r\n            var loadResult = fromPromise(this._loadState());\r\n            loadResult.always(() => {\r\n                this._isLoaded = true;\r\n                this._isLoading = false\r\n            }).done(state => {\r\n                if (null !== state && !isEmptyObject(state)) {\r\n                    this.state(state)\r\n                }\r\n            });\r\n            return loadResult\r\n        },\r\n        state: function(_state) {\r\n            var that = this;\r\n            if (!arguments.length) {\r\n                return extend(true, {}, that._state)\r\n            } else {\r\n                that._state = extend({}, _state);\r\n                parseDates(that._state)\r\n            }\r\n        },\r\n        save: function() {\r\n            var that = this;\r\n            clearTimeout(that._savingTimeoutID);\r\n            that._savingTimeoutID = setTimeout((function() {\r\n                that._saveState(that.state());\r\n                that._savingTimeoutID = void 0\r\n            }), that.option(\"stateStoring.savingTimeout\"))\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"stateStoring\":\r\n                    if (this.isEnabled() && !this.isLoading()) {\r\n                        this.load()\r\n                    }\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._savingTimeoutID);\r\n            eventsEngine.off(getWindow(), \"unload\", this._windowUnloadHandler)\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.state_storing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getKeyHash,\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    StateStoringController\r\n} from \"./ui.grid_core.state_storing_core\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar getDataState = that => {\r\n    var pagerView = that.getView(\"pagerView\");\r\n    var dataController = that.getController(\"data\");\r\n    var state = {\r\n        allowedPageSizes: pagerView ? pagerView.getPageSizes() : void 0,\r\n        filterPanel: {\r\n            filterEnabled: that.option(\"filterPanel.filterEnabled\")\r\n        },\r\n        filterValue: that.option(\"filterValue\"),\r\n        focusedRowKey: that.option(\"focusedRowEnabled\") ? that.option(\"focusedRowKey\") : void 0\r\n    };\r\n    return extend(state, dataController.getUserState())\r\n};\r\nvar processLoadState = that => {\r\n    var columnsController = that.getController(\"columns\");\r\n    var selectionController = that.getController(\"selection\");\r\n    var exportController = that.getController(\"export\");\r\n    var dataController = that.getController(\"data\");\r\n    if (columnsController) {\r\n        columnsController.columnsChanged.add((function() {\r\n            that.updateState({\r\n                columns: columnsController.getUserState()\r\n            })\r\n        }))\r\n    }\r\n    if (selectionController) {\r\n        selectionController.selectionChanged.add((function(e) {\r\n            that.updateState({\r\n                selectedRowKeys: e.selectedRowKeys,\r\n                selectionFilter: e.selectionFilter\r\n            })\r\n        }))\r\n    }\r\n    if (dataController) {\r\n        that._initialPageSize = that.option(\"paging.pageSize\");\r\n        that._initialFilterValue = that.option(\"filterValue\");\r\n        dataController.changed.add((function() {\r\n            var state = getDataState(that);\r\n            that.updateState(state)\r\n        }))\r\n    }\r\n    if (exportController) {\r\n        exportController.selectionOnlyChanged.add((function() {\r\n            that.updateState({\r\n                exportSelectionOnly: exportController.selectionOnly()\r\n            })\r\n        }))\r\n    }\r\n};\r\nvar DEFAULT_FILTER_VALUE = null;\r\nvar getFilterValue = (that, state) => {\r\n    var filterSyncController = that.getController(\"filterSync\");\r\n    var columnsController = that.getController(\"columns\");\r\n    var hasFilterState = state.columns || void 0 !== state.filterValue;\r\n    if (filterSyncController) {\r\n        if (hasFilterState) {\r\n            return state.filterValue || filterSyncController.getFilterValueFromColumns(state.columns)\r\n        } else {\r\n            return that._initialFilterValue || filterSyncController.getFilterValueFromColumns(columnsController.getColumns())\r\n        }\r\n    }\r\n    return DEFAULT_FILTER_VALUE\r\n};\r\nexport var stateStoringModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            stateStoring: {\r\n                enabled: false,\r\n                storageKey: null,\r\n                type: \"localStorage\",\r\n                customLoad: null,\r\n                customSave: null,\r\n                savingTimeout: 2e3\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        stateStoring: StateStoringController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var dataController = that.getController(\"data\");\r\n                    that.callBase();\r\n                    dataController.stateLoaded.add((function() {\r\n                        if (dataController.isLoaded() && !dataController.getDataSource()) {\r\n                            that.setLoading(false);\r\n                            that.renderNoDataText();\r\n                            var columnHeadersView = that.component.getView(\"columnHeadersView\");\r\n                            columnHeadersView && columnHeadersView.render();\r\n                            that.component._fireContentReadyAction()\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            stateStoring: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    processLoadState(this)\r\n                },\r\n                isLoading: function() {\r\n                    return this.callBase() || this.getController(\"data\").isStateLoading()\r\n                },\r\n                state: function(_state) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (void 0 !== _state) {\r\n                        this.applyState(extend({}, _state))\r\n                    }\r\n                    return result\r\n                },\r\n                updateState: function(state) {\r\n                    if (this.isEnabled()) {\r\n                        var oldState = this.state();\r\n                        var newState = extend({}, oldState, state);\r\n                        var oldStateHash = getKeyHash(oldState);\r\n                        var newStateHash = getKeyHash(newState);\r\n                        if (!equalByValue(oldStateHash, newStateHash)) {\r\n                            extend(this._state, state);\r\n                            this.save()\r\n                        }\r\n                    } else {\r\n                        extend(this._state, state)\r\n                    }\r\n                },\r\n                applyState: function(state) {\r\n                    var allowedPageSizes = state.allowedPageSizes;\r\n                    var searchText = state.searchText;\r\n                    var selectedRowKeys = state.selectedRowKeys;\r\n                    var selectionFilter = state.selectionFilter;\r\n                    var exportController = this.getController(\"export\");\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var dataController = this.getController(\"data\");\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var isVirtualScrollingMode = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var showPageSizeSelector = true === this.option(\"pager.visible\") && this.option(\"pager.showPageSizeSelector\");\r\n                    this.component.beginUpdate();\r\n                    if (columnsController) {\r\n                        columnsController.setUserState(state.columns)\r\n                    }\r\n                    if (exportController) {\r\n                        exportController.selectionOnly(state.exportSelectionOnly)\r\n                    }\r\n                    if (!this.option(\"selection.deferred\")) {\r\n                        this.option(\"selectedRowKeys\", selectedRowKeys || [])\r\n                    }\r\n                    this.option(\"selectionFilter\", selectionFilter);\r\n                    if (allowedPageSizes && \"auto\" === this.option(\"pager.allowedPageSizes\")) {\r\n                        this.option(\"pager\").allowedPageSizes = allowedPageSizes\r\n                    }\r\n                    if (this.option(\"focusedRowEnabled\")) {\r\n                        this.option(\"focusedRowIndex\", -1);\r\n                        this.option(\"focusedRowKey\", state.focusedRowKey || null)\r\n                    }\r\n                    this.component.endUpdate();\r\n                    this.option(\"searchPanel.text\", searchText || \"\");\r\n                    this.option(\"filterValue\", getFilterValue(this, state));\r\n                    this.option(\"filterPanel.filterEnabled\", state.filterPanel ? state.filterPanel.filterEnabled : true);\r\n                    this.option(\"paging.pageIndex\", state.pageIndex || 0);\r\n                    this.option(\"paging.pageSize\", (!isVirtualScrollingMode || showPageSizeSelector) && isDefined(state.pageSize) ? state.pageSize : this._initialPageSize);\r\n                    dataController && dataController.reset()\r\n                }\r\n            },\r\n            columns: {\r\n                getVisibleColumns: function() {\r\n                    var visibleColumns = this.callBase.apply(this, arguments);\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    return stateStoringController.isEnabled() && !stateStoringController.isLoaded() ? [] : visibleColumns\r\n                }\r\n            },\r\n            data: {\r\n                callbackNames: function() {\r\n                    return this.callBase().concat([\"stateLoaded\"])\r\n                },\r\n                _refreshDataSource: function() {\r\n                    var callBase = this.callBase;\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    if (stateStoringController.isEnabled() && !stateStoringController.isLoaded()) {\r\n                        clearTimeout(this._restoreStateTimeoutID);\r\n                        var deferred = new Deferred;\r\n                        this._restoreStateTimeoutID = setTimeout(() => {\r\n                            stateStoringController.load().always(() => {\r\n                                this._restoreStateTimeoutID = null\r\n                            }).done(() => {\r\n                                callBase.call(this);\r\n                                this.stateLoaded.fire();\r\n                                deferred.resolve()\r\n                            }).fail(error => {\r\n                                this.stateLoaded.fire();\r\n                                this._handleLoadError(error || \"Unknown error\");\r\n                                deferred.reject()\r\n                            })\r\n                        });\r\n                        return deferred.promise()\r\n                    } else if (!this.isStateLoading()) {\r\n                        callBase.call(this)\r\n                    }\r\n                },\r\n                isLoading: function() {\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    return this.callBase() || stateStoringController.isLoading()\r\n                },\r\n                isStateLoading: function() {\r\n                    return isDefined(this._restoreStateTimeoutID)\r\n                },\r\n                isLoaded: function() {\r\n                    return this.callBase() && !this.isStateLoading()\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._restoreStateTimeoutID);\r\n                    this.callBase()\r\n                }\r\n            },\r\n            selection: {\r\n                _fireSelectionChanged: function(options) {\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    var isDeferredSelection = this.option(\"selection.deferred\");\r\n                    if (stateStoringController.isLoading() && isDeferredSelection) {\r\n                        return\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.state_storing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    stateStoringModule\r\n} from \"../grid_core/ui.grid_core.state_storing\";\r\ngridCore.registerModule(\"stateStoring\", stateStoringModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.selection.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport gridCore from \"../data_grid/ui.data_grid.core\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    touch\r\n} from \"../../core/utils/support\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport holdEvent from \"../../events/hold\";\r\nimport Selection from \"../selection/selection\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport errors from \"../widget/ui.errors\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar ROW_SELECTION_CLASS = \"dx-selection\";\r\nvar SELECT_CHECKBOX_CLASS = \"dx-select-checkbox\";\r\nvar CHECKBOXES_HIDDEN_CLASS = \"dx-select-checkboxes-hidden\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar SELECTION_DISABLED_CLASS = \"dx-selection-disabled\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar SHOW_CHECKBOXES_MODE = \"selection.showCheckBoxesMode\";\r\nvar SELECTION_MODE = \"selection.mode\";\r\nvar processLongTap = function(that, dxEvent) {\r\n    var selectionController = that.getController(\"selection\");\r\n    var rowsView = that.getView(\"rowsView\");\r\n    var $row = $(dxEvent.target).closest(\".\" + DATA_ROW_CLASS);\r\n    var rowIndex = rowsView.getRowIndex($row);\r\n    if (rowIndex < 0) {\r\n        return\r\n    }\r\n    if (\"onLongTap\" === that.option(SHOW_CHECKBOXES_MODE)) {\r\n        if (selectionController.isSelectionWithCheckboxes()) {\r\n            selectionController.stopSelectionWithCheckboxes()\r\n        } else {\r\n            selectionController.startSelectionWithCheckboxes()\r\n        }\r\n    } else {\r\n        if (\"onClick\" === that.option(SHOW_CHECKBOXES_MODE)) {\r\n            selectionController.startSelectionWithCheckboxes()\r\n        }\r\n        if (\"always\" !== that.option(SHOW_CHECKBOXES_MODE)) {\r\n            selectionController.changeItemSelection(rowIndex, {\r\n                control: true\r\n            })\r\n        }\r\n    }\r\n};\r\nvar SelectionController = gridCore.Controller.inherit(function() {\r\n    var selectionCellTemplate = (container, options) => {\r\n        var component = options.component;\r\n        var rowsView = component.getView(\"rowsView\");\r\n        if (component.option(\"renderAsync\") && !component.option(\"selection.deferred\")) {\r\n            options.value = component.isRowSelected(options.row.key)\r\n        }\r\n        rowsView.renderSelectCheckBoxContainer($(container), options)\r\n    };\r\n    var selectionHeaderTemplate = (container, options) => {\r\n        var column = options.column;\r\n        var $cellElement = $(container);\r\n        var columnHeadersView = options.component.getView(\"columnHeadersView\");\r\n        $cellElement.addClass(EDITOR_CELL_CLASS);\r\n        columnHeadersView._renderSelectAllCheckBox($cellElement, column);\r\n        columnHeadersView._attachSelectAllCheckBoxClickEvent($cellElement)\r\n    };\r\n    return {\r\n        init: function() {\r\n            var {\r\n                deferred: deferred,\r\n                selectAllMode: selectAllMode,\r\n                mode: mode\r\n            } = this.option(\"selection\") || {};\r\n            if (\"infinite\" === this.option(\"scrolling.mode\") && !deferred && \"multiple\" === mode && \"allPages\" === selectAllMode) {\r\n                errors.log(\"W1018\")\r\n            }\r\n            this._dataController = this.getController(\"data\");\r\n            this._selectionMode = mode;\r\n            this._isSelectionWithCheckboxes = false;\r\n            this._selection = this._createSelection();\r\n            this._updateSelectColumn();\r\n            this.createAction(\"onSelectionChanged\", {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            });\r\n            this._dataController && this._dataController.pushed.add(this._handleDataPushed.bind(this))\r\n        },\r\n        _handleDataPushed: function(changes) {\r\n            var removedKeys = changes.filter(change => \"remove\" === change.type).map(change => change.key);\r\n            removedKeys.length && this.deselectRows(removedKeys)\r\n        },\r\n        _getSelectionConfig: function() {\r\n            var dataController = this._dataController;\r\n            var columnsController = this.getController(\"columns\");\r\n            var selectionOptions = this.option(\"selection\") || {};\r\n            var deferred = selectionOptions.deferred;\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            var virtualPaging = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n            var allowSelectAll = this.option(\"selection.allowSelectAll\");\r\n            var legacyScrollingMode = this.option(\"scrolling.legacyMode\");\r\n            return {\r\n                selectedKeys: this.option(\"selectedRowKeys\"),\r\n                mode: this._selectionMode,\r\n                deferred: deferred,\r\n                maxFilterLengthInRequest: selectionOptions.maxFilterLengthInRequest,\r\n                selectionFilter: this.option(\"selectionFilter\"),\r\n                ignoreDisabledItems: true,\r\n                allowLoadByRange: function() {\r\n                    var hasGroupColumns = columnsController.getGroupColumns().length > 0;\r\n                    return virtualPaging && !legacyScrollingMode && !hasGroupColumns && allowSelectAll && !deferred\r\n                },\r\n                key: function() {\r\n                    return null === dataController || void 0 === dataController ? void 0 : dataController.key()\r\n                },\r\n                keyOf: function(item) {\r\n                    return null === dataController || void 0 === dataController ? void 0 : dataController.keyOf(item)\r\n                },\r\n                dataFields: function() {\r\n                    var _dataController$dataS;\r\n                    return null === (_dataController$dataS = dataController.dataSource()) || void 0 === _dataController$dataS ? void 0 : _dataController$dataS.select()\r\n                },\r\n                load: function(options) {\r\n                    var _dataController$dataS2;\r\n                    return (null === (_dataController$dataS2 = dataController.dataSource()) || void 0 === _dataController$dataS2 ? void 0 : _dataController$dataS2.load(options)) || (new Deferred).resolve([])\r\n                },\r\n                plainItems: function() {\r\n                    return dataController.items(true)\r\n                },\r\n                isItemSelected: function(item) {\r\n                    return item.selected\r\n                },\r\n                isSelectableItem: function(item) {\r\n                    return \"data\" === (null === item || void 0 === item ? void 0 : item.rowType) && !item.isNewRow\r\n                },\r\n                getItemData: function(item) {\r\n                    return (null === item || void 0 === item ? void 0 : item.oldData) || (null === item || void 0 === item ? void 0 : item.data) || item\r\n                },\r\n                filter: function() {\r\n                    return dataController.getCombinedFilter(deferred)\r\n                },\r\n                totalCount: () => dataController.totalCount(),\r\n                getLoadOptions: function(loadItemIndex, focusedItemIndex, shiftItemIndex) {\r\n                    var _dataController$dataS3, _dataController$dataS4;\r\n                    var {\r\n                        sort: sort,\r\n                        filter: filter\r\n                    } = null !== (_dataController$dataS3 = null === (_dataController$dataS4 = dataController.dataSource()) || void 0 === _dataController$dataS4 ? void 0 : _dataController$dataS4.lastLoadOptions()) && void 0 !== _dataController$dataS3 ? _dataController$dataS3 : {};\r\n                    var minIndex = Math.min(loadItemIndex, focusedItemIndex);\r\n                    var maxIndex = Math.max(loadItemIndex, focusedItemIndex);\r\n                    if (isDefined(shiftItemIndex)) {\r\n                        minIndex = Math.min(shiftItemIndex, minIndex);\r\n                        maxIndex = Math.max(shiftItemIndex, maxIndex)\r\n                    }\r\n                    var take = maxIndex - minIndex + 1;\r\n                    return {\r\n                        skip: minIndex,\r\n                        take: take,\r\n                        filter: filter,\r\n                        sort: sort\r\n                    }\r\n                },\r\n                onSelectionChanged: this._updateSelectedItems.bind(this)\r\n            }\r\n        },\r\n        _updateSelectColumn: function() {\r\n            var columnsController = this.getController(\"columns\");\r\n            var isSelectColumnVisible = this.isSelectColumnVisible();\r\n            columnsController.addCommandColumn({\r\n                type: \"selection\",\r\n                command: \"select\",\r\n                visible: isSelectColumnVisible,\r\n                visibleIndex: -1,\r\n                dataType: \"boolean\",\r\n                alignment: \"center\",\r\n                cssClass: COMMAND_SELECT_CLASS,\r\n                width: \"auto\",\r\n                cellTemplate: selectionCellTemplate,\r\n                headerCellTemplate: selectionHeaderTemplate\r\n            });\r\n            columnsController.columnOption(\"command:select\", \"visible\", isSelectColumnVisible)\r\n        },\r\n        _createSelection: function() {\r\n            var options = this._getSelectionConfig();\r\n            return new Selection(options)\r\n        },\r\n        _fireSelectionChanged: function(options) {\r\n            var argument = this.option(\"selection.deferred\") ? {\r\n                selectionFilter: this.option(\"selectionFilter\")\r\n            } : {\r\n                selectedRowKeys: this.option(\"selectedRowKeys\")\r\n            };\r\n            this.selectionChanged.fire(argument);\r\n            if (options) {\r\n                this.executeAction(\"onSelectionChanged\", options)\r\n            }\r\n        },\r\n        _updateCheckboxesState: function(options) {\r\n            var isDeferredMode = options.isDeferredMode;\r\n            var selectionFilter = options.selectionFilter;\r\n            var selectedItemKeys = options.selectedItemKeys;\r\n            var removedItemKeys = options.removedItemKeys;\r\n            if (\"onClick\" === this.option(SHOW_CHECKBOXES_MODE)) {\r\n                if (isDeferredMode ? selectionFilter && function(that, selectionFilter) {\r\n                        var keyIndex = 0;\r\n                        var store = that._dataController.store();\r\n                        var key = store && store.key();\r\n                        var isComplexKey = Array.isArray(key);\r\n                        if (!selectionFilter.length) {\r\n                            return false\r\n                        }\r\n                        if (isComplexKey && Array.isArray(selectionFilter[0]) && \"and\" === selectionFilter[1]) {\r\n                            for (var i = 0; i < selectionFilter.length; i++) {\r\n                                if (Array.isArray(selectionFilter[i])) {\r\n                                    if (selectionFilter[i][0] !== key[keyIndex] || \"=\" !== selectionFilter[i][1]) {\r\n                                        return true\r\n                                    }\r\n                                    keyIndex++\r\n                                }\r\n                            }\r\n                            return false\r\n                        }\r\n                        return key !== selectionFilter[0]\r\n                    }(this, selectionFilter) : selectedItemKeys.length > 1) {\r\n                    this.startSelectionWithCheckboxes()\r\n                } else if (isDeferredMode ? selectionFilter && !selectionFilter.length : 0 === selectedItemKeys.length && removedItemKeys.length) {\r\n                    this.stopSelectionWithCheckboxes()\r\n                }\r\n            }\r\n        },\r\n        _updateSelectedItems: function(args) {\r\n            var selectionChangedOptions;\r\n            var isDeferredMode = this.option(\"selection.deferred\");\r\n            var selectionFilter = this._selection.selectionFilter();\r\n            var dataController = this._dataController;\r\n            var items = dataController.items();\r\n            if (!items) {\r\n                return\r\n            }\r\n            var isSelectionWithCheckboxes = this.isSelectionWithCheckboxes();\r\n            var changedItemIndexes = this.getChangedItemIndexes(items);\r\n            this._updateCheckboxesState({\r\n                selectedItemKeys: args.selectedItemKeys,\r\n                removedItemKeys: args.removedItemKeys,\r\n                selectionFilter: selectionFilter,\r\n                isDeferredMode: isDeferredMode\r\n            });\r\n            if (changedItemIndexes.length || isSelectionWithCheckboxes !== this.isSelectionWithCheckboxes()) {\r\n                dataController.updateItems({\r\n                    changeType: \"updateSelection\",\r\n                    itemIndexes: changedItemIndexes\r\n                })\r\n            }\r\n            if (isDeferredMode) {\r\n                this.option(\"selectionFilter\", selectionFilter);\r\n                selectionChangedOptions = {}\r\n            } else if (args.addedItemKeys.length || args.removedItemKeys.length) {\r\n                this._selectedItemsInternalChange = true;\r\n                this.option(\"selectedRowKeys\", args.selectedItemKeys.slice(0));\r\n                this._selectedItemsInternalChange = false;\r\n                selectionChangedOptions = {\r\n                    selectedRowsData: args.selectedItems.slice(0),\r\n                    selectedRowKeys: args.selectedItemKeys.slice(0),\r\n                    currentSelectedRowKeys: args.addedItemKeys.slice(0),\r\n                    currentDeselectedRowKeys: args.removedItemKeys.slice(0)\r\n                }\r\n            }\r\n            this._fireSelectionChanged(selectionChangedOptions)\r\n        },\r\n        getChangedItemIndexes: function(items) {\r\n            var itemIndexes = [];\r\n            var isDeferredSelection = this.option(\"selection.deferred\");\r\n            for (var i = 0, length = items.length; i < length; i++) {\r\n                var row = items[i];\r\n                var isItemSelected = this.isRowSelected(isDeferredSelection ? row.data : row.key);\r\n                if (this._selection.isDataItem(row) && row.isSelected !== isItemSelected) {\r\n                    itemIndexes.push(i)\r\n                }\r\n            }\r\n            return itemIndexes\r\n        },\r\n        callbackNames: function() {\r\n            return [\"selectionChanged\"]\r\n        },\r\n        optionChanged: function(args) {\r\n            this.callBase(args);\r\n            switch (args.name) {\r\n                case \"selection\":\r\n                    var oldSelectionMode = this._selectionMode;\r\n                    this.init();\r\n                    if (\"selection.showCheckBoxesMode\" !== args.fullName) {\r\n                        var selectionMode = this._selectionMode;\r\n                        var selectedRowKeys = this.option(\"selectedRowKeys\");\r\n                        if (oldSelectionMode !== selectionMode) {\r\n                            if (\"single\" === selectionMode) {\r\n                                if (selectedRowKeys.length > 1) {\r\n                                    selectedRowKeys = [selectedRowKeys[0]]\r\n                                }\r\n                            } else if (\"multiple\" !== selectionMode) {\r\n                                selectedRowKeys = []\r\n                            }\r\n                        }\r\n                        this.selectRows(selectedRowKeys).always(() => {\r\n                            this._fireSelectionChanged()\r\n                        })\r\n                    }\r\n                    this.getController(\"columns\").updateColumns();\r\n                    args.handled = true;\r\n                    break;\r\n                case \"selectionFilter\":\r\n                    this._selection.selectionFilter(args.value);\r\n                    args.handled = true;\r\n                    break;\r\n                case \"selectedRowKeys\":\r\n                    var value = args.value || [];\r\n                    if (Array.isArray(value) && !this._selectedItemsInternalChange && (this.component.getDataSource() || !value.length)) {\r\n                        this.selectRows(value)\r\n                    }\r\n                    args.handled = true\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"selectRows\", \"deselectRows\", \"selectRowsByIndexes\", \"getSelectedRowKeys\", \"getSelectedRowsData\", \"clearSelection\", \"selectAll\", \"deselectAll\", \"startSelectionWithCheckboxes\", \"stopSelectionWithCheckboxes\", \"isRowSelected\"]\r\n        },\r\n        isRowSelected: function(arg) {\r\n            return this._selection.isItemSelected(arg)\r\n        },\r\n        isSelectColumnVisible: function() {\r\n            return \"multiple\" === this.option(SELECTION_MODE) && (\"always\" === this.option(SHOW_CHECKBOXES_MODE) || \"onClick\" === this.option(SHOW_CHECKBOXES_MODE) || this._isSelectionWithCheckboxes)\r\n        },\r\n        _isOnePageSelectAll: function() {\r\n            return \"page\" === this.option(\"selection.selectAllMode\")\r\n        },\r\n        isSelectAll: function() {\r\n            return this._selection.getSelectAllState(this._isOnePageSelectAll())\r\n        },\r\n        selectAll: function() {\r\n            if (\"onClick\" === this.option(SHOW_CHECKBOXES_MODE)) {\r\n                this.startSelectionWithCheckboxes()\r\n            }\r\n            return this._selection.selectAll(this._isOnePageSelectAll())\r\n        },\r\n        deselectAll: function() {\r\n            return this._selection.deselectAll(this._isOnePageSelectAll())\r\n        },\r\n        clearSelection: function() {\r\n            return this.selectedItemKeys([])\r\n        },\r\n        refresh: function() {\r\n            var selectedRowKeys = this.option(\"selectedRowKeys\") || [];\r\n            if (!this.option(\"selection.deferred\") && selectedRowKeys.length) {\r\n                return this.selectedItemKeys(selectedRowKeys)\r\n            }\r\n            return (new Deferred).resolve().promise()\r\n        },\r\n        selectedItemKeys: function(value, preserve, isDeselect, isSelectAll) {\r\n            return this._selection.selectedItemKeys(value, preserve, isDeselect, isSelectAll)\r\n        },\r\n        getSelectedRowKeys: function() {\r\n            return this._selection.getSelectedItemKeys()\r\n        },\r\n        selectRows: function(keys, preserve) {\r\n            return this.selectedItemKeys(keys, preserve)\r\n        },\r\n        deselectRows: function(keys) {\r\n            return this.selectedItemKeys(keys, true, true)\r\n        },\r\n        selectRowsByIndexes: function(indexes) {\r\n            var items = this._dataController.items();\r\n            var keys = [];\r\n            if (!Array.isArray(indexes)) {\r\n                indexes = Array.prototype.slice.call(arguments, 0)\r\n            }\r\n            each(indexes, (function() {\r\n                var item = items[this];\r\n                if (item && \"data\" === item.rowType) {\r\n                    keys.push(item.key)\r\n                }\r\n            }));\r\n            return this.selectRows(keys)\r\n        },\r\n        getSelectedRowsData: function() {\r\n            return this._selection.getSelectedItems()\r\n        },\r\n        changeItemSelection: function(visibleItemIndex, keys) {\r\n            keys = keys || {};\r\n            if (this.isSelectionWithCheckboxes()) {\r\n                keys.control = true\r\n            }\r\n            var loadedItemIndex = visibleItemIndex + this._dataController.getRowIndexOffset() - this._dataController.getRowIndexOffset(true);\r\n            return this._selection.changeItemSelection(loadedItemIndex, keys)\r\n        },\r\n        focusedItemIndex: function(itemIndex) {\r\n            if (isDefined(itemIndex)) {\r\n                this._selection._focusedItemIndex = itemIndex\r\n            } else {\r\n                return this._selection._focusedItemIndex\r\n            }\r\n        },\r\n        isSelectionWithCheckboxes: function() {\r\n            return \"multiple\" === this.option(SELECTION_MODE) && (\"always\" === this.option(SHOW_CHECKBOXES_MODE) || this._isSelectionWithCheckboxes)\r\n        },\r\n        startSelectionWithCheckboxes: function() {\r\n            if (\"multiple\" === this.option(SELECTION_MODE) && !this.isSelectionWithCheckboxes()) {\r\n                this._isSelectionWithCheckboxes = true;\r\n                this._updateSelectColumn();\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n        stopSelectionWithCheckboxes: function() {\r\n            if (this._isSelectionWithCheckboxes) {\r\n                this._isSelectionWithCheckboxes = false;\r\n                this._updateSelectColumn();\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n    }\r\n}());\r\nexport var selectionModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            selection: {\r\n                mode: \"none\",\r\n                showCheckBoxesMode: \"onClick\",\r\n                allowSelectAll: true,\r\n                selectAllMode: \"allPages\",\r\n                maxFilterLengthInRequest: 1500,\r\n                deferred: false\r\n            },\r\n            selectionFilter: [],\r\n            selectedRowKeys: []\r\n        }\r\n    },\r\n    controllers: {\r\n        selection: SelectionController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var selectionController = this.getController(\"selection\");\r\n                    var isDeferredMode = this.option(\"selection.deferred\");\r\n                    this.callBase.apply(this, arguments);\r\n                    if (isDeferredMode) {\r\n                        selectionController._updateCheckboxesState({\r\n                            isDeferredMode: true,\r\n                            selectionFilter: this.option(\"selectionFilter\")\r\n                        })\r\n                    }\r\n                },\r\n                _loadDataSource: function() {\r\n                    var that = this;\r\n                    return that.callBase().done((function() {\r\n                        that.getController(\"selection\").refresh()\r\n                    }))\r\n                },\r\n                _processDataItem: function(item, options) {\r\n                    var that = this;\r\n                    var selectionController = that.getController(\"selection\");\r\n                    var hasSelectColumn = selectionController.isSelectColumnVisible();\r\n                    var isDeferredSelection = options.isDeferredSelection = void 0 === options.isDeferredSelection ? this.option(\"selection.deferred\") : options.isDeferredSelection;\r\n                    var dataItem = this.callBase.apply(this, arguments);\r\n                    dataItem.isSelected = selectionController.isRowSelected(isDeferredSelection ? dataItem.data : dataItem.key);\r\n                    if (hasSelectColumn && dataItem.values) {\r\n                        for (var i = 0; i < options.visibleColumns.length; i++) {\r\n                            if (\"select\" === options.visibleColumns[i].command) {\r\n                                dataItem.values[i] = dataItem.isSelected;\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                    return dataItem\r\n                },\r\n                refresh: function(options) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    this.callBase.apply(this, arguments).done((function() {\r\n                        if (!options || options.selection) {\r\n                            that.getController(\"selection\").refresh().done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            d.resolve()\r\n                        }\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if ((!e || \"refresh\" === e.changeType) && !this._repaintChangesOnly) {\r\n                        this.getController(\"selection\").focusedItemIndex(-1)\r\n                    }\r\n                },\r\n                _applyChange: function(change) {\r\n                    if (change && \"updateSelection\" === change.changeType) {\r\n                        change.items.forEach((item, index) => {\r\n                            var currentItem = this._items[index];\r\n                            if (currentItem) {\r\n                                currentItem.isSelected = item.isSelected;\r\n                                currentItem.values = item.values\r\n                            }\r\n                        });\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var changes = this._changes;\r\n                    var isUpdateSelection = changes.length > 1 && changes.every(change => \"updateSelection\" === change.changeType);\r\n                    if (isUpdateSelection) {\r\n                        var itemIndexes = changes.map(change => change.itemIndexes || []).reduce((a, b) => a.concat(b));\r\n                        this._changes = [{\r\n                            changeType: \"updateSelection\",\r\n                            itemIndexes: itemIndexes\r\n                        }]\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                }\r\n            },\r\n            contextMenu: {\r\n                _contextMenuPrepared: function(options) {\r\n                    var dxEvent = options.event;\r\n                    if (dxEvent.originalEvent && \"dxhold\" !== dxEvent.originalEvent.type || options.items && options.items.length > 0) {\r\n                        return\r\n                    }\r\n                    processLongTap(this, dxEvent)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: {\r\n                init: function() {\r\n                    this.callBase();\r\n                    this.getController(\"selection\").selectionChanged.add(this._updateSelectAllValue.bind(this))\r\n                },\r\n                _updateSelectAllValue: function() {\r\n                    var $element = this.element();\r\n                    var $editor = $element && $element.find(\".\" + SELECT_CHECKBOX_CLASS);\r\n                    if ($element && $editor.length && \"multiple\" === this.option(\"selection.mode\")) {\r\n                        var selectAllValue = this.getController(\"selection\").isSelectAll();\r\n                        var hasSelection = false !== selectAllValue;\r\n                        var isVisible = this.option(\"selection.allowSelectAll\") ? !this.getController(\"data\").isEmpty() : hasSelection;\r\n                        $editor.dxCheckBox(\"instance\").option({\r\n                            visible: isVisible,\r\n                            value: selectAllValue\r\n                        })\r\n                    }\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    this.callBase(e);\r\n                    if (!e || \"refresh\" === e.changeType) {\r\n                        this._updateSelectAllValue()\r\n                    }\r\n                },\r\n                _renderSelectAllCheckBox: function($container, column) {\r\n                    var that = this;\r\n                    var selectionController = that.getController(\"selection\");\r\n                    var isEmptyData = that.getController(\"data\").isEmpty();\r\n                    var groupElement = $(\"<div>\").appendTo($container).addClass(SELECT_CHECKBOX_CLASS);\r\n                    that.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaSelectAll\"), $container);\r\n                    that.getController(\"editorFactory\").createEditor(groupElement, extend({}, column, {\r\n                        parentType: \"headerRow\",\r\n                        dataType: \"boolean\",\r\n                        value: selectionController.isSelectAll(),\r\n                        editorOptions: {\r\n                            visible: !isEmptyData && (that.option(\"selection.allowSelectAll\") || false !== selectionController.isSelectAll())\r\n                        },\r\n                        tabIndex: that.option(\"useLegacyKeyboardNavigation\") ? -1 : that.option(\"tabIndex\") || 0,\r\n                        setValue: function(value, e) {\r\n                            var allowSelectAll = that.option(\"selection.allowSelectAll\");\r\n                            e.component.option(\"visible\", allowSelectAll || false !== e.component.option(\"value\"));\r\n                            if (!e.event || selectionController.isSelectAll() === value) {\r\n                                return\r\n                            }\r\n                            if (e.value && !allowSelectAll) {\r\n                                e.component.option(\"value\", false)\r\n                            } else {\r\n                                e.value ? selectionController.selectAll() : selectionController.deselectAll()\r\n                            }\r\n                            e.event.preventDefault()\r\n                        }\r\n                    }));\r\n                    return groupElement\r\n                },\r\n                _attachSelectAllCheckBoxClickEvent: function($element) {\r\n                    eventsEngine.on($element, clickEventName, this.createAction((function(e) {\r\n                        var event = e.event;\r\n                        if (!$(event.target).closest(\".\" + SELECT_CHECKBOX_CLASS).length) {\r\n                            eventsEngine.trigger($(event.currentTarget).children(\".\" + SELECT_CHECKBOX_CLASS), clickEventName)\r\n                        }\r\n                        event.preventDefault()\r\n                    })))\r\n                }\r\n            },\r\n            rowsView: {\r\n                renderSelectCheckBoxContainer: function($container, options) {\r\n                    if (\"data\" === options.rowType && !options.row.isNewRow) {\r\n                        $container.addClass(EDITOR_CELL_CLASS);\r\n                        this._attachCheckBoxClickEvent($container);\r\n                        this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaSelectRow\"), $container);\r\n                        this._renderSelectCheckBox($container, options)\r\n                    } else {\r\n                        gridCoreUtils.setEmptyText($container)\r\n                    }\r\n                },\r\n                _renderSelectCheckBox: function(container, options) {\r\n                    var groupElement = $(\"<div>\").addClass(SELECT_CHECKBOX_CLASS).appendTo(container);\r\n                    this.getController(\"editorFactory\").createEditor(groupElement, extend({}, options.column, {\r\n                        parentType: \"dataRow\",\r\n                        dataType: \"boolean\",\r\n                        lookup: null,\r\n                        value: options.value,\r\n                        setValue: function(value, e) {\r\n                            var _e$event;\r\n                            if (\"keydown\" === (null === e || void 0 === e ? void 0 : null === (_e$event = e.event) || void 0 === _e$event ? void 0 : _e$event.type)) {\r\n                                eventsEngine.trigger(e.element, clickEventName, e)\r\n                            }\r\n                        },\r\n                        row: options.row\r\n                    }));\r\n                    return groupElement\r\n                },\r\n                _attachCheckBoxClickEvent: function($element) {\r\n                    eventsEngine.on($element, clickEventName, this.createAction((function(e) {\r\n                        var selectionController = this.getController(\"selection\");\r\n                        var event = e.event;\r\n                        var rowIndex = this.getRowIndex($(event.currentTarget).closest(\".\" + ROW_CLASS));\r\n                        if (rowIndex >= 0) {\r\n                            selectionController.startSelectionWithCheckboxes();\r\n                            selectionController.changeItemSelection(rowIndex, {\r\n                                shift: event.shiftKey\r\n                            });\r\n                            if ($(event.target).closest(\".\" + SELECT_CHECKBOX_CLASS).length) {\r\n                                this.getController(\"data\").updateItems({\r\n                                    changeType: \"updateSelection\",\r\n                                    itemIndexes: [rowIndex]\r\n                                })\r\n                            }\r\n                        }\r\n                    })))\r\n                },\r\n                _update: function(change) {\r\n                    var that = this;\r\n                    var tableElements = that.getTableElements();\r\n                    if (\"updateSelection\" === change.changeType) {\r\n                        if (tableElements.length > 0) {\r\n                            each(tableElements, (function(_, tableElement) {\r\n                                each(change.itemIndexes || [], (function(_, index) {\r\n                                    var $row;\r\n                                    if (change.items[index]) {\r\n                                        $row = that._getRowElements($(tableElement)).eq(index);\r\n                                        if ($row.length) {\r\n                                            var isSelected = change.items[index].isSelected;\r\n                                            $row.toggleClass(ROW_SELECTION_CLASS, void 0 === isSelected ? false : isSelected).find(\".\" + SELECT_CHECKBOX_CLASS).dxCheckBox(\"option\", \"value\", isSelected);\r\n                                            that.setAria(\"selected\", isSelected, $row)\r\n                                        }\r\n                                    }\r\n                                }))\r\n                            }));\r\n                            that._updateCheckboxesClass()\r\n                        }\r\n                    } else {\r\n                        that.callBase(change)\r\n                    }\r\n                },\r\n                _createTable: function() {\r\n                    var that = this;\r\n                    var selectionMode = that.option(\"selection.mode\");\r\n                    var $table = that.callBase.apply(that, arguments);\r\n                    if (\"none\" !== selectionMode) {\r\n                        if (\"onLongTap\" === that.option(SHOW_CHECKBOXES_MODE) || !touch) {\r\n                            eventsEngine.on($table, addNamespace(holdEvent.name, \"dxDataGridRowsView\"), \".\" + DATA_ROW_CLASS, that.createAction((function(e) {\r\n                                processLongTap(that.component, e.event);\r\n                                e.event.stopPropagation()\r\n                            })))\r\n                        }\r\n                        eventsEngine.on($table, \"mousedown selectstart\", that.createAction((function(e) {\r\n                            var event = e.event;\r\n                            if (event.shiftKey) {\r\n                                event.preventDefault()\r\n                            }\r\n                        })))\r\n                    }\r\n                    return $table\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isSelected = !!row.isSelected;\r\n                        if (isSelected) {\r\n                            $row.addClass(ROW_SELECTION_CLASS)\r\n                        }\r\n                        this.setAria(\"selected\", isSelected, $row)\r\n                    }\r\n                    return $row\r\n                },\r\n                _rowClick: function(e) {\r\n                    var dxEvent = e.event;\r\n                    var isSelectionDisabled = $(dxEvent.target).closest(\".\" + SELECTION_DISABLED_CLASS).length;\r\n                    if (!this.isClickableElement($(dxEvent.target))) {\r\n                        if (!isSelectionDisabled && (\"multiple\" !== this.option(SELECTION_MODE) || \"always\" !== this.option(SHOW_CHECKBOXES_MODE))) {\r\n                            if (this.getController(\"selection\").changeItemSelection(e.rowIndex, {\r\n                                    control: isCommandKeyPressed(dxEvent),\r\n                                    shift: dxEvent.shiftKey\r\n                                })) {\r\n                                dxEvent.preventDefault();\r\n                                e.handled = true\r\n                            }\r\n                        }\r\n                        this.callBase(e)\r\n                    }\r\n                },\r\n                isClickableElement: function($target) {\r\n                    var isCommandSelect = $target.closest(\".\" + COMMAND_SELECT_CLASS).length;\r\n                    return !!isCommandSelect\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase(change);\r\n                    this._updateCheckboxesClass()\r\n                },\r\n                _updateCheckboxesClass: function() {\r\n                    var tableElements = this.getTableElements();\r\n                    var selectionController = this.getController(\"selection\");\r\n                    var isCheckBoxesHidden = selectionController.isSelectColumnVisible() && !selectionController.isSelectionWithCheckboxes();\r\n                    each(tableElements, (function(_, tableElement) {\r\n                        $(tableElement).toggleClass(CHECKBOXES_HIDDEN_CLASS, isCheckBoxesHidden)\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.selection.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    selectionModule\r\n} from \"../grid_core/ui.grid_core.selection\";\r\ngridCore.registerModule(\"selection\", selectionModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_chooser.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    deferUpdate,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    isMaterial as isMaterialTheme,\r\n    isGeneric,\r\n    current\r\n} from \"../themes\";\r\nimport Button from \"../button\";\r\nimport TreeView from \"../tree_view\";\r\nimport devices from \"../../core/devices\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nvar COLUMN_CHOOSER_CLASS = \"column-chooser\";\r\nvar COLUMN_CHOOSER_BUTTON_CLASS = \"column-chooser-button\";\r\nvar NOTOUCH_ACTION_CLASS = \"notouch-action\";\r\nvar COLUMN_CHOOSER_LIST_CLASS = \"column-chooser-list\";\r\nvar COLUMN_CHOOSER_PLAIN_CLASS = \"column-chooser-plain\";\r\nvar COLUMN_CHOOSER_DRAG_CLASS = \"column-chooser-mode-drag\";\r\nvar COLUMN_CHOOSER_SELECT_CLASS = \"column-chooser-mode-select\";\r\nvar COLUMN_CHOOSER_ICON_NAME = \"column-chooser\";\r\nvar COLUMN_CHOOSER_ITEM_CLASS = \"dx-column-chooser-item\";\r\nvar TREEVIEW_NODE_SELECTOR = \".dx-treeview-node\";\r\nvar CHECKBOX_SELECTOR = \".dx-checkbox\";\r\nvar CLICK_TIMEOUT = 300;\r\nvar processItems = function(that, chooserColumns) {\r\n    var items = [];\r\n    var isSelectMode = \"select\" === that.option(\"columnChooser.mode\");\r\n    if (chooserColumns.length) {\r\n        each(chooserColumns, (function(index, column) {\r\n            var item = {\r\n                text: column.caption,\r\n                cssClass: column.cssClass,\r\n                allowHiding: column.allowHiding,\r\n                expanded: true,\r\n                id: column.index,\r\n                disabled: false,\r\n                disableCheckBox: false === column.allowHiding,\r\n                parentId: isDefined(column.ownerBand) ? column.ownerBand : null\r\n            };\r\n            if (isSelectMode) {\r\n                item.selected = column.visible\r\n            }\r\n            items.push(item)\r\n        }))\r\n    }\r\n    return items\r\n};\r\nvar ColumnChooserController = modules.ViewController.inherit({\r\n    renderShowColumnChooserButton: function($element) {\r\n        var that = this;\r\n        var columnChooserButtonClass = that.addWidgetPrefix(COLUMN_CHOOSER_BUTTON_CLASS);\r\n        var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n        var $showColumnChooserButton = $element.find(\".\" + columnChooserButtonClass);\r\n        var $columnChooserButton;\r\n        if (columnChooserEnabled) {\r\n            if (!$showColumnChooserButton.length) {\r\n                $columnChooserButton = $(\"<div>\").addClass(columnChooserButtonClass).appendTo($element);\r\n                that._createComponent($columnChooserButton, Button, {\r\n                    icon: COLUMN_CHOOSER_ICON_NAME,\r\n                    onClick: function() {\r\n                        that.getView(\"columnChooserView\").showColumnChooser()\r\n                    },\r\n                    hint: that.option(\"columnChooser.title\"),\r\n                    integrationOptions: {}\r\n                })\r\n            } else {\r\n                $showColumnChooserButton.show()\r\n            }\r\n        } else {\r\n            $showColumnChooserButton.hide()\r\n        }\r\n    },\r\n    getPosition: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return {\r\n            my: \"right bottom\",\r\n            at: \"right bottom\",\r\n            of: rowsView && rowsView.element(),\r\n            collision: \"fit\",\r\n            offset: \"-2 -2\",\r\n            boundaryOffset: \"2 2\"\r\n        }\r\n    }\r\n});\r\nvar ColumnChooserView = ColumnsView.inherit({\r\n    _resizeCore: noop,\r\n    _isWinDevice: function() {\r\n        return !!devices.real().win\r\n    },\r\n    _updateList: function(change) {\r\n        var items;\r\n        var $popupContent = this._popupContainer.$content();\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        var columnChooserList = this._columnChooserList;\r\n        var chooserColumns = this._columnsController.getChooserColumns(isSelectMode);\r\n        if (isSelectMode && columnChooserList && change && \"selection\" === change.changeType) {\r\n            items = processItems(this, chooserColumns);\r\n            for (var i = 0; i < items.length; i++) {\r\n                var selected = items[i].selected;\r\n                var id = items[i].id;\r\n                if (id === change.columnIndex) {\r\n                    if (selected) {\r\n                        columnChooserList.selectItem(id, selected)\r\n                    } else {\r\n                        columnChooserList.unselectItem(id, selected)\r\n                    }\r\n                }\r\n            }\r\n        } else if (!isSelectMode || !columnChooserList || \"full\" === change) {\r\n            this._popupContainer.$wrapper().toggleClass(this.addWidgetPrefix(COLUMN_CHOOSER_DRAG_CLASS), !isSelectMode).toggleClass(this.addWidgetPrefix(COLUMN_CHOOSER_SELECT_CLASS), isSelectMode);\r\n            items = processItems(this, chooserColumns);\r\n            this._renderTreeView($popupContent, items)\r\n        }\r\n    },\r\n    _initializePopupContainer: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(that.addWidgetPrefix(COLUMN_CHOOSER_CLASS));\r\n        var columnChooserOptions = that.option(\"columnChooser\");\r\n        var themeName = current();\r\n        var isGenericTheme = isGeneric(themeName);\r\n        var isMaterial = isMaterialTheme(themeName);\r\n        var dxPopupOptions = {\r\n            visible: false,\r\n            shading: false,\r\n            showCloseButton: false,\r\n            dragEnabled: true,\r\n            resizeEnabled: true,\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n            toolbarItems: [{\r\n                text: columnChooserOptions.title,\r\n                toolbar: \"top\",\r\n                location: isGenericTheme || isMaterial ? \"before\" : \"center\"\r\n            }],\r\n            position: that.getController(\"columnChooser\").getPosition(),\r\n            width: columnChooserOptions.width,\r\n            height: columnChooserOptions.height,\r\n            rtlEnabled: that.option(\"rtlEnabled\"),\r\n            onHidden: function() {\r\n                if (that._isWinDevice()) {\r\n                    $(\"body\").removeClass(that.addWidgetPrefix(NOTOUCH_ACTION_CLASS))\r\n                }\r\n            },\r\n            container: columnChooserOptions.container\r\n        };\r\n        if (isGenericTheme || isMaterial) {\r\n            extend(dxPopupOptions, {\r\n                showCloseButton: true\r\n            })\r\n        } else {\r\n            dxPopupOptions.toolbarItems[dxPopupOptions.toolbarItems.length] = {\r\n                shortcut: \"cancel\"\r\n            }\r\n        }\r\n        if (!isDefined(this._popupContainer)) {\r\n            that._popupContainer = that._createComponent($element, Popup, dxPopupOptions);\r\n            that._popupContainer.on(\"optionChanged\", (function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    that.renderCompleted.fire()\r\n                }\r\n            }))\r\n        } else {\r\n            this._popupContainer.option(dxPopupOptions)\r\n        }\r\n    },\r\n    _renderCore: function(change) {\r\n        if (this._popupContainer) {\r\n            this._updateList(change)\r\n        }\r\n    },\r\n    _renderTreeView: function($container, items) {\r\n        var that = this;\r\n        var columnChooser = this.option(\"columnChooser\");\r\n        var isSelectMode = \"select\" === columnChooser.mode;\r\n        var treeViewConfig = {\r\n            items: items,\r\n            dataStructure: \"plain\",\r\n            activeStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            itemTemplate: \"item\",\r\n            showCheckBoxesMode: \"none\",\r\n            rootValue: null,\r\n            searchEnabled: columnChooser.allowSearch,\r\n            searchTimeout: columnChooser.searchTimeout,\r\n            onItemRendered: function(e) {\r\n                if (e.itemData.disableCheckBox) {\r\n                    var $treeViewNode = $(e.itemElement).closest(TREEVIEW_NODE_SELECTOR);\r\n                    var $checkBox;\r\n                    if ($treeViewNode.length) {\r\n                        $checkBox = $treeViewNode.find(CHECKBOX_SELECTOR);\r\n                        if ($checkBox.length) {\r\n                            var checkBoxInstance = $checkBox.data(\"dxCheckBox\");\r\n                            checkBoxInstance && checkBoxInstance.option(\"disabled\", true)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var scrollableInstance = $container.find(\".dx-scrollable\").data(\"dxScrollable\");\r\n        var scrollTop = scrollableInstance && scrollableInstance.scrollTop();\r\n        if (isSelectMode && !this._columnsController.isBandColumnsUsed()) {\r\n            $container.addClass(this.addWidgetPrefix(COLUMN_CHOOSER_PLAIN_CLASS))\r\n        }\r\n        treeViewConfig.onContentReady = function(e) {\r\n            deferUpdate((function() {\r\n                if (scrollTop) {\r\n                    var scrollable = $(e.element).find(\".dx-scrollable\").data(\"dxScrollable\");\r\n                    scrollable && scrollable.scrollTo({\r\n                        y: scrollTop\r\n                    })\r\n                }\r\n                that.renderCompleted.fire()\r\n            }))\r\n        };\r\n        if (this._isWinDevice()) {\r\n            treeViewConfig.useNativeScrolling = false\r\n        }\r\n        extend(treeViewConfig, isSelectMode ? this._prepareSelectModeConfig() : this._prepareDragModeConfig());\r\n        if (this._columnChooserList) {\r\n            if (!treeViewConfig.searchEnabled) {\r\n                treeViewConfig.searchValue = \"\"\r\n            }\r\n            this._columnChooserList.option(treeViewConfig)\r\n        } else {\r\n            this._columnChooserList = this._createComponent($container, TreeView, treeViewConfig);\r\n            $container.addClass(this.addWidgetPrefix(COLUMN_CHOOSER_LIST_CLASS))\r\n        }\r\n    },\r\n    _prepareDragModeConfig: function() {\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return {\r\n            noDataText: columnChooserOptions.emptyPanelText,\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            itemTemplate: function(data, index, item) {\r\n                $(item).text(data.text).parent().addClass(data.cssClass).addClass(COLUMN_CHOOSER_ITEM_CLASS)\r\n            }\r\n        }\r\n    },\r\n    _prepareSelectModeConfig: function() {\r\n        var that = this;\r\n        return {\r\n            selectNodesRecursive: false,\r\n            showCheckBoxesMode: \"normal\",\r\n            onItemSelectionChanged: function(e) {\r\n                var visibleColumns = that._columnsController.getVisibleColumns().filter((function(item) {\r\n                    return !item.command\r\n                }));\r\n                var isLastColumnUnselected = 1 === visibleColumns.length && !e.itemData.selected;\r\n                if (isLastColumnUnselected) {\r\n                    e.component.selectItem(e.itemElement)\r\n                } else {\r\n                    setTimeout((function() {\r\n                        that._columnsController.columnOption(e.itemData.id, \"visible\", e.itemData.selected)\r\n                    }), CLICK_TIMEOUT)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var changeTypes = e.changeTypes;\r\n        var optionNames = e.optionNames;\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        this.callBase(e);\r\n        if (isSelectMode) {\r\n            var needPartialRender = optionNames.visible && 1 === optionNames.length && void 0 !== e.columnIndex;\r\n            var needFullRender = optionNames.showInColumnChooser || optionNames.caption || optionNames.visible || changeTypes.columns && optionNames.all;\r\n            if (needPartialRender) {\r\n                this.render(null, {\r\n                    changeType: \"selection\",\r\n                    columnIndex: e.columnIndex\r\n                })\r\n            } else if (needFullRender) {\r\n                this.render(null, \"full\")\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"columnChooser\":\r\n                this._initializePopupContainer();\r\n                this.render(null, \"full\");\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getColumnElements: function() {\r\n        var result = [];\r\n        var $node;\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        var chooserColumns = this._columnsController.getChooserColumns(isSelectMode);\r\n        var $content = this._popupContainer && this._popupContainer.$content();\r\n        var $nodes = $content && $content.find(\".dx-treeview-node\");\r\n        if ($nodes) {\r\n            chooserColumns.forEach((function(column) {\r\n                $node = $nodes.filter(\"[data-item-id = '\" + column.index + \"']\");\r\n                var item = $node.length ? $node.children(\".\" + COLUMN_CHOOSER_ITEM_CLASS).get(0) : null;\r\n                result.push(item)\r\n            }))\r\n        }\r\n        return $(result)\r\n    },\r\n    getName: function() {\r\n        return \"columnChooser\"\r\n    },\r\n    getColumns: function() {\r\n        return this._columnsController.getChooserColumns()\r\n    },\r\n    allowDragging: function(column, sourceLocation) {\r\n        var columnVisible = column && column.allowHiding && (\"columnChooser\" !== sourceLocation || !column.visible && this._columnsController.isParentColumnVisible(column.index));\r\n        return this.isColumnChooserVisible() && columnVisible\r\n    },\r\n    getBoundingRect: function() {\r\n        var container = this._popupContainer && this._popupContainer.$overlayContent();\r\n        if (container && container.is(\":visible\")) {\r\n            var offset = container.offset();\r\n            return {\r\n                left: offset.left,\r\n                top: offset.top,\r\n                right: offset.left + getOuterWidth(container),\r\n                bottom: offset.top + getOuterHeight(container)\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    showColumnChooser: function() {\r\n        if (!this._popupContainer) {\r\n            this._initializePopupContainer();\r\n            this.render()\r\n        }\r\n        this._popupContainer.show();\r\n        if (this._isWinDevice()) {\r\n            $(\"body\").addClass(this.addWidgetPrefix(NOTOUCH_ACTION_CLASS))\r\n        }\r\n    },\r\n    hideColumnChooser: function() {\r\n        if (this._popupContainer) {\r\n            this._popupContainer.hide()\r\n        }\r\n    },\r\n    isColumnChooserVisible: function() {\r\n        var popupContainer = this._popupContainer;\r\n        return popupContainer && popupContainer.option(\"visible\")\r\n    },\r\n    publicMethods: function() {\r\n        return [\"showColumnChooser\", \"hideColumnChooser\"]\r\n    }\r\n});\r\nexport var columnChooserModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnChooser: {\r\n                enabled: false,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                mode: \"dragAndDrop\",\r\n                width: 250,\r\n                height: 260,\r\n                title: messageLocalization.format(\"dxDataGrid-columnChooserTitle\"),\r\n                emptyPanelText: messageLocalization.format(\"dxDataGrid-columnChooserEmptyText\"),\r\n                container: void 0\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        columnChooser: ColumnChooserController\r\n    },\r\n    views: {\r\n        columnChooserView: ColumnChooserView\r\n    },\r\n    extenders: {\r\n        views: {\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    return this._appendColumnChooserItem(items)\r\n                },\r\n                _appendColumnChooserItem: function(items) {\r\n                    var that = this;\r\n                    var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n                    if (columnChooserEnabled) {\r\n                        var hintText = that.option(\"columnChooser.title\");\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: COLUMN_CHOOSER_ICON_NAME,\r\n                                onClick: function() {\r\n                                    that.component.getView(\"columnChooserView\").showColumnChooser()\r\n                                },\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: function(e) {\r\n                                    $(e.element).addClass(that._getToolbarButtonClass(that.addWidgetPrefix(COLUMN_CHOOSER_BUTTON_CLASS)))\r\n                                }\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            location: \"after\",\r\n                            name: \"columnChooserButton\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 40\r\n                        };\r\n                        items.push(toolbarItem)\r\n                    }\r\n                    return items\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"columnChooser\":\r\n                            this._invalidate();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                isVisible: function() {\r\n                    var columnChooserEnabled = this.option(\"columnChooser.enabled\");\r\n                    return this.callBase() || columnChooserEnabled\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            columns: {\r\n                allowMoveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var columnChooserMode = this.option(\"columnChooser.mode\");\r\n                    var isMoveColumnDisallowed = \"select\" === columnChooserMode && \"columnChooser\" === targetLocation;\r\n                    return isMoveColumnDisallowed ? false : this.callBase(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_chooser.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnChooserModule\r\n} from \"../grid_core/ui.grid_core.column_chooser\";\r\nexport var ColumnChooserController = columnChooserModule.controllers.columnChooser;\r\nexport var ColumnChooserView = columnChooserModule.views.columnChooserView;\r\ngridCore.registerModule(\"columnChooser\", columnChooserModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Class from \"../../core/class\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nexport function createOffsetFilter(path, storeLoadOptions, lastLevelOnly) {\r\n    var groups = normalizeSortingInfo(storeLoadOptions.group);\r\n    var filter = [];\r\n    for (var i = lastLevelOnly ? path.length - 1 : 0; i < path.length; i++) {\r\n        var filterElement = [];\r\n        for (var j = 0; j <= i; j++) {\r\n            var selector = groups[j].selector;\r\n            if (i === j && (null === path[j] || false === path[j] || true === path[j])) {\r\n                if (false === path[j]) {\r\n                    filterElement.push([selector, \"=\", groups[j].desc ? true : null])\r\n                } else if (path[j] ? !groups[j].desc : groups[j].desc) {\r\n                    filterElement.push([selector, \"<>\", path[j]])\r\n                } else {\r\n                    filterElement.push([selector, \"<>\", null]);\r\n                    filterElement.push([selector, \"=\", null])\r\n                }\r\n            } else {\r\n                var currentFilter = [selector, i === j ? groups[j].desc ? \">\" : \"<\" : \"=\", path[j]];\r\n                if (\"<\" === currentFilter[1]) {\r\n                    filterElement.push([currentFilter, \"or\", [selector, \"=\", null]])\r\n                } else {\r\n                    filterElement.push(currentFilter)\r\n                }\r\n            }\r\n        }\r\n        filter.push(gridCore.combineFilters(filterElement))\r\n    }\r\n    filter = gridCore.combineFilters(filter, \"or\");\r\n    return gridCore.combineFilters([filter, storeLoadOptions.filter])\r\n}\r\nexport var GroupingHelper = Class.inherit(function() {\r\n    var findGroupInfoByKey = function(groupsInfo, key) {\r\n        var hash = groupsInfo.hash;\r\n        return hash && hash[JSON.stringify(key)]\r\n    };\r\n    var getGroupInfoIndexByOffset = function(groupsInfo, offset) {\r\n        var leftIndex = 0;\r\n        var rightIndex = groupsInfo.length - 1;\r\n        if (!groupsInfo.length) {\r\n            return 0\r\n        }\r\n        do {\r\n            var middleIndex = rightIndex + leftIndex >> 1;\r\n            if (groupsInfo[middleIndex].offset > offset) {\r\n                rightIndex = middleIndex\r\n            } else {\r\n                leftIndex = middleIndex\r\n            }\r\n        } while (rightIndex - leftIndex > 1);\r\n        var index;\r\n        for (index = leftIndex; index <= rightIndex; index++) {\r\n            if (groupsInfo[index].offset > offset) {\r\n                break\r\n            }\r\n        }\r\n        return index\r\n    };\r\n    return {\r\n        ctor: function(dataSourceAdapter) {\r\n            this._dataSource = dataSourceAdapter;\r\n            this.reset()\r\n        },\r\n        reset: function() {\r\n            this._groupsInfo = [];\r\n            this._totalCountCorrection = 0\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        updateTotalItemsCount: function(totalCountCorrection) {\r\n            this._totalCountCorrection = totalCountCorrection || 0\r\n        },\r\n        isGroupItemCountable: function(item) {\r\n            return !this._isVirtualPaging() || !item.isContinuation\r\n        },\r\n        _isVirtualPaging: function() {\r\n            var scrollingMode = this._dataSource.option(\"scrolling.mode\");\r\n            return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n        },\r\n        itemsCount: function() {\r\n            var dataSourceAdapter = this._dataSource;\r\n            var dataSource = dataSourceAdapter._dataSource;\r\n            var groupCount = gridCore.normalizeSortingInfo(dataSource.group() || []).length;\r\n            var itemsCount = function calculateItemsCount(that, items, groupsCount) {\r\n                var result = 0;\r\n                if (items) {\r\n                    if (!groupsCount) {\r\n                        result = items.length\r\n                    } else {\r\n                        for (var i = 0; i < items.length; i++) {\r\n                            if (that.isGroupItemCountable(items[i])) {\r\n                                result++\r\n                            }\r\n                            result += calculateItemsCount(that, items[i].items, groupsCount - 1)\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            }(this, dataSource.items(), groupCount);\r\n            return itemsCount\r\n        },\r\n        foreachGroups: function(callback, childrenAtFirst, foreachCollapsedGroups, updateOffsets, updateParentOffsets) {\r\n            var that = this;\r\n            return function foreachGroupsCore(groupsInfo, callback, childrenAtFirst, parents) {\r\n                var callbackResults = [];\r\n\r\n                function executeCallback(callback, data, parents, callbackResults) {\r\n                    var callbackResult = data && callback(data, parents);\r\n                    callbackResult && callbackResults.push(callbackResult);\r\n                    return callbackResult\r\n                }\r\n                for (var i = 0; i < groupsInfo.length; i++) {\r\n                    parents.push(groupsInfo[i].data);\r\n                    if (!childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\r\n                        return false\r\n                    }\r\n                    if (!groupsInfo[i].data || groupsInfo[i].data.isExpanded || foreachCollapsedGroups) {\r\n                        var children = groupsInfo[i].children;\r\n                        var callbackResult = children.length && foreachGroupsCore(children, callback, childrenAtFirst, parents);\r\n                        callbackResult && callbackResults.push(callbackResult);\r\n                        if (false === callbackResult) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    if (childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\r\n                        return false\r\n                    }\r\n                    if (!groupsInfo[i].data || groupsInfo[i].data.offset !== groupsInfo[i].offset) {\r\n                        updateOffsets = true\r\n                    }\r\n                    parents.pop()\r\n                }\r\n                var currentParents = updateParentOffsets && parents.slice(0);\r\n                return updateOffsets && when.apply($, callbackResults).always((function() {\r\n                    that._updateGroupInfoOffsets(groupsInfo, currentParents)\r\n                }))\r\n            }(that._groupsInfo, callback, childrenAtFirst, [])\r\n        },\r\n        _updateGroupInfoOffsets: function(groupsInfo, parents) {\r\n            parents = parents || [];\r\n            for (var index = 0; index < groupsInfo.length; index++) {\r\n                var groupInfo = groupsInfo[index];\r\n                if (groupInfo.data && groupInfo.data.offset !== groupInfo.offset) {\r\n                    groupInfo.offset = groupInfo.data.offset;\r\n                    for (var parentIndex = 0; parentIndex < parents.length; parentIndex++) {\r\n                        parents[parentIndex].offset = groupInfo.offset\r\n                    }\r\n                }\r\n            }\r\n            groupsInfo.sort((function(a, b) {\r\n                return a.offset - b.offset\r\n            }))\r\n        },\r\n        findGroupInfo: function(path) {\r\n            var groupInfo;\r\n            var groupsInfo = this._groupsInfo;\r\n            for (var pathIndex = 0; groupsInfo && pathIndex < path.length; pathIndex++) {\r\n                groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\r\n                groupsInfo = groupInfo && groupInfo.children\r\n            }\r\n            return groupInfo && groupInfo.data\r\n        },\r\n        addGroupInfo: function(groupInfoData) {\r\n            var groupInfo;\r\n            var path = groupInfoData.path;\r\n            var groupsInfo = this._groupsInfo;\r\n            for (var pathIndex = 0; pathIndex < path.length; pathIndex++) {\r\n                groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\r\n                if (!groupInfo) {\r\n                    groupInfo = {\r\n                        key: path[pathIndex],\r\n                        offset: groupInfoData.offset,\r\n                        data: {\r\n                            offset: groupInfoData.offset,\r\n                            isExpanded: true,\r\n                            path: path.slice(0, pathIndex + 1)\r\n                        },\r\n                        children: []\r\n                    };\r\n                    var index = getGroupInfoIndexByOffset(groupsInfo, groupInfoData.offset);\r\n                    groupsInfo.splice(index, 0, groupInfo);\r\n                    groupsInfo.hash = groupsInfo.hash || {};\r\n                    groupsInfo.hash[JSON.stringify(groupInfo.key)] = groupInfo\r\n                }\r\n                if (pathIndex === path.length - 1) {\r\n                    groupInfo.data = groupInfoData;\r\n                    if (groupInfo.offset !== groupInfoData.offset) {\r\n                        this._updateGroupInfoOffsets(groupsInfo)\r\n                    }\r\n                }\r\n                groupsInfo = groupInfo.children\r\n            }\r\n        },\r\n        allowCollapseAll: function() {\r\n            return true\r\n        },\r\n        refresh: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = normalizeSortingInfo(storeLoadOptions.group || []);\r\n            var oldGroups = \"_group\" in this ? normalizeSortingInfo(this._group || []) : groups;\r\n            var groupsCount = Math.min(oldGroups.length, groups.length);\r\n            this._group = storeLoadOptions.group;\r\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\r\n                if (oldGroups[groupIndex].selector !== groups[groupIndex].selector) {\r\n                    groupsCount = groupIndex;\r\n                    break\r\n                }\r\n            }\r\n            if (!groupsCount) {\r\n                this.reset()\r\n            } else {\r\n                ! function cleanGroupsInfo(groupsInfo, groupIndex, groupsCount) {\r\n                    for (var i = 0; i < groupsInfo.length; i++) {\r\n                        if (groupIndex + 1 >= groupsCount) {\r\n                            groupsInfo[i].children = []\r\n                        } else {\r\n                            cleanGroupsInfo(groupsInfo[i].children, groupIndex + 1, groupsCount)\r\n                        }\r\n                    }\r\n                }(this._groupsInfo, 0, groupsCount)\r\n            }\r\n        },\r\n        handleDataLoading: function() {},\r\n        handleDataLoaded: function(options, callBase) {\r\n            callBase(options)\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            callBase(options)\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nexport function createGroupFilter(path, storeLoadOptions) {\r\n    var groups = normalizeSortingInfo(storeLoadOptions.group);\r\n    var filter = [];\r\n    for (var i = 0; i < path.length; i++) {\r\n        filter.push([groups[i].selector, \"=\", path[i]])\r\n    }\r\n    if (storeLoadOptions.filter) {\r\n        filter.push(storeLoadOptions.filter)\r\n    }\r\n    return gridCoreUtils.combineFilters(filter)\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.expanded.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    toComparable\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    keysEqual\r\n} from \"../../data/utils\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as GroupingHelperCore,\r\n    createOffsetFilter\r\n} from \"./ui.data_grid.grouping.core\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport dataQuery from \"../../data/query\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar loadTotalCount = function(dataSource, options) {\r\n    var d = new Deferred;\r\n    var loadOptions = extend({\r\n        skip: 0,\r\n        take: 1,\r\n        requireTotalCount: true\r\n    }, options);\r\n    dataSource.load(loadOptions).done((function(data, extra) {\r\n        d.resolve(extra && extra.totalCount)\r\n    })).fail(d.reject.bind(d));\r\n    return d\r\n};\r\nexport var GroupingHelper = GroupingHelperCore.inherit(function() {\r\n    var foreachCollapsedGroups = function(that, callback, updateOffsets) {\r\n        return that.foreachGroups((function(groupInfo) {\r\n            if (!groupInfo.isExpanded) {\r\n                return callback(groupInfo)\r\n            }\r\n        }), false, false, updateOffsets, true)\r\n    };\r\n    var correctSkipLoadOption = function(that, skip) {\r\n        var skipCorrection = 0;\r\n        var resultSkip = skip || 0;\r\n        if (skip) {\r\n            foreachCollapsedGroups(that, (function(groupInfo) {\r\n                if (groupInfo.offset - skipCorrection >= skip) {\r\n                    return false\r\n                }\r\n                skipCorrection += groupInfo.count - 1\r\n            }));\r\n            resultSkip += skipCorrection\r\n        }\r\n        return resultSkip\r\n    };\r\n    var pathEquals = function(path1, path2) {\r\n        if (path1.length !== path2.length) {\r\n            return false\r\n        }\r\n        for (var i = 0; i < path1.length; i++) {\r\n            if (!keysEqual(null, path1[i], path2[i])) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    };\r\n    var updateGroupOffsets = function updateGroupOffsets(that, items, path, offset, additionalGroupInfo) {\r\n        if (!items) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (\"key\" in item && void 0 !== item.items) {\r\n                path.push(item.key);\r\n                if (additionalGroupInfo && pathEquals(additionalGroupInfo.path, path) && !item.isContinuation) {\r\n                    additionalGroupInfo.offset = offset\r\n                }\r\n                var groupInfo = that.findGroupInfo(path);\r\n                if (groupInfo && !item.isContinuation) {\r\n                    groupInfo.offset = offset\r\n                }\r\n                if (groupInfo && !groupInfo.isExpanded) {\r\n                    offset += groupInfo.count\r\n                } else {\r\n                    offset = updateGroupOffsets(that, item.items, path, offset, additionalGroupInfo)\r\n                }\r\n                path.pop()\r\n            } else {\r\n                offset++\r\n            }\r\n        }\r\n        return offset\r\n    };\r\n    var getGroupCount = function getGroupCount(item, groupCount) {\r\n        var count = item.count || item.items.length;\r\n        if (!item.count && groupCount > 1) {\r\n            count = 0;\r\n            for (var i = 0; i < item.items.length; i++) {\r\n                count += getGroupCount(item.items[i], groupCount - 1)\r\n            }\r\n        }\r\n        return count\r\n    };\r\n    return {\r\n        handleDataLoading: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var collapsedGroups = [];\r\n            var collapsedItemsCount = 0;\r\n            var skipFirstItem = false;\r\n            var take;\r\n            var group = options.loadOptions.group;\r\n            var skipCorrection = 0;\r\n            ! function(storeLoadOptions, loadOptions) {\r\n                if (loadOptions.group) {\r\n                    var groups = dataGridCore.normalizeSortingInfo(loadOptions.group);\r\n                    var sorts = dataGridCore.normalizeSortingInfo(storeLoadOptions.sort);\r\n                    storeLoadOptions.sort = storeHelper.arrangeSortingInfo(groups, sorts);\r\n                    delete loadOptions.group\r\n                }\r\n            }(storeLoadOptions, options.loadOptions);\r\n            options.group = options.group || group;\r\n            if (options.isCustomLoading) {\r\n                return\r\n            }\r\n            var loadOptions = extend({}, storeLoadOptions);\r\n            loadOptions.skip = correctSkipLoadOption(this, storeLoadOptions.skip);\r\n            if (loadOptions.skip && loadOptions.take && group) {\r\n                loadOptions.skip--;\r\n                loadOptions.take++;\r\n                skipFirstItem = true\r\n            }\r\n            if (loadOptions.take && group) {\r\n                take = loadOptions.take;\r\n                loadOptions.take++\r\n            }\r\n            foreachCollapsedGroups(this, (function(groupInfo) {\r\n                if (groupInfo.offset >= loadOptions.skip + loadOptions.take + skipCorrection) {\r\n                    return false\r\n                } else if (groupInfo.offset >= loadOptions.skip + skipCorrection && groupInfo.count) {\r\n                    skipCorrection += groupInfo.count - 1;\r\n                    collapsedGroups.push(groupInfo);\r\n                    collapsedItemsCount += groupInfo.count\r\n                }\r\n            }));\r\n            each(collapsedGroups, (function() {\r\n                loadOptions.filter = function(path, storeLoadOptions, group) {\r\n                    var groups = dataGridCore.normalizeSortingInfo(group || storeLoadOptions.group);\r\n                    var filter = [];\r\n                    for (var i = 0; i < path.length; i++) {\r\n                        var filterElement = [];\r\n                        for (var j = 0; j <= i; j++) {\r\n                            filterElement.push([groups[j].selector, i === j ? \"<>\" : \"=\", path[j]])\r\n                        }\r\n                        filter.push(dataGridCore.combineFilters(filterElement))\r\n                    }\r\n                    filter = dataGridCore.combineFilters(filter, \"or\");\r\n                    return dataGridCore.combineFilters([filter, storeLoadOptions.filter])\r\n                }(this.path, loadOptions, group)\r\n            }));\r\n            options.storeLoadOptions = loadOptions;\r\n            options.collapsedGroups = collapsedGroups;\r\n            options.collapsedItemsCount = collapsedItemsCount;\r\n            options.skip = loadOptions.skip || 0;\r\n            options.skipFirstItem = skipFirstItem;\r\n            options.take = take\r\n        },\r\n        handleDataLoaded: function(options, callBase) {\r\n            var collapsedGroups = options.collapsedGroups;\r\n            var groups = dataGridCore.normalizeSortingInfo(options.group);\r\n            var groupCount = groups.length;\r\n\r\n            function appendCollapsedPath(data, path, groups, collapsedGroup, offset) {\r\n                if (!data || !path.length || !groups.length) {\r\n                    return\r\n                }\r\n                var keyValue;\r\n                var i;\r\n                var pathValue = toComparable(path[0], true);\r\n                for (i = 0; i < data.length; i++) {\r\n                    keyValue = toComparable(data[i].key, true);\r\n                    if (offset >= collapsedGroup.offset || pathValue === keyValue) {\r\n                        break\r\n                    } else {\r\n                        offset += getGroupCount(data[i], groups.length)\r\n                    }\r\n                }\r\n                if (!data.length || pathValue !== keyValue) {\r\n                    data.splice(i, 0, {\r\n                        key: path[0],\r\n                        items: [],\r\n                        count: 1 === path.length ? collapsedGroup.count : void 0\r\n                    })\r\n                }\r\n                appendCollapsedPath(data[i].items, path.slice(1), groups.slice(1), collapsedGroup, offset)\r\n            }\r\n            if (options.collapsedItemsCount && options.extra && options.extra.totalCount >= 0) {\r\n                options.extra.totalCount += options.collapsedItemsCount\r\n            }\r\n            callBase(options);\r\n            if (groupCount) {\r\n                var data = options.data;\r\n                var query = dataQuery(data);\r\n                storeHelper.multiLevelGroup(query, groups).enumerate().done((function(groupedData) {\r\n                    data = groupedData\r\n                }));\r\n                if (collapsedGroups) {\r\n                    for (var pathIndex = 0; pathIndex < collapsedGroups.length; pathIndex++) {\r\n                        appendCollapsedPath(data, collapsedGroups[pathIndex].path, groups, collapsedGroups[pathIndex], options.skip)\r\n                    }\r\n                }\r\n                if (!options.isCustomLoading) {\r\n                    ! function processGroupItems(that, items, path, offset, skipFirstItem, take) {\r\n                        var removeLastItemsCount = 0;\r\n                        var needRemoveFirstItem = false;\r\n                        for (var i = 0; i < items.length; i++) {\r\n                            var item = items[i];\r\n                            if (void 0 !== item.items) {\r\n                                path.push(item.key);\r\n                                var groupInfo = that.findGroupInfo(path);\r\n                                if (groupInfo && !groupInfo.isExpanded) {\r\n                                    item.collapsedItems = item.items;\r\n                                    item.items = null;\r\n                                    offset += groupInfo.count;\r\n                                    take--;\r\n                                    if (take < 0) {\r\n                                        removeLastItemsCount++\r\n                                    }\r\n                                    if (skipFirstItem) {\r\n                                        needRemoveFirstItem = true\r\n                                    }\r\n                                } else if (item.items) {\r\n                                    var offsetInfo = processGroupItems(that, item.items, path, offset, skipFirstItem, take);\r\n                                    if (skipFirstItem) {\r\n                                        if (offsetInfo.offset - offset > 1) {\r\n                                            item.isContinuation = true\r\n                                        } else {\r\n                                            needRemoveFirstItem = true\r\n                                        }\r\n                                    }\r\n                                    offset = offsetInfo.offset;\r\n                                    take = offsetInfo.take;\r\n                                    if (take < 0) {\r\n                                        if (item.items.length) {\r\n                                            item.isContinuationOnNextPage = true\r\n                                        } else {\r\n                                            removeLastItemsCount++\r\n                                        }\r\n                                    }\r\n                                }\r\n                                path.pop()\r\n                            } else {\r\n                                if (skipFirstItem) {\r\n                                    needRemoveFirstItem = true\r\n                                }\r\n                                offset++;\r\n                                take--;\r\n                                if (take < 0) {\r\n                                    removeLastItemsCount++\r\n                                }\r\n                            }\r\n                            skipFirstItem = false\r\n                        }\r\n                        if (needRemoveFirstItem) {\r\n                            items.splice(0, 1)\r\n                        }\r\n                        if (removeLastItemsCount) {\r\n                            items.splice(-removeLastItemsCount, removeLastItemsCount)\r\n                        }\r\n                        return {\r\n                            offset: offset,\r\n                            take: take\r\n                        }\r\n                    }(this, data, [], options.skip, options.skipFirstItem, options.take)\r\n                }\r\n                options.data = data\r\n            }\r\n        },\r\n        isGroupItemCountable: function(item) {\r\n            return null === item.items\r\n        },\r\n        updateTotalItemsCount: function() {\r\n            var itemsCountCorrection = 0;\r\n            foreachCollapsedGroups(this, (function(groupInfo) {\r\n                if (groupInfo.count) {\r\n                    itemsCountCorrection -= groupInfo.count - 1\r\n                }\r\n            }));\r\n            this.callBase(itemsCountCorrection)\r\n        },\r\n        changeRowExpand: function(path) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var beginPageIndex = dataSource.beginPageIndex ? dataSource.beginPageIndex() : dataSource.pageIndex();\r\n            var dataSourceItems = dataSource.items();\r\n            var offset = correctSkipLoadOption(that, beginPageIndex * dataSource.pageSize());\r\n            var groupInfo = that.findGroupInfo(path);\r\n            var groupCountQuery;\r\n            if (groupInfo && !groupInfo.isExpanded) {\r\n                groupCountQuery = (new Deferred).resolve(groupInfo.count)\r\n            } else {\r\n                groupCountQuery = loadTotalCount(dataSource, {\r\n                    filter: createGroupFilter(path, {\r\n                        filter: dataSource.filter(),\r\n                        group: dataSource.group()\r\n                    })\r\n                })\r\n            }\r\n            return when(groupCountQuery).done((function(count) {\r\n                count = parseInt(count.length ? count[0] : count);\r\n                if (groupInfo) {\r\n                    updateGroupOffsets(that, dataSourceItems, [], offset);\r\n                    groupInfo.isExpanded = !groupInfo.isExpanded;\r\n                    groupInfo.count = count\r\n                } else {\r\n                    groupInfo = {\r\n                        offset: -1,\r\n                        count: count,\r\n                        path: path,\r\n                        isExpanded: false\r\n                    };\r\n                    updateGroupOffsets(that, dataSourceItems, [], offset, groupInfo);\r\n                    if (groupInfo.offset >= 0) {\r\n                        that.addGroupInfo(groupInfo)\r\n                    }\r\n                }\r\n                that.updateTotalItemsCount()\r\n            })).fail((function() {\r\n                dataSource._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n            }))\r\n        },\r\n        allowCollapseAll: function() {\r\n            return false\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var dataSource = that._dataSource;\r\n            this.callBase.apply(this, arguments);\r\n            if (operationTypes.reload) {\r\n                return foreachCollapsedGroups(that, (function(groupInfo) {\r\n                    var groupCountQuery = loadTotalCount(dataSource, {\r\n                        filter: createGroupFilter(groupInfo.path, storeLoadOptions)\r\n                    });\r\n                    var groupOffsetQuery = loadTotalCount(dataSource, {\r\n                        filter: createOffsetFilter(groupInfo.path, storeLoadOptions)\r\n                    });\r\n                    return when(groupOffsetQuery, groupCountQuery).done((function(offset, count) {\r\n                        offset = parseInt(offset.length ? offset[0] : offset);\r\n                        count = parseInt(count.length ? count[0] : count);\r\n                        groupInfo.offset = offset;\r\n                        if (groupInfo.count !== count) {\r\n                            groupInfo.count = count;\r\n                            that.updateTotalItemsCount()\r\n                        }\r\n                    }))\r\n                }), true)\r\n            }\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.collapsed.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as GroupingHelperCore,\r\n    createOffsetFilter\r\n} from \"./ui.data_grid.grouping.core\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    errors as dataErrors\r\n} from \"../../data/errors\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\n\r\nfunction getContinuationGroupCount(groupOffset, pageSize, groupSize, groupIndex) {\r\n    groupIndex = groupIndex || 0;\r\n    if (pageSize > 1 && groupSize > 0) {\r\n        var pageOffset = groupOffset - Math.floor(groupOffset / pageSize) * pageSize || pageSize;\r\n        pageOffset += groupSize - groupIndex - 2;\r\n        if (pageOffset < 0) {\r\n            pageOffset += pageSize\r\n        }\r\n        return Math.floor(pageOffset / (pageSize - groupIndex - 1))\r\n    }\r\n    return 0\r\n}\r\nexport var GroupingHelper = GroupingHelperCore.inherit(function() {\r\n    var foreachExpandedGroups = function(that, callback, updateGroups) {\r\n        return that.foreachGroups((function(groupInfo, parents) {\r\n            if (groupInfo.isExpanded) {\r\n                return callback(groupInfo, parents)\r\n            }\r\n        }), true, false, updateGroups, updateGroups)\r\n    };\r\n    var processGroupItems = function processGroupItems(that, items, groupsCount, expandedInfo, path, isCustomLoading, isLastGroupExpanded) {\r\n        var isExpanded;\r\n        expandedInfo.items = expandedInfo.items || [];\r\n        expandedInfo.paths = expandedInfo.paths || [];\r\n        expandedInfo.count = expandedInfo.count || 0;\r\n        expandedInfo.lastCount = expandedInfo.lastCount || 0;\r\n        if (!groupsCount) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (void 0 !== item.items) {\r\n                path.push(item.key);\r\n                if (isCustomLoading) {\r\n                    isExpanded = true\r\n                } else {\r\n                    var groupInfo = that.findGroupInfo(path);\r\n                    isExpanded = groupInfo && groupInfo.isExpanded\r\n                }\r\n                if (!isExpanded) {\r\n                    item.collapsedItems = item.items;\r\n                    item.items = null\r\n                } else if (item.items) {\r\n                    processGroupItems(that, item.items, groupsCount - 1, expandedInfo, path, isCustomLoading, isLastGroupExpanded)\r\n                } else if (1 === groupsCount && item.count && (!isCustomLoading || isLastGroupExpanded)) {\r\n                    expandedInfo.items.push(item);\r\n                    expandedInfo.paths.push(path.slice(0));\r\n                    expandedInfo.count += expandedInfo.lastCount;\r\n                    expandedInfo.lastCount = item.count\r\n                }\r\n                path.pop()\r\n            }\r\n        }\r\n    };\r\n    var updateGroupInfoItem = function(that, item, isLastGroupLevel, path, offset) {\r\n        var groupInfo = that.findGroupInfo(path);\r\n        var count;\r\n        if (!groupInfo) {\r\n            if (isLastGroupLevel) {\r\n                count = item.count > 0 ? item.count : item.items.length\r\n            }\r\n            that.addGroupInfo({\r\n                isExpanded: that._isGroupExpanded(path.length - 1),\r\n                path: path.slice(0),\r\n                offset: offset,\r\n                count: count || 0\r\n            })\r\n        } else {\r\n            if (isLastGroupLevel) {\r\n                groupInfo.count = item.count > 0 ? item.count : item.items && item.items.length || 0\r\n            } else {\r\n                item.count = groupInfo.count || item.count\r\n            }\r\n            groupInfo.offset = offset\r\n        }\r\n    };\r\n    var updateGroupInfos = function updateGroupInfos(that, options, items, loadedGroupCount, groupIndex, path, parentIndex) {\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        var isLastGroupLevel = groupCount === loadedGroupCount;\r\n        var remotePaging = options.remoteOperations.paging;\r\n        var offset = 0;\r\n        var totalCount = 0;\r\n        var count;\r\n        groupIndex = groupIndex || 0;\r\n        path = path || [];\r\n        if (remotePaging && !parentIndex) {\r\n            offset = 0 === groupIndex ? options.skip || 0 : options.skips[groupIndex - 1] || 0\r\n        }\r\n        if (groupIndex >= loadedGroupCount) {\r\n            return items.length\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (item) {\r\n                path.push(item.key);\r\n                if (!item.count && !item.items || void 0 === item.items) {\r\n                    return -1\r\n                }\r\n                updateGroupInfoItem(that, item, isLastGroupLevel, path, offset + i);\r\n                count = item.items ? updateGroupInfos(that, options, item.items, loadedGroupCount, groupIndex + 1, path, i) : item.count || -1;\r\n                if (count < 0) {\r\n                    return -1\r\n                }\r\n                totalCount += count;\r\n                path.pop()\r\n            }\r\n        }\r\n        return totalCount\r\n    };\r\n    var isGroupExpanded = function(groups, groupIndex) {\r\n        return groups && groups.length && groups[groupIndex] && !!groups[groupIndex].isExpanded\r\n    };\r\n    var getTotalOffset = function(groupInfos, pageSize, offset) {\r\n        var groupSize;\r\n        var totalOffset = offset;\r\n        for (var groupIndex = 0; groupIndex < groupInfos.length; groupIndex++) {\r\n            groupSize = groupInfos[groupIndex].offset + 1;\r\n            if (groupIndex > 0) {\r\n                groupSize += groupInfos[groupIndex - 1].childrenTotalCount;\r\n                if (pageSize) {\r\n                    groupSize += getContinuationGroupCount(totalOffset, pageSize, groupSize, groupIndex - 1) * groupIndex\r\n                }\r\n            }\r\n            totalOffset += groupSize\r\n        }\r\n        return totalOffset\r\n    };\r\n\r\n    function applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex) {\r\n        var item = expandedInfo.items[expandedItemIndex];\r\n        var skip = options.skips && options.skips[groupLevel];\r\n        var take = options.takes && options.takes[groupLevel];\r\n        var isLastExpandedItem = expandedItemIndex === expandedInfo.items.length - 1;\r\n        var isFirstExpandedItem = 0 === expandedItemIndex;\r\n        var lastExpandedItemSkip = isFirstExpandedItem && skip || 0;\r\n        var isItemsTruncatedByTake = item.count > take + lastExpandedItemSkip;\r\n        if (isFirstExpandedItem && void 0 !== skip) {\r\n            item.isContinuation = true\r\n        }\r\n        if (isLastExpandedItem && void 0 !== take && isItemsTruncatedByTake) {\r\n            item.isContinuationOnNextPage = true\r\n        }\r\n    }\r\n\r\n    function isDataDeferred(data) {\r\n        return !Array.isArray(data)\r\n    }\r\n\r\n    function makeDataDeferred(options) {\r\n        if (!isDataDeferred(options.data)) {\r\n            options.data = new Deferred\r\n        }\r\n    }\r\n\r\n    function loadGroupItems(that, options, loadedGroupCount, expandedInfo, groupLevel, data) {\r\n        if (!options.isCustomLoading) {\r\n            expandedInfo = {};\r\n            processGroupItems(that, data, loadedGroupCount, expandedInfo, []);\r\n            ! function(options, expandedInfo, currentGroupCount) {\r\n                var currentGroupIndex = currentGroupCount - 1;\r\n                var groupCount = options.group ? options.group.length : 0;\r\n                expandedInfo.skip = options.skips && options.skips[currentGroupIndex];\r\n                if (options.takes && void 0 !== options.takes[currentGroupIndex]) {\r\n                    if (groupCount === currentGroupCount) {\r\n                        expandedInfo.take = expandedInfo.count ? expandedInfo.count - (expandedInfo.skip || 0) : 0\r\n                    } else {\r\n                        expandedInfo.take = 0\r\n                    }\r\n                    expandedInfo.take += options.takes[currentGroupIndex]\r\n                }\r\n            }(options, expandedInfo, loadedGroupCount)\r\n        }\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        if (expandedInfo.paths.length && groupCount - loadedGroupCount > 0) {\r\n            makeDataDeferred(options);\r\n            ! function(that, options, expandedInfo, loadedGroupCount, groupLevel, data) {\r\n                var groups = options.group || [];\r\n                var currentGroup = groups[groupLevel + 1];\r\n                var deferreds = [];\r\n                each(expandedInfo.paths, (function(expandedItemIndex) {\r\n                    var loadOptions = {\r\n                        requireTotalCount: false,\r\n                        requireGroupCount: true,\r\n                        group: [currentGroup],\r\n                        groupSummary: options.storeLoadOptions.groupSummary,\r\n                        filter: createGroupFilter(expandedInfo.paths[expandedItemIndex], {\r\n                            filter: options.storeLoadOptions.filter,\r\n                            group: groups\r\n                        }),\r\n                        select: options.storeLoadOptions.select\r\n                    };\r\n                    if (0 === expandedItemIndex) {\r\n                        loadOptions.skip = expandedInfo.skip || 0\r\n                    }\r\n                    if (expandedItemIndex === expandedInfo.paths.length - 1) {\r\n                        loadOptions.take = expandedInfo.take\r\n                    }\r\n                    var loadResult = 0 === loadOptions.take ? [] : that._dataSource.loadFromStore(loadOptions);\r\n                    when(loadResult).done((function(data) {\r\n                        var item = expandedInfo.items[expandedItemIndex];\r\n                        applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex);\r\n                        item.items = data\r\n                    }));\r\n                    deferreds.push(loadResult)\r\n                }));\r\n                when.apply(null, deferreds).done((function() {\r\n                    updateGroupInfos(that, options, data, loadedGroupCount + 1);\r\n                    loadGroupItems(that, options, loadedGroupCount + 1, expandedInfo, groupLevel + 1, data)\r\n                }))\r\n            }(that, options, expandedInfo, loadedGroupCount, groupLevel, data)\r\n        } else if (expandedInfo.paths.length && options.storeLoadOptions.group) {\r\n            makeDataDeferred(options);\r\n            ! function(that, options, expandedInfo, data) {\r\n                var expandedFilters = [];\r\n                var groups = options.group || [];\r\n                each(expandedInfo.paths, (function(_, expandedPath) {\r\n                    expandedFilters.push(createGroupFilter(expandedPath, {\r\n                        group: options.isCustomLoading ? options.storeLoadOptions.group : groups\r\n                    }))\r\n                }));\r\n                var filter = options.storeLoadOptions.filter;\r\n                if (!options.storeLoadOptions.isLoadingAll) {\r\n                    filter = dataGridCore.combineFilters([filter, dataGridCore.combineFilters(expandedFilters, \"or\")])\r\n                }\r\n                var loadOptions = extend({}, options.storeLoadOptions, {\r\n                    requireTotalCount: false,\r\n                    requireGroupCount: false,\r\n                    group: null,\r\n                    sort: groups.concat(dataGridCore.normalizeSortingInfo(options.storeLoadOptions.sort || [])),\r\n                    filter: filter\r\n                });\r\n                var isPagingLocal = that._dataSource.isLastLevelGroupItemsPagingLocal();\r\n                if (!isPagingLocal) {\r\n                    loadOptions.skip = expandedInfo.skip;\r\n                    loadOptions.take = expandedInfo.take\r\n                }\r\n                when(0 === expandedInfo.take ? [] : that._dataSource.loadFromStore(loadOptions)).done((function(items, extra) {\r\n                    if (isPagingLocal) {\r\n                        items = that._dataSource.sortLastLevelGroupItems(items, groups, expandedInfo.paths);\r\n                        items = expandedInfo.skip ? items.slice(expandedInfo.skip) : items;\r\n                        items = expandedInfo.take ? items.slice(0, expandedInfo.take) : items\r\n                    }\r\n                    each(expandedInfo.items, (function(index, item) {\r\n                        var itemCount = item.count - (0 === index && expandedInfo.skip || 0);\r\n                        var expandedItems = items.splice(0, itemCount);\r\n                        applyContinuationToGroupItem(options, expandedInfo, groups.length - 1, index);\r\n                        item.items = expandedItems\r\n                    }));\r\n                    options.data.resolve(data)\r\n                })).fail(options.data.reject)\r\n            }(that, options, expandedInfo, data)\r\n        } else if (isDataDeferred(options.data)) {\r\n            options.data.resolve(data)\r\n        }\r\n    }\r\n    var loadGroupTotalCount = function(dataSource, options) {\r\n        var d = new Deferred;\r\n        var isGrouping = !!(options.group && options.group.length);\r\n        var loadOptions = extend({\r\n            skip: 0,\r\n            take: 1,\r\n            requireGroupCount: isGrouping,\r\n            requireTotalCount: !isGrouping\r\n        }, options, {\r\n            group: isGrouping ? options.group : null\r\n        });\r\n        dataSource.load(loadOptions).done((function(data, extra) {\r\n            var count = extra && (isGrouping ? extra.groupCount : extra.totalCount);\r\n            if (!isFinite(count)) {\r\n                d.reject(dataErrors.Error(isGrouping ? \"E4022\" : \"E4021\"));\r\n                return\r\n            }\r\n            d.resolve(count)\r\n        })).fail(d.reject.bind(d));\r\n        return d\r\n    };\r\n    return {\r\n        updateTotalItemsCount: function(options) {\r\n            var totalItemsCount = 0;\r\n            var totalCount = options.extra && options.extra.totalCount || 0;\r\n            var groupCount = options.extra && options.extra.groupCount || 0;\r\n            var pageSize = this._dataSource.pageSize();\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            foreachExpandedGroups(this, (function(groupInfo) {\r\n                groupInfo.childrenTotalCount = 0\r\n            }));\r\n            foreachExpandedGroups(this, (function(groupInfo, parents) {\r\n                var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, totalItemsCount);\r\n                var count = groupInfo.count + groupInfo.childrenTotalCount;\r\n                if (!isVirtualPaging) {\r\n                    count += getContinuationGroupCount(totalOffset, pageSize, count, parents.length - 1)\r\n                }\r\n                if (parents[parents.length - 2]) {\r\n                    parents[parents.length - 2].childrenTotalCount += count\r\n                } else {\r\n                    totalItemsCount += count\r\n                }\r\n            }));\r\n            this.callBase(totalItemsCount - totalCount + groupCount)\r\n        },\r\n        _isGroupExpanded: function(groupIndex) {\r\n            var groups = this._dataSource.group();\r\n            return isGroupExpanded(groups, groupIndex)\r\n        },\r\n        _updatePagingOptions: function(options, callback) {\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            var pageSize = this._dataSource.pageSize();\r\n            var skips = [];\r\n            var takes = [];\r\n            var skipChildrenTotalCount = 0;\r\n            var childrenTotalCount = 0;\r\n            if (options.take) {\r\n                foreachExpandedGroups(this, (function(groupInfo) {\r\n                    groupInfo.childrenTotalCount = 0;\r\n                    groupInfo.skipChildrenTotalCount = 0\r\n                }));\r\n                foreachExpandedGroups(this, (function(groupInfo, parents) {\r\n                    var take;\r\n                    var takeCorrection = 0;\r\n                    var parentTakeCorrection = 0;\r\n                    var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, childrenTotalCount);\r\n                    var continuationGroupCount = 0;\r\n                    var skipContinuationGroupCount = 0;\r\n                    var groupInfoCount = groupInfo.count + groupInfo.childrenTotalCount;\r\n                    var childrenGroupInfoCount = groupInfoCount;\r\n                    callback && callback(groupInfo, totalOffset);\r\n                    var skip = options.skip - totalOffset;\r\n                    if (totalOffset <= options.skip + options.take && groupInfoCount) {\r\n                        take = options.take;\r\n                        if (!isVirtualPaging) {\r\n                            continuationGroupCount = getContinuationGroupCount(totalOffset, pageSize, groupInfoCount, parents.length - 1);\r\n                            groupInfoCount += continuationGroupCount * parents.length;\r\n                            childrenGroupInfoCount += continuationGroupCount;\r\n                            if (pageSize && skip >= 0) {\r\n                                takeCorrection = parents.length;\r\n                                parentTakeCorrection = parents.length - 1;\r\n                                skipContinuationGroupCount = Math.floor(skip / pageSize)\r\n                            }\r\n                        }\r\n                        if (skip >= 0) {\r\n                            if (totalOffset + groupInfoCount > options.skip) {\r\n                                skips.unshift(skip - skipContinuationGroupCount * takeCorrection - groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                            if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                                takes.unshift(take - takeCorrection - groupInfo.childrenTotalCount + groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                        } else if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                            takes.unshift(take + skip - groupInfo.childrenTotalCount)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip) {\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1 - skipContinuationGroupCount * parentTakeCorrection)\r\n                        } else {\r\n                            skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip + take) {\r\n                        groupInfoCount = Math.min(childrenGroupInfoCount, skip + take - (skipContinuationGroupCount + 1) * parentTakeCorrection);\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].childrenTotalCount += groupInfoCount\r\n                        } else {\r\n                            childrenTotalCount += groupInfoCount\r\n                        }\r\n                    }\r\n                }));\r\n                options.skip -= skipChildrenTotalCount;\r\n                options.take -= childrenTotalCount - skipChildrenTotalCount\r\n            }\r\n            options.skips = skips;\r\n            options.takes = takes\r\n        },\r\n        changeRowExpand: function(path) {\r\n            var groupInfo = this.findGroupInfo(path);\r\n            var dataSource = this._dataSource;\r\n            var remoteGroupPaging = dataSource.remoteOperations().groupPaging;\r\n            var groups = dataGridCore.normalizeSortingInfo(dataSource.group());\r\n            if (groupInfo) {\r\n                groupInfo.isExpanded = !groupInfo.isExpanded;\r\n                if (remoteGroupPaging && groupInfo.isExpanded && path.length < groups.length) {\r\n                    return loadGroupTotalCount(dataSource, {\r\n                        filter: createGroupFilter(path, {\r\n                            filter: dataSource.lastLoadOptions().filter,\r\n                            group: dataSource.group()\r\n                        }),\r\n                        group: [groups[path.length]],\r\n                        select: dataSource.select()\r\n                    }).done((function(groupCount) {\r\n                        groupInfo.count = groupCount\r\n                    }))\r\n                }\r\n                return (new Deferred).resolve()\r\n            }\r\n            return (new Deferred).reject()\r\n        },\r\n        handleDataLoading: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = dataGridCore.normalizeSortingInfo(storeLoadOptions.group || options.loadOptions.group);\r\n            if (options.isCustomLoading || !groups.length) {\r\n                return\r\n            }\r\n            if (options.remoteOperations.grouping) {\r\n                var remotePaging = this._dataSource.remoteOperations().paging;\r\n                storeLoadOptions.group = dataGridCore.normalizeSortingInfo(storeLoadOptions.group);\r\n                storeLoadOptions.group.forEach((function(group, index) {\r\n                    var isLastGroup = index === storeLoadOptions.group.length - 1;\r\n                    group.isExpanded = !remotePaging || !isLastGroup\r\n                }))\r\n            }\r\n            options.group = options.group || groups;\r\n            if (options.remoteOperations.paging) {\r\n                options.skip = storeLoadOptions.skip;\r\n                options.take = storeLoadOptions.take;\r\n                storeLoadOptions.requireGroupCount = true;\r\n                storeLoadOptions.group = groups.slice(0, 1);\r\n                this._updatePagingOptions(options);\r\n                storeLoadOptions.skip = options.skip;\r\n                storeLoadOptions.take = options.take\r\n            } else {\r\n                options.skip = options.loadOptions.skip;\r\n                options.take = options.loadOptions.take;\r\n                this._updatePagingOptions(options)\r\n            }\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            var loadedGroupCount = dataGridCore.normalizeSortingInfo(options.storeLoadOptions.group || options.loadOptions.group).length;\r\n            var groupCount = options.group ? options.group.length : 0;\r\n            var totalCount;\r\n            var expandedInfo = {};\r\n            if (options.isCustomLoading) {\r\n                callBase(options);\r\n                processGroupItems(this, options.data, loadedGroupCount, expandedInfo, [], options.isCustomLoading, options.storeLoadOptions.isLoadingAll)\r\n            } else {\r\n                if (!options.remoteOperations.paging) {\r\n                    this.foreachGroups((function(groupInfo) {\r\n                        groupInfo.count = 0\r\n                    }))\r\n                }\r\n                totalCount = updateGroupInfos(this, options, options.data, loadedGroupCount);\r\n                if (totalCount < 0) {\r\n                    options.data = (new Deferred).reject(errors.Error(\"E1037\"));\r\n                    return\r\n                }\r\n                if (!options.remoteOperations.paging) {\r\n                    if (loadedGroupCount && options.extra && options.loadOptions.requireTotalCount) {\r\n                        options.extra.totalCount = totalCount;\r\n                        options.extra.groupCount = options.data.length\r\n                    }\r\n                }\r\n                if (groupCount && options.storeLoadOptions.requireGroupCount && !isFinite(options.extra.groupCount)) {\r\n                    options.data = (new Deferred).reject(dataErrors.Error(\"E4022\"));\r\n                    return\r\n                }\r\n                this.updateTotalItemsCount(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    this._updatePagingOptions(options)\r\n                }\r\n                callBase(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    this._processPaging(options, loadedGroupCount)\r\n                }\r\n            }\r\n            loadGroupItems(this, options, loadedGroupCount, expandedInfo, 0, options.data)\r\n        },\r\n        _processSkips: function(items, skips, groupCount) {\r\n            if (!groupCount) {\r\n                return\r\n            }\r\n            var firstItem = items[0];\r\n            var skip = skips[0];\r\n            var children = firstItem && firstItem.items;\r\n            if (void 0 !== skip) {\r\n                firstItem.isContinuation = true;\r\n                if (children) {\r\n                    firstItem.items = children.slice(skip);\r\n                    this._processSkips(firstItem.items, skips.slice(1), groupCount - 1)\r\n                }\r\n            }\r\n        },\r\n        _processTakes: function(items, skips, takes, groupCount, parents) {\r\n            if (!groupCount || !items) {\r\n                return\r\n            }\r\n            parents = parents || [];\r\n            var lastItem = items[items.length - 1];\r\n            var children = lastItem && lastItem.items;\r\n            var take = takes[0];\r\n            var skip = skips[0];\r\n            if (lastItem) {\r\n                var maxTakeCount = lastItem.count - (lastItem.isContinuation && skip || 0) || children.length;\r\n                if (void 0 !== take && maxTakeCount > take) {\r\n                    lastItem.isContinuationOnNextPage = true;\r\n                    parents.forEach((function(parent) {\r\n                        parent.isContinuationOnNextPage = true\r\n                    }));\r\n                    if (children) {\r\n                        children = children.slice(0, take);\r\n                        lastItem.items = children\r\n                    }\r\n                }\r\n                parents.push(lastItem);\r\n                this._processTakes(children, skips.slice(1), takes.slice(1), groupCount - 1, parents)\r\n            }\r\n        },\r\n        _processPaging: function(options, groupCount) {\r\n            this._processSkips(options.data, options.skips, groupCount);\r\n            this._processTakes(options.data, options.skips, options.takes, groupCount)\r\n        },\r\n        isLastLevelGroupItemsPagingLocal: function() {\r\n            return false\r\n        },\r\n        sortLastLevelGroupItems: function(items) {\r\n            return items\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var group = options.group || options.storeLoadOptions.group;\r\n            var oldGroups = dataGridCore.normalizeSortingInfo(that._group);\r\n            var isExpanded;\r\n            var groupIndex;\r\n\r\n            function handleGroup(groupInfo, parents) {\r\n                if (parents.length === groupIndex + 1) {\r\n                    groupInfo.isExpanded = isExpanded\r\n                }\r\n            }\r\n            for (groupIndex = 0; groupIndex < oldGroups.length; groupIndex++) {\r\n                isExpanded = isGroupExpanded(group, groupIndex);\r\n                if (isGroupExpanded(that._group, groupIndex) !== isExpanded) {\r\n                    that.foreachGroups(handleGroup)\r\n                }\r\n            }\r\n            that.callBase.apply(this, arguments);\r\n            if (group && options.remoteOperations.paging && operationTypes.reload) {\r\n                return foreachExpandedGroups(that, (function(groupInfo) {\r\n                    var groupCountQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: createGroupFilter(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }),\r\n                        group: group.slice(groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    var groupOffsetQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: createOffsetFilter(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }, true),\r\n                        group: group.slice(groupInfo.path.length - 1, groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    return when(groupOffsetQuery, groupCountQuery).done((function(offset, count) {\r\n                        offset = parseInt(offset.length ? offset[0] : offset);\r\n                        count = parseInt(count.length ? count[0] : count);\r\n                        groupInfo.offset = offset;\r\n                        if (groupInfo.count !== count) {\r\n                            groupInfo.count = count;\r\n                            that.updateTotalItemsCount(options)\r\n                        }\r\n                    }))\r\n                }), true)\r\n            }\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as ExpandedGroupingHelper\r\n} from \"./ui.data_grid.grouping.expanded\";\r\nimport {\r\n    GroupingHelper as CollapsedGroupingHelper\r\n} from \"./ui.data_grid.grouping.collapsed\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"../grid_core/ui.grid_core.accessibility\";\r\nimport {\r\n    setTabIndex,\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nvar DATAGRID_GROUP_PANEL_CLASS = \"dx-datagrid-group-panel\";\r\nvar DATAGRID_GROUP_PANEL_MESSAGE_CLASS = \"dx-group-panel-message\";\r\nvar DATAGRID_GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\r\nvar DATAGRID_GROUP_PANEL_LABEL_CLASS = \"dx-toolbar-label\";\r\nvar DATAGRID_EXPAND_CLASS = \"dx-datagrid-expand\";\r\nvar DATAGRID_GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_FILTER_CLASS_SELECTOR = \".dx-header-filter\";\r\nvar GroupingDataSourceAdapterExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._initGroupingHelper()\r\n    },\r\n    _initGroupingHelper: function(options) {\r\n        var grouping = this._grouping;\r\n        var isAutoExpandAll = this.option(\"grouping.autoExpandAll\");\r\n        var isFocusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var remoteOperations = options ? options.remoteOperations : this.remoteOperations();\r\n        var isODataRemoteOperations = remoteOperations.filtering && remoteOperations.sorting && remoteOperations.paging;\r\n        if (isODataRemoteOperations && !remoteOperations.grouping && (isAutoExpandAll || !isFocusedRowEnabled)) {\r\n            if (!grouping || grouping instanceof CollapsedGroupingHelper) {\r\n                this._grouping = new ExpandedGroupingHelper(this)\r\n            }\r\n        } else if (!grouping || grouping instanceof ExpandedGroupingHelper) {\r\n            this._grouping = new CollapsedGroupingHelper(this)\r\n        }\r\n    },\r\n    totalItemsCount: function() {\r\n        var totalCount = this.callBase();\r\n        return totalCount > 0 && this._dataSource.group() && this._dataSource.requireTotalCount() ? totalCount + this._grouping.totalCountCorrection() : totalCount\r\n    },\r\n    itemsCount: function() {\r\n        return this._dataSource.group() ? this._grouping.itemsCount() || 0 : this.callBase.apply(this, arguments)\r\n    },\r\n    allowCollapseAll: function() {\r\n        return this._grouping.allowCollapseAll()\r\n    },\r\n    isGroupItemCountable: function(item) {\r\n        return this._grouping.isGroupItemCountable(item)\r\n    },\r\n    isRowExpanded: function(key) {\r\n        var groupInfo = this._grouping.findGroupInfo(key);\r\n        return groupInfo ? groupInfo.isExpanded : !this._grouping.allowCollapseAll()\r\n    },\r\n    collapseAll: function(groupIndex) {\r\n        return this._collapseExpandAll(groupIndex, false)\r\n    },\r\n    expandAll: function(groupIndex) {\r\n        return this._collapseExpandAll(groupIndex, true)\r\n    },\r\n    _collapseExpandAll: function(groupIndex, isExpand) {\r\n        var dataSource = this._dataSource;\r\n        var group = dataSource.group();\r\n        var groups = gridCore.normalizeSortingInfo(group || []);\r\n        if (groups.length) {\r\n            for (var i = 0; i < groups.length; i++) {\r\n                if (void 0 === groupIndex || groupIndex === i) {\r\n                    groups[i].isExpanded = isExpand\r\n                } else if (group && group[i]) {\r\n                    groups[i].isExpanded = group[i].isExpanded\r\n                }\r\n            }\r\n            dataSource.group(groups);\r\n            this._grouping.foreachGroups((function(groupInfo, parents) {\r\n                if (void 0 === groupIndex || groupIndex === parents.length - 1) {\r\n                    groupInfo.isExpanded = isExpand\r\n                }\r\n            }), false, true);\r\n            this.resetPagesCache()\r\n        }\r\n        return true\r\n    },\r\n    refresh: function() {\r\n        this.callBase.apply(this, arguments);\r\n        return this._grouping.refresh.apply(this._grouping, arguments)\r\n    },\r\n    changeRowExpand: function(path) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource.group()) {\r\n            dataSource.beginLoading();\r\n            if (this._lastLoadOptions) {\r\n                this._lastLoadOptions.groupExpand = true\r\n            }\r\n            return this._changeRowExpandCore(path).always((function() {\r\n                dataSource.endLoading()\r\n            }))\r\n        }\r\n    },\r\n    _changeRowExpandCore: function(path) {\r\n        return this._grouping.changeRowExpand(path)\r\n    },\r\n    _hasGroupLevelsExpandState: function(group, isExpanded) {\r\n        if (group && Array.isArray(group)) {\r\n            for (var i = 0; i < group.length; i++) {\r\n                if (group[i].isExpanded === isExpanded) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _customizeRemoteOperations: function(options, operationTypes) {\r\n        var remoteOperations = options.remoteOperations;\r\n        if (options.storeLoadOptions.group) {\r\n            if (remoteOperations.grouping && !options.isCustomLoading) {\r\n                if (!remoteOperations.groupPaging || this._hasGroupLevelsExpandState(options.storeLoadOptions.group, true)) {\r\n                    remoteOperations.paging = false\r\n                }\r\n            }\r\n            if (!remoteOperations.grouping && (!remoteOperations.sorting || !remoteOperations.filtering || options.isCustomLoading || this._hasGroupLevelsExpandState(options.storeLoadOptions.group, false))) {\r\n                remoteOperations.paging = false\r\n            }\r\n        } else if (!options.isCustomLoading && remoteOperations.paging && operationTypes.grouping) {\r\n            this.resetCache()\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _handleDataLoading: function(options) {\r\n        this.callBase(options);\r\n        this._initGroupingHelper(options);\r\n        return this._grouping.handleDataLoading(options)\r\n    },\r\n    _handleDataLoaded: function(options) {\r\n        return this._grouping.handleDataLoaded(options, this.callBase.bind(this))\r\n    },\r\n    _handleDataLoadedCore: function(options) {\r\n        return this._grouping.handleDataLoadedCore(options, this.callBase.bind(this))\r\n    }\r\n};\r\ndataSourceAdapter.extend(GroupingDataSourceAdapterExtender);\r\nvar GroupingDataControllerExtender = {\r\n    init: function() {\r\n        this.callBase();\r\n        this.createAction(\"onRowExpanding\");\r\n        this.createAction(\"onRowExpanded\");\r\n        this.createAction(\"onRowCollapsing\");\r\n        this.createAction(\"onRowCollapsed\")\r\n    },\r\n    _beforeProcessItems: function(items) {\r\n        var groupColumns = this._columnsController.getGroupColumns();\r\n        items = this.callBase(items);\r\n        if (items.length && groupColumns.length) {\r\n            items = this._processGroupItems(items, groupColumns.length)\r\n        }\r\n        return items\r\n    },\r\n    _processItem: function(item, options) {\r\n        if (isDefined(item.groupIndex) && isString(item.rowType) && 0 === item.rowType.indexOf(\"group\")) {\r\n            item = this._processGroupItem(item, options);\r\n            options.dataIndex = 0\r\n        } else {\r\n            item = this.callBase.apply(this, arguments)\r\n        }\r\n        return item\r\n    },\r\n    _processGroupItem: function(item) {\r\n        return item\r\n    },\r\n    _processGroupItems: function(items, groupsCount, options) {\r\n        var groupedColumns = this._columnsController.getGroupColumns();\r\n        var column = groupedColumns[groupedColumns.length - groupsCount];\r\n        if (!options) {\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            options = {\r\n                collectContinuationItems: \"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode,\r\n                resultItems: [],\r\n                path: [],\r\n                values: []\r\n            }\r\n        }\r\n        var resultItems = options.resultItems;\r\n        if (options.data) {\r\n            if (options.collectContinuationItems || !options.data.isContinuation) {\r\n                resultItems.push({\r\n                    rowType: \"group\",\r\n                    data: options.data,\r\n                    groupIndex: options.path.length - 1,\r\n                    isExpanded: !!options.data.items,\r\n                    key: options.path.slice(0),\r\n                    values: options.values.slice(0)\r\n                })\r\n            }\r\n        }\r\n        if (items) {\r\n            if (0 === groupsCount) {\r\n                resultItems.push.apply(resultItems, items)\r\n            } else {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    var item = items[i];\r\n                    if (item && \"items\" in item) {\r\n                        options.data = item;\r\n                        options.path.push(item.key);\r\n                        options.values.push(column && column.deserializeValue && !column.calculateDisplayValue ? column.deserializeValue(item.key) : item.key);\r\n                        this._processGroupItems(item.items, groupsCount - 1, options);\r\n                        options.data = void 0;\r\n                        options.path.pop();\r\n                        options.values.pop()\r\n                    } else {\r\n                        resultItems.push(item)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return resultItems\r\n    },\r\n    publicMethods: function() {\r\n        return this.callBase().concat([\"collapseAll\", \"expandAll\", \"isRowExpanded\", \"expandRow\", \"collapseRow\"])\r\n    },\r\n    collapseAll: function(groupIndex) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource && dataSource.collapseAll(groupIndex)) {\r\n            dataSource.pageIndex(0);\r\n            dataSource.reload()\r\n        }\r\n    },\r\n    expandAll: function(groupIndex) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource && dataSource.expandAll(groupIndex)) {\r\n            dataSource.pageIndex(0);\r\n            dataSource.reload()\r\n        }\r\n    },\r\n    changeRowExpand: function(key) {\r\n        var that = this;\r\n        var expanded = that.isRowExpanded(key);\r\n        var args = {\r\n            key: key,\r\n            expanded: expanded\r\n        };\r\n        that.executeAction(expanded ? \"onRowCollapsing\" : \"onRowExpanding\", args);\r\n        if (!args.cancel) {\r\n            return when(that._changeRowExpandCore(key)).done((function() {\r\n                args.expanded = !expanded;\r\n                that.executeAction(expanded ? \"onRowCollapsed\" : \"onRowExpanded\", args)\r\n            }))\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    _changeRowExpandCore: function(key) {\r\n        var that = this;\r\n        var dataSource = this._dataSource;\r\n        var d = new Deferred;\r\n        if (!dataSource) {\r\n            d.resolve()\r\n        } else {\r\n            when(dataSource.changeRowExpand(key)).done((function() {\r\n                that.load().done(d.resolve).fail(d.reject)\r\n            })).fail(d.reject)\r\n        }\r\n        return d\r\n    },\r\n    isRowExpanded: function(key) {\r\n        var dataSource = this._dataSource;\r\n        return dataSource && dataSource.isRowExpanded(key)\r\n    },\r\n    expandRow: function(key) {\r\n        if (!this.isRowExpanded(key)) {\r\n            return this.changeRowExpand(key)\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    collapseRow: function(key) {\r\n        if (this.isRowExpanded(key)) {\r\n            return this.changeRowExpand(key)\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"grouping\" === args.name) {\r\n            args.name = \"dataSource\"\r\n        }\r\n        this.callBase(args)\r\n    }\r\n};\r\nvar onGroupingMenuItemClick = function(column, params) {\r\n    var columnsController = this._columnsController;\r\n    switch (params.itemData.value) {\r\n        case \"group\":\r\n            var groups = columnsController._dataSource.group() || [];\r\n            columnsController.columnOption(column.dataField, \"groupIndex\", groups.length);\r\n            break;\r\n        case \"ungroup\":\r\n            columnsController.columnOption(column.dataField, \"groupIndex\", -1);\r\n            break;\r\n        case \"ungroupAll\":\r\n            this.component.clearGrouping()\r\n    }\r\n};\r\nexport var GroupingHeaderPanelExtender = {\r\n    _getToolbarItems: function() {\r\n        var items = this.callBase();\r\n        return this._appendGroupingItem(items)\r\n    },\r\n    _appendGroupingItem: function(items) {\r\n        if (this._isGroupPanelVisible()) {\r\n            var isRendered = false;\r\n            var toolbarItem = {\r\n                template: () => {\r\n                    var $groupPanel = $(\"<div>\").addClass(DATAGRID_GROUP_PANEL_CLASS);\r\n                    this._updateGroupPanelContent($groupPanel);\r\n                    registerKeyboardAction(\"groupPanel\", this, $groupPanel, void 0, this._handleActionKeyDown.bind(this));\r\n                    return $groupPanel\r\n                },\r\n                name: \"groupPanel\",\r\n                onItemRendered: () => {\r\n                    isRendered && this.renderCompleted.fire();\r\n                    isRendered = true\r\n                },\r\n                location: \"before\",\r\n                locateInMenu: \"never\",\r\n                sortIndex: 1\r\n            };\r\n            items.push(toolbarItem)\r\n        }\r\n        return items\r\n    },\r\n    _handleActionKeyDown: function(args) {\r\n        var event = args.event;\r\n        var $target = $(event.target);\r\n        var groupColumnIndex = $target.closest(\".\".concat(DATAGRID_GROUP_PANEL_ITEM_CLASS)).index();\r\n        var column = this._columnsController.getGroupColumns()[groupColumnIndex];\r\n        var columnIndex = column && column.index;\r\n        if ($target.is(HEADER_FILTER_CLASS_SELECTOR)) {\r\n            this.getController(\"headerFilter\").showHeaderFilterMenu(columnIndex, true)\r\n        } else {\r\n            this._processGroupItemAction(columnIndex)\r\n        }\r\n        event.preventDefault()\r\n    },\r\n    _isGroupPanelVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var isVisible;\r\n        if (groupPanelOptions) {\r\n            isVisible = groupPanelOptions.visible;\r\n            if (\"auto\" === isVisible) {\r\n                isVisible = \"desktop\" === devices.current().deviceType ? true : false\r\n            }\r\n        }\r\n        return isVisible\r\n    },\r\n    _renderGroupPanelItems: function($groupPanel, groupColumns) {\r\n        var that = this;\r\n        $groupPanel.empty();\r\n        each(groupColumns, (function(index, groupColumn) {\r\n            that._createGroupPanelItem($groupPanel, groupColumn)\r\n        }));\r\n        restoreFocus(this)\r\n    },\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var $groupPanelItem = $(\"<div>\").addClass(groupColumn.cssClass).addClass(DATAGRID_GROUP_PANEL_ITEM_CLASS).data(\"columnData\", groupColumn).appendTo($rootElement).text(groupColumn.caption);\r\n        setTabIndex(this, $groupPanelItem);\r\n        return $groupPanelItem\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        if (!this._requireReady && !gridCore.checkChanges(e.optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var $toolbarElement = this.element();\r\n            var $groupPanel = $toolbarElement && $toolbarElement.find(\".\" + DATAGRID_GROUP_PANEL_CLASS);\r\n            if ($groupPanel && $groupPanel.length) {\r\n                this._updateGroupPanelContent($groupPanel);\r\n                this.renderCompleted.fire()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    _updateGroupPanelContent: function($groupPanel) {\r\n        var groupColumns = this.getController(\"columns\").getGroupColumns();\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        this._renderGroupPanelItems($groupPanel, groupColumns);\r\n        if (groupPanelOptions.allowColumnDragging && !groupColumns.length) {\r\n            $(\"<div>\").addClass(DATAGRID_GROUP_PANEL_MESSAGE_CLASS).text(groupPanelOptions.emptyPanelText).appendTo($groupPanel);\r\n            $groupPanel.closest(\".\" + DATAGRID_GROUP_PANEL_LABEL_CLASS).css(\"maxWidth\", \"none\");\r\n            this.updateToolbarDimensions()\r\n        }\r\n    },\r\n    allowDragging: function(column) {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        return this._isGroupPanelVisible() && groupPanelOptions.allowColumnDragging && column && column.allowGrouping\r\n    },\r\n    getColumnElements: function() {\r\n        var $element = this.element();\r\n        return $element && $element.find(\".\" + DATAGRID_GROUP_PANEL_ITEM_CLASS)\r\n    },\r\n    getColumns: function() {\r\n        return this.getController(\"columns\").getGroupColumns()\r\n    },\r\n    getBoundingRect: function() {\r\n        var $element = this.element();\r\n        if ($element && $element.find(\".\" + DATAGRID_GROUP_PANEL_CLASS).length) {\r\n            var offset = $element.offset();\r\n            return {\r\n                top: offset.top,\r\n                bottom: offset.top + getHeight($element)\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    getName: function() {\r\n        return \"group\"\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var $groupedColumnElement = $(options.targetElement).closest(\".\" + DATAGRID_GROUP_PANEL_ITEM_CLASS);\r\n        var items;\r\n        if ($groupedColumnElement.length) {\r\n            options.column = $groupedColumnElement.data(\"columnData\")\r\n        }\r\n        if (contextMenuEnabled && options.column) {\r\n            var column = options.column;\r\n            var isGroupingAllowed = isDefined(column.allowGrouping) ? column.allowGrouping : true;\r\n            if (isGroupingAllowed) {\r\n                var isColumnGrouped = isDefined(column.groupIndex) && column.groupIndex > -1;\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = [{\r\n                    text: groupingTexts.ungroup,\r\n                    value: \"ungroup\",\r\n                    disabled: !isColumnGrouped,\r\n                    onItemClick: onItemClick\r\n                }, {\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                }]\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    isVisible: function() {\r\n        return this.callBase() || this._isGroupPanelVisible()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"groupPanel\" === args.name) {\r\n            this._invalidate();\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\nvar GroupingRowsViewExtender = {\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var items;\r\n        if (contextMenuEnabled && options.row && \"group\" === options.row.rowType) {\r\n            var columnsController = this._columnsController;\r\n            var column = columnsController.columnOption(\"groupIndex:\" + options.row.groupIndex);\r\n            if (column && column.allowGrouping) {\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = [];\r\n                items.push({\r\n                    text: groupingTexts.ungroup,\r\n                    value: \"ungroup\",\r\n                    onItemClick: onItemClick\r\n                }, {\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    _rowClick: function(e) {\r\n        var expandMode = this.option(\"grouping.expandMode\");\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        var isGroupRowStateChanged = \"infinite\" !== scrollingMode && \"rowClick\" === expandMode && $(e.event.target).closest(\".\" + DATAGRID_GROUP_ROW_CLASS).length;\r\n        var isExpandButtonClicked = $(e.event.target).closest(\".\" + DATAGRID_EXPAND_CLASS).length;\r\n        if (isGroupRowStateChanged || isExpandButtonClicked) {\r\n            this._changeGroupRowState(e)\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _changeGroupRowState: function(e) {\r\n        var dataController = this.getController(\"data\");\r\n        var row = dataController.items()[e.rowIndex];\r\n        var allowCollapsing = this._columnsController.columnOption(\"groupIndex:\" + row.groupIndex, \"allowCollapsing\");\r\n        if (\"data\" === row.rowType || \"group\" === row.rowType && false !== allowCollapsing) {\r\n            dataController.changeRowExpand(row.key, true);\r\n            e.event.preventDefault();\r\n            e.handled = true\r\n        }\r\n    }\r\n};\r\nvar columnHeadersViewExtender = {\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var items = this.callBase(options);\r\n        if (contextMenuEnabled && options.row && (\"header\" === options.row.rowType || \"detailAdaptive\" === options.row.rowType)) {\r\n            var column = options.column;\r\n            if (!column.command && (!isDefined(column.allowGrouping) || column.allowGrouping)) {\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var isColumnGrouped = isDefined(column.groupIndex) && column.groupIndex > -1;\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = items || [];\r\n                items.push({\r\n                    text: groupingTexts.groupByThisColumn,\r\n                    value: \"group\",\r\n                    beginGroup: true,\r\n                    disabled: isColumnGrouped,\r\n                    onItemClick: onItemClick\r\n                });\r\n                if (column.showWhenGrouped) {\r\n                    items.push({\r\n                        text: groupingTexts.ungroup,\r\n                        value: \"ungroup\",\r\n                        disabled: !isColumnGrouped,\r\n                        onItemClick: onItemClick\r\n                    })\r\n                }\r\n                items.push({\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    }\r\n};\r\ngridCore.registerModule(\"grouping\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            grouping: {\r\n                autoExpandAll: true,\r\n                allowCollapsing: true,\r\n                contextMenuEnabled: false,\r\n                expandMode: \"buttonClick\",\r\n                texts: {\r\n                    groupContinuesMessage: messageLocalization.format(\"dxDataGrid-groupContinuesMessage\"),\r\n                    groupContinuedMessage: messageLocalization.format(\"dxDataGrid-groupContinuedMessage\"),\r\n                    groupByThisColumn: messageLocalization.format(\"dxDataGrid-groupHeaderText\"),\r\n                    ungroup: messageLocalization.format(\"dxDataGrid-ungroupHeaderText\"),\r\n                    ungroupAll: messageLocalization.format(\"dxDataGrid-ungroupAllText\")\r\n                }\r\n            },\r\n            groupPanel: {\r\n                visible: false,\r\n                emptyPanelText: messageLocalization.format(\"dxDataGrid-groupPanelEmptyText\"),\r\n                allowColumnDragging: true\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: GroupingDataControllerExtender,\r\n            columns: {\r\n                _getExpandColumnOptions: function() {\r\n                    var options = this.callBase.apply(this, arguments);\r\n                    options.cellTemplate = gridCore.getExpandCellTemplate();\r\n                    return options\r\n                }\r\n            },\r\n            editing: {\r\n                _isProcessedItem: function(item) {\r\n                    return isDefined(item.groupIndex) && isString(item.rowType) && 0 === item.rowType.indexOf(\"group\")\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: GroupingHeaderPanelExtender,\r\n            rowsView: GroupingRowsViewExtender,\r\n            columnHeadersView: columnHeadersViewExtender\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.master_detail.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nexport var masterDetailModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            masterDetail: {\r\n                enabled: false,\r\n                autoExpandAll: false,\r\n                template: null\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: {\r\n                _getExpandColumnsCore: function() {\r\n                    var expandColumns = this.callBase();\r\n                    if (this.option(\"masterDetail.enabled\")) {\r\n                        expandColumns.push({\r\n                            type: \"detailExpand\",\r\n                            cellTemplate: gridCoreUtils.getExpandCellTemplate()\r\n                        })\r\n                    }\r\n                    return expandColumns\r\n                }\r\n            },\r\n            data: function() {\r\n                var initMasterDetail = function(that) {\r\n                    that._expandedItems = [];\r\n                    that._isExpandAll = that.option(\"masterDetail.autoExpandAll\")\r\n                };\r\n                return {\r\n                    init: function() {\r\n                        initMasterDetail(this);\r\n                        this.callBase()\r\n                    },\r\n                    expandAll: function(groupIndex) {\r\n                        var that = this;\r\n                        if (groupIndex < 0) {\r\n                            that._isExpandAll = true;\r\n                            that._expandedItems = [];\r\n                            that.updateItems()\r\n                        } else {\r\n                            that.callBase.apply(that, arguments)\r\n                        }\r\n                    },\r\n                    collapseAll: function(groupIndex) {\r\n                        var that = this;\r\n                        if (groupIndex < 0) {\r\n                            that._isExpandAll = false;\r\n                            that._expandedItems = [];\r\n                            that.updateItems()\r\n                        } else {\r\n                            that.callBase.apply(that, arguments)\r\n                        }\r\n                    },\r\n                    isRowExpanded: function(key) {\r\n                        var that = this;\r\n                        var expandIndex = gridCoreUtils.getIndexByKey(key, that._expandedItems);\r\n                        if (Array.isArray(key)) {\r\n                            return that.callBase.apply(that, arguments)\r\n                        } else {\r\n                            return !!(that._isExpandAll ^ (expandIndex >= 0 && that._expandedItems[expandIndex].visible))\r\n                        }\r\n                    },\r\n                    _getRowIndicesForExpand: function(key) {\r\n                        var rowIndex = this.getRowIndexByKey(key);\r\n                        return [rowIndex, rowIndex + 1]\r\n                    },\r\n                    _changeRowExpandCore: function(key) {\r\n                        var that = this;\r\n                        var result;\r\n                        if (Array.isArray(key)) {\r\n                            result = that.callBase.apply(that, arguments)\r\n                        } else {\r\n                            var expandIndex = gridCoreUtils.getIndexByKey(key, that._expandedItems);\r\n                            if (expandIndex >= 0) {\r\n                                var visible = that._expandedItems[expandIndex].visible;\r\n                                that._expandedItems[expandIndex].visible = !visible\r\n                            } else {\r\n                                that._expandedItems.push({\r\n                                    key: key,\r\n                                    visible: true\r\n                                })\r\n                            }\r\n                            that.updateItems({\r\n                                changeType: \"update\",\r\n                                rowIndices: that._getRowIndicesForExpand(key)\r\n                            });\r\n                            result = (new Deferred).resolve()\r\n                        }\r\n                        return result\r\n                    },\r\n                    _processDataItem: function(data, options) {\r\n                        var that = this;\r\n                        var dataItem = that.callBase.apply(that, arguments);\r\n                        dataItem.isExpanded = that.isRowExpanded(dataItem.key);\r\n                        if (void 0 === options.detailColumnIndex) {\r\n                            options.detailColumnIndex = -1;\r\n                            each(options.visibleColumns, (function(index, column) {\r\n                                if (\"expand\" === column.command && !isDefined(column.groupIndex)) {\r\n                                    options.detailColumnIndex = index;\r\n                                    return false\r\n                                }\r\n                            }))\r\n                        }\r\n                        if (options.detailColumnIndex >= 0) {\r\n                            dataItem.values[options.detailColumnIndex] = dataItem.isExpanded\r\n                        }\r\n                        return dataItem\r\n                    },\r\n                    _processItems: function(items, change) {\r\n                        var that = this;\r\n                        var changeType = change.changeType;\r\n                        var result = [];\r\n                        items = that.callBase.apply(that, arguments);\r\n                        if (\"loadingAll\" === changeType) {\r\n                            return items\r\n                        }\r\n                        if (\"refresh\" === changeType) {\r\n                            that._expandedItems = grep(that._expandedItems, (function(item) {\r\n                                return item.visible\r\n                            }))\r\n                        }\r\n                        each(items, (function(index, item) {\r\n                            result.push(item);\r\n                            var expandIndex = gridCoreUtils.getIndexByKey(item.key, that._expandedItems);\r\n                            if (\"data\" === item.rowType && (item.isExpanded || expandIndex >= 0) && !item.isNewRow) {\r\n                                result.push({\r\n                                    visible: item.isExpanded,\r\n                                    rowType: \"detail\",\r\n                                    key: item.key,\r\n                                    data: item.data,\r\n                                    values: []\r\n                                })\r\n                            }\r\n                        }));\r\n                        return result\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        var isEnabledChanged;\r\n                        var isAutoExpandAllChanged;\r\n                        if (\"masterDetail\" === args.name) {\r\n                            args.name = \"dataSource\";\r\n                            switch (args.fullName) {\r\n                                case \"masterDetail\":\r\n                                    var value = args.value || {};\r\n                                    var previousValue = args.previousValue || {};\r\n                                    isEnabledChanged = value.enabled !== previousValue.enabled;\r\n                                    isAutoExpandAllChanged = value.autoExpandAll !== previousValue.autoExpandAll;\r\n                                    break;\r\n                                case \"masterDetail.template\":\r\n                                    initMasterDetail(this);\r\n                                    break;\r\n                                case \"masterDetail.enabled\":\r\n                                    isEnabledChanged = true;\r\n                                    break;\r\n                                case \"masterDetail.autoExpandAll\":\r\n                                    isAutoExpandAllChanged = true\r\n                            }\r\n                            if (isEnabledChanged || isAutoExpandAllChanged) {\r\n                                initMasterDetail(this)\r\n                            }\r\n                        }\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }(),\r\n            resizing: {\r\n                fireContentReadyAction: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._updateParentDataGrids(this.component.$element())\r\n                },\r\n                _updateParentDataGrids: function($element) {\r\n                    var $masterDetailRow = $element.closest(\".\" + MASTER_DETAIL_ROW_CLASS);\r\n                    if ($masterDetailRow.length) {\r\n                        when(this._updateMasterDataGrid($masterDetailRow, $element)).done(() => {\r\n                            this._updateParentDataGrids($masterDetailRow.parent())\r\n                        })\r\n                    }\r\n                },\r\n                _updateMasterDataGrid: function($masterDetailRow, $detailElement) {\r\n                    var masterRowOptions = $($masterDetailRow).data(\"options\");\r\n                    var masterDataGrid = $($masterDetailRow).closest(\".\" + this.getWidgetContainerClass()).parent().data(\"dxDataGrid\");\r\n                    if (masterRowOptions && masterDataGrid) {\r\n                        if (masterDataGrid.getView(\"rowsView\").isFixedColumns()) {\r\n                            return this._updateFixedMasterDetailGrids(masterDataGrid, masterRowOptions.rowIndex, $detailElement)\r\n                        } else {\r\n                            if (true === masterDataGrid.option(\"scrolling.useNative\")) {\r\n                                return masterDataGrid.updateDimensions()\r\n                            }\r\n                            var scrollable = masterDataGrid.getScrollable();\r\n                            return null === scrollable || void 0 === scrollable ? void 0 : scrollable.update()\r\n                        }\r\n                    }\r\n                },\r\n                _updateFixedMasterDetailGrids: function(masterDataGrid, masterRowIndex, $detailElement) {\r\n                    var $rows = $(masterDataGrid.getRowElement(masterRowIndex));\r\n                    var $tables = $(masterDataGrid.getView(\"rowsView\").getTableElements());\r\n                    var rowsNotEqual = 2 === (null === $rows || void 0 === $rows ? void 0 : $rows.length) && getHeight($rows.eq(0)) !== getHeight($rows.eq(1));\r\n                    var tablesNotEqual = 2 === (null === $tables || void 0 === $tables ? void 0 : $tables.length) && getHeight($tables.eq(0)) !== getHeight($tables.eq(1));\r\n                    if (rowsNotEqual || tablesNotEqual) {\r\n                        var detailElementWidth = getWidth($detailElement);\r\n                        return masterDataGrid.updateDimensions().done(() => {\r\n                            var isDetailHorizontalScrollCanBeShown = this.option(\"columnAutoWidth\") && true === masterDataGrid.option(\"scrolling.useNative\");\r\n                            var isDetailGridWidthChanged = isDetailHorizontalScrollCanBeShown && detailElementWidth !== getWidth($detailElement);\r\n                            if (isDetailHorizontalScrollCanBeShown && isDetailGridWidthChanged) {\r\n                                this.updateDimensions()\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _toggleBestFitMode: function(isBestFit) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"masterDetail.template\")) {\r\n                        var $rowsTable = this._rowsView.getTableElement();\r\n                        if ($rowsTable) {\r\n                            $rowsTable.find(\".dx-master-detail-cell\").css(\"maxWidth\", isBestFit ? 0 : \"\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    var editingController = that.getController(\"editing\");\r\n                    var isEditRow = editingController && editingController.isEditRow(options.rowIndex);\r\n                    var template;\r\n                    if (\"detail\" === column.command && !isEditRow) {\r\n                        template = that.option(\"masterDetail.template\") || {\r\n                            allowRenderToDetachedContainer: false,\r\n                            render: that._getDefaultTemplate(column)\r\n                        }\r\n                    } else {\r\n                        template = that.callBase.apply(that, arguments)\r\n                    }\r\n                    return template\r\n                },\r\n                _isDetailRow: function(row) {\r\n                    return row && row.rowType && 0 === row.rowType.indexOf(\"detail\")\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row && this._isDetailRow(row)) {\r\n                        this.option(\"showRowLines\") && $row.addClass(ROW_LINES_CLASS);\r\n                        $row.addClass(MASTER_DETAIL_ROW_CLASS);\r\n                        if (isDefined(row.visible)) {\r\n                            $row.toggle(row.visible)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    var row = options.row;\r\n                    var $detailCell;\r\n                    var visibleColumns = this._columnsController.getVisibleColumns();\r\n                    if (row.rowType && this._isDetailRow(row)) {\r\n                        if (this._needRenderCell(0, options.columnIndices)) {\r\n                            $detailCell = this._renderCell($row, {\r\n                                value: null,\r\n                                row: row,\r\n                                rowIndex: row.rowIndex,\r\n                                column: {\r\n                                    command: \"detail\"\r\n                                },\r\n                                columnIndex: 0\r\n                            });\r\n                            $detailCell.addClass(CELL_FOCUS_DISABLED_CLASS).addClass(MASTER_DETAIL_CELL_CLASS).attr(\"colSpan\", visibleColumns.length)\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.master_detail.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    masterDetailModule\r\n} from \"../grid_core/ui.grid_core.master_detail\";\r\ngridCore.registerModule(\"masterDetail\", masterDetailModule);\r\n","/**\r\n * DevExtreme (esm/ui/shared/ui.editor_factory_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nvar {\r\n    isWrapped: isWrapped\r\n} = variableWrapper;\r\nimport \"../text_box\";\r\nimport \"../number_box\";\r\nimport \"../check_box\";\r\nimport \"../select_box\";\r\nimport \"../date_box\";\r\nvar CHECKBOX_SIZE_CLASS = \"checkbox-size\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar EditorFactoryMixin = function() {\r\n    var getResultConfig = function(config, options) {\r\n        return extend(config, {\r\n            readOnly: options.readOnly,\r\n            placeholder: options.placeholder,\r\n            inputAttr: {\r\n                id: options.id\r\n            },\r\n            tabIndex: options.tabIndex\r\n        }, options.editorOptions)\r\n    };\r\n    var checkEnterBug = function() {\r\n        return browser.mozilla || devices.real().ios\r\n    };\r\n    var getTextEditorConfig = function(options) {\r\n        var data = {};\r\n        var isEnterBug = checkEnterBug();\r\n        var sharedData = options.sharedData || data;\r\n        return getResultConfig({\r\n            placeholder: options.placeholder,\r\n            width: options.width,\r\n            value: options.value,\r\n            onValueChanged: function(e) {\r\n                var needDelayedUpdate = \"filterRow\" === options.parentType || \"searchPanel\" === options.parentType;\r\n                var isInputOrKeyUpEvent = e.event && (\"input\" === e.event.type || \"keyup\" === e.event.type);\r\n                var updateValue = function(e, notFireEvent) {\r\n                    options && options.setValue(e.value, notFireEvent)\r\n                };\r\n                clearTimeout(data.valueChangeTimeout);\r\n                if (isInputOrKeyUpEvent && needDelayedUpdate) {\r\n                    sharedData.valueChangeTimeout = data.valueChangeTimeout = setTimeout((function() {\r\n                        updateValue(e, data.valueChangeTimeout !== sharedData.valueChangeTimeout)\r\n                    }), isDefined(options.updateValueTimeout) ? options.updateValueTimeout : 0)\r\n                } else {\r\n                    updateValue(e)\r\n                }\r\n            },\r\n            onKeyDown: function(e) {\r\n                if (isEnterBug && \"enter\" === normalizeKeyName(e.event)) {\r\n                    eventsEngine.trigger($(e.component._input()), \"change\")\r\n                }\r\n            },\r\n            valueChangeEvent: \"change\" + (\"filterRow\" === options.parentType ? \" keyup input\" : \"\")\r\n        }, options)\r\n    };\r\n    var prepareBooleanEditor = function(options) {\r\n        if (\"filterRow\" === options.parentType || \"filterBuilder\" === options.parentType) {\r\n            prepareSelectBox(extend(options, {\r\n                lookup: {\r\n                    displayExpr: function(data) {\r\n                        if (true === data) {\r\n                            return options.trueText || \"true\"\r\n                        } else if (false === data) {\r\n                            return options.falseText || \"false\"\r\n                        }\r\n                    },\r\n                    dataSource: [true, false]\r\n                }\r\n            }))\r\n        } else {\r\n            ! function(options) {\r\n                options.editorName = \"dxCheckBox\";\r\n                options.editorOptions = getResultConfig({\r\n                    elementAttr: {\r\n                        id: options.id\r\n                    },\r\n                    value: isDefined(options.value) ? options.value : void 0,\r\n                    hoverStateEnabled: !options.readOnly,\r\n                    focusStateEnabled: !options.readOnly,\r\n                    activeStateEnabled: false,\r\n                    onValueChanged: function(e) {\r\n                        options.setValue && options.setValue(e.value, e)\r\n                    }\r\n                }, options)\r\n            }(options)\r\n        }\r\n    };\r\n\r\n    function prepareSelectBox(options) {\r\n        var lookup = options.lookup;\r\n        var displayGetter;\r\n        var dataSource;\r\n        var postProcess;\r\n        var isFilterRow = \"filterRow\" === options.parentType;\r\n        if (lookup) {\r\n            displayGetter = compileGetter(lookup.displayExpr);\r\n            dataSource = lookup.dataSource;\r\n            if (isFunction(dataSource) && !isWrapped(dataSource)) {\r\n                dataSource = dataSource(options.row || {});\r\n                ! function(options) {\r\n                    if (options.row && options.row.watch && \"dataRow\" === options.parentType) {\r\n                        var editorOptions = options.editorOptions || {};\r\n                        options.editorOptions = editorOptions;\r\n                        var selectBox;\r\n                        var onInitialized = editorOptions.onInitialized;\r\n                        editorOptions.onInitialized = function(e) {\r\n                            onInitialized && onInitialized.apply(this, arguments);\r\n                            selectBox = e.component;\r\n                            selectBox.on(\"disposing\", stopWatch)\r\n                        };\r\n                        var dataSource;\r\n                        var stopWatch = options.row.watch(() => {\r\n                            dataSource = options.lookup.dataSource(options.row);\r\n                            return dataSource && dataSource.filter\r\n                        }, () => {\r\n                            selectBox.option(\"dataSource\", dataSource)\r\n                        }, row => {\r\n                            options.row = row\r\n                        })\r\n                    }\r\n                }(options)\r\n            }\r\n            if (isObject(dataSource) || Array.isArray(dataSource)) {\r\n                dataSource = normalizeDataSourceOptions(dataSource);\r\n                if (isFilterRow) {\r\n                    postProcess = dataSource.postProcess;\r\n                    dataSource.postProcess = function(items) {\r\n                        if (0 === this.pageIndex()) {\r\n                            items = items.slice(0);\r\n                            items.unshift(null)\r\n                        }\r\n                        if (postProcess) {\r\n                            return postProcess.call(this, items)\r\n                        }\r\n                        return items\r\n                    }\r\n                }\r\n            }\r\n            var allowClearing = Boolean(lookup.allowClearing && !isFilterRow);\r\n            options.editorName = \"dxSelectBox\";\r\n            options.editorOptions = getResultConfig({\r\n                searchEnabled: true,\r\n                value: options.value,\r\n                valueExpr: options.lookup.valueExpr,\r\n                searchExpr: options.lookup.searchExpr || options.lookup.displayExpr,\r\n                allowClearing: allowClearing,\r\n                showClearButton: allowClearing,\r\n                displayExpr: function(data) {\r\n                    if (null === data) {\r\n                        return options.showAllText\r\n                    }\r\n                    return displayGetter(data)\r\n                },\r\n                dataSource: dataSource,\r\n                onValueChanged: function(e) {\r\n                    var params = [e.value];\r\n                    !isFilterRow && params.push(e.component.option(\"text\"));\r\n                    options.setValue.apply(this, params)\r\n                }\r\n            }, options)\r\n        }\r\n    }\r\n    return {\r\n        createEditor: function($container, options) {\r\n            options.cancel = false;\r\n            options.editorElement = getPublicElement($container);\r\n            if (!isDefined(options.tabIndex)) {\r\n                options.tabIndex = this.option(\"tabIndex\")\r\n            }\r\n            if (options.lookup) {\r\n                prepareSelectBox(options)\r\n            } else {\r\n                switch (options.dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        ! function(options) {\r\n                            options.editorName = \"dxDateBox\";\r\n                            options.editorOptions = getResultConfig({\r\n                                value: options.value,\r\n                                onValueChanged: function(args) {\r\n                                    options.setValue(args.value)\r\n                                },\r\n                                onKeyDown: function(e) {\r\n                                    if (checkEnterBug() && \"enter\" === normalizeKeyName(e.event)) {\r\n                                        e.component.blur();\r\n                                        e.component.focus()\r\n                                    }\r\n                                },\r\n                                displayFormat: options.format,\r\n                                type: options.dataType,\r\n                                dateSerializationFormat: null,\r\n                                width: \"filterBuilder\" === options.parentType ? void 0 : \"auto\"\r\n                            }, options)\r\n                        }(options);\r\n                        break;\r\n                    case \"boolean\":\r\n                        prepareBooleanEditor(options);\r\n                        break;\r\n                    case \"number\":\r\n                        ! function(options) {\r\n                            var config = getTextEditorConfig(options);\r\n                            config.value = isDefined(options.value) ? options.value : null;\r\n                            options.editorName = \"dxNumberBox\";\r\n                            options.editorOptions = config\r\n                        }(options);\r\n                        break;\r\n                    default:\r\n                        ! function(options) {\r\n                            var config = getTextEditorConfig(options);\r\n                            var isSearching = \"searchPanel\" === options.parentType;\r\n                            if (options.editorType && \"dxTextBox\" !== options.editorType) {\r\n                                config.value = options.value\r\n                            } else {\r\n                                config.value = (value = options.value, isDefined(value) ? value.toString() : \"\")\r\n                            }\r\n                            var value;\r\n                            config.valueChangeEvent += isSearching ? \" keyup input search\" : \"\";\r\n                            config.mode = config.mode || (isSearching ? \"search\" : \"text\");\r\n                            options.editorName = \"dxTextBox\";\r\n                            options.editorOptions = config\r\n                        }(options)\r\n                }\r\n            }\r\n            if (\"dataRow\" === options.parentType && options.editorType) {\r\n                options.editorName = options.editorType\r\n            }\r\n            this.executeAction(\"onEditorPreparing\", options);\r\n            if (options.cancel) {\r\n                return\r\n            }\r\n            if (\"dataRow\" === options.parentType && !options.isOnForm && !isDefined(options.editorOptions.showValidationMark)) {\r\n                options.editorOptions.showValidationMark = false\r\n            }! function(that, options) {\r\n                var $editorElement = $(options.editorElement);\r\n                if (options.editorName && options.editorOptions && $editorElement[options.editorName]) {\r\n                    if (\"dxCheckBox\" === options.editorName || \"dxSwitch\" === options.editorName) {\r\n                        if (!options.isOnForm) {\r\n                            $editorElement.addClass(that.addWidgetPrefix(CHECKBOX_SIZE_CLASS));\r\n                            $editorElement.parent().addClass(EDITOR_INLINE_BLOCK)\r\n                        }\r\n                    }\r\n                    that._createComponent($editorElement, options.editorName, options.editorOptions);\r\n                    if (\"dxDateBox\" === options.editorName) {\r\n                        var dateBox = $editorElement.dxDateBox(\"instance\");\r\n                        var defaultEnterKeyHandler = dateBox._supportedKeys().enter;\r\n                        dateBox.registerKeyHandler(\"enter\", e => {\r\n                            if (dateBox.option(\"opened\")) {\r\n                                defaultEnterKeyHandler(e)\r\n                            }\r\n                            return true\r\n                        })\r\n                    }\r\n                    if (\"dxTextArea\" === options.editorName) {\r\n                        $editorElement.dxTextArea(\"instance\").registerKeyHandler(\"enter\", (function(event) {\r\n                            if (\"enter\" === normalizeKeyName(event) && !event.ctrlKey && !event.shiftKey) {\r\n                                event.stopPropagation()\r\n                            }\r\n                        }))\r\n                    }\r\n                }\r\n            }(this, options);\r\n            this.executeAction(\"onEditorPrepared\", options)\r\n        }\r\n    }\r\n}();\r\nexport default EditorFactoryMixin;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editor_factory.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setOuterWidth,\r\n    getOuterWidth,\r\n    setOuterHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    addNamespace,\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport EditorFactoryMixin from \"../shared/ui.editor_factory_mixin\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar FOCUSED_ELEMENT_CLASS = \"dx-focused\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar MODULE_NAMESPACE = \"dxDataGridEditorFactory\";\r\nvar UPDATE_FOCUS_EVENTS = addNamespace([pointerEvents.down, \"focusin\", clickEventName].join(\" \"), MODULE_NAMESPACE);\r\nvar DX_HIDDEN = \"dx-hidden\";\r\nvar EditorFactory = modules.ViewController.inherit({\r\n    _getFocusedElement: function($dataGridElement) {\r\n        var rowSelector = this.option(\"focusedRowEnabled\") ? \"tr[tabindex]:focus\" : \"tr[tabindex]:not(.dx-data-row):focus\";\r\n        var focusedElementSelector = \"td[tabindex]:focus, \".concat(rowSelector, \", input:focus, textarea:focus, .dx-lookup-field:focus, .dx-checkbox:focus, .dx-switch:focus, .dx-dropdownbutton .dx-buttongroup:focus\");\r\n        return $dataGridElement.find(focusedElementSelector)\r\n    },\r\n    _getFocusCellSelector: function() {\r\n        return \".dx-row > td\"\r\n    },\r\n    _updateFocusCore: function() {\r\n        var $focus = this._$focusedElement;\r\n        var $dataGridElement = this.component && this.component.$element();\r\n        var $focusCell;\r\n        var hideBorders;\r\n        if ($dataGridElement) {\r\n            $focus = this._getFocusedElement($dataGridElement);\r\n            if ($focus.length) {\r\n                if (!$focus.hasClass(CELL_FOCUS_DISABLED_CLASS) && !$focus.hasClass(ROW_CLASS)) {\r\n                    $focusCell = $focus.closest(this._getFocusCellSelector() + \", .\" + CELL_FOCUS_DISABLED_CLASS);\r\n                    hideBorders = $focusCell.get(0) !== $focus.get(0) && $focusCell.hasClass(EDITOR_INLINE_BLOCK);\r\n                    $focus = $focusCell\r\n                }\r\n                if ($focus.length && !$focus.hasClass(CELL_FOCUS_DISABLED_CLASS)) {\r\n                    this.focus($focus, hideBorders);\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        this.loseFocus()\r\n    },\r\n    _updateFocus: function(e) {\r\n        var that = this;\r\n        var isFocusOverlay = e && e.event && $(e.event.target).hasClass(that.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n        that._isFocusOverlay = that._isFocusOverlay || isFocusOverlay;\r\n        clearTimeout(that._updateFocusTimeoutID);\r\n        that._updateFocusTimeoutID = setTimeout((function() {\r\n            delete that._updateFocusTimeoutID;\r\n            if (!that._isFocusOverlay) {\r\n                that._updateFocusCore()\r\n            }\r\n            that._isFocusOverlay = false\r\n        }))\r\n    },\r\n    _updateFocusOverlaySize: function($element, position) {\r\n        $element.hide();\r\n        var location = positionUtils.calculate($element, extend({\r\n            collision: \"fit\"\r\n        }, position));\r\n        if (location.h.oversize > 0) {\r\n            setOuterWidth($element, getOuterWidth($element) - location.h.oversize)\r\n        }\r\n        if (location.v.oversize > 0) {\r\n            setOuterHeight($element, getOuterHeight($element) - location.v.oversize)\r\n        }\r\n        $element.show()\r\n    },\r\n    callbackNames: function() {\r\n        return [\"focused\"]\r\n    },\r\n    focus: function($element, hideBorder) {\r\n        var that = this;\r\n        if (void 0 === $element) {\r\n            return that._$focusedElement\r\n        } else if ($element) {\r\n            if (!$element.is(that._$focusedElement)) {\r\n                that._$focusedElement && that._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS)\r\n            }\r\n            that._$focusedElement = $element;\r\n            clearTimeout(that._focusTimeoutID);\r\n            that._focusTimeoutID = setTimeout((function() {\r\n                delete that._focusTimeoutID;\r\n                that.renderFocusOverlay($element, hideBorder);\r\n                $element.addClass(FOCUSED_ELEMENT_CLASS);\r\n                that.focused.fire($element)\r\n            }))\r\n        }\r\n    },\r\n    refocus: function() {\r\n        var $focus = this.focus();\r\n        this.focus($focus)\r\n    },\r\n    renderFocusOverlay: function($element, hideBorder) {\r\n        if (!gridCoreUtils.isElementInCurrentGrid(this, $element)) {\r\n            return\r\n        }\r\n        if (!this._$focusOverlay) {\r\n            this._$focusOverlay = $(\"<div>\").addClass(this.addWidgetPrefix(FOCUS_OVERLAY_CLASS))\r\n        }\r\n        if (hideBorder) {\r\n            this._$focusOverlay.addClass(DX_HIDDEN)\r\n        } else if ($element.length) {\r\n            var align = browser.mozilla ? \"right bottom\" : \"left top\";\r\n            var $content = $element.closest(\".\" + this.addWidgetPrefix(CONTENT_CLASS));\r\n            var elemCoord = getBoundingRect($element.get(0));\r\n            this._$focusOverlay.removeClass(DX_HIDDEN).appendTo($content);\r\n            setOuterHeight(this._$focusOverlay, elemCoord.bottom - elemCoord.top + 1);\r\n            setOuterWidth(this._$focusOverlay, elemCoord.right - elemCoord.left + 1);\r\n            var focusOverlayPosition = {\r\n                precise: true,\r\n                my: align,\r\n                at: align,\r\n                of: $element,\r\n                boundary: $content.length && $content\r\n            };\r\n            this._updateFocusOverlaySize(this._$focusOverlay, focusOverlayPosition);\r\n            positionUtils.setup(this._$focusOverlay, focusOverlayPosition);\r\n            this._$focusOverlay.css(\"visibility\", \"visible\")\r\n        }\r\n    },\r\n    resize: function() {\r\n        var $focusedElement = this._$focusedElement;\r\n        if ($focusedElement) {\r\n            this.focus($focusedElement)\r\n        }\r\n    },\r\n    loseFocus: function() {\r\n        this._$focusedElement && this._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS);\r\n        this._$focusedElement = null;\r\n        this._$focusOverlay && this._$focusOverlay.addClass(DX_HIDDEN)\r\n    },\r\n    init: function() {\r\n        this.createAction(\"onEditorPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this.createAction(\"onEditorPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this._updateFocusHandler = this._updateFocusHandler || this.createAction(this._updateFocus.bind(this));\r\n        eventsEngine.on(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler);\r\n        this._attachContainerEventHandlers()\r\n    },\r\n    _attachContainerEventHandlers: function() {\r\n        var that = this;\r\n        var $container = that.component && that.component.$element();\r\n        if ($container) {\r\n            eventsEngine.on($container, addNamespace(\"keydown\", MODULE_NAMESPACE), (function(e) {\r\n                if (\"tab\" === normalizeKeyName(e)) {\r\n                    that._updateFocusHandler(e)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._focusTimeoutID);\r\n        clearTimeout(this._updateFocusTimeoutID);\r\n        eventsEngine.off(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler)\r\n    }\r\n}).include(EditorFactoryMixin);\r\nexport var editorFactoryModule = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    controllers: {\r\n        editorFactory: EditorFactory\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editor_factory.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editorFactoryModule\r\n} from \"../grid_core/ui.grid_core.editor_factory\";\r\ngridCore.registerModule(\"editorFactory\", editorFactoryModule);\r\n","/**\r\n * DevExtreme (esm/ui/dialog.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    Component\r\n} from \"../core/component\";\r\nimport Action from \"../core/action\";\r\nimport devices from \"../core/devices\";\r\nimport config from \"../core/config\";\r\nimport {\r\n    resetActiveElement\r\n} from \"../core/utils/dom\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    isPlainObject\r\n} from \"../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    value as getViewport\r\n} from \"../core/utils/view_port\";\r\nimport messageLocalization from \"../localization/message\";\r\nimport errors from \"./widget/ui.errors\";\r\nimport Popup from \"./popup\";\r\nimport {\r\n    ensureDefined\r\n} from \"../core/utils/common\";\r\nvar window = getWindow();\r\nvar DEFAULT_BUTTON = {\r\n    text: \"OK\",\r\n    onClick: function() {\r\n        return true\r\n    }\r\n};\r\nvar DX_DIALOG_CLASSNAME = \"dx-dialog\";\r\nvar DX_DIALOG_WRAPPER_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-wrapper\");\r\nvar DX_DIALOG_ROOT_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-root\");\r\nvar DX_DIALOG_CONTENT_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-content\");\r\nvar DX_DIALOG_MESSAGE_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-message\");\r\nvar DX_DIALOG_BUTTONS_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-buttons\");\r\nvar DX_DIALOG_BUTTON_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-button\");\r\nvar DX_BUTTON_CLASSNAME = \"dx-button\";\r\nexport var FakeDialogComponent = Component.inherit({\r\n    ctor: function(element, options) {\r\n        this.callBase(options)\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                width: 276\r\n            }\r\n        }])\r\n    }\r\n});\r\nexport var custom = function(options) {\r\n    var _options$title;\r\n    var deferred = new Deferred;\r\n    var defaultOptions = (new FakeDialogComponent).option();\r\n    options = extend(defaultOptions, options);\r\n    var $element = $(\"<div>\").addClass(DX_DIALOG_CLASSNAME).appendTo(getViewport());\r\n    var isMessageDefined = \"message\" in options;\r\n    var isMessageHtmlDefined = \"messageHtml\" in options;\r\n    if (isMessageDefined) {\r\n        errors.log(\"W1013\")\r\n    }\r\n    var messageHtml = String(isMessageHtmlDefined ? options.messageHtml : options.message);\r\n    var $message = $(\"<div>\").addClass(DX_DIALOG_MESSAGE_CLASSNAME).html(messageHtml);\r\n    var popupToolbarItems = [];\r\n    each(options.buttons || [DEFAULT_BUTTON], (function() {\r\n        var action = new Action(this.onClick, {\r\n            context: popupInstance\r\n        });\r\n        popupToolbarItems.push({\r\n            toolbar: \"bottom\",\r\n            location: devices.current().android ? \"after\" : \"center\",\r\n            widget: \"dxButton\",\r\n            options: extend({}, this, {\r\n                onClick: function() {\r\n                    var result = action.execute(...arguments);\r\n                    hide(result)\r\n                }\r\n            })\r\n        })\r\n    }));\r\n    var popupInstance = new Popup($element, extend({\r\n        title: null !== (_options$title = options.title) && void 0 !== _options$title ? _options$title : \"\",\r\n        showTitle: ensureDefined(options.showTitle, true),\r\n        dragEnabled: ensureDefined(options.dragEnabled, true),\r\n        height: \"auto\",\r\n        width: options.width,\r\n        showCloseButton: options.showCloseButton || false,\r\n        ignoreChildEvents: false,\r\n        onContentReady: function(args) {\r\n            args.component.$content().addClass(DX_DIALOG_CONTENT_CLASSNAME).append($message)\r\n        },\r\n        onShowing: function(e) {\r\n            e.component.bottomToolbar().addClass(DX_DIALOG_BUTTONS_CLASSNAME).find(\".\".concat(DX_BUTTON_CLASSNAME)).addClass(DX_DIALOG_BUTTON_CLASSNAME);\r\n            resetActiveElement()\r\n        },\r\n        onShown: function(e) {\r\n            var $firstButton = e.component.bottomToolbar().find(\".\".concat(DX_BUTTON_CLASSNAME)).first();\r\n            eventsEngine.trigger($firstButton, \"focus\")\r\n        },\r\n        onHiding: function() {\r\n            deferred.reject()\r\n        },\r\n        toolbarItems: popupToolbarItems,\r\n        animation: {\r\n            show: {\r\n                type: \"pop\",\r\n                duration: 400\r\n            },\r\n            hide: {\r\n                type: \"pop\",\r\n                duration: 400,\r\n                to: {\r\n                    opacity: 0,\r\n                    scale: 0\r\n                },\r\n                from: {\r\n                    opacity: 1,\r\n                    scale: 1\r\n                }\r\n            }\r\n        },\r\n        rtlEnabled: config().rtlEnabled,\r\n        position: {\r\n            boundaryOffset: {\r\n                h: 10,\r\n                v: 0\r\n            }\r\n        }\r\n    }, options.popupOptions));\r\n    popupInstance.$wrapper().addClass(DX_DIALOG_WRAPPER_CLASSNAME);\r\n    if (options.position) {\r\n        popupInstance.option(\"position\", options.position)\r\n    }\r\n    popupInstance.$wrapper().addClass(DX_DIALOG_ROOT_CLASSNAME);\r\n\r\n    function hide(value) {\r\n        deferred.resolve(value);\r\n        popupInstance.hide().done((function() {\r\n            popupInstance.$element().remove()\r\n        }))\r\n    }\r\n    return {\r\n        show: function() {\r\n            if (\"android\" === devices.real().platform) {\r\n                var isPortrait = getHeight(window) > getWidth(window);\r\n                var width = isPortrait ? \"80%\" : \"60%\";\r\n                popupInstance.option({\r\n                    width: width\r\n                })\r\n            }\r\n            popupInstance.show();\r\n            return deferred.promise()\r\n        },\r\n        hide: hide\r\n    }\r\n};\r\nexport var alert = function(messageHtml) {\r\n    var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"\";\r\n    var showTitle = arguments.length > 2 ? arguments[2] : void 0;\r\n    var options = isPlainObject(messageHtml) ? messageHtml : {\r\n        title: title,\r\n        messageHtml: messageHtml,\r\n        showTitle: showTitle,\r\n        dragEnabled: showTitle\r\n    };\r\n    return custom(options).show()\r\n};\r\nexport var confirm = function(messageHtml) {\r\n    var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"\";\r\n    var showTitle = arguments.length > 2 ? arguments[2] : void 0;\r\n    var options = isPlainObject(messageHtml) ? messageHtml : {\r\n        title: title,\r\n        messageHtml: messageHtml,\r\n        showTitle: showTitle,\r\n        buttons: [{\r\n            text: messageLocalization.format(\"Yes\"),\r\n            onClick: function() {\r\n                return true\r\n            }\r\n        }, {\r\n            text: messageLocalization.format(\"No\"),\r\n            onClick: function() {\r\n                return false\r\n            }\r\n        }],\r\n        dragEnabled: showTitle\r\n    };\r\n    return custom(options).show()\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_constants.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nexport var ROW_CLASS = \"dx-row\";\r\nexport var CELL_MODIFIED_CLASS = \"dx-cell-modified\";\r\nexport var ROW_SELECTED_CLASS = \"dx-selection\";\r\nexport var EDIT_FORM_CLASS = \"edit-form\";\r\nexport var DATA_EDIT_DATA_INSERT_TYPE = \"insert\";\r\nexport var DATA_EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nexport var EDITING_POPUP_OPTION_NAME = \"editing.popup\";\r\nexport var EDITING_FORM_OPTION_NAME = \"editing.form\";\r\nexport var EDITING_EDITROWKEY_OPTION_NAME = \"editing.editRowKey\";\r\nexport var EDITING_EDITCOLUMNNAME_OPTION_NAME = \"editing.editColumnName\";\r\nexport var TARGET_COMPONENT_NAME = \"targetComponent\";\r\nexport var EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nexport var FOCUSABLE_ELEMENT_SELECTOR = \"[tabindex], \" + EDITORS_INPUT_SELECTOR;\r\nexport var EDIT_MODE_BATCH = \"batch\";\r\nexport var EDIT_MODE_ROW = \"row\";\r\nexport var EDIT_MODE_CELL = \"cell\";\r\nexport var EDIT_MODE_FORM = \"form\";\r\nexport var EDIT_MODE_POPUP = \"popup\";\r\nexport var FIRST_NEW_ROW_POSITION = \"first\";\r\nexport var LAST_NEW_ROW_POSITION = \"last\";\r\nexport var PAGE_BOTTOM_NEW_ROW_POSITION = \"pageBottom\";\r\nexport var PAGE_TOP_NEW_ROW_POSITION = \"pageTop\";\r\nexport var VIEWPORT_BOTTOM_NEW_ROW_POSITION = \"viewportBottom\";\r\nexport var VIEWPORT_TOP_NEW_ROW_POSITION = \"viewportTop\";\r\nexport var EDIT_MODES = [EDIT_MODE_BATCH, EDIT_MODE_ROW, EDIT_MODE_CELL, EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nexport var ROW_BASED_MODES = [EDIT_MODE_ROW, EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nexport var MODES_WITH_DELAYED_FOCUS = [EDIT_MODE_ROW, EDIT_MODE_FORM];\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    resetActiveElement\r\n} from \"../../core/utils/dom\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    confirm\r\n} from \"../dialog\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    when,\r\n    Deferred,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    equalByValue,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport * as iconUtils from \"../../core/utils/icon\";\r\nimport {\r\n    EDITOR_CELL_CLASS,\r\n    ROW_CLASS,\r\n    EDIT_FORM_CLASS,\r\n    DATA_EDIT_DATA_INSERT_TYPE,\r\n    DATA_EDIT_DATA_REMOVE_TYPE,\r\n    EDITING_POPUP_OPTION_NAME,\r\n    EDITING_EDITROWKEY_OPTION_NAME,\r\n    EDITING_EDITCOLUMNNAME_OPTION_NAME,\r\n    TARGET_COMPONENT_NAME,\r\n    EDITORS_INPUT_SELECTOR,\r\n    FOCUSABLE_ELEMENT_SELECTOR,\r\n    EDIT_MODE_ROW,\r\n    EDIT_MODES,\r\n    ROW_BASED_MODES,\r\n    FIRST_NEW_ROW_POSITION,\r\n    LAST_NEW_ROW_POSITION,\r\n    PAGE_BOTTOM_NEW_ROW_POSITION,\r\n    PAGE_TOP_NEW_ROW_POSITION,\r\n    VIEWPORT_BOTTOM_NEW_ROW_POSITION,\r\n    VIEWPORT_TOP_NEW_ROW_POSITION\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar READONLY_CLASS = \"readonly\";\r\nvar LINK_CLASS = \"dx-link\";\r\nvar ROW_SELECTED = \"dx-selection\";\r\nvar EDIT_BUTTON_CLASS = \"dx-edit-button\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_EDIT_WITH_ICONS_CLASS = COMMAND_EDIT_CLASS + \"-with-icons\";\r\nvar INSERT_INDEX = \"__DX_INSERT_INDEX__\";\r\nvar ROW_INSERTED = \"dx-row-inserted\";\r\nvar ROW_MODIFIED = \"dx-row-modified\";\r\nvar CELL_MODIFIED = \"dx-cell-modified\";\r\nvar EDITING_NAMESPACE = \"dxDataGridEditing\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATA_EDIT_DATA_UPDATE_TYPE = \"update\";\r\nvar DEFAULT_START_EDIT_ACTION = \"click\";\r\nvar EDIT_LINK_CLASS = {\r\n    save: \"dx-link-save\",\r\n    cancel: \"dx-link-cancel\",\r\n    edit: \"dx-link-edit\",\r\n    undelete: \"dx-link-undelete\",\r\n    delete: \"dx-link-delete\",\r\n    add: \"dx-link-add\"\r\n};\r\nvar EDIT_ICON_CLASS = {\r\n    save: \"save\",\r\n    cancel: \"revert\",\r\n    edit: \"edit\",\r\n    undelete: \"revert\",\r\n    delete: \"trash\",\r\n    add: \"add\"\r\n};\r\nvar METHOD_NAMES = {\r\n    edit: \"editRow\",\r\n    delete: \"deleteRow\",\r\n    undelete: \"undeleteRow\",\r\n    save: \"saveEditData\",\r\n    cancel: \"cancelEditData\",\r\n    add: \"addRowByRowIndex\"\r\n};\r\nvar ACTION_OPTION_NAMES = {\r\n    add: \"allowAdding\",\r\n    edit: \"allowUpdating\",\r\n    delete: \"allowDeleting\"\r\n};\r\nvar BUTTON_NAMES = [\"edit\", \"save\", \"cancel\", \"delete\", \"undelete\"];\r\nvar EDITING_CHANGES_OPTION_NAME = \"editing.changes\";\r\nvar createFailureHandler = function(deferred) {\r\n    return function(arg) {\r\n        var error = arg instanceof Error ? arg : new Error(arg && String(arg) || \"Unknown error\");\r\n        deferred.reject(error)\r\n    }\r\n};\r\nvar isEditingCell = function(isEditRow, cellOptions) {\r\n    return cellOptions.isEditing || isEditRow && cellOptions.column.allowEditing\r\n};\r\nvar isEditingOrShowEditorAlwaysDataCell = function(isEditRow, cellOptions) {\r\n    var isCommandCell = !!cellOptions.column.command;\r\n    var isEditing = isEditingCell(isEditRow, cellOptions);\r\n    var isEditorCell = !isCommandCell && (isEditing || cellOptions.column.showEditorAlways);\r\n    return \"data\" === cellOptions.rowType && isEditorCell\r\n};\r\nvar EditingController = modules.ViewController.inherit(function() {\r\n    var getButtonIndex = (buttons, name) => {\r\n        var result = -1;\r\n        buttons.some((button, index) => {\r\n            if (getButtonName(button) === name) {\r\n                result = index;\r\n                return true\r\n            }\r\n        });\r\n        return result\r\n    };\r\n\r\n    function getButtonName(button) {\r\n        return isObject(button) ? button.name : button\r\n    }\r\n    return {\r\n        init: function() {\r\n            this._columnsController = this.getController(\"columns\");\r\n            this._dataController = this.getController(\"data\");\r\n            this._rowsView = this.getView(\"rowsView\");\r\n            this._lastOperation = null;\r\n            if (this._deferreds) {\r\n                this._deferreds.forEach(d => d.reject(\"cancel\"))\r\n            }\r\n            this._deferreds = [];\r\n            if (!this._dataChangedHandler) {\r\n                this._dataChangedHandler = this._handleDataChanged.bind(this);\r\n                this._dataController.changed.add(this._dataChangedHandler)\r\n            }\r\n            if (!this._saveEditorHandler) {\r\n                this.createAction(\"onInitNewRow\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowInserting\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowInserted\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditingStart\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowUpdating\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowUpdated\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowRemoving\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowRemoved\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onSaved\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onSaving\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditCanceling\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditCanceled\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                })\r\n            }\r\n            this._updateEditColumn();\r\n            this._updateEditButtons();\r\n            if (!this._internalState) {\r\n                this._internalState = []\r\n            }\r\n            this.component._optionsByReference[EDITING_EDITROWKEY_OPTION_NAME] = true;\r\n            this.component._optionsByReference[EDITING_CHANGES_OPTION_NAME] = true\r\n        },\r\n        getEditMode: function() {\r\n            var editMode = this.option(\"editing.mode\");\r\n            if (-1 !== EDIT_MODES.indexOf(editMode)) {\r\n                return editMode\r\n            }\r\n            return EDIT_MODE_ROW\r\n        },\r\n        _getDefaultEditorTemplate: function() {\r\n            return (container, options) => {\r\n                var $editor = $(\"<div>\").appendTo(container);\r\n                this.getController(\"editorFactory\").createEditor($editor, extend({}, options.column, {\r\n                    value: options.value,\r\n                    setValue: options.setValue,\r\n                    row: options.row,\r\n                    parentType: \"dataRow\",\r\n                    width: null,\r\n                    readOnly: !options.setValue,\r\n                    isOnForm: options.isOnForm,\r\n                    id: options.id\r\n                }))\r\n            }\r\n        },\r\n        _getNewRowPosition: function() {\r\n            var newRowPosition = this.option(\"editing.newRowPosition\");\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            if (\"virtual\" === scrollingMode) {\r\n                switch (newRowPosition) {\r\n                    case PAGE_TOP_NEW_ROW_POSITION:\r\n                        return VIEWPORT_TOP_NEW_ROW_POSITION;\r\n                    case PAGE_BOTTOM_NEW_ROW_POSITION:\r\n                        return VIEWPORT_BOTTOM_NEW_ROW_POSITION;\r\n                    default:\r\n                        return newRowPosition\r\n                }\r\n            }\r\n            return newRowPosition\r\n        },\r\n        getChanges: function() {\r\n            return this.option(EDITING_CHANGES_OPTION_NAME)\r\n        },\r\n        getInsertRowCount: function() {\r\n            var changes = this.option(EDITING_CHANGES_OPTION_NAME);\r\n            return changes.filter(change => \"insert\" === change.type).length\r\n        },\r\n        resetChanges: function() {\r\n            var changes = this.getChanges();\r\n            var needReset = null === changes || void 0 === changes ? void 0 : changes.length;\r\n            if (needReset) {\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, [])\r\n            }\r\n        },\r\n        _getInternalData: function(key) {\r\n            return this._internalState.filter(item => equalByValue(item.key, key))[0]\r\n        },\r\n        _addInternalData: function(params) {\r\n            var internalData = this._getInternalData(params.key);\r\n            if (internalData) {\r\n                return extend(internalData, params)\r\n            }\r\n            this._internalState.push(params);\r\n            return params\r\n        },\r\n        _getOldData: function(key) {\r\n            var _this$_getInternalDat;\r\n            return null === (_this$_getInternalDat = this._getInternalData(key)) || void 0 === _this$_getInternalDat ? void 0 : _this$_getInternalDat.oldData\r\n        },\r\n        getUpdatedData: function(data) {\r\n            var key = this._dataController.keyOf(data);\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            if (changes[editIndex]) {\r\n                return createObjectWithChanges(data, changes[editIndex].data)\r\n            }\r\n            return data\r\n        },\r\n        getInsertedData: function() {\r\n            return this.getChanges().filter(change => change.data && change.type === DATA_EDIT_DATA_INSERT_TYPE).map(change => change.data)\r\n        },\r\n        getRemovedData: function() {\r\n            return this.getChanges().filter(change => this._getOldData(change.key) && change.type === DATA_EDIT_DATA_REMOVE_TYPE).map(change => this._getOldData(change.key))\r\n        },\r\n        _fireDataErrorOccurred: function(arg) {\r\n            if (\"cancel\" === arg) {\r\n                return\r\n            }\r\n            var $popupContent = this.getPopupContent();\r\n            this._dataController.dataErrorOccurred.fire(arg, $popupContent)\r\n        },\r\n        _needToCloseEditableCell: noop,\r\n        _closeEditItem: noop,\r\n        _handleDataChanged: noop,\r\n        _isDefaultButtonVisible: function(button, options) {\r\n            var result = true;\r\n            switch (button.name) {\r\n                case \"delete\":\r\n                    result = this.allowDeleting(options);\r\n                    break;\r\n                case \"undelete\":\r\n                    result = false\r\n            }\r\n            return result\r\n        },\r\n        _isButtonVisible: function(button, options) {\r\n            var visible = button.visible;\r\n            if (!isDefined(visible)) {\r\n                return this._isDefaultButtonVisible(button, options)\r\n            }\r\n            return isFunction(visible) ? visible.call(button, {\r\n                component: options.component,\r\n                row: options.row,\r\n                column: options.column\r\n            }) : visible\r\n        },\r\n        _isButtonDisabled: function(button, options) {\r\n            var disabled = button.disabled;\r\n            return isFunction(disabled) ? disabled.call(button, {\r\n                component: options.component,\r\n                row: options.row,\r\n                column: options.column\r\n            }) : !!disabled\r\n        },\r\n        _getButtonConfig: function(button, options) {\r\n            var config = isObject(button) ? button : {};\r\n            var buttonName = getButtonName(button);\r\n            var editingTexts = (options => {\r\n                var editingTexts = options.component.option(\"editing.texts\") || {};\r\n                return {\r\n                    save: editingTexts.saveRowChanges,\r\n                    cancel: editingTexts.cancelRowChanges,\r\n                    edit: editingTexts.editRow,\r\n                    undelete: editingTexts.undeleteRow,\r\n                    delete: editingTexts.deleteRow,\r\n                    add: editingTexts.addRowToNode\r\n                }\r\n            })(options);\r\n            var methodName = METHOD_NAMES[buttonName];\r\n            var editingOptions = this.option(\"editing\");\r\n            var actionName = ACTION_OPTION_NAMES[buttonName];\r\n            var allowAction = actionName ? editingOptions[actionName] : true;\r\n            return extend({\r\n                name: buttonName,\r\n                text: editingTexts[buttonName],\r\n                cssClass: EDIT_LINK_CLASS[buttonName]\r\n            }, {\r\n                onClick: methodName && (e => {\r\n                    var event = e.event;\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    setTimeout(() => {\r\n                        options.row && allowAction && this[methodName] && this[methodName](options.row.rowIndex)\r\n                    })\r\n                })\r\n            }, config)\r\n        },\r\n        _getEditingButtons: function(options) {\r\n            var buttonIndex;\r\n            var haveCustomButtons = !!options.column.buttons;\r\n            var buttons = (options.column.buttons || []).slice();\r\n            if (haveCustomButtons) {\r\n                buttonIndex = getButtonIndex(buttons, \"edit\");\r\n                if (buttonIndex >= 0) {\r\n                    if (getButtonIndex(buttons, \"save\") < 0) {\r\n                        buttons.splice(buttonIndex + 1, 0, \"save\")\r\n                    }\r\n                    if (getButtonIndex(buttons, \"cancel\") < 0) {\r\n                        buttons.splice(getButtonIndex(buttons, \"save\") + 1, 0, \"cancel\")\r\n                    }\r\n                }\r\n                buttonIndex = getButtonIndex(buttons, \"delete\");\r\n                if (buttonIndex >= 0 && getButtonIndex(buttons, \"undelete\") < 0) {\r\n                    buttons.splice(buttonIndex + 1, 0, \"undelete\")\r\n                }\r\n            } else {\r\n                buttons = BUTTON_NAMES.slice()\r\n            }\r\n            return buttons.map(button => this._getButtonConfig(button, options))\r\n        },\r\n        _renderEditingButtons: function($container, buttons, options, change) {\r\n            buttons.forEach(button => {\r\n                if (this._isButtonVisible(button, options)) {\r\n                    this._createButton($container, button, options, change)\r\n                }\r\n            })\r\n        },\r\n        _getEditCommandCellTemplate: function() {\r\n            return (container, options, change) => {\r\n                var $container = $(container);\r\n                if (\"data\" === options.rowType) {\r\n                    var buttons = this._getEditingButtons(options);\r\n                    this._renderEditingButtons($container, buttons, options, change);\r\n                    options.watch && options.watch(() => buttons.map(button => this._isButtonVisible(button, options)), () => {\r\n                        $container.empty();\r\n                        this._renderEditingButtons($container, buttons, options)\r\n                    })\r\n                } else {\r\n                    gridCoreUtils.setEmptyText($container)\r\n                }\r\n            }\r\n        },\r\n        isRowBasedEditMode: function() {\r\n            var editMode = this.getEditMode();\r\n            return -1 !== ROW_BASED_MODES.indexOf(editMode)\r\n        },\r\n        getFirstEditableColumnIndex: function() {\r\n            var columnsController = this.getController(\"columns\");\r\n            var columnIndex;\r\n            var visibleColumns = columnsController.getVisibleColumns();\r\n            each(visibleColumns, (function(index, column) {\r\n                if (column.allowEditing) {\r\n                    columnIndex = index;\r\n                    return false\r\n                }\r\n            }));\r\n            return columnIndex\r\n        },\r\n        getFirstEditableCellInRow: function(rowIndex) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            return rowsView && rowsView._getCellElement(rowIndex ? rowIndex : 0, this.getFirstEditableColumnIndex())\r\n        },\r\n        getFocusedCellInRow: function(rowIndex) {\r\n            return this.getFirstEditableCellInRow(rowIndex)\r\n        },\r\n        getIndexByKey: function(key, items) {\r\n            return gridCoreUtils.getIndexByKey(key, items)\r\n        },\r\n        hasChanges: function(rowIndex) {\r\n            var changes = this.getChanges();\r\n            var result = false;\r\n            for (var i = 0; i < (null === changes || void 0 === changes ? void 0 : changes.length); i++) {\r\n                if (changes[i].type && (!isDefined(rowIndex) || this._dataController.getRowIndexByKey(changes[i].key) === rowIndex)) {\r\n                    result = true;\r\n                    break\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        dispose: function() {\r\n            this.callBase();\r\n            clearTimeout(this._inputFocusTimeoutID);\r\n            eventsEngine.off(domAdapter.getDocument(), pointerEvents.up, this._pointerUpEditorHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), pointerEvents.down, this._pointerDownEditorHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), clickEventName, this._saveEditorHandler)\r\n        },\r\n        optionChanged: function(args) {\r\n            if (\"editing\" === args.name) {\r\n                var fullName = args.fullName;\r\n                if (fullName === EDITING_EDITROWKEY_OPTION_NAME) {\r\n                    this._handleEditRowKeyChange(args)\r\n                } else if (fullName === EDITING_CHANGES_OPTION_NAME) {\r\n                    this._handleChangesChange(args)\r\n                } else if (!args.handled) {\r\n                    this._columnsController.reinit();\r\n                    this.init();\r\n                    this.resetChanges();\r\n                    this._resetEditColumnName();\r\n                    this._resetEditRowKey()\r\n                }\r\n                args.handled = true\r\n            } else {\r\n                this.callBase(args)\r\n            }\r\n        },\r\n        _handleEditRowKeyChange: function(args) {\r\n            var rowIndex = this._dataController.getRowIndexByKey(args.value);\r\n            var oldRowIndexCorrection = this._getEditRowIndexCorrection();\r\n            var oldRowIndex = this._dataController.getRowIndexByKey(args.previousValue) + oldRowIndexCorrection;\r\n            if (isDefined(args.value)) {\r\n                if (args.value !== args.previousValue) {\r\n                    this._editRowFromOptionChanged(rowIndex, oldRowIndex)\r\n                }\r\n            } else {\r\n                this.cancelEditData()\r\n            }\r\n        },\r\n        _handleChangesChange: function(args) {\r\n            var dataController = this._dataController;\r\n            if (!args.value.length && !args.previousValue.length) {\r\n                return\r\n            }\r\n            this._processInsertChanges(args.value);\r\n            dataController.updateItems({\r\n                repaintChangesOnly: true\r\n            })\r\n        },\r\n        _processInsertChanges: function(changes) {\r\n            changes.forEach(change => {\r\n                if (\"insert\" === change.type) {\r\n                    this._addInsertInfo(change)\r\n                }\r\n            })\r\n        },\r\n        publicMethods: function() {\r\n            return [\"addRow\", \"deleteRow\", \"undeleteRow\", \"editRow\", \"saveEditData\", \"cancelEditData\", \"hasEditData\"]\r\n        },\r\n        refresh: function(isPageChanged) {\r\n            if (!isDefined(this._pageIndex)) {\r\n                return\r\n            }\r\n            this._refreshCore(isPageChanged)\r\n        },\r\n        _refreshCore: noop,\r\n        isEditing: function() {\r\n            var isEditRowKeyDefined = isDefined(this.option(EDITING_EDITROWKEY_OPTION_NAME));\r\n            return isEditRowKeyDefined\r\n        },\r\n        isEditRow: function() {\r\n            return false\r\n        },\r\n        _setEditRowKey: function(value, silent) {\r\n            if (silent) {\r\n                this._silentOption(EDITING_EDITROWKEY_OPTION_NAME, value)\r\n            } else {\r\n                this.option(EDITING_EDITROWKEY_OPTION_NAME, value)\r\n            }\r\n        },\r\n        _setEditRowKeyByIndex: function(rowIndex, silent) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            if (void 0 === key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            this._setEditRowKey(key, silent)\r\n        },\r\n        getEditRowIndex: function() {\r\n            return this._getVisibleEditRowIndex()\r\n        },\r\n        getEditFormRowIndex: function() {\r\n            return -1\r\n        },\r\n        _isEditRowByIndex(rowIndex) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var isKeyEqual = isDefined(key) && equalByValue(this.option(EDITING_EDITROWKEY_OPTION_NAME), key);\r\n            if (isKeyEqual) {\r\n                return this._getVisibleEditRowIndex() === rowIndex\r\n            }\r\n            return isKeyEqual\r\n        },\r\n        isEditCell: function(visibleRowIndex, columnIndex) {\r\n            return this._isEditRowByIndex(visibleRowIndex) && this._getVisibleEditColumnIndex() === columnIndex\r\n        },\r\n        getPopupContent: noop,\r\n        _isProcessedItem: function(item) {\r\n            return false\r\n        },\r\n        _getInsertRowIndex: function(items, change, isProcessedItems) {\r\n            var result = -1;\r\n            var dataController = this._dataController;\r\n            var key = this._getInsertAfterOrBeforeKey(change);\r\n            if (!isDefined(key) && 0 === items.length) {\r\n                result = 0\r\n            } else if (isDefined(key)) {\r\n                items.some((item, index) => {\r\n                    var isProcessedItem = isProcessedItems || this._isProcessedItem(item);\r\n                    if (isObject(item)) {\r\n                        if (isProcessedItem || isDefined(item[INSERT_INDEX])) {\r\n                            if (equalByValue(item.key, key)) {\r\n                                result = index\r\n                            }\r\n                        } else if (equalByValue(dataController.keyOf(item), key)) {\r\n                            result = index\r\n                        }\r\n                    }\r\n                    if (result >= 0) {\r\n                        var nextItem = items[result + 1];\r\n                        if (nextItem && (\"detail\" === nextItem.rowType || \"detailAdaptive\" === nextItem.rowType) && isDefined(change.insertAfterKey)) {\r\n                            return\r\n                        }\r\n                        if (isDefined(change.insertAfterKey)) {\r\n                            result += 1\r\n                        }\r\n                        return true\r\n                    }\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _generateNewItem: function(key) {\r\n            var _this$_getInternalDat2;\r\n            var item = {\r\n                key: key\r\n            };\r\n            var insertInfo = null === (_this$_getInternalDat2 = this._getInternalData(key)) || void 0 === _this$_getInternalDat2 ? void 0 : _this$_getInternalDat2.insertInfo;\r\n            if (null !== insertInfo && void 0 !== insertInfo && insertInfo[INSERT_INDEX]) {\r\n                item[INSERT_INDEX] = insertInfo[INSERT_INDEX]\r\n            }\r\n            return item\r\n        },\r\n        _getLoadedRowIndex: function(items, change, isProcessedItems) {\r\n            var loadedRowIndex = this._getInsertRowIndex(items, change, isProcessedItems);\r\n            var dataController = this._dataController;\r\n            if (loadedRowIndex < 0) {\r\n                var newRowPosition = this._getNewRowPosition();\r\n                var pageIndex = dataController.pageIndex();\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                if (newRowPosition !== LAST_NEW_ROW_POSITION && 0 === pageIndex && !isDefined(insertAfterOrBeforeKey)) {\r\n                    loadedRowIndex = 0\r\n                } else if (newRowPosition === LAST_NEW_ROW_POSITION && dataController.isLastPageLoaded()) {\r\n                    loadedRowIndex = items.length\r\n                }\r\n            }\r\n            return loadedRowIndex\r\n        },\r\n        processItems: function(items, e) {\r\n            var changeType = e.changeType;\r\n            this.update(changeType);\r\n            var changes = this.getChanges();\r\n            changes.forEach(change => {\r\n                var _this$_getInternalDat3;\r\n                var isInsert = change.type === DATA_EDIT_DATA_INSERT_TYPE;\r\n                if (!isInsert) {\r\n                    return\r\n                }\r\n                var key = change.key;\r\n                var insertInfo = null === (_this$_getInternalDat3 = this._getInternalData(key)) || void 0 === _this$_getInternalDat3 ? void 0 : _this$_getInternalDat3.insertInfo;\r\n                if (!isDefined(key) || !isDefined(insertInfo)) {\r\n                    insertInfo = this._addInsertInfo(change);\r\n                    key = insertInfo.key\r\n                }\r\n                var loadedRowIndex = this._getLoadedRowIndex(items, change);\r\n                var item = this._generateNewItem(key);\r\n                if (loadedRowIndex >= 0) {\r\n                    items.splice(loadedRowIndex, 0, item)\r\n                }\r\n            });\r\n            return items\r\n        },\r\n        processDataItem: function(item, options, generateDataValues) {\r\n            var columns = options.visibleColumns;\r\n            var key = item.data[INSERT_INDEX] ? item.data.key : item.key;\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            item.isEditing = false;\r\n            if (editIndex >= 0) {\r\n                this._processDataItemCore(item, changes[editIndex], key, columns, generateDataValues)\r\n            }\r\n        },\r\n        _processDataItemCore: function(item, change, key, columns, generateDataValues) {\r\n            var {\r\n                data: data,\r\n                type: type\r\n            } = change;\r\n            switch (type) {\r\n                case DATA_EDIT_DATA_INSERT_TYPE:\r\n                    item.isNewRow = true;\r\n                    item.key = key;\r\n                    item.data = data;\r\n                    break;\r\n                case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                    item.modified = true;\r\n                    item.oldData = item.data;\r\n                    item.data = createObjectWithChanges(item.data, data);\r\n                    item.modifiedValues = generateDataValues(data, columns, true);\r\n                    break;\r\n                case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                    item.removed = true\r\n            }\r\n        },\r\n        _initNewRow: function(options) {\r\n            this.executeAction(\"onInitNewRow\", options);\r\n            if (options.promise) {\r\n                var deferred = new Deferred;\r\n                when(fromPromise(options.promise)).done(deferred.resolve).fail(createFailureHandler(deferred)).fail(arg => this._fireDataErrorOccurred(arg));\r\n                return deferred\r\n            }\r\n        },\r\n        _createInsertInfo: function() {\r\n            var insertInfo = {};\r\n            insertInfo[INSERT_INDEX] = this._getInsertIndex();\r\n            return insertInfo\r\n        },\r\n        _addInsertInfo: function(change, parentKey) {\r\n            var _this$_getInternalDat4;\r\n            var insertInfo;\r\n            var {\r\n                key: key\r\n            } = change;\r\n            if (!isDefined(key)) {\r\n                key = String(new Guid);\r\n                change.key = key\r\n            }\r\n            insertInfo = null === (_this$_getInternalDat4 = this._getInternalData(key)) || void 0 === _this$_getInternalDat4 ? void 0 : _this$_getInternalDat4.insertInfo;\r\n            if (!isDefined(insertInfo)) {\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                insertInfo = this._createInsertInfo();\r\n                if (!isDefined(insertAfterOrBeforeKey)) {\r\n                    this._setInsertAfterOrBeforeKey(change, parentKey)\r\n                }\r\n            }\r\n            this._addInternalData({\r\n                insertInfo: insertInfo,\r\n                key: key\r\n            });\r\n            return {\r\n                insertInfo: insertInfo,\r\n                key: key\r\n            }\r\n        },\r\n        _setInsertAfterOrBeforeKey: function(change, parentKey) {\r\n            var dataController = this._dataController;\r\n            var allItems = dataController.items(true);\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var newRowPosition = this._getNewRowPosition();\r\n            switch (newRowPosition) {\r\n                case FIRST_NEW_ROW_POSITION:\r\n                case LAST_NEW_ROW_POSITION:\r\n                    break;\r\n                case PAGE_TOP_NEW_ROW_POSITION:\r\n                case PAGE_BOTTOM_NEW_ROW_POSITION:\r\n                    if (allItems.length) {\r\n                        var itemIndex = newRowPosition === PAGE_TOP_NEW_ROW_POSITION ? 0 : allItems.length - 1;\r\n                        change[0 === itemIndex ? \"insertBeforeKey\" : \"insertAfterKey\"] = allItems[itemIndex].key\r\n                    }\r\n                    break;\r\n                default:\r\n                    var isViewportBottom = newRowPosition === VIEWPORT_BOTTOM_NEW_ROW_POSITION;\r\n                    var visibleItemIndex = isViewportBottom ? null === rowsView || void 0 === rowsView ? void 0 : rowsView.getBottomVisibleItemIndex() : null === rowsView || void 0 === rowsView ? void 0 : rowsView.getTopVisibleItemIndex();\r\n                    var row = dataController.getVisibleRows()[visibleItemIndex];\r\n                    if (row && (!row.isEditing && \"detail\" === row.rowType || \"detailAdaptive\" === row.rowType)) {\r\n                        visibleItemIndex++\r\n                    }\r\n                    var insertKey = dataController.getKeyByRowIndex(visibleItemIndex);\r\n                    if (isDefined(insertKey)) {\r\n                        change.insertBeforeKey = insertKey\r\n                    }\r\n            }\r\n        },\r\n        _getInsertIndex: function() {\r\n            var maxInsertIndex = 0;\r\n            this.getChanges().forEach(editItem => {\r\n                var _this$_getInternalDat5;\r\n                var insertInfo = null === (_this$_getInternalDat5 = this._getInternalData(editItem.key)) || void 0 === _this$_getInternalDat5 ? void 0 : _this$_getInternalDat5.insertInfo;\r\n                if (isDefined(insertInfo) && editItem.type === DATA_EDIT_DATA_INSERT_TYPE && insertInfo[INSERT_INDEX] > maxInsertIndex) {\r\n                    maxInsertIndex = insertInfo[INSERT_INDEX]\r\n                }\r\n            });\r\n            return maxInsertIndex + 1\r\n        },\r\n        _getInsertAfterOrBeforeKey: function(insertChange) {\r\n            var _insertChange$insertA;\r\n            return null !== (_insertChange$insertA = insertChange.insertAfterKey) && void 0 !== _insertChange$insertA ? _insertChange$insertA : insertChange.insertBeforeKey\r\n        },\r\n        _getPageIndexToInsertRow: function() {\r\n            var newRowPosition = this._getNewRowPosition();\r\n            var dataController = this._dataController;\r\n            var pageIndex = dataController.pageIndex();\r\n            var lastPageIndex = dataController.pageCount() - 1;\r\n            if (newRowPosition === FIRST_NEW_ROW_POSITION && 0 !== pageIndex) {\r\n                return 0\r\n            } else if (newRowPosition === LAST_NEW_ROW_POSITION && pageIndex !== lastPageIndex) {\r\n                return lastPageIndex\r\n            }\r\n            return -1\r\n        },\r\n        addRow: function(parentKey) {\r\n            var dataController = this._dataController;\r\n            var store = dataController.store();\r\n            if (!store) {\r\n                dataController.fireError(\"E1052\", this.component.NAME);\r\n                return (new Deferred).reject()\r\n            }\r\n            return this._addRow(parentKey)\r\n        },\r\n        _addRow: function(parentKey) {\r\n            var dataController = this._dataController;\r\n            var store = dataController.store();\r\n            var key = store && store.key();\r\n            var param = {\r\n                data: {}\r\n            };\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            var deferred = new Deferred;\r\n            this.refresh();\r\n            if (!this._allowRowAdding()) {\r\n                when(this._navigateToNewRow(oldEditRowIndex)).done(deferred.resolve).fail(deferred.reject);\r\n                return deferred.promise()\r\n            }\r\n            if (!key) {\r\n                param.data.__KEY__ = String(new Guid)\r\n            }\r\n            when(this._initNewRow(param, parentKey)).done(() => {\r\n                if (this._allowRowAdding()) {\r\n                    when(this._addRowCore(param.data, parentKey, oldEditRowIndex)).done(deferred.resolve).fail(deferred.reject)\r\n                } else {\r\n                    deferred.reject(\"cancel\")\r\n                }\r\n            }).fail(deferred.reject);\r\n            return deferred.promise()\r\n        },\r\n        _allowRowAdding: function() {\r\n            var insertIndex = this._getInsertIndex();\r\n            if (insertIndex > 1) {\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        _addRowCore: function(data, parentKey, initialOldEditRowIndex) {\r\n            var change = {\r\n                data: data,\r\n                type: DATA_EDIT_DATA_INSERT_TYPE\r\n            };\r\n            var editRowIndex = this._getVisibleEditRowIndex();\r\n            var insertInfo = this._addInsertInfo(change, parentKey);\r\n            var key = insertInfo.key;\r\n            this._setEditRowKey(key, true);\r\n            this._addChange(change);\r\n            return this._navigateToNewRow(initialOldEditRowIndex, change, editRowIndex)\r\n        },\r\n        _navigateToNewRow: function(oldEditRowIndex, change, editRowIndex) {\r\n            var _editRowIndex, _change;\r\n            var d = new Deferred;\r\n            var dataController = this._dataController;\r\n            var focusController = this.getController(\"focus\");\r\n            editRowIndex = null !== (_editRowIndex = editRowIndex) && void 0 !== _editRowIndex ? _editRowIndex : -1;\r\n            change = null !== (_change = change) && void 0 !== _change ? _change : this.getChanges().filter(c => c.type === DATA_EDIT_DATA_INSERT_TYPE)[0];\r\n            if (!change) {\r\n                return d.reject(\"cancel\").promise()\r\n            }\r\n            var pageIndexToInsertRow = this._getPageIndexToInsertRow();\r\n            var rowIndex = this._getLoadedRowIndex(dataController.items(), change, true);\r\n            var navigateToRowByKey = key => {\r\n                when(null === focusController || void 0 === focusController ? void 0 : focusController.navigateToRow(key)).done(() => {\r\n                    rowIndex = dataController.getRowIndexByKey(change.key);\r\n                    d.resolve()\r\n                })\r\n            };\r\n            var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n            if (pageIndexToInsertRow >= 0) {\r\n                dataController.pageIndex(pageIndexToInsertRow).done(() => {\r\n                    navigateToRowByKey(change.key)\r\n                }).fail(d.reject)\r\n            } else if (rowIndex < 0 && isDefined(insertAfterOrBeforeKey)) {\r\n                navigateToRowByKey(insertAfterOrBeforeKey)\r\n            } else {\r\n                dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [oldEditRowIndex, editRowIndex, rowIndex]\r\n                });\r\n                rowIndex = dataController.getRowIndexByKey(change.key);\r\n                if (rowIndex < 0) {\r\n                    navigateToRowByKey(change.key)\r\n                } else {\r\n                    d.resolve()\r\n                }\r\n            }\r\n            d.done(() => {\r\n                this._showAddedRow(rowIndex);\r\n                this._afterInsertRow(change.key)\r\n            });\r\n            return d.promise()\r\n        },\r\n        _showAddedRow: function(rowIndex) {\r\n            this._focusFirstEditableCellInRow(rowIndex)\r\n        },\r\n        _beforeFocusElementInRow: noop,\r\n        _focusFirstEditableCellInRow: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var key = dataController.getKeyByRowIndex(rowIndex);\r\n            var $firstCell = this.getFirstEditableCellInRow(rowIndex);\r\n            this._editCellInProgress = true;\r\n            this._delayedInputFocus($firstCell, () => {\r\n                rowIndex = dataController.getRowIndexByKey(key);\r\n                this._editCellInProgress = false;\r\n                this._beforeFocusElementInRow(rowIndex)\r\n            })\r\n        },\r\n        _isEditingStart: function(options) {\r\n            this.executeAction(\"onEditingStart\", options);\r\n            return options.cancel\r\n        },\r\n        _beforeUpdateItems: noop,\r\n        _getVisibleEditColumnIndex: function() {\r\n            var editColumnName = this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME);\r\n            if (!isDefined(editColumnName)) {\r\n                return -1\r\n            }\r\n            return this._columnsController.getVisibleColumnIndex(editColumnName)\r\n        },\r\n        _setEditColumnNameByIndex: function(index, silent) {\r\n            var _visibleColumns$index;\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            this._setEditColumnName(null === (_visibleColumns$index = visibleColumns[index]) || void 0 === _visibleColumns$index ? void 0 : _visibleColumns$index.name, silent)\r\n        },\r\n        _setEditColumnName: function(name, silent) {\r\n            if (silent) {\r\n                this._silentOption(EDITING_EDITCOLUMNNAME_OPTION_NAME, name)\r\n            } else {\r\n                this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME, name)\r\n            }\r\n        },\r\n        _resetEditColumnName: function() {\r\n            this._setEditColumnName(null, true)\r\n        },\r\n        _getEditColumn: function() {\r\n            var editColumnName = this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME);\r\n            return this._getColumnByName(editColumnName)\r\n        },\r\n        _getColumnByName: function(name) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var editColumn;\r\n            isDefined(name) && visibleColumns.some(column => {\r\n                if (column.name === name) {\r\n                    editColumn = column;\r\n                    return true\r\n                }\r\n            });\r\n            return editColumn\r\n        },\r\n        _getVisibleEditRowIndex: function(columnName) {\r\n            var dataController = this._dataController;\r\n            var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n            var rowIndex = dataController.getRowIndexByKey(editRowKey);\r\n            if (-1 === rowIndex) {\r\n                return rowIndex\r\n            }\r\n            return rowIndex + this._getEditRowIndexCorrection(columnName)\r\n        },\r\n        _getEditRowIndexCorrection: function(columnName) {\r\n            var editColumn = columnName ? this._getColumnByName(columnName) : this._getEditColumn();\r\n            var isColumnHidden = \"adaptiveHidden\" === (null === editColumn || void 0 === editColumn ? void 0 : editColumn.visibleWidth);\r\n            return isColumnHidden ? 1 : 0\r\n        },\r\n        _resetEditRowKey: function() {\r\n            this._setEditRowKey(null, true)\r\n        },\r\n        _resetEditIndices: function() {\r\n            this._resetEditColumnName();\r\n            this._resetEditRowKey()\r\n        },\r\n        editRow: function(rowIndex) {\r\n            var _item$oldData;\r\n            var dataController = this._dataController;\r\n            var items = dataController.items();\r\n            var item = items[rowIndex];\r\n            var params = {\r\n                data: item && item.data,\r\n                cancel: false\r\n            };\r\n            var oldRowIndex = this._getVisibleEditRowIndex();\r\n            if (!item) {\r\n                return\r\n            }\r\n            if (rowIndex === oldRowIndex) {\r\n                return true\r\n            }\r\n            if (void 0 === item.key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            if (!item.isNewRow) {\r\n                params.key = item.key\r\n            }\r\n            if (this._isEditingStart(params)) {\r\n                return\r\n            }\r\n            this.resetChanges();\r\n            this.init();\r\n            this._resetEditColumnName();\r\n            this._pageIndex = dataController.pageIndex();\r\n            this._addInternalData({\r\n                key: item.key,\r\n                oldData: null !== (_item$oldData = item.oldData) && void 0 !== _item$oldData ? _item$oldData : item.data\r\n            });\r\n            this._setEditRowKey(item.key)\r\n        },\r\n        _editRowFromOptionChanged: function(rowIndex, oldRowIndex) {\r\n            var rowIndices = [oldRowIndex, rowIndex];\r\n            this._beforeUpdateItems(rowIndices, rowIndex, oldRowIndex);\r\n            this._editRowFromOptionChangedCore(rowIndices, rowIndex, oldRowIndex)\r\n        },\r\n        _editRowFromOptionChangedCore: function(rowIndices, rowIndex, oldRowIndex) {\r\n            this._needFocusEditor = true;\r\n            this._dataController.updateItems({\r\n                changeType: \"update\",\r\n                rowIndices: rowIndices\r\n            })\r\n        },\r\n        _focusEditorIfNeed: noop,\r\n        _showEditPopup: noop,\r\n        _repaintEditPopup: noop,\r\n        _getEditPopupHiddenHandler: function() {\r\n            return e => {\r\n                if (this.isEditing()) {\r\n                    this.cancelEditData()\r\n                }\r\n            }\r\n        },\r\n        _getPopupEditFormTemplate: noop,\r\n        _getSaveButtonConfig: function() {\r\n            return {\r\n                text: this.option(\"editing.texts.saveRowChanges\"),\r\n                onClick: this.saveEditData.bind(this)\r\n            }\r\n        },\r\n        _getCancelButtonConfig: function() {\r\n            return {\r\n                text: this.option(\"editing.texts.cancelRowChanges\"),\r\n                onClick: this.cancelEditData.bind(this)\r\n            }\r\n        },\r\n        _removeInternalData: function(key) {\r\n            var internalData = this._getInternalData(key);\r\n            var index = this._internalState.indexOf(internalData);\r\n            if (index > -1) {\r\n                this._internalState.splice(index, 1)\r\n            }\r\n        },\r\n        _updateInsertAfterOrBeforeKeys: function(changes, index) {\r\n            var removeChange = changes[index];\r\n            changes.forEach(change => {\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                if (equalByValue(insertAfterOrBeforeKey, removeChange.key)) {\r\n                    change[isDefined(change.insertAfterKey) ? \"insertAfterKey\" : \"insertBeforeKey\"] = this._getInsertAfterOrBeforeKey(removeChange)\r\n                }\r\n            })\r\n        },\r\n        _removeChange: function(index) {\r\n            if (index >= 0) {\r\n                var changes = [...this.getChanges()];\r\n                var key = changes[index].key;\r\n                this._removeInternalData(key);\r\n                this._updateInsertAfterOrBeforeKeys(changes, index);\r\n                changes.splice(index, 1);\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, changes);\r\n                if (equalByValue(this.option(EDITING_EDITROWKEY_OPTION_NAME), key)) {\r\n                    this._resetEditIndices()\r\n                }\r\n            }\r\n        },\r\n        executeOperation: function(deferred, func) {\r\n            this._lastOperation && this._lastOperation.reject();\r\n            this._lastOperation = deferred;\r\n            this.waitForDeferredOperations().done(() => {\r\n                if (\"rejected\" === deferred.state()) {\r\n                    return\r\n                }\r\n                func();\r\n                this._lastOperation = null\r\n            }).fail(() => {\r\n                deferred.reject();\r\n                this._lastOperation = null\r\n            })\r\n        },\r\n        waitForDeferredOperations: function() {\r\n            return when(...this._deferreds)\r\n        },\r\n        _processCanceledEditingCell: noop,\r\n        _repaintEditCell: function(column, oldColumn, oldEditRowIndex) {\r\n            this._needFocusEditor = true;\r\n            if (!column || !column.showEditorAlways || oldColumn && !oldColumn.showEditorAlways) {\r\n                this._editCellInProgress = true;\r\n                this.getController(\"editorFactory\").loseFocus();\r\n                this._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [oldEditRowIndex, this._getVisibleEditRowIndex()]\r\n                })\r\n            } else if (column !== oldColumn) {\r\n                this._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: []\r\n                })\r\n            }\r\n        },\r\n        _delayedInputFocus: function($cell, beforeFocusCallback, callBeforeFocusCallbackAlways) {\r\n            var inputFocus = () => {\r\n                if (beforeFocusCallback) {\r\n                    beforeFocusCallback()\r\n                }\r\n                if ($cell) {\r\n                    var $focusableElement = $cell.find(FOCUSABLE_ELEMENT_SELECTOR).first();\r\n                    gridCoreUtils.focusAndSelectElement(this, $focusableElement)\r\n                }\r\n                this._beforeFocusCallback = null\r\n            };\r\n            if (devices.real().ios || devices.real().android) {\r\n                inputFocus()\r\n            } else {\r\n                if (this._beforeFocusCallback) {\r\n                    this._beforeFocusCallback()\r\n                }\r\n                clearTimeout(this._inputFocusTimeoutID);\r\n                if (callBeforeFocusCallbackAlways) {\r\n                    this._beforeFocusCallback = beforeFocusCallback\r\n                }\r\n                this._inputFocusTimeoutID = setTimeout(inputFocus)\r\n            }\r\n        },\r\n        _focusEditingCell: function(beforeFocusCallback, $editCell, callBeforeFocusCallbackAlways) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var editColumnIndex = this._getVisibleEditColumnIndex();\r\n            $editCell = $editCell || rowsView && rowsView._getCellElement(this._getVisibleEditRowIndex(), editColumnIndex);\r\n            if ($editCell) {\r\n                this._delayedInputFocus($editCell, beforeFocusCallback, callBeforeFocusCallbackAlways)\r\n            }\r\n        },\r\n        deleteRow: function(rowIndex) {\r\n            this._checkAndDeleteRow(rowIndex)\r\n        },\r\n        _checkAndDeleteRow: function(rowIndex) {\r\n            var editingOptions = this.option(\"editing\");\r\n            var editingTexts = null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.texts;\r\n            var confirmDelete = null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.confirmDelete;\r\n            var confirmDeleteMessage = null === editingTexts || void 0 === editingTexts ? void 0 : editingTexts.confirmDeleteMessage;\r\n            var item = this._dataController.items()[rowIndex];\r\n            var allowDeleting = !this.isEditing() || item.isNewRow;\r\n            if (item && allowDeleting) {\r\n                if (!confirmDelete || !confirmDeleteMessage) {\r\n                    this._deleteRowCore(rowIndex)\r\n                } else {\r\n                    var confirmDeleteTitle = editingTexts && editingTexts.confirmDeleteTitle;\r\n                    var showDialogTitle = isDefined(confirmDeleteTitle) && confirmDeleteTitle.length > 0;\r\n                    confirm(confirmDeleteMessage, confirmDeleteTitle, showDialogTitle).done(confirmResult => {\r\n                        if (confirmResult) {\r\n                            this._deleteRowCore(rowIndex)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _deleteRowCore: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var item = dataController.items()[rowIndex];\r\n            var key = item && item.key;\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            this.refresh();\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            if (editIndex >= 0) {\r\n                if (changes[editIndex].type === DATA_EDIT_DATA_INSERT_TYPE) {\r\n                    this._removeChange(editIndex)\r\n                } else {\r\n                    this._addChange({\r\n                        key: key,\r\n                        type: DATA_EDIT_DATA_REMOVE_TYPE\r\n                    })\r\n                }\r\n            } else {\r\n                this._addChange({\r\n                    key: key,\r\n                    oldData: item.data,\r\n                    type: DATA_EDIT_DATA_REMOVE_TYPE\r\n                })\r\n            }\r\n            return this._afterDeleteRow(rowIndex, oldEditRowIndex)\r\n        },\r\n        _afterDeleteRow: function(rowIndex, oldEditRowIndex) {\r\n            return this.saveEditData()\r\n        },\r\n        undeleteRow: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var item = dataController.items()[rowIndex];\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            var key = item && item.key;\r\n            var changes = this.getChanges();\r\n            if (item) {\r\n                var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n                if (editIndex >= 0) {\r\n                    var {\r\n                        data: data\r\n                    } = changes[editIndex];\r\n                    if (isEmptyObject(data)) {\r\n                        this._removeChange(editIndex)\r\n                    } else {\r\n                        this._addChange({\r\n                            key: key,\r\n                            type: DATA_EDIT_DATA_UPDATE_TYPE\r\n                        })\r\n                    }\r\n                    dataController.updateItems({\r\n                        changeType: \"update\",\r\n                        rowIndices: [oldEditRowIndex, rowIndex]\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _fireOnSaving: function() {\r\n            var onSavingParams = {\r\n                cancel: false,\r\n                promise: null,\r\n                changes: [...this.getChanges()]\r\n            };\r\n            this.executeAction(\"onSaving\", onSavingParams);\r\n            var d = new Deferred;\r\n            when(fromPromise(onSavingParams.promise)).done(() => {\r\n                d.resolve(onSavingParams)\r\n            }).fail(arg => {\r\n                createFailureHandler(d);\r\n                this._fireDataErrorOccurred(arg);\r\n                d.resolve({\r\n                    cancel: true\r\n                })\r\n            });\r\n            return d\r\n        },\r\n        _executeEditingAction: function(actionName, params, func) {\r\n            if (this.component._disposed) {\r\n                return null\r\n            }\r\n            var deferred = new Deferred;\r\n            this.executeAction(actionName, params);\r\n            when(fromPromise(params.cancel)).done((function(cancel) {\r\n                if (cancel) {\r\n                    setTimeout((function() {\r\n                        deferred.resolve(\"cancel\")\r\n                    }))\r\n                } else {\r\n                    func(params).done(deferred.resolve).fail(createFailureHandler(deferred))\r\n                }\r\n            })).fail(createFailureHandler(deferred));\r\n            return deferred\r\n        },\r\n        _processChanges: function(deferreds, results, dataChanges, changes) {\r\n            var store = this._dataController.store();\r\n            each(changes, (index, change) => {\r\n                var oldData = this._getOldData(change.key);\r\n                var {\r\n                    data: data,\r\n                    type: type\r\n                } = change;\r\n                var changeCopy = _extends({}, change);\r\n                var deferred;\r\n                var params;\r\n                if (this._beforeSaveEditData(change, index)) {\r\n                    return\r\n                }\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        params = {\r\n                            data: oldData,\r\n                            key: change.key,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowRemoving\", params, (function() {\r\n                            return store.remove(change.key).done((function(key) {\r\n                                dataChanges.push({\r\n                                    type: \"remove\",\r\n                                    key: key\r\n                                })\r\n                            }))\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        params = {\r\n                            data: data,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowInserting\", params, (function() {\r\n                            return store.insert(params.data).done((function(data, key) {\r\n                                if (isDefined(key)) {\r\n                                    changeCopy.key = key\r\n                                }\r\n                                if (data && isObject(data) && data !== params.data) {\r\n                                    changeCopy.data = data\r\n                                }\r\n                                dataChanges.push({\r\n                                    type: \"insert\",\r\n                                    data: data,\r\n                                    index: 0\r\n                                })\r\n                            }))\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        params = {\r\n                            newData: data,\r\n                            oldData: oldData,\r\n                            key: change.key,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowUpdating\", params, (function() {\r\n                            return store.update(change.key, params.newData).done((function(data, key) {\r\n                                if (data && isObject(data) && data !== params.newData) {\r\n                                    changeCopy.data = data\r\n                                }\r\n                                dataChanges.push({\r\n                                    type: \"update\",\r\n                                    key: key,\r\n                                    data: data\r\n                                })\r\n                            }))\r\n                        }))\r\n                }\r\n                changes[index] = changeCopy;\r\n                if (deferred) {\r\n                    var doneDeferred = new Deferred;\r\n                    deferred.always((function(data) {\r\n                        results.push({\r\n                            key: change.key,\r\n                            result: data\r\n                        })\r\n                    })).always(doneDeferred.resolve);\r\n                    deferreds.push(doneDeferred.promise())\r\n                }\r\n            })\r\n        },\r\n        _processRemoveIfError: function(changes, editIndex) {\r\n            var change = changes[editIndex];\r\n            if ((null === change || void 0 === change ? void 0 : change.type) === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                if (editIndex >= 0) {\r\n                    changes.splice(editIndex, 1)\r\n                }\r\n            }\r\n            return true\r\n        },\r\n        _processRemove: function(changes, editIndex, cancel) {\r\n            var change = changes[editIndex];\r\n            if (!cancel || !change || change.type === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                return this._processRemoveCore(changes, editIndex, !cancel || !change)\r\n            }\r\n        },\r\n        _processRemoveCore: function(changes, editIndex) {\r\n            if (editIndex >= 0) {\r\n                changes.splice(editIndex, 1)\r\n            }\r\n            return true\r\n        },\r\n        _processSaveEditDataResult: function(results) {\r\n            var hasSavedData = false;\r\n            var changes = [...this.getChanges()];\r\n            var changesLength = changes.length;\r\n            for (var i = 0; i < results.length; i++) {\r\n                var arg = results[i].result;\r\n                var cancel = \"cancel\" === arg;\r\n                var editIndex = gridCoreUtils.getIndexByKey(results[i].key, changes);\r\n                var change = changes[editIndex];\r\n                var isError = arg && arg instanceof Error;\r\n                if (isError) {\r\n                    if (change) {\r\n                        this._addInternalData({\r\n                            key: change.key,\r\n                            error: arg\r\n                        })\r\n                    }\r\n                    this._fireDataErrorOccurred(arg);\r\n                    if (this._processRemoveIfError(changes, editIndex)) {\r\n                        break\r\n                    }\r\n                } else if (this._processRemove(changes, editIndex, cancel)) {\r\n                    hasSavedData = !cancel\r\n                }\r\n            }\r\n            if (changes.length < changesLength) {\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, changes)\r\n            }\r\n            return hasSavedData\r\n        },\r\n        _fireSaveEditDataEvents: function(changes) {\r\n            each(changes, (_, _ref) => {\r\n                var {\r\n                    data: data,\r\n                    key: key,\r\n                    type: type\r\n                } = _ref;\r\n                var internalData = this._addInternalData({\r\n                    key: key\r\n                });\r\n                var params = {\r\n                    key: key,\r\n                    data: data\r\n                };\r\n                if (internalData.error) {\r\n                    params.error = internalData.error\r\n                }\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        this.executeAction(\"onRowRemoved\", extend({}, params, {\r\n                            data: internalData.oldData\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        this.executeAction(\"onRowInserted\", params);\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        this.executeAction(\"onRowUpdated\", params)\r\n                }\r\n            });\r\n            this.executeAction(\"onSaved\", {\r\n                changes: changes\r\n            })\r\n        },\r\n        saveEditData: function() {\r\n            var deferred = new Deferred;\r\n            this.waitForDeferredOperations().done(() => {\r\n                if (this.isSaving()) {\r\n                    this._resolveAfterSave(deferred);\r\n                    return\r\n                }\r\n                when(this._beforeSaveEditData()).done(cancel => {\r\n                    if (cancel) {\r\n                        this._resolveAfterSave(deferred, {\r\n                            cancel: cancel\r\n                        });\r\n                        return\r\n                    }\r\n                    this._saving = true;\r\n                    var options = {};\r\n                    this._saveEditDataInner(options).always(() => {\r\n                        this._saving = false;\r\n                        options.needFocusEditCell && this._focusEditingCell()\r\n                    }).done(deferred.resolve).fail(deferred.reject)\r\n                }).fail(deferred.reject)\r\n            }).fail(deferred.reject);\r\n            return deferred.promise()\r\n        },\r\n        _resolveAfterSave: function(deferred) {\r\n            var {\r\n                cancel: cancel,\r\n                error: error\r\n            } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n            when(this._afterSaveEditData(cancel)).done((function() {\r\n                deferred.resolve(error)\r\n            })).fail(deferred.reject)\r\n        },\r\n        _saveEditDataInner: function(options) {\r\n            var results = [];\r\n            var deferreds = [];\r\n            var dataChanges = [];\r\n            var dataController = this._dataController;\r\n            var dataSource = dataController.dataSource();\r\n            var result = new Deferred;\r\n            when(this._fireOnSaving()).done(_ref2 => {\r\n                var {\r\n                    cancel: cancel,\r\n                    changes: changes\r\n                } = _ref2;\r\n                if (cancel) {\r\n                    return result.resolve().promise()\r\n                }\r\n                this._processChanges(deferreds, results, dataChanges, changes);\r\n                if (deferreds.length) {\r\n                    null === dataSource || void 0 === dataSource ? void 0 : dataSource.beginLoading();\r\n                    when(...deferreds).done(() => {\r\n                        if (this._processSaveEditDataResult(results)) {\r\n                            this._endSaving(dataChanges, changes, result)\r\n                        } else {\r\n                            null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n                            result.resolve()\r\n                        }\r\n                    }).fail(error => {\r\n                        null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n                        result.resolve(error)\r\n                    });\r\n                    return result.always(() => {\r\n                        options.needFocusEditCell = true\r\n                    }).promise()\r\n                }\r\n                this._cancelSaving(result)\r\n            }).fail(result.reject);\r\n            return result.promise()\r\n        },\r\n        _beforeEndSaving: function(changes) {\r\n            this._resetEditIndices()\r\n        },\r\n        _endSaving: function(dataChanges, changes, deferred) {\r\n            var dataSource = this._dataController.dataSource();\r\n            this._beforeEndSaving(changes);\r\n            null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n            this._refreshDataAfterSave(dataChanges, changes, deferred)\r\n        },\r\n        _cancelSaving: function(result) {\r\n            this.executeAction(\"onSaved\", {\r\n                changes: []\r\n            });\r\n            this._resolveAfterSave(result)\r\n        },\r\n        _refreshDataAfterSave: function(dataChanges, changes, deferred) {\r\n            var dataController = this._dataController;\r\n            var refreshMode = this.option(\"editing.refreshMode\");\r\n            var isFullRefresh = \"reshape\" !== refreshMode && \"repaint\" !== refreshMode;\r\n            if (!isFullRefresh) {\r\n                dataController.push(dataChanges)\r\n            }\r\n            when(dataController.refresh({\r\n                selection: isFullRefresh,\r\n                reload: isFullRefresh,\r\n                load: \"reshape\" === refreshMode,\r\n                changesOnly: this.option(\"repaintChangesOnly\")\r\n            })).always(() => {\r\n                this._fireSaveEditDataEvents(changes)\r\n            }).done(() => {\r\n                this._resolveAfterSave(deferred)\r\n            }).fail(error => {\r\n                this._resolveAfterSave(deferred, {\r\n                    error: error\r\n                })\r\n            })\r\n        },\r\n        isSaving: function() {\r\n            return this._saving\r\n        },\r\n        _updateEditColumn: function() {\r\n            var isEditColumnVisible = this._isEditColumnVisible();\r\n            var useIcons = this.option(\"editing.useIcons\");\r\n            var cssClass = COMMAND_EDIT_CLASS + (useIcons ? \" \" + COMMAND_EDIT_WITH_ICONS_CLASS : \"\");\r\n            this._columnsController.addCommandColumn({\r\n                type: \"buttons\",\r\n                command: \"edit\",\r\n                visible: isEditColumnVisible,\r\n                cssClass: cssClass,\r\n                width: \"auto\",\r\n                alignment: \"center\",\r\n                cellTemplate: this._getEditCommandCellTemplate(),\r\n                fixedPosition: \"right\"\r\n            });\r\n            this._columnsController.columnOption(\"command:edit\", {\r\n                visible: isEditColumnVisible,\r\n                cssClass: cssClass\r\n            })\r\n        },\r\n        _isEditColumnVisible: function() {\r\n            var editingOptions = this.option(\"editing\");\r\n            return editingOptions.allowDeleting\r\n        },\r\n        _isEditButtonDisabled: function() {\r\n            var hasChanges = this.hasChanges();\r\n            var isEditRowDefined = isDefined(this.option(\"editing.editRowKey\"));\r\n            return !(isEditRowDefined || hasChanges)\r\n        },\r\n        _updateEditButtons: function() {\r\n            var headerPanel = this.getView(\"headerPanel\");\r\n            var isButtonDisabled = this._isEditButtonDisabled();\r\n            if (headerPanel) {\r\n                headerPanel.setToolbarItemDisabled(\"saveButton\", isButtonDisabled);\r\n                headerPanel.setToolbarItemDisabled(\"revertButton\", isButtonDisabled)\r\n            }\r\n        },\r\n        _applyModified: function($element) {\r\n            $element && $element.addClass(CELL_MODIFIED)\r\n        },\r\n        _beforeCloseEditCellInBatchMode: noop,\r\n        cancelEditData: function() {\r\n            var changes = this.getChanges();\r\n            var params = {\r\n                cancel: false,\r\n                changes: changes\r\n            };\r\n            this.executeAction(\"onEditCanceling\", params);\r\n            if (!params.cancel) {\r\n                this._cancelEditDataCore();\r\n                this.executeAction(\"onEditCanceled\", {\r\n                    changes: changes\r\n                })\r\n            }\r\n        },\r\n        _cancelEditDataCore: function() {\r\n            var rowIndex = this._getVisibleEditRowIndex();\r\n            this._beforeCancelEditData();\r\n            this.init();\r\n            this.resetChanges();\r\n            this._resetEditColumnName();\r\n            this._resetEditRowKey();\r\n            this._afterCancelEditData(rowIndex)\r\n        },\r\n        _afterCancelEditData: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            dataController.updateItems({\r\n                repaintChangesOnly: this.option(\"repaintChangesOnly\")\r\n            })\r\n        },\r\n        _hideEditPopup: noop,\r\n        hasEditData: function() {\r\n            return this.hasChanges()\r\n        },\r\n        update: function(changeType) {\r\n            var dataController = this._dataController;\r\n            if (dataController && this._pageIndex !== dataController.pageIndex()) {\r\n                if (\"refresh\" === changeType) {\r\n                    this.refresh(true)\r\n                }\r\n                this._pageIndex = dataController.pageIndex()\r\n            }\r\n            this._updateEditButtons()\r\n        },\r\n        _getRowIndicesForCascadeUpdating: function(row, skipCurrentRow) {\r\n            return skipCurrentRow ? [] : [row.rowIndex]\r\n        },\r\n        addDeferred: function(deferred) {\r\n            if (this._deferreds.indexOf(deferred) < 0) {\r\n                this._deferreds.push(deferred);\r\n                deferred.always(() => {\r\n                    var index = this._deferreds.indexOf(deferred);\r\n                    if (index >= 0) {\r\n                        this._deferreds.splice(index, 1)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _prepareChange: function(options, value, text) {\r\n            var _options$row;\r\n            var newData = {};\r\n            var oldData = null === (_options$row = options.row) || void 0 === _options$row ? void 0 : _options$row.data;\r\n            var rowKey = options.key;\r\n            var deferred = new Deferred;\r\n            if (void 0 !== rowKey) {\r\n                options.value = value;\r\n                var setCellValueResult = fromPromise(options.column.setCellValue(newData, value, extend(true, {}, oldData), text));\r\n                setCellValueResult.done((function() {\r\n                    deferred.resolve({\r\n                        data: newData,\r\n                        key: rowKey,\r\n                        oldData: oldData,\r\n                        type: DATA_EDIT_DATA_UPDATE_TYPE\r\n                    })\r\n                })).fail(createFailureHandler(deferred)).fail(arg => this._fireDataErrorOccurred(arg));\r\n                if (isDefined(text) && options.column.displayValueMap) {\r\n                    options.column.displayValueMap[value] = text\r\n                }\r\n                this._updateRowValues(options);\r\n                this.addDeferred(deferred)\r\n            }\r\n            return deferred\r\n        },\r\n        _updateRowValues: function(options) {\r\n            if (options.values) {\r\n                var dataController = this._dataController;\r\n                var rowIndex = dataController.getRowIndexByKey(options.key);\r\n                var row = dataController.getVisibleRows()[rowIndex];\r\n                if (row) {\r\n                    options.values = row.values\r\n                }\r\n                options.values[options.columnIndex] = options.value\r\n            }\r\n        },\r\n        updateFieldValue: function(options, value, text, forceUpdateRow) {\r\n            var rowKey = options.key;\r\n            var deferred = new Deferred;\r\n            if (void 0 === rowKey) {\r\n                this._dataController.fireError(\"E1043\")\r\n            }\r\n            if (options.column.setCellValue) {\r\n                this._prepareChange(options, value, text).done(params => {\r\n                    when(this._applyChange(options, params, forceUpdateRow)).always(() => {\r\n                        deferred.resolve()\r\n                    })\r\n                })\r\n            } else {\r\n                deferred.resolve()\r\n            }\r\n            return deferred.promise()\r\n        },\r\n        _focusPreviousEditingCellIfNeed: function(options) {\r\n            if (this.hasEditData() && !this.isEditCell(options.rowIndex, options.columnIndex)) {\r\n                this._focusEditingCell();\r\n                this._updateEditRow(options.row, true);\r\n                return true\r\n            }\r\n        },\r\n        _needUpdateRow: function(column) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            if (!column) {\r\n                column = this._getEditColumn()\r\n            }\r\n            var isCustomSetCellValue = column && column.setCellValue !== column.defaultSetCellValue;\r\n            var isCustomCalculateCellValue = visibleColumns.some(visibleColumn => visibleColumn.calculateCellValue !== visibleColumn.defaultCalculateCellValue);\r\n            return isCustomSetCellValue || isCustomCalculateCellValue\r\n        },\r\n        _applyChange: function(options, params, forceUpdateRow) {\r\n            var changeOptions = _extends({}, options, {\r\n                forceUpdateRow: forceUpdateRow\r\n            });\r\n            this._addChange(params, changeOptions);\r\n            this._updateEditButtons();\r\n            return this._applyChangeCore(options, changeOptions.forceUpdateRow)\r\n        },\r\n        _applyChangeCore: function(options, forceUpdateRow) {\r\n            var isCustomSetCellValue = options.column.setCellValue !== options.column.defaultSetCellValue;\r\n            var row = options.row;\r\n            if (row) {\r\n                if (forceUpdateRow || isCustomSetCellValue) {\r\n                    this._updateEditRow(row, forceUpdateRow, isCustomSetCellValue)\r\n                } else if (row.update) {\r\n                    row.update()\r\n                }\r\n            }\r\n        },\r\n        _updateEditRowCore: function(row, skipCurrentRow, isCustomSetCellValue) {\r\n            this._dataController.updateItems({\r\n                changeType: \"update\",\r\n                rowIndices: this._getRowIndicesForCascadeUpdating(row, skipCurrentRow)\r\n            })\r\n        },\r\n        _updateEditRow: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n            if (forceUpdateRow) {\r\n                this._updateRowImmediately(row, forceUpdateRow, isCustomSetCellValue)\r\n            } else {\r\n                this._updateRowWithDelay(row, isCustomSetCellValue)\r\n            }\r\n        },\r\n        _updateRowImmediately: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n            this._updateEditRowCore(row, !forceUpdateRow, isCustomSetCellValue);\r\n            this._validateEditFormAfterUpdate(row, isCustomSetCellValue);\r\n            if (!forceUpdateRow) {\r\n                this._focusEditingCell()\r\n            }\r\n        },\r\n        _updateRowWithDelay: function(row, isCustomSetCellValue) {\r\n            var deferred = new Deferred;\r\n            this.addDeferred(deferred);\r\n            setTimeout(() => {\r\n                var $focusedElement = $(domAdapter.getActiveElement());\r\n                var columnIndex = this._rowsView.getCellIndex($focusedElement, row.rowIndex);\r\n                var focusedElement = $focusedElement.get(0);\r\n                var selectionRange = gridCoreUtils.getSelectionRange(focusedElement);\r\n                this._updateEditRowCore(row, false, isCustomSetCellValue);\r\n                this._validateEditFormAfterUpdate(row, isCustomSetCellValue);\r\n                if (columnIndex >= 0) {\r\n                    var $focusedItem = this._rowsView._getCellElement(row.rowIndex, columnIndex);\r\n                    this._delayedInputFocus($focusedItem, () => {\r\n                        setTimeout(() => {\r\n                            focusedElement = domAdapter.getActiveElement();\r\n                            if (selectionRange.selectionStart >= 0) {\r\n                                gridCoreUtils.setSelectionRange(focusedElement, selectionRange)\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n                deferred.resolve()\r\n            })\r\n        },\r\n        _validateEditFormAfterUpdate: noop,\r\n        _addChange: function(changeParams, options) {\r\n            var _this$getChanges;\r\n            var row = null === options || void 0 === options ? void 0 : options.row;\r\n            var changes = [...this.getChanges()];\r\n            var index = gridCoreUtils.getIndexByKey(changeParams.key, changes);\r\n            if (index < 0) {\r\n                index = changes.length;\r\n                this._addInternalData({\r\n                    key: changeParams.key,\r\n                    oldData: changeParams.oldData\r\n                });\r\n                delete changeParams.oldData;\r\n                changes.push(changeParams)\r\n            }\r\n            var change = _extends({}, changes[index]);\r\n            if (change) {\r\n                if (changeParams.data) {\r\n                    change.data = createObjectWithChanges(change.data, changeParams.data)\r\n                }\r\n                if ((!change.type || !changeParams.data) && changeParams.type) {\r\n                    change.type = changeParams.type\r\n                }\r\n                if (row) {\r\n                    row.oldData = this._getOldData(row.key);\r\n                    row.data = createObjectWithChanges(row.data, changeParams.data)\r\n                }\r\n            }\r\n            changes[index] = change;\r\n            this._silentOption(EDITING_CHANGES_OPTION_NAME, changes);\r\n            if (options && change !== (null === (_this$getChanges = this.getChanges()) || void 0 === _this$getChanges ? void 0 : _this$getChanges[index])) {\r\n                options.forceUpdateRow = true\r\n            }\r\n            return change\r\n        },\r\n        _getFormEditItemTemplate: function(cellOptions, column) {\r\n            return column.editCellTemplate || this._getDefaultEditorTemplate()\r\n        },\r\n        getColumnTemplate: function(options) {\r\n            var column = options.column;\r\n            var rowIndex = options.row && options.row.rowIndex;\r\n            var template;\r\n            var isRowMode = this.isRowBasedEditMode();\r\n            var isRowEditing = this.isEditRow(rowIndex);\r\n            var isCellEditing = this.isEditCell(rowIndex, options.columnIndex);\r\n            var editingStartOptions;\r\n            if ((column.showEditorAlways || column.setCellValue && (isRowEditing && column.allowEditing || isCellEditing)) && (\"data\" === options.rowType || \"detailAdaptive\" === options.rowType) && !column.command) {\r\n                var allowUpdating = this.allowUpdating(options);\r\n                if (((allowUpdating || isRowEditing) && column.allowEditing || isCellEditing) && (isRowEditing || !isRowMode)) {\r\n                    if (column.showEditorAlways && !isRowMode) {\r\n                        editingStartOptions = {\r\n                            cancel: false,\r\n                            key: options.row.isNewRow ? void 0 : options.row.key,\r\n                            data: options.row.data,\r\n                            column: column\r\n                        };\r\n                        this._isEditingStart(editingStartOptions)\r\n                    }\r\n                    if (!editingStartOptions || !editingStartOptions.cancel) {\r\n                        options.setValue = (value, text) => {\r\n                            this.updateFieldValue(options, value, text)\r\n                        }\r\n                    }\r\n                }\r\n                template = column.editCellTemplate || this._getDefaultEditorTemplate()\r\n            } else if (\"detail\" === column.command && \"detail\" === options.rowType && isRowEditing) {\r\n                template = null === this || void 0 === this ? void 0 : this.getEditFormTemplate(options)\r\n            }\r\n            return template\r\n        },\r\n        _createButton: function($container, button, options, change) {\r\n            var icon = EDIT_ICON_CLASS[button.name];\r\n            var useIcons = this.option(\"editing.useIcons\");\r\n            var useLegacyColumnButtonTemplate = this.option(\"useLegacyColumnButtonTemplate\");\r\n            var $button = $(\"<a>\").attr(\"href\", \"#\").addClass(LINK_CLASS).addClass(button.cssClass);\r\n            if (button.template && useLegacyColumnButtonTemplate) {\r\n                this._rowsView.renderTemplate($container, button.template, options, true)\r\n            } else {\r\n                if (button.template) {\r\n                    $button = $(\"<span>\").addClass(button.cssClass)\r\n                } else if (useIcons && icon || button.icon) {\r\n                    icon = button.icon || icon;\r\n                    var iconType = iconUtils.getImageSourceType(icon);\r\n                    if (\"image\" === iconType || \"svg\" === iconType) {\r\n                        $button = iconUtils.getImageContainer(icon).addClass(button.cssClass)\r\n                    } else {\r\n                        $button.addClass(\"dx-icon\" + (\"dxIcon\" === iconType ? \"-\" : \" \") + icon).attr(\"title\", button.text)\r\n                    }\r\n                    $button.addClass(\"dx-link-icon\");\r\n                    $container.addClass(COMMAND_EDIT_WITH_ICONS_CLASS);\r\n                    var localizationName = this.getButtonLocalizationNames()[button.name];\r\n                    localizationName && $button.attr(\"aria-label\", messageLocalization.format(localizationName))\r\n                } else {\r\n                    $button.text(button.text)\r\n                }\r\n                if (isDefined(button.hint)) {\r\n                    $button.attr(\"title\", button.hint)\r\n                }\r\n                if (this._isButtonDisabled(button, options)) {\r\n                    $button.addClass(\"dx-state-disabled\")\r\n                } else if (!button.template || button.onClick) {\r\n                    eventsEngine.on($button, addNamespace(\"click\", EDITING_NAMESPACE), this.createAction((function(e) {\r\n                        var _button$onClick;\r\n                        null === (_button$onClick = button.onClick) || void 0 === _button$onClick ? void 0 : _button$onClick.call(button, extend({}, e, {\r\n                            row: options.row,\r\n                            column: options.column\r\n                        }));\r\n                        e.event.preventDefault();\r\n                        e.event.stopPropagation()\r\n                    })))\r\n                }\r\n                $container.append($button, \"&nbsp;\");\r\n                if (button.template) {\r\n                    this._rowsView.renderTemplate($button, button.template, options, true, change)\r\n                }\r\n            }\r\n        },\r\n        getButtonLocalizationNames: () => ({\r\n            edit: \"dxDataGrid-editingEditRow\",\r\n            save: \"dxDataGrid-editingSaveRowChanges\",\r\n            delete: \"dxDataGrid-editingDeleteRow\",\r\n            undelete: \"dxDataGrid-editingUndeleteRow\",\r\n            cancel: \"dxDataGrid-editingCancelRowChanges\"\r\n        }),\r\n        prepareButtonItem: function(headerPanel, name, methodName, sortIndex) {\r\n            var editingTexts = this.option(\"editing.texts\") || {};\r\n            var titleButtonTextByClassNames = {\r\n                revert: editingTexts.cancelAllChanges,\r\n                save: editingTexts.saveAllChanges,\r\n                addRow: editingTexts.addRow\r\n            };\r\n            var className = {\r\n                revert: \"cancel\",\r\n                save: \"save\",\r\n                addRow: \"addrow\"\r\n            } [name];\r\n            var hintText = titleButtonTextByClassNames[name];\r\n            var isButtonDisabled = (\"save\" === className || \"cancel\" === className) && this._isEditButtonDisabled();\r\n            return {\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    onInitialized: e => {\r\n                        $(e.element).addClass(headerPanel._getToolbarButtonClass(EDIT_BUTTON_CLASS + \" \" + this.addWidgetPrefix(className) + \"-button\"))\r\n                    },\r\n                    icon: \"edit-button-\" + className,\r\n                    disabled: isButtonDisabled,\r\n                    onClick: () => {\r\n                        setTimeout(() => {\r\n                            this[methodName]()\r\n                        })\r\n                    },\r\n                    text: hintText,\r\n                    hint: hintText\r\n                },\r\n                showText: \"inMenu\",\r\n                name: name + \"Button\",\r\n                location: \"after\",\r\n                locateInMenu: \"auto\",\r\n                sortIndex: sortIndex\r\n            }\r\n        },\r\n        prepareEditButtons: function(headerPanel) {\r\n            var editingOptions = this.option(\"editing\") || {};\r\n            var buttonItems = [];\r\n            if (editingOptions.allowAdding) {\r\n                buttonItems.push(this.prepareButtonItem(headerPanel, \"addRow\", \"addRow\", 20))\r\n            }\r\n            return buttonItems\r\n        },\r\n        highlightDataCell: function($cell, parameters) {\r\n            var cellModified = this.isCellModified(parameters);\r\n            var shouldHighlight = cellModified && parameters.column.setCellValue && (this.getEditMode() !== EDIT_MODE_ROW || !parameters.row.isEditing);\r\n            shouldHighlight && $cell.addClass(CELL_MODIFIED)\r\n        },\r\n        _afterInsertRow: noop,\r\n        _beforeSaveEditData: function(change) {\r\n            if (change && !isDefined(change.key) && isDefined(change.type)) {\r\n                return true\r\n            }\r\n        },\r\n        _afterSaveEditData: noop,\r\n        _beforeCancelEditData: noop,\r\n        _allowEditAction: function(actionName, options) {\r\n            var allowEditAction = this.option(\"editing.\" + actionName);\r\n            if (isFunction(allowEditAction)) {\r\n                allowEditAction = allowEditAction({\r\n                    component: this.component,\r\n                    row: options.row\r\n                })\r\n            }\r\n            return allowEditAction\r\n        },\r\n        allowUpdating: function(options, eventName) {\r\n            var startEditAction = this.option(\"editing.startEditAction\") || DEFAULT_START_EDIT_ACTION;\r\n            var needCallback = arguments.length > 1 ? startEditAction === eventName || \"down\" === eventName : true;\r\n            return needCallback && this._allowEditAction(\"allowUpdating\", options)\r\n        },\r\n        allowDeleting: function(options) {\r\n            return this._allowEditAction(\"allowDeleting\", options)\r\n        },\r\n        isCellModified: function(parameters) {\r\n            var columnIndex = parameters.columnIndex;\r\n            var modifiedValues = parameters.row && (parameters.row.isNewRow ? parameters.row.values : parameters.row.modifiedValues);\r\n            return !!modifiedValues && void 0 !== modifiedValues[columnIndex]\r\n        },\r\n        isNewRowInEditMode: function() {\r\n            var visibleEditRowIndex = this._getVisibleEditRowIndex();\r\n            var rows = this._dataController.items();\r\n            return visibleEditRowIndex >= 0 ? rows[visibleEditRowIndex].isNewRow : false\r\n        }\r\n    }\r\n}());\r\nexport var editingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            editing: {\r\n                mode: \"row\",\r\n                refreshMode: \"full\",\r\n                newRowPosition: VIEWPORT_TOP_NEW_ROW_POSITION,\r\n                allowAdding: false,\r\n                allowUpdating: false,\r\n                allowDeleting: false,\r\n                useIcons: false,\r\n                selectTextOnEditStart: false,\r\n                confirmDelete: true,\r\n                texts: {\r\n                    editRow: messageLocalization.format(\"dxDataGrid-editingEditRow\"),\r\n                    saveAllChanges: messageLocalization.format(\"dxDataGrid-editingSaveAllChanges\"),\r\n                    saveRowChanges: messageLocalization.format(\"dxDataGrid-editingSaveRowChanges\"),\r\n                    cancelAllChanges: messageLocalization.format(\"dxDataGrid-editingCancelAllChanges\"),\r\n                    cancelRowChanges: messageLocalization.format(\"dxDataGrid-editingCancelRowChanges\"),\r\n                    addRow: messageLocalization.format(\"dxDataGrid-editingAddRow\"),\r\n                    deleteRow: messageLocalization.format(\"dxDataGrid-editingDeleteRow\"),\r\n                    undeleteRow: messageLocalization.format(\"dxDataGrid-editingUndeleteRow\"),\r\n                    confirmDeleteMessage: messageLocalization.format(\"dxDataGrid-editingConfirmDeleteMessage\"),\r\n                    confirmDeleteTitle: \"\"\r\n                },\r\n                form: {\r\n                    colCount: 2\r\n                },\r\n                popup: {},\r\n                startEditAction: \"click\",\r\n                editRowKey: null,\r\n                editColumnName: null,\r\n                changes: []\r\n            },\r\n            useLegacyColumnButtonTemplate: false\r\n        }\r\n    },\r\n    controllers: {\r\n        editing: EditingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this.callBase()\r\n                },\r\n                reload: function(full, repaintChangesOnly) {\r\n                    !repaintChangesOnly && this._editingController.refresh();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                repaintRows: function() {\r\n                    if (this.getController(\"editing\").isSaving()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _updateEditRow: function(items) {\r\n                    var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n                    var editRowIndex = gridCoreUtils.getIndexByKey(editRowKey, items);\r\n                    var editItem = items[editRowIndex];\r\n                    if (editItem) {\r\n                        var _this$_updateEditItem;\r\n                        editItem.isEditing = true;\r\n                        null === (_this$_updateEditItem = this._updateEditItem) || void 0 === _this$_updateEditItem ? void 0 : _this$_updateEditItem.call(this, editItem)\r\n                    }\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    this.callBase(change);\r\n                    this._updateEditRow(this.items(true))\r\n                },\r\n                _applyChangeUpdate: function(change) {\r\n                    this._updateEditRow(change.items);\r\n                    this.callBase(change)\r\n                },\r\n                _applyChangesOnly: function(change) {\r\n                    this._updateEditRow(change.items);\r\n                    this.callBase(change)\r\n                },\r\n                _processItems: function(items, change) {\r\n                    items = this._editingController.processItems(items, change);\r\n                    return this.callBase(items, change)\r\n                },\r\n                _processDataItem: function(dataItem, options) {\r\n                    this._editingController.processDataItem(dataItem, options, this.generateDataValues);\r\n                    return this.callBase(dataItem, options)\r\n                },\r\n                _processItem: function(item, options) {\r\n                    item = this.callBase(item, options);\r\n                    if (item.isNewRow) {\r\n                        options.dataIndex--;\r\n                        delete item.dataIndex\r\n                    }\r\n                    return item\r\n                },\r\n                _getChangedColumnIndices: function(oldItem, newItem, rowIndex, isLiveUpdate) {\r\n                    if (oldItem.isNewRow !== newItem.isNewRow || oldItem.removed !== newItem.removed) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    var cell = oldRow.cells && oldRow.cells[columnIndex];\r\n                    var isEditing = editingController && editingController.isEditCell(visibleRowIndex, columnIndex);\r\n                    if (isLiveUpdate && isEditing) {\r\n                        return false\r\n                    }\r\n                    if (cell && cell.column && !cell.column.showEditorAlways && cell.isEditing !== isEditing) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._editingController = this.getController(\"editing\")\r\n                },\r\n                getCellIndex: function($cell, rowIndex) {\r\n                    if (!$cell.is(\"td\") && rowIndex >= 0) {\r\n                        var $cellElements = this.getCellElements(rowIndex);\r\n                        var cellIndex = -1;\r\n                        each($cellElements, (function(index, cellElement) {\r\n                            if ($(cellElement).find($cell).length) {\r\n                                cellIndex = index\r\n                            }\r\n                        }));\r\n                        return cellIndex\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                publicMethods: function() {\r\n                    return this.callBase().concat([\"cellValue\"])\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    var template = this._editingController.getColumnTemplate(options);\r\n                    return template || this.callBase(options)\r\n                },\r\n                _isNativeClick: function() {\r\n                    return (devices.real().ios || devices.real().android) && this.option(\"editing.allowUpdating\")\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isRowRemoved = !!row.removed;\r\n                        var isRowInserted = !!row.isNewRow;\r\n                        var isRowModified = !!row.modified;\r\n                        isRowInserted && $row.addClass(ROW_INSERTED);\r\n                        isRowModified && $row.addClass(ROW_MODIFIED);\r\n                        if (isRowInserted || isRowRemoved) {\r\n                            $row.removeClass(ROW_SELECTED)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _getColumnIndexByElement: function($element) {\r\n                    var $tableElement = $element.closest(\"table\");\r\n                    var $tableElements = this.getTableElements();\r\n                    while ($tableElement.length && !$tableElements.filter($tableElement).length) {\r\n                        $element = $tableElement.closest(\"td\");\r\n                        $tableElement = $element.closest(\"table\")\r\n                    }\r\n                    return this._getColumnIndexByElementCore($element)\r\n                },\r\n                _getColumnIndexByElementCore: function($element) {\r\n                    var $targetElement = $element.closest(\".\" + ROW_CLASS + \"> td:not(.dx-master-detail-cell)\");\r\n                    return this.getCellIndex($targetElement)\r\n                },\r\n                _editCellByClick: function(e, eventName) {\r\n                    var editingController = this._editingController;\r\n                    var $targetElement = $(e.event.target);\r\n                    var columnIndex = this._getColumnIndexByElement($targetElement);\r\n                    var row = this._dataController.items()[e.rowIndex];\r\n                    var allowUpdating = editingController.allowUpdating({\r\n                        row: row\r\n                    }, eventName) || row && row.isNewRow;\r\n                    var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n                    var isEditedCell = editingController.isEditCell(e.rowIndex, columnIndex);\r\n                    var allowEditing = allowUpdating && column && (column.allowEditing || isEditedCell);\r\n                    var startEditAction = this.option(\"editing.startEditAction\") || \"click\";\r\n                    if (\"down\" === eventName) {\r\n                        if ((devices.real().ios || devices.real().android) && !isEditedCell) {\r\n                            resetActiveElement()\r\n                        }\r\n                        return column && column.showEditorAlways && allowEditing && editingController.editCell(e.rowIndex, columnIndex)\r\n                    }\r\n                    if (\"click\" === eventName && \"dblClick\" === startEditAction && !isEditedCell) {\r\n                        var withoutSaveEditData = null === row || void 0 === row ? void 0 : row.isNewRow;\r\n                        editingController.closeEditCell(false, withoutSaveEditData)\r\n                    }\r\n                    if (allowEditing && eventName === startEditAction) {\r\n                        return editingController.editCell(e.rowIndex, columnIndex) || editingController.isEditRow(e.rowIndex)\r\n                    }\r\n                },\r\n                _rowPointerDown: function(e) {\r\n                    this._pointerDownTimeout = setTimeout(() => {\r\n                        this._editCellByClick(e, \"down\")\r\n                    })\r\n                },\r\n                _rowClick: function(e) {\r\n                    var isEditForm = $(e.rowElement).hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS));\r\n                    e.event[TARGET_COMPONENT_NAME] = this.component;\r\n                    if (!this._editCellByClick(e, \"click\") && !isEditForm) {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _rowDblClick: function(e) {\r\n                    if (!this._editCellByClick(e, \"dblClick\")) {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _cellPrepared: function($cell, parameters) {\r\n                    var editingController = this._editingController;\r\n                    var isCommandCell = !!parameters.column.command;\r\n                    var isEditableCell = parameters.setValue;\r\n                    var isEditRow = editingController.isEditRow(parameters.rowIndex);\r\n                    var isEditing = isEditingCell(isEditRow, parameters);\r\n                    if (isEditingOrShowEditorAlwaysDataCell(isEditRow, parameters)) {\r\n                        var alignment = parameters.column.alignment;\r\n                        $cell.toggleClass(this.addWidgetPrefix(READONLY_CLASS), !isEditableCell).toggleClass(CELL_FOCUS_DISABLED_CLASS, !isEditableCell);\r\n                        if (alignment) {\r\n                            $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", alignment)\r\n                        }\r\n                    }\r\n                    if (isEditing) {\r\n                        this._editCellPrepared($cell)\r\n                    }\r\n                    if (parameters.column && !isCommandCell) {\r\n                        editingController.highlightDataCell($cell, parameters)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _editCellPrepared: noop,\r\n                _formItemPrepared: noop,\r\n                _getCellOptions: function(options) {\r\n                    var cellOptions = this.callBase(options);\r\n                    cellOptions.isEditing = this._editingController.isEditCell(cellOptions.rowIndex, cellOptions.columnIndex);\r\n                    return cellOptions\r\n                },\r\n                _createCell: function(options) {\r\n                    var $cell = this.callBase(options);\r\n                    var isEditRow = this._editingController.isEditRow(options.rowIndex);\r\n                    isEditingOrShowEditorAlwaysDataCell(isEditRow, options) && $cell.addClass(EDITOR_CELL_CLASS);\r\n                    return $cell\r\n                },\r\n                cellValue: function(rowIndex, columnIdentifier, value, text) {\r\n                    var cellOptions = this.getCellOptions(rowIndex, columnIdentifier);\r\n                    if (cellOptions) {\r\n                        if (void 0 === value) {\r\n                            return cellOptions.value\r\n                        } else {\r\n                            this._editingController.updateFieldValue(cellOptions, value, text, true)\r\n                        }\r\n                    }\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._pointerDownTimeout)\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._editingController._focusEditorIfNeed()\r\n                }\r\n            },\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var editButtonItems = this.getController(\"editing\").prepareEditButtons(this);\r\n                    return editButtonItems.concat(items)\r\n                },\r\n                optionChanged: function(args) {\r\n                    var fullName = args.fullName;\r\n                    switch (args.name) {\r\n                        case \"editing\":\r\n                            var excludedOptions = [EDITING_POPUP_OPTION_NAME, EDITING_CHANGES_OPTION_NAME, EDITING_EDITCOLUMNNAME_OPTION_NAME, EDITING_EDITROWKEY_OPTION_NAME];\r\n                            var shouldInvalidate = fullName && !excludedOptions.some(optionName => optionName === fullName);\r\n                            shouldInvalidate && this._invalidate();\r\n                            this.callBase(args);\r\n                            break;\r\n                        case \"useLegacyColumnButtonTemplate\":\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                isVisible: function() {\r\n                    var editingOptions = this.getController(\"editing\").option(\"editing\");\r\n                    return this.callBase() || (null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.allowAdding)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport \"./ui.data_grid.editor_factory\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingModule\r\n} from \"../grid_core/ui.grid_core.editing\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\ngridCore.registerModule(\"editing\", extend(true, {}, editingModule, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                _changeRowExpandCore: function(key) {\r\n                    var editingController = this._editingController;\r\n                    if (Array.isArray(key)) {\r\n                        editingController && editingController.refresh()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_row_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    EDIT_MODE_ROW,\r\n    MODES_WITH_DELAYED_FOCUS,\r\n    ROW_SELECTED_CLASS,\r\n    EDIT_FORM_CLASS\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar EDIT_ROW = \"dx-edit-row\";\r\nexport var editingRowBasedModule = {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                isRowEditMode: function() {\r\n                    return this.getEditMode() === EDIT_MODE_ROW\r\n                },\r\n                _afterCancelEditData: function(rowIndex) {\r\n                    var dataController = this._dataController;\r\n                    if (this.isRowBasedEditMode() && rowIndex >= 0) {\r\n                        dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [rowIndex, rowIndex + 1]\r\n                        })\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _isDefaultButtonVisible: function(button, options) {\r\n                    var isRowMode = this.isRowBasedEditMode();\r\n                    var isEditRow = options.row && options.row.rowIndex === this._getVisibleEditRowIndex();\r\n                    if (isRowMode) {\r\n                        switch (button.name) {\r\n                            case \"edit\":\r\n                                return !isEditRow && this.allowUpdating(options);\r\n                            case \"delete\":\r\n                                return this.callBase.apply(this, arguments) && !isEditRow;\r\n                            case \"save\":\r\n                            case \"cancel\":\r\n                                return isEditRow;\r\n                            default:\r\n                                return this.callBase.apply(this, arguments)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                isEditRow: function(rowIndex) {\r\n                    return this.isRowBasedEditMode() && this._isEditRowByIndex(rowIndex)\r\n                },\r\n                _cancelSaving: function() {\r\n                    if (this.isRowBasedEditMode()) {\r\n                        if (!this.hasChanges()) {\r\n                            this._cancelEditDataCore()\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _refreshCore: function() {\r\n                    if (this.isRowBasedEditMode()) {\r\n                        this.init()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditColumnVisible: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var editingOptions = this.option(\"editing\");\r\n                    var isRowEditMode = this.isRowEditMode();\r\n                    var isVisibleInRowEditMode = editingOptions.allowUpdating || editingOptions.allowAdding;\r\n                    return result || isRowEditMode && isVisibleInRowEditMode\r\n                },\r\n                _focusEditorIfNeed: function() {\r\n                    var editMode = this.getEditMode();\r\n                    if (this._needFocusEditor) {\r\n                        if (-1 !== MODES_WITH_DELAYED_FOCUS.indexOf(editMode)) {\r\n                            var $editingCell = this.getFocusedCellInRow(this._getVisibleEditRowIndex());\r\n                            this._delayedInputFocus($editingCell, () => {\r\n                                $editingCell && this.component.focus($editingCell)\r\n                            })\r\n                        }\r\n                        this._needFocusEditor = false\r\n                    }\r\n                }\r\n            },\r\n            data: {\r\n                _getChangedColumnIndices: function(oldItem, newItem, rowIndex, isLiveUpdate) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    if (editingController.isRowBasedEditMode() && oldItem.isEditing !== newItem.isEditing) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var editingController = this._editingController;\r\n                        var isEditRow = editingController.isEditRow(row.rowIndex);\r\n                        if (isEditRow) {\r\n                            $row.addClass(EDIT_ROW);\r\n                            $row.removeClass(ROW_SELECTED_CLASS);\r\n                            if (\"detail\" === row.rowType) {\r\n                                $row.addClass(this.addWidgetPrefix(EDIT_FORM_CLASS))\r\n                            }\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _update: function(change) {\r\n                    this.callBase(change);\r\n                    if (\"updateSelection\" === change.changeType) {\r\n                        this.getTableElements().children(\"tbody\").children(\".\" + EDIT_ROW).removeClass(ROW_SELECTED_CLASS)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_row_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingRowBasedModule\r\n} from \"../grid_core/ui.grid_core.editing_row_based\";\r\ngridCore.registerModule(\"editingRowBased\", editingRowBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_form_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Button from \"../button\";\r\nimport devices from \"../../core/devices\";\r\nimport Form from \"../form\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    EDIT_MODE_FORM,\r\n    EDIT_MODE_POPUP,\r\n    FOCUSABLE_ELEMENT_SELECTOR,\r\n    EDITING_EDITROWKEY_OPTION_NAME,\r\n    EDITING_POPUP_OPTION_NAME,\r\n    DATA_EDIT_DATA_INSERT_TYPE,\r\n    EDITING_FORM_OPTION_NAME\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar EDIT_POPUP_CLASS = \"edit-popup\";\r\nvar SCROLLABLE_CONTAINER_CLASS = \"dx-scrollable-container\";\r\nvar EDIT_POPUP_FORM_CLASS = \"edit-popup-form\";\r\nvar BUTTON_CLASS = \"dx-button\";\r\nvar FORM_BUTTONS_CONTAINER_CLASS = \"form-buttons-container\";\r\nvar getEditorType = item => {\r\n    var _column$formItem;\r\n    var column = item.column;\r\n    return item.isCustomEditorType ? item.editorType : null === (_column$formItem = column.formItem) || void 0 === _column$formItem ? void 0 : _column$formItem.editorType\r\n};\r\nvar forEachFormItems = (items, callBack) => {\r\n    items.forEach(item => {\r\n        if (item.items || item.tabs) {\r\n            forEachFormItems(item.items || item.tabs, callBack)\r\n        } else {\r\n            callBack(item)\r\n        }\r\n    })\r\n};\r\nexport var editingFormBasedModule = {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                init: function() {\r\n                    this._editForm = null;\r\n                    this._updateEditFormDeferred = null;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                isFormOrPopupEditMode: function() {\r\n                    return this.isPopupEditMode() || this.isFormEditMode()\r\n                },\r\n                isPopupEditMode: function() {\r\n                    var editMode = this.option(\"editing.mode\");\r\n                    return editMode === EDIT_MODE_POPUP\r\n                },\r\n                isFormEditMode: function() {\r\n                    var editMode = this.option(\"editing.mode\");\r\n                    return editMode === EDIT_MODE_FORM\r\n                },\r\n                getFirstEditableColumnIndex: function() {\r\n                    var firstFormItem = this._firstFormItem;\r\n                    if (this.isFormEditMode() && firstFormItem) {\r\n                        var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n                        var editRowIndex = this._dataController.getRowIndexByKey(editRowKey);\r\n                        var $editFormElements = this._rowsView.getCellElements(editRowIndex);\r\n                        return this._rowsView._getEditFormEditorVisibleIndex($editFormElements, firstFormItem.column)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getEditFormRowIndex: function() {\r\n                    return this.isFormOrPopupEditMode() ? this._getVisibleEditRowIndex() : this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditColumnVisible: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var editingOptions = this.option(\"editing\");\r\n                    return this.isFormOrPopupEditMode() ? editingOptions.allowUpdating || result : result\r\n                },\r\n                _handleDataChanged: function(args) {\r\n                    var editForm = this._editForm;\r\n                    if (\"refresh\" === args.changeType && this.isPopupEditMode() && null !== editForm && void 0 !== editForm && editForm.option(\"visible\")) {\r\n                        this._repaintEditPopup()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                getPopupContent: function() {\r\n                    var _this$_editPopup;\r\n                    var popupVisible = null === (_this$_editPopup = this._editPopup) || void 0 === _this$_editPopup ? void 0 : _this$_editPopup.option(\"visible\");\r\n                    if (this.isPopupEditMode() && popupVisible) {\r\n                        return this._$popupContent\r\n                    }\r\n                },\r\n                _showAddedRow: function(rowIndex) {\r\n                    if (this.isPopupEditMode()) {\r\n                        this._showEditPopup(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _cancelEditDataCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.isPopupEditMode()) {\r\n                        this._hideEditPopup()\r\n                    }\r\n                },\r\n                _updateEditRowCore: function(row, skipCurrentRow, isCustomSetCellValue) {\r\n                    var editForm = this._editForm;\r\n                    if (this.isPopupEditMode()) {\r\n                        if (this.option(\"repaintChangesOnly\")) {\r\n                            var _row$update;\r\n                            null === (_row$update = row.update) || void 0 === _row$update ? void 0 : _row$update.call(row, row)\r\n                        } else if (editForm) {\r\n                            this._updateEditFormDeferred = (new Deferred).done(() => editForm.repaint());\r\n                            if (!this._updateLockCount) {\r\n                                this._updateEditFormDeferred.resolve()\r\n                            }\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _showEditPopup: function(rowIndex, repaintForm) {\r\n                    var isMobileDevice = \"desktop\" !== devices.current().deviceType;\r\n                    var popupOptions = extend({\r\n                        showTitle: false,\r\n                        fullScreen: isMobileDevice,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        toolbarItems: [{\r\n                            toolbar: \"bottom\",\r\n                            location: \"after\",\r\n                            widget: \"dxButton\",\r\n                            options: this._getSaveButtonConfig()\r\n                        }, {\r\n                            toolbar: \"bottom\",\r\n                            location: \"after\",\r\n                            widget: \"dxButton\",\r\n                            options: this._getCancelButtonConfig()\r\n                        }],\r\n                        contentTemplate: this._getPopupEditFormTemplate(rowIndex)\r\n                    }, this.option(EDITING_POPUP_OPTION_NAME));\r\n                    if (!this._editPopup) {\r\n                        var $popupContainer = $(\"<div>\").appendTo(this.component.$element()).addClass(this.addWidgetPrefix(EDIT_POPUP_CLASS));\r\n                        this._editPopup = this._createComponent($popupContainer, Popup, {\r\n                            copyRootClassesToWrapper: true,\r\n                            _ignoreCopyRootClassesToWrapperDeprecation: true\r\n                        });\r\n                        this._editPopup.on(\"hiding\", this._getEditPopupHiddenHandler());\r\n                        this._editPopup.on(\"shown\", e => {\r\n                            eventsEngine.trigger(e.component.$content().find(FOCUSABLE_ELEMENT_SELECTOR).not(\".\" + SCROLLABLE_CONTAINER_CLASS).first(), \"focus\");\r\n                            if (repaintForm) {\r\n                                var _this$_editForm;\r\n                                null === (_this$_editForm = this._editForm) || void 0 === _this$_editForm ? void 0 : _this$_editForm.repaint()\r\n                            }\r\n                        })\r\n                    }\r\n                    this._editPopup.option(popupOptions);\r\n                    this._editPopup.show();\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _getPopupEditFormTemplate: function(rowIndex) {\r\n                    var row = this.component.getVisibleRows()[rowIndex];\r\n                    var templateOptions = {\r\n                        row: row,\r\n                        rowType: row.rowType,\r\n                        key: row.key,\r\n                        rowIndex: rowIndex\r\n                    };\r\n                    this._rowsView._addWatchMethod(templateOptions, row);\r\n                    return container => {\r\n                        var formTemplate = this.getEditFormTemplate();\r\n                        var scrollable = this._createComponent($(\"<div>\").appendTo(container), Scrollable);\r\n                        this._$popupContent = scrollable.$content();\r\n                        formTemplate(this._$popupContent, templateOptions, {\r\n                            isPopupForm: true\r\n                        });\r\n                        this._rowsView.renderDelayedTemplates()\r\n                    }\r\n                },\r\n                _repaintEditPopup: function() {\r\n                    var _this$_editPopup2;\r\n                    var rowIndex = this._getVisibleEditRowIndex();\r\n                    if (null !== (_this$_editPopup2 = this._editPopup) && void 0 !== _this$_editPopup2 && _this$_editPopup2.option(\"visible\") && rowIndex >= 0) {\r\n                        var defaultAnimation = this._editPopup.option(\"animation\");\r\n                        this._editPopup.option(\"animation\", null);\r\n                        this._showEditPopup(rowIndex, true);\r\n                        this._editPopup.option(\"animation\", defaultAnimation)\r\n                    }\r\n                },\r\n                _hideEditPopup: function() {\r\n                    var _this$_editPopup3;\r\n                    null === (_this$_editPopup3 = this._editPopup) || void 0 === _this$_editPopup3 ? void 0 : _this$_editPopup3.option(\"visible\", false)\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"editing\" === args.name && this.isFormOrPopupEditMode()) {\r\n                        var fullName = args.fullName;\r\n                        if (0 === fullName.indexOf(EDITING_FORM_OPTION_NAME)) {\r\n                            this._handleFormOptionChange(args);\r\n                            args.handled = true\r\n                        } else if (0 === fullName.indexOf(EDITING_POPUP_OPTION_NAME)) {\r\n                            this._handlePopupOptionChange(args);\r\n                            args.handled = true\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleFormOptionChange: function(args) {\r\n                    var _this$_editPopup4;\r\n                    if (this.isFormEditMode()) {\r\n                        var editRowIndex = this._getVisibleEditRowIndex();\r\n                        if (editRowIndex >= 0) {\r\n                            this._dataController.updateItems({\r\n                                changeType: \"update\",\r\n                                rowIndices: [editRowIndex]\r\n                            })\r\n                        }\r\n                    } else if (null !== (_this$_editPopup4 = this._editPopup) && void 0 !== _this$_editPopup4 && _this$_editPopup4.option(\"visible\") && 0 === args.fullName.indexOf(EDITING_FORM_OPTION_NAME)) {\r\n                        this._repaintEditPopup()\r\n                    }\r\n                },\r\n                _handlePopupOptionChange: function(args) {\r\n                    var editPopup = this._editPopup;\r\n                    if (editPopup) {\r\n                        var popupOptionName = args.fullName.slice(EDITING_POPUP_OPTION_NAME.length + 1);\r\n                        if (popupOptionName) {\r\n                            editPopup.option(popupOptionName, args.value)\r\n                        } else {\r\n                            editPopup.option(args.value)\r\n                        }\r\n                    }\r\n                },\r\n                renderFormEditTemplate: function(detailCellOptions, item, formTemplateOptions, container, isReadOnly) {\r\n                    var that = this;\r\n                    var $container = $(container);\r\n                    var column = item.column;\r\n                    var editorType = getEditorType(item);\r\n                    var rowData = null === detailCellOptions || void 0 === detailCellOptions ? void 0 : detailCellOptions.row.data;\r\n                    var form = formTemplateOptions.component;\r\n                    var {\r\n                        label: label,\r\n                        labelMark: labelMark,\r\n                        labelMode: labelMode\r\n                    } = formTemplateOptions.editorOptions || {};\r\n                    var cellOptions = extend({}, detailCellOptions, {\r\n                        data: rowData,\r\n                        cellElement: null,\r\n                        isOnForm: true,\r\n                        item: item,\r\n                        id: form.getItemID(item.name || item.dataField),\r\n                        column: extend({}, column, {\r\n                            editorType: editorType,\r\n                            editorOptions: extend({\r\n                                label: label,\r\n                                labelMark: labelMark,\r\n                                labelMode: labelMode\r\n                            }, column.editorOptions, item.editorOptions)\r\n                        }),\r\n                        columnIndex: column.index,\r\n                        setValue: !isReadOnly && column.allowEditing && function(value) {\r\n                            that.updateFieldValue(cellOptions, value)\r\n                        }\r\n                    });\r\n                    cellOptions.value = column.calculateCellValue(rowData);\r\n                    var template = this._getFormEditItemTemplate.bind(this)(cellOptions, column);\r\n                    this._rowsView.renderTemplate($container, template, cellOptions, !!$container.closest(getWindow().document).length).done(() => {\r\n                        this._rowsView._updateCell($container, cellOptions)\r\n                    });\r\n                    return cellOptions\r\n                },\r\n                getFormEditorTemplate: function(cellOptions, item) {\r\n                    var column = this.component.columnOption(item.dataField);\r\n                    return (options, container) => {\r\n                        var _cellOptions$row$watc, _cellOptions$row;\r\n                        var $container = $(container);\r\n                        null === (_cellOptions$row$watc = (_cellOptions$row = cellOptions.row).watch) || void 0 === _cellOptions$row$watc ? void 0 : _cellOptions$row$watc.call(_cellOptions$row, (function() {\r\n                            return column.selector(cellOptions.row.data)\r\n                        }), () => {\r\n                            var _validator;\r\n                            var $editorElement = $container.find(\".dx-widget\").first();\r\n                            var validator = $editorElement.data(\"dxValidator\");\r\n                            var validatorOptions = null === (_validator = validator) || void 0 === _validator ? void 0 : _validator.option();\r\n                            $container.contents().remove();\r\n                            cellOptions = this.renderFormEditTemplate.bind(this)(cellOptions, item, options, $container);\r\n                            $editorElement = $container.find(\".dx-widget\").first();\r\n                            validator = $editorElement.data(\"dxValidator\");\r\n                            if (validatorOptions && !validator) {\r\n                                $editorElement.dxValidator({\r\n                                    validationRules: validatorOptions.validationRules,\r\n                                    validationGroup: validatorOptions.validationGroup,\r\n                                    dataGetter: validatorOptions.dataGetter\r\n                                })\r\n                            }\r\n                        });\r\n                        cellOptions = this.renderFormEditTemplate.bind(this)(cellOptions, item, options, $container)\r\n                    }\r\n                },\r\n                getEditFormOptions: function(detailOptions) {\r\n                    var _this$_getValidationG;\r\n                    var editFormOptions = null === (_this$_getValidationG = this._getValidationGroupsInForm) || void 0 === _this$_getValidationG ? void 0 : _this$_getValidationG.call(this, detailOptions);\r\n                    var userCustomizeItem = this.option(\"editing.form.customizeItem\");\r\n                    var editFormItemClass = this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS);\r\n                    var items = this.option(\"editing.form.items\");\r\n                    var isCustomEditorType = {};\r\n                    if (!items) {\r\n                        var columns = this.getController(\"columns\").getColumns();\r\n                        items = [];\r\n                        each(columns, (function(_, column) {\r\n                            if (!column.isBand && !column.type) {\r\n                                items.push({\r\n                                    column: column,\r\n                                    name: column.name,\r\n                                    dataField: column.dataField\r\n                                })\r\n                            }\r\n                        }))\r\n                    } else {\r\n                        forEachFormItems(items, item => {\r\n                            var itemId = (null === item || void 0 === item ? void 0 : item.name) || (null === item || void 0 === item ? void 0 : item.dataField);\r\n                            if (itemId) {\r\n                                isCustomEditorType[itemId] = !!item.editorType\r\n                            }\r\n                        })\r\n                    }\r\n                    return extend({}, editFormOptions, {\r\n                        items: items,\r\n                        formID: \"dx-\" + new Guid,\r\n                        customizeItem: item => {\r\n                            var column;\r\n                            var itemId = item.name || item.dataField;\r\n                            if (item.column || itemId) {\r\n                                column = item.column || this._columnsController.columnOption(item.name ? \"name:\" + item.name : \"dataField:\" + item.dataField)\r\n                            }\r\n                            if (column) {\r\n                                item.label = item.label || {};\r\n                                item.label.text = item.label.text || column.caption;\r\n                                if (\"boolean\" === column.dataType && void 0 === item.label.visible) {\r\n                                    var labelMode = this.option(\"editing.form.labelMode\");\r\n                                    if (\"floating\" === labelMode || \"static\" === labelMode) {\r\n                                        item.label.visible = true\r\n                                    }\r\n                                }\r\n                                item.template = item.template || this.getFormEditorTemplate(detailOptions, item);\r\n                                item.column = column;\r\n                                item.isCustomEditorType = isCustomEditorType[itemId];\r\n                                if (column.formItem) {\r\n                                    extend(item, column.formItem)\r\n                                }\r\n                                if (void 0 === item.isRequired && column.validationRules) {\r\n                                    item.isRequired = column.validationRules.some((function(rule) {\r\n                                        return \"required\" === rule.type\r\n                                    }));\r\n                                    item.validationRules = []\r\n                                }\r\n                                var itemVisible = isDefined(item.visible) ? item.visible : true;\r\n                                if (!this._firstFormItem && itemVisible) {\r\n                                    this._firstFormItem = item\r\n                                }\r\n                            }\r\n                            null === userCustomizeItem || void 0 === userCustomizeItem ? void 0 : userCustomizeItem.call(this, item);\r\n                            item.cssClass = isString(item.cssClass) ? item.cssClass + \" \" + editFormItemClass : editFormItemClass\r\n                        }\r\n                    })\r\n                },\r\n                getEditFormTemplate: function() {\r\n                    return ($container, detailOptions, options) => {\r\n                        var editFormOptions = this.option(EDITING_FORM_OPTION_NAME);\r\n                        var baseEditFormOptions = this.getEditFormOptions(detailOptions);\r\n                        var $formContainer = $(\"<div>\").appendTo($container);\r\n                        var isPopupForm = null === options || void 0 === options ? void 0 : options.isPopupForm;\r\n                        this._firstFormItem = void 0;\r\n                        if (isPopupForm) {\r\n                            $formContainer.addClass(this.addWidgetPrefix(EDIT_POPUP_FORM_CLASS))\r\n                        }\r\n                        this._editForm = this._createComponent($formContainer, Form, extend({}, editFormOptions, baseEditFormOptions));\r\n                        if (!isPopupForm) {\r\n                            var $buttonsContainer = $(\"<div>\").addClass(this.addWidgetPrefix(FORM_BUTTONS_CONTAINER_CLASS)).appendTo($container);\r\n                            this._createComponent($(\"<div>\").appendTo($buttonsContainer), Button, this._getSaveButtonConfig());\r\n                            this._createComponent($(\"<div>\").appendTo($buttonsContainer), Button, this._getCancelButtonConfig())\r\n                        }\r\n                        this._editForm.on(\"contentReady\", () => {\r\n                            var _this$_editPopup5;\r\n                            null === (_this$_editPopup5 = this._editPopup) || void 0 === _this$_editPopup5 ? void 0 : _this$_editPopup5.repaint()\r\n                        })\r\n                    }\r\n                },\r\n                getEditForm: function() {\r\n                    return this._editForm\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var _this$_updateEditForm;\r\n                    null === (_this$_updateEditForm = this._updateEditFormDeferred) || void 0 === _this$_updateEditForm ? void 0 : _this$_updateEditForm.resolve()\r\n                },\r\n                _beforeEndSaving: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.isPopupEditMode()) {\r\n                        var _this$_editPopup6;\r\n                        null === (_this$_editPopup6 = this._editPopup) || void 0 === _this$_editPopup6 ? void 0 : _this$_editPopup6.hide()\r\n                    }\r\n                },\r\n                _processDataItemCore: function(item, _ref) {\r\n                    var {\r\n                        type: type\r\n                    } = _ref;\r\n                    if (this.isPopupEditMode() && type === DATA_EDIT_DATA_INSERT_TYPE) {\r\n                        item.visible = false\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _editRowFromOptionChangedCore: function(rowIndices, rowIndex, oldRowIndex) {\r\n                    if (this.isPopupEditMode()) {\r\n                        this._showEditPopup(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                }\r\n            },\r\n            data: {\r\n                _updateEditItem: function(item) {\r\n                    if (this._editingController.isFormEditMode()) {\r\n                        item.rowType = \"detail\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _renderCellContent: function($cell, options) {\r\n                    if (\"data\" === options.rowType && this._editingController.isPopupEditMode() && false === options.row.visible) {\r\n                        return\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                getCellElements: function(rowIndex) {\r\n                    var $cellElements = this.callBase(rowIndex);\r\n                    var editingController = this._editingController;\r\n                    var editForm = editingController.getEditForm();\r\n                    var editFormRowIndex = editingController.getEditFormRowIndex();\r\n                    if (editFormRowIndex === rowIndex && $cellElements && editForm) {\r\n                        return editForm.$element().find(\".\" + this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS) + \", .\" + BUTTON_CLASS)\r\n                    }\r\n                    return $cellElements\r\n                },\r\n                _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n                    var editFormRowIndex = this._editingController.getEditFormRowIndex();\r\n                    if (editFormRowIndex === rowIndex && isString(columnIdentifier)) {\r\n                        var column = this._columnsController.columnOption(columnIdentifier);\r\n                        return this._getEditFormEditorVisibleIndex($cells, column)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _getEditFormEditorVisibleIndex: function($cells, column) {\r\n                    var visibleIndex = -1;\r\n                    each($cells, (function(index, cellElement) {\r\n                        var item = $(cellElement).find(\".dx-field-item-content\").data(\"dx-form-item\");\r\n                        if (null !== item && void 0 !== item && item.column && column && item.column.index === column.index) {\r\n                            visibleIndex = index;\r\n                            return false\r\n                        }\r\n                    }));\r\n                    return visibleIndex\r\n                },\r\n                _isFormItem: function(parameters) {\r\n                    var isDetailRow = \"detail\" === parameters.rowType || \"detailAdaptive\" === parameters.rowType;\r\n                    var isPopupEditing = \"data\" === parameters.rowType && this._editingController.isPopupEditMode();\r\n                    return (isDetailRow || isPopupEditing) && parameters.item\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    if (this._isFormItem(parameters)) {\r\n                        this._formItemPrepared(parameters, $cell)\r\n                    } else {\r\n                        this.callBase($cell, parameters)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_form_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingFormBasedModule\r\n} from \"../grid_core/ui.grid_core.editing_form_based\";\r\ngridCore.registerModule(\"editingFormBased\", editingFormBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_cell_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport holdEvent from \"../../events/hold\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    deferRender\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    EDIT_MODE_BATCH,\r\n    EDIT_MODE_CELL,\r\n    TARGET_COMPONENT_NAME\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar ADD_ROW_BUTTON_CLASS = \"addrow-button\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar CELL_MODIFIED_CLASS = \"dx-cell-modified\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar ROW_REMOVED = \"dx-row-removed\";\r\nvar EDITING_EDITROWKEY_OPTION_NAME = \"editing.editRowKey\";\r\nvar EDITING_EDITCOLUMNNAME_OPTION_NAME = \"editing.editColumnName\";\r\nvar DATA_EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nexport default {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                init: function() {\r\n                    var needCreateHandlers = !this._saveEditorHandler;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (needCreateHandlers) {\r\n                        var $pointerDownTarget;\r\n                        var isResizing;\r\n                        this._pointerUpEditorHandler = () => {\r\n                            var _this$getController;\r\n                            isResizing = null === (_this$getController = this.getController(\"columnsResizer\")) || void 0 === _this$getController ? void 0 : _this$getController.isResizing()\r\n                        };\r\n                        this._pointerDownEditorHandler = e => $pointerDownTarget = $(e.target);\r\n                        this._saveEditorHandler = this.createAction((function(e) {\r\n                            var event = e.event;\r\n                            var $target = $(event.target);\r\n                            var targetComponent = event[TARGET_COMPONENT_NAME];\r\n                            if ($pointerDownTarget && $pointerDownTarget.is(\"input\") && !$pointerDownTarget.is($target)) {\r\n                                return\r\n                            }\r\n\r\n                            function checkEditorPopup($element) {\r\n                                return $element && !!$element.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length\r\n                            }\r\n                            if (this.isCellOrBatchEditMode() && !this._editCellInProgress) {\r\n                                var isEditorPopup = checkEditorPopup($target) || checkEditorPopup(null === targetComponent || void 0 === targetComponent ? void 0 : targetComponent.$element());\r\n                                var isDomElement = !!$target.closest(getWindow().document).length;\r\n                                var isAnotherComponent = targetComponent && !targetComponent._disposed && targetComponent !== this.component;\r\n                                var isAddRowButton = !!$target.closest(\".\".concat(this.addWidgetPrefix(ADD_ROW_BUTTON_CLASS))).length;\r\n                                var isFocusOverlay = $target.hasClass(this.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n                                var isCellEditMode = this.isCellEditMode();\r\n                                if (!isResizing && !isEditorPopup && !isFocusOverlay && !(isAddRowButton && isCellEditMode && this.isEditing()) && (isDomElement || isAnotherComponent)) {\r\n                                    this._closeEditItem.bind(this)($target)\r\n                                }\r\n                            }\r\n                        }));\r\n                        eventsEngine.on(domAdapter.getDocument(), pointerEvents.up, this._pointerUpEditorHandler);\r\n                        eventsEngine.on(domAdapter.getDocument(), pointerEvents.down, this._pointerDownEditorHandler);\r\n                        eventsEngine.on(domAdapter.getDocument(), clickEventName, this._saveEditorHandler)\r\n                    }\r\n                },\r\n                isCellEditMode: function() {\r\n                    return this.option(\"editing.mode\") === EDIT_MODE_CELL\r\n                },\r\n                isBatchEditMode: function() {\r\n                    return this.option(\"editing.mode\") === EDIT_MODE_BATCH\r\n                },\r\n                isCellOrBatchEditMode: function() {\r\n                    return this.isCellEditMode() || this.isBatchEditMode()\r\n                },\r\n                _needToCloseEditableCell: function($targetElement) {\r\n                    var $element = this.component.$element();\r\n                    var result = this.isEditing();\r\n                    var isCurrentComponentElement = !$element || !!$targetElement.closest($element).length;\r\n                    if (isCurrentComponentElement) {\r\n                        var isDataRow = $targetElement.closest(\".\" + DATA_ROW_CLASS).length;\r\n                        if (isDataRow) {\r\n                            var rowsView = this.getView(\"rowsView\");\r\n                            var $targetCell = $targetElement.closest(\".\" + ROW_CLASS + \"> td\");\r\n                            var rowIndex = rowsView.getRowIndex($targetCell.parent());\r\n                            var columnIndex = rowsView.getCellElements(rowIndex).index($targetCell);\r\n                            var visibleColumns = this._columnsController.getVisibleColumns();\r\n                            var allowEditing = visibleColumns[columnIndex] && visibleColumns[columnIndex].allowEditing;\r\n                            result = result && !allowEditing && !this.isEditCell(rowIndex, columnIndex)\r\n                        }\r\n                    }\r\n                    return result || this.callBase.apply(this, arguments)\r\n                },\r\n                _closeEditItem: function($targetElement) {\r\n                    if (this._needToCloseEditableCell($targetElement)) {\r\n                        this.closeEditCell()\r\n                    }\r\n                },\r\n                _focusEditorIfNeed: function() {\r\n                    if (this._needFocusEditor && this.isCellOrBatchEditMode()) {\r\n                        var _this$_rowsView;\r\n                        var editColumnIndex = this._getVisibleEditColumnIndex();\r\n                        var $cell = null === (_this$_rowsView = this._rowsView) || void 0 === _this$_rowsView ? void 0 : _this$_rowsView._getCellElement(this._getVisibleEditRowIndex(), editColumnIndex);\r\n                        if ($cell && !$cell.find(\":focus\").length) {\r\n                            this._focusEditingCell(() => {\r\n                                this._editCellInProgress = false\r\n                            }, $cell, true)\r\n                        } else {\r\n                            this._editCellInProgress = false\r\n                        }\r\n                        this._needFocusEditor = false\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                isEditing: function() {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var isEditRowKeyDefined = isDefined(this.option(EDITING_EDITROWKEY_OPTION_NAME));\r\n                        var isEditColumnNameDefined = isDefined(this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME));\r\n                        return isEditRowKeyDefined && isEditColumnNameDefined\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditColumnNameChange: function(args) {\r\n                    var oldRowIndex = this._getVisibleEditRowIndex(args.previousValue);\r\n                    if (this.isCellOrBatchEditMode() && -1 !== oldRowIndex && isDefined(args.value) && args.value !== args.previousValue) {\r\n                        var columnIndex = this._columnsController.getVisibleColumnIndex(args.value);\r\n                        var oldColumnIndex = this._columnsController.getVisibleColumnIndex(args.previousValue);\r\n                        this._editCellFromOptionChanged(columnIndex, oldColumnIndex, oldRowIndex)\r\n                    }\r\n                },\r\n                _addRow: function(parentKey, deferred) {\r\n                    if (this.isCellEditMode() && this.hasChanges()) {\r\n                        var _deferred = new Deferred;\r\n                        this.saveEditData().done(() => {\r\n                            if (!this.hasChanges()) {\r\n                                this.addRow(parentKey).done(_deferred.resolve).fail(_deferred.reject)\r\n                            } else {\r\n                                _deferred.reject(\"cancel\")\r\n                            }\r\n                        });\r\n                        return _deferred.promise()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    return this._editCell({\r\n                        rowIndex: rowIndex,\r\n                        columnIndex: columnIndex\r\n                    })\r\n                },\r\n                _editCell: function(options) {\r\n                    var d = new Deferred;\r\n                    var coreResult;\r\n                    this.executeOperation(d, () => {\r\n                        coreResult = this._editCellCore(options);\r\n                        when(coreResult).done(d.resolve).fail(d.reject)\r\n                    });\r\n                    return void 0 !== coreResult ? coreResult : d.promise()\r\n                },\r\n                _editCellCore: function(options) {\r\n                    var dataController = this._dataController;\r\n                    var isEditByOptionChanged = isDefined(options.oldColumnIndex) || isDefined(options.oldRowIndex);\r\n                    var {\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex,\r\n                        column: column,\r\n                        item: item\r\n                    } = this._getNormalizedEditCellOptions(options);\r\n                    var params = {\r\n                        data: null === item || void 0 === item ? void 0 : item.data,\r\n                        cancel: false,\r\n                        column: column\r\n                    };\r\n                    if (void 0 === item.key) {\r\n                        this._dataController.fireError(\"E1043\");\r\n                        return\r\n                    }\r\n                    if (column && (\"data\" === item.rowType || \"detailAdaptive\" === item.rowType) && !item.removed && this.isCellOrBatchEditMode()) {\r\n                        if (!isEditByOptionChanged && this.isEditCell(rowIndex, columnIndex)) {\r\n                            return true\r\n                        }\r\n                        var editRowIndex = rowIndex + dataController.getRowIndexOffset();\r\n                        return when(this._beforeEditCell(rowIndex, columnIndex, item)).done(cancel => {\r\n                            if (cancel) {\r\n                                return\r\n                            }\r\n                            if (!this._prepareEditCell(params, item, columnIndex, editRowIndex)) {\r\n                                this._processCanceledEditingCell()\r\n                            }\r\n                        })\r\n                    }\r\n                    return false\r\n                },\r\n                _beforeEditCell: function(rowIndex, columnIndex, item) {\r\n                    if (this.isCellEditMode() && !item.isNewRow && this.hasChanges()) {\r\n                        var d = new Deferred;\r\n                        this.saveEditData().always(() => {\r\n                            d.resolve(this.hasChanges())\r\n                        });\r\n                        return d\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    var publicMethods = this.callBase.apply(this, arguments);\r\n                    return publicMethods.concat([\"editCell\", \"closeEditCell\"])\r\n                },\r\n                _getNormalizedEditCellOptions: function(_ref) {\r\n                    var {\r\n                        oldColumnIndex: oldColumnIndex,\r\n                        oldRowIndex: oldRowIndex,\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    } = _ref;\r\n                    var columnsController = this._columnsController;\r\n                    var visibleColumns = columnsController.getVisibleColumns();\r\n                    var items = this._dataController.items();\r\n                    var item = items[rowIndex];\r\n                    var oldColumn;\r\n                    if (isDefined(oldColumnIndex)) {\r\n                        oldColumn = visibleColumns[oldColumnIndex]\r\n                    } else {\r\n                        oldColumn = this._getEditColumn()\r\n                    }\r\n                    if (!isDefined(oldRowIndex)) {\r\n                        oldRowIndex = this._getVisibleEditRowIndex()\r\n                    }\r\n                    if (isString(columnIndex)) {\r\n                        columnIndex = columnsController.columnOption(columnIndex, \"index\");\r\n                        columnIndex = columnsController.getVisibleIndex(columnIndex)\r\n                    }\r\n                    var column = visibleColumns[columnIndex];\r\n                    return {\r\n                        oldColumn: oldColumn,\r\n                        columnIndex: columnIndex,\r\n                        oldRowIndex: oldRowIndex,\r\n                        rowIndex: rowIndex,\r\n                        column: column,\r\n                        item: item\r\n                    }\r\n                },\r\n                _prepareEditCell: function(params, item, editColumnIndex, editRowIndex) {\r\n                    if (!item.isNewRow) {\r\n                        params.key = item.key\r\n                    }\r\n                    if (this._isEditingStart(params)) {\r\n                        return false\r\n                    }\r\n                    this._pageIndex = this._dataController.pageIndex();\r\n                    this._setEditRowKey(item.key);\r\n                    this._setEditColumnNameByIndex(editColumnIndex);\r\n                    if (!params.column.showEditorAlways) {\r\n                        var _item$oldData;\r\n                        this._addInternalData({\r\n                            key: item.key,\r\n                            oldData: null !== (_item$oldData = item.oldData) && void 0 !== _item$oldData ? _item$oldData : item.data\r\n                        })\r\n                    }\r\n                    return true\r\n                },\r\n                closeEditCell: function(isError, withoutSaveEditData) {\r\n                    var result = when();\r\n                    var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var deferred = new Deferred;\r\n                        result = new Deferred;\r\n                        this.executeOperation(deferred, () => {\r\n                            this._closeEditCellCore(isError, oldEditRowIndex, withoutSaveEditData).always(result.resolve)\r\n                        })\r\n                    }\r\n                    return result.promise()\r\n                },\r\n                _closeEditCellCore: function(isError, oldEditRowIndex, withoutSaveEditData) {\r\n                    var dataController = this._dataController;\r\n                    var deferred = new Deferred;\r\n                    var promise = deferred.promise();\r\n                    if (this.isCellEditMode() && this.hasChanges()) {\r\n                        if (!withoutSaveEditData) {\r\n                            this.saveEditData().done(error => {\r\n                                if (!this.hasChanges()) {\r\n                                    this.closeEditCell(!!error).always(deferred.resolve);\r\n                                    return\r\n                                }\r\n                                deferred.resolve()\r\n                            });\r\n                            return promise\r\n                        }\r\n                    } else {\r\n                        this._resetEditRowKey();\r\n                        this._resetEditColumnName();\r\n                        if (oldEditRowIndex >= 0) {\r\n                            var rowIndices = [oldEditRowIndex];\r\n                            this._beforeCloseEditCellInBatchMode(rowIndices);\r\n                            if (!isError) {\r\n                                dataController.updateItems({\r\n                                    changeType: \"update\",\r\n                                    rowIndices: rowIndices\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    deferred.resolve();\r\n                    return promise\r\n                },\r\n                _resetModifiedClassCells: function(changes) {\r\n                    if (this.isBatchEditMode()) {\r\n                        var columnsCount = this._columnsController.getVisibleColumns().length;\r\n                        changes.forEach(_ref2 => {\r\n                            var {\r\n                                key: key\r\n                            } = _ref2;\r\n                            var rowIndex = this._dataController.getRowIndexByKey(key);\r\n                            if (-1 !== rowIndex) {\r\n                                for (var columnIndex = 0; columnIndex < columnsCount; columnIndex++) {\r\n                                    this._rowsView._getCellElement(rowIndex, columnIndex).removeClass(CELL_MODIFIED_CLASS)\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _prepareChange: function(options, value, text) {\r\n                    var $cellElement = $(options.cellElement);\r\n                    if (this.isBatchEditMode() && void 0 !== options.key) {\r\n                        this._applyModified($cellElement, options)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _cancelSaving: function() {\r\n                    var dataController = this._dataController;\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        if (this.isBatchEditMode()) {\r\n                            this._resetEditIndices()\r\n                        }\r\n                        dataController.updateItems()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                optionChanged: function(args) {\r\n                    var fullName = args.fullName;\r\n                    if (\"editing\" === args.name && fullName === EDITING_EDITCOLUMNNAME_OPTION_NAME) {\r\n                        this._handleEditColumnNameChange(args);\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                },\r\n                _editCellFromOptionChanged: function(columnIndex, oldColumnIndex, oldRowIndex) {\r\n                    var columns = this._columnsController.getVisibleColumns();\r\n                    if (columnIndex > -1) {\r\n                        deferRender(() => {\r\n                            this._repaintEditCell(columns[columnIndex], columns[oldColumnIndex], oldRowIndex)\r\n                        })\r\n                    }\r\n                },\r\n                _handleEditRowKeyChange: function(args) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var columnIndex = this._getVisibleEditColumnIndex();\r\n                        var oldRowIndexCorrection = this._getEditRowIndexCorrection();\r\n                        var oldRowIndex = this._dataController.getRowIndexByKey(args.previousValue) + oldRowIndexCorrection;\r\n                        if (isDefined(args.value) && args.value !== args.previousValue) {\r\n                            var _this$_editCellFromOp;\r\n                            null === (_this$_editCellFromOp = this._editCellFromOptionChanged) || void 0 === _this$_editCellFromOp ? void 0 : _this$_editCellFromOp.call(this, columnIndex, columnIndex, oldRowIndex)\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                deleteRow: function(rowIndex) {\r\n                    if (this.isCellEditMode() && this.isEditing()) {\r\n                        var isNewRow = this._dataController.items()[rowIndex].isNewRow;\r\n                        var rowKey = this._dataController.getKeyByRowIndex(rowIndex);\r\n                        this.closeEditCell(null, isNewRow).always(() => {\r\n                            rowIndex = this._dataController.getRowIndexByKey(rowKey);\r\n                            this._checkAndDeleteRow(rowIndex)\r\n                        })\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _checkAndDeleteRow: function(rowIndex) {\r\n                    if (this.isBatchEditMode()) {\r\n                        this._deleteRowCore(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _refreshCore: function(isPageChanged) {\r\n                    var needResetIndexes = this.isBatchEditMode() || isPageChanged && \"virtual\" !== this.option(\"scrolling.mode\");\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        if (needResetIndexes) {\r\n                            this._resetEditColumnName();\r\n                            this._resetEditRowKey()\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _allowRowAdding: function(params) {\r\n                    if (this.isBatchEditMode()) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _afterDeleteRow: function(rowIndex, oldEditRowIndex) {\r\n                    var dataController = this._dataController;\r\n                    if (this.isBatchEditMode()) {\r\n                        dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [oldEditRowIndex, rowIndex]\r\n                        });\r\n                        return (new Deferred).resolve()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _updateEditRow: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        this._updateRowImmediately(row, forceUpdateRow, isCustomSetCellValue)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _isDefaultButtonVisible: function(button, options) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var isBatchMode = this.isBatchEditMode();\r\n                        switch (button.name) {\r\n                            case \"save\":\r\n                            case \"cancel\":\r\n                            case \"edit\":\r\n                                return false;\r\n                            case \"delete\":\r\n                                return this.callBase.apply(this, arguments) && (!isBatchMode || !options.row.removed);\r\n                            case \"undelete\":\r\n                                return isBatchMode && this.allowDeleting(options) && options.row.removed;\r\n                            default:\r\n                                return this.callBase.apply(this, arguments)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isRowDeleteAllowed: function() {\r\n                    var callBase = this.callBase.apply(this, arguments);\r\n                    return callBase || this.isBatchEditMode()\r\n                },\r\n                _beforeEndSaving: function(changes) {\r\n                    if (this.isCellEditMode()) {\r\n                        var _changes$;\r\n                        if (\"update\" !== (null === (_changes$ = changes[0]) || void 0 === _changes$ ? void 0 : _changes$.type)) {\r\n                            this.callBase.apply(this, arguments)\r\n                        }\r\n                    } else {\r\n                        if (this.isBatchEditMode()) {\r\n                            this._resetModifiedClassCells(changes)\r\n                        }\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                prepareEditButtons: function(headerPanel) {\r\n                    var editingOptions = this.option(\"editing\") || {};\r\n                    var buttonItems = this.callBase.apply(this, arguments);\r\n                    if ((editingOptions.allowUpdating || editingOptions.allowAdding || editingOptions.allowDeleting) && this.isBatchEditMode()) {\r\n                        buttonItems.push(this.prepareButtonItem(headerPanel, \"save\", \"saveEditData\", 21));\r\n                        buttonItems.push(this.prepareButtonItem(headerPanel, \"revert\", \"cancelEditData\", 22))\r\n                    }\r\n                    return buttonItems\r\n                },\r\n                _saveEditDataInner: function() {\r\n                    var _deferred2;\r\n                    var editRow = this._dataController.getVisibleRows()[this.getEditRowIndex()];\r\n                    var editColumn = this._getEditColumn();\r\n                    var showEditorAlways = null === editColumn || void 0 === editColumn ? void 0 : editColumn.showEditorAlways;\r\n                    var isUpdateInCellMode = this.isCellEditMode() && !(null !== editRow && void 0 !== editRow && editRow.isNewRow);\r\n                    var deferred;\r\n                    if (isUpdateInCellMode && showEditorAlways) {\r\n                        deferred = new Deferred;\r\n                        this.addDeferred(deferred)\r\n                    }\r\n                    return this.callBase.apply(this, arguments).always(null === (_deferred2 = deferred) || void 0 === _deferred2 ? void 0 : _deferred2.resolve)\r\n                },\r\n                _applyChange: function(options, params, forceUpdateRow) {\r\n                    var isUpdateInCellMode = this.isCellEditMode() && options.row && !options.row.isNewRow;\r\n                    var showEditorAlways = options.column.showEditorAlways;\r\n                    var isCustomSetCellValue = options.column.setCellValue !== options.column.defaultSetCellValue;\r\n                    var focusPreviousEditingCell = showEditorAlways && !forceUpdateRow && isUpdateInCellMode && this.hasEditData() && !this.isEditCell(options.rowIndex, options.columnIndex);\r\n                    if (focusPreviousEditingCell) {\r\n                        this._focusEditingCell();\r\n                        this._updateEditRow(options.row, true, isCustomSetCellValue);\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _applyChangeCore: function(options, forceUpdateRow) {\r\n                    var showEditorAlways = options.column.showEditorAlways;\r\n                    var isUpdateInCellMode = this.isCellEditMode() && options.row && !options.row.isNewRow;\r\n                    if (showEditorAlways && !forceUpdateRow) {\r\n                        if (isUpdateInCellMode) {\r\n                            this._setEditRowKey(options.row.key, true);\r\n                            this._setEditColumnNameByIndex(options.columnIndex, true);\r\n                            return this.saveEditData()\r\n                        } else if (this.isBatchEditMode()) {\r\n                            forceUpdateRow = this._needUpdateRow(options.column);\r\n                            return this.callBase(options, forceUpdateRow)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _processDataItemCore: function(item, _ref3) {\r\n                    var {\r\n                        data: data,\r\n                        type: type\r\n                    } = _ref3;\r\n                    if (this.isBatchEditMode() && type === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                        item.data = createObjectWithChanges(item.data, data)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _processRemoveCore: function(changes, editIndex, processIfBatch) {\r\n                    if (this.isBatchEditMode() && !processIfBatch) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _processRemoveIfError: function() {\r\n                    if (this.isBatchEditMode()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _beforeFocusElementInRow: function(rowIndex) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var editRowIndex = rowIndex >= 0 ? rowIndex : 0;\r\n                    var columnIndex = this.getFirstEditableColumnIndex();\r\n                    columnIndex >= 0 && this.editCell(editRowIndex, columnIndex)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    var editingController = this._editingController;\r\n                    if (editingController.isCellOrBatchEditMode() && this.option(\"editing.allowUpdating\")) {\r\n                        eventsEngine.on($table, addNamespace(holdEvent.name, \"dxDataGridRowsView\"), \"td:not(.\" + EDITOR_CELL_CLASS + \")\", this.createAction(() => {\r\n                            if (editingController.isEditing()) {\r\n                                editingController.closeEditCell()\r\n                            }\r\n                        }))\r\n                    }\r\n                    return $table\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var editingController = this._editingController;\r\n                        var isRowRemoved = !!row.removed;\r\n                        if (editingController.isBatchEditMode()) {\r\n                            isRowRemoved && $row.addClass(ROW_REMOVED)\r\n                        }\r\n                    }\r\n                    return $row\r\n                }\r\n            },\r\n            headerPanel: {\r\n                isVisible: function() {\r\n                    var editingOptions = this.getController(\"editing\").option(\"editing\");\r\n                    return this.callBase() || editingOptions && (editingOptions.allowUpdating || editingOptions.allowDeleting) && editingOptions.mode === EDIT_MODE_BATCH\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_cell_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport editingCellBasedModule from \"../grid_core/ui.grid_core.editing_cell_based\";\r\ngridCore.registerModule(\"editingCellBased\", editingCellBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.validating.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getWidth,\r\n    getOuterHeight,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    deferUpdate,\r\n    equalByValue,\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Button from \"../button\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport ValidationEngine from \"../validation_engine\";\r\nimport Validator from \"../validator\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    Deferred,\r\n    when,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport {\r\n    encodeHtml\r\n} from \"../../core/utils/string\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar INVALIDATE_CLASS = \"invalid\";\r\nvar REVERT_TOOLTIP_CLASS = \"revert-tooltip\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar INVALID_MESSAGE_CLASS = \"dx-invalid-message\";\r\nvar WIDGET_INVALID_MESSAGE_CLASS = \"invalid-message\";\r\nvar INVALID_MESSAGE_ALWAYS_CLASS = \"dx-invalid-message-always\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar VALIDATOR_CLASS = \"validator\";\r\nvar PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\r\nvar VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar INSERT_INDEX = \"__DX_INSERT_INDEX__\";\r\nvar PADDING_BETWEEN_TOOLTIPS = 2;\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar FORM_BASED_MODES = [EDIT_MODE_POPUP, EDIT_MODE_FORM];\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar VALIDATION_STATUS = {\r\n    valid: \"valid\",\r\n    invalid: \"invalid\",\r\n    pending: \"pending\"\r\n};\r\nvar EDIT_DATA_INSERT_TYPE = \"insert\";\r\nvar EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nvar VALIDATION_CANCELLED = \"cancel\";\r\nvar validationResultIsValid = function(result) {\r\n    return isDefined(result) && result !== VALIDATION_CANCELLED\r\n};\r\nvar cellValueShouldBeValidated = function(value, rowOptions) {\r\n    return void 0 !== value || void 0 === value && rowOptions && !rowOptions.isNewRow\r\n};\r\nvar ValidatingController = modules.Controller.inherit({\r\n    init: function() {\r\n        this._editingController = this.getController(\"editing\");\r\n        this.createAction(\"onRowValidating\");\r\n        if (!this._validationState) {\r\n            this.initValidationState()\r\n        }\r\n    },\r\n    initValidationState() {\r\n        this._validationState = [];\r\n        this._validationStateCache = {}\r\n    },\r\n    _rowIsValidated: function(change) {\r\n        var validationData = this._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n        return !!validationData && !!validationData.validated\r\n    },\r\n    _getValidationData: function(key, create) {\r\n        var keyHash = getKeyHash(key);\r\n        var isObjectKeyHash = isObject(keyHash);\r\n        var validationData;\r\n        if (isObjectKeyHash) {\r\n            validationData = this._validationState.filter(data => equalByValue(data.key, key))[0]\r\n        } else {\r\n            validationData = this._validationStateCache[keyHash]\r\n        }\r\n        if (!validationData && create) {\r\n            validationData = {\r\n                key: key,\r\n                isValid: true\r\n            };\r\n            this._validationState.push(validationData);\r\n            if (!isObjectKeyHash) {\r\n                this._validationStateCache[keyHash] = validationData\r\n            }\r\n        }\r\n        return validationData\r\n    },\r\n    _getBrokenRules: function(validationData, validationResults) {\r\n        var brokenRules;\r\n        if (validationResults) {\r\n            brokenRules = validationResults.brokenRules || validationResults.brokenRule && [validationResults.brokenRule]\r\n        } else {\r\n            brokenRules = validationData.brokenRules || []\r\n        }\r\n        return brokenRules\r\n    },\r\n    _rowValidating: function(validationData, validationResults) {\r\n        var deferred = new Deferred;\r\n        var change = this._editingController.getChangeByKey(null === validationData || void 0 === validationData ? void 0 : validationData.key);\r\n        var brokenRules = this._getBrokenRules(validationData, validationResults);\r\n        var isValid = validationResults ? validationResults.isValid : validationData.isValid;\r\n        var parameters = {\r\n            brokenRules: brokenRules,\r\n            isValid: isValid,\r\n            key: change.key,\r\n            newData: change.data,\r\n            oldData: this._editingController._getOldData(change.key),\r\n            promise: null,\r\n            errorText: this.getHiddenValidatorsErrorText(brokenRules)\r\n        };\r\n        this.executeAction(\"onRowValidating\", parameters);\r\n        when(fromPromise(parameters.promise)).always((function() {\r\n            validationData.isValid = parameters.isValid;\r\n            validationData.errorText = parameters.errorText;\r\n            deferred.resolve(parameters)\r\n        }));\r\n        return deferred.promise()\r\n    },\r\n    getHiddenValidatorsErrorText: function(brokenRules) {\r\n        var brokenRulesMessages = [];\r\n        each(brokenRules, (function(_, brokenRule) {\r\n            var column = brokenRule.column;\r\n            var isGroupExpandColumn = column && void 0 !== column.groupIndex && !column.showWhenGrouped;\r\n            var isVisibleColumn = column && column.visible;\r\n            if (!brokenRule.validator.$element().parent().length && (!isVisibleColumn || isGroupExpandColumn)) {\r\n                brokenRulesMessages.push(brokenRule.message)\r\n            }\r\n        }));\r\n        return brokenRulesMessages.join(\", \")\r\n    },\r\n    validate: function(isFull) {\r\n        var isValid = true;\r\n        var editingController = this._editingController;\r\n        var deferred = new Deferred;\r\n        var completeList = [];\r\n        var editMode = editingController.getEditMode();\r\n        isFull = isFull || editMode === EDIT_MODE_ROW;\r\n        if (this._isValidationInProgress) {\r\n            return deferred.resolve(false).promise()\r\n        }\r\n        this._isValidationInProgress = true;\r\n        if (isFull) {\r\n            editingController.addDeferred(deferred);\r\n            var changes = editingController.getChanges();\r\n            each(changes, (index, _ref) => {\r\n                var {\r\n                    type: type,\r\n                    key: key\r\n                } = _ref;\r\n                if (\"remove\" !== type) {\r\n                    var validationData = this._getValidationData(key, true);\r\n                    var validationResult = this.validateGroup(validationData);\r\n                    completeList.push(validationResult);\r\n                    validationResult.done(validationResult => {\r\n                        validationData.validated = true;\r\n                        isValid = isValid && validationResult.isValid\r\n                    })\r\n                }\r\n            })\r\n        } else if (this._currentCellValidator) {\r\n            var validationResult = this.validateGroup(this._currentCellValidator._findGroup());\r\n            completeList.push(validationResult);\r\n            validationResult.done(validationResult => {\r\n                isValid = validationResult.isValid\r\n            })\r\n        }\r\n        when(...completeList).done(() => {\r\n            this._isValidationInProgress = false;\r\n            deferred.resolve(isValid)\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    validateGroup: function(validationData) {\r\n        var _validationResult;\r\n        var result = new Deferred;\r\n        var validateGroup = validationData && ValidationEngine.getGroupConfig(validationData);\r\n        var validationResult;\r\n        if (null !== validateGroup && void 0 !== validateGroup && validateGroup.validators.length) {\r\n            this.resetRowValidationResults(validationData);\r\n            validationResult = ValidationEngine.validateGroup(validationData)\r\n        }\r\n        when((null === (_validationResult = validationResult) || void 0 === _validationResult ? void 0 : _validationResult.complete) || validationResult).done(validationResult => {\r\n            when(this._rowValidating(validationData, validationResult)).done(result.resolve)\r\n        });\r\n        return result.promise()\r\n    },\r\n    isRowDataModified: change => !isEmptyObject(change.data),\r\n    updateValidationState: function(change) {\r\n        var editMode = this._editingController.getEditMode();\r\n        var key = change.key;\r\n        var validationData = this._getValidationData(key, true);\r\n        if (-1 === FORM_BASED_MODES.indexOf(editMode)) {\r\n            if (change.type === EDIT_DATA_INSERT_TYPE && !this.isRowDataModified(change)) {\r\n                validationData.isValid = true;\r\n                return\r\n            }\r\n            this.setDisableApplyValidationResults(true);\r\n            var groupConfig = ValidationEngine.getGroupConfig(validationData);\r\n            if (groupConfig) {\r\n                var validationResult = ValidationEngine.validateGroup(validationData);\r\n                when(validationResult.complete || validationResult).done(validationResult => {\r\n                    validationData.isValid = validationResult.isValid;\r\n                    validationData.brokenRules = validationResult.brokenRules\r\n                })\r\n            } else if (!validationData.brokenRules || !validationData.brokenRules.length) {\r\n                validationData.isValid = true\r\n            }\r\n            this.setDisableApplyValidationResults(false)\r\n        } else {\r\n            validationData.isValid = true\r\n        }\r\n    },\r\n    setValidator: function(validator) {\r\n        this._currentCellValidator = validator\r\n    },\r\n    renderCellPendingIndicator: function($container) {\r\n        var $indicator = $container.find(\".\" + PENDING_INDICATOR_CLASS);\r\n        if (!$indicator.length) {\r\n            var $indicatorContainer = $container;\r\n            $indicator = $(\"<div>\").appendTo($indicatorContainer).addClass(PENDING_INDICATOR_CLASS);\r\n            this._createComponent($indicator, LoadIndicator);\r\n            $container.addClass(VALIDATION_PENDING_CLASS)\r\n        }\r\n    },\r\n    disposeCellPendingIndicator: function($container) {\r\n        var $indicator = $container.find(\".\" + PENDING_INDICATOR_CLASS);\r\n        if ($indicator.length) {\r\n            var indicator = LoadIndicator.getInstance($indicator);\r\n            if (indicator) {\r\n                indicator.dispose();\r\n                indicator.$element().remove()\r\n            }\r\n            $container.removeClass(VALIDATION_PENDING_CLASS)\r\n        }\r\n    },\r\n    validationStatusChanged: function(result) {\r\n        var validator = result.validator;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        this.updateCellValidationResult({\r\n            rowKey: validationGroup.key,\r\n            columnIndex: column.index,\r\n            validationResult: result\r\n        })\r\n    },\r\n    validatorInitialized: function(arg) {\r\n        arg.component.on(\"validating\", this.validationStatusChanged.bind(this));\r\n        arg.component.on(\"validated\", this.validationStatusChanged.bind(this))\r\n    },\r\n    validatorDisposing: function(arg) {\r\n        var validator = arg.component;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        var result = this.getCellValidationResult({\r\n            rowKey: null === validationGroup || void 0 === validationGroup ? void 0 : validationGroup.key,\r\n            columnIndex: column.index\r\n        });\r\n        if (validationResultIsValid(result) && result.status === VALIDATION_STATUS.pending) {\r\n            this.cancelCellValidationResult({\r\n                change: validationGroup,\r\n                columnIndex: column.index\r\n            })\r\n        }\r\n    },\r\n    applyValidationResult: function($container, result) {\r\n        var validator = result.validator;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        result.brokenRules && result.brokenRules.forEach(rule => {\r\n            rule.columnIndex = column.index;\r\n            rule.column = column\r\n        });\r\n        if ($container) {\r\n            var validationResult = this.getCellValidationResult({\r\n                rowKey: validationGroup.key,\r\n                columnIndex: column.index\r\n            });\r\n            var requestIsDisabled = validationResultIsValid(validationResult) && validationResult.disabledPendingId === result.id;\r\n            if (this._disableApplyValidationResults || requestIsDisabled) {\r\n                return\r\n            }\r\n            if (result.status === VALIDATION_STATUS.invalid) {\r\n                var $focus = $container.find(\":focus\");\r\n                if (!focused($focus)) {\r\n                    eventsEngine.trigger($focus, \"focus\");\r\n                    eventsEngine.trigger($focus, pointerEvents.down)\r\n                }\r\n            }\r\n            var editor = !column.editCellTemplate && this.getController(\"editorFactory\").getEditorInstance($container);\r\n            if (result.status === VALIDATION_STATUS.pending) {\r\n                if (editor) {\r\n                    editor.option(\"validationStatus\", VALIDATION_STATUS.pending)\r\n                } else {\r\n                    this.renderCellPendingIndicator($container)\r\n                }\r\n            } else if (editor) {\r\n                editor.option(\"validationStatus\", VALIDATION_STATUS.valid)\r\n            } else {\r\n                this.disposeCellPendingIndicator($container)\r\n            }\r\n            $container.toggleClass(this.addWidgetPrefix(INVALIDATE_CLASS), result.status === VALIDATION_STATUS.invalid)\r\n        }\r\n    },\r\n    _syncInternalEditingData: function(parameters) {\r\n        var _parameters$row;\r\n        var editingController = this._editingController;\r\n        var change = editingController.getChangeByKey(parameters.key);\r\n        var oldDataFromState = editingController._getOldData(parameters.key);\r\n        var oldData = null === (_parameters$row = parameters.row) || void 0 === _parameters$row ? void 0 : _parameters$row.oldData;\r\n        if (change && oldData && !oldDataFromState) {\r\n            editingController._addInternalData({\r\n                key: parameters.key,\r\n                oldData: oldData\r\n            })\r\n        }\r\n    },\r\n    createValidator: function(parameters, $container) {\r\n        var editingController = this._editingController;\r\n        var column = parameters.column;\r\n        var showEditorAlways = column.showEditorAlways;\r\n        if (isDefined(column.command) || !column.validationRules || !Array.isArray(column.validationRules) || !column.validationRules.length) {\r\n            return\r\n        }\r\n        var editIndex = editingController.getIndexByKey(parameters.key, editingController.getChanges());\r\n        var needCreateValidator = editIndex > -1;\r\n        if (!needCreateValidator) {\r\n            if (!showEditorAlways) {\r\n                var columnsController = this.getController(\"columns\");\r\n                var visibleColumns = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getVisibleColumns()) || [];\r\n                showEditorAlways = visibleColumns.some((function(column) {\r\n                    return column.showEditorAlways\r\n                }))\r\n            }\r\n            var isEditRow = equalByValue(this.option(\"editing.editRowKey\"), parameters.key);\r\n            var isCellOrBatchEditingAllowed = editingController.isCellOrBatchEditMode() && editingController.allowUpdating({\r\n                row: parameters.row\r\n            });\r\n            needCreateValidator = isEditRow || isCellOrBatchEditingAllowed && showEditorAlways;\r\n            if (isCellOrBatchEditingAllowed && showEditorAlways) {\r\n                var _parameters$row$oldDa, _parameters$row2;\r\n                editingController._addInternalData({\r\n                    key: parameters.key,\r\n                    oldData: null !== (_parameters$row$oldDa = null === (_parameters$row2 = parameters.row) || void 0 === _parameters$row2 ? void 0 : _parameters$row2.oldData) && void 0 !== _parameters$row$oldDa ? _parameters$row$oldDa : parameters.data\r\n                })\r\n            }\r\n        }\r\n        if (needCreateValidator) {\r\n            if ($container && !$container.length) {\r\n                errors.log(\"E1050\");\r\n                return\r\n            }\r\n            this._syncInternalEditingData(parameters);\r\n            var validationData = this._getValidationData(parameters.key, true);\r\n            var getValue = () => {\r\n                var change = editingController.getChangeByKey(null === validationData || void 0 === validationData ? void 0 : validationData.key);\r\n                var value = column.calculateCellValue((null === change || void 0 === change ? void 0 : change.data) || {});\r\n                return void 0 !== value ? value : parameters.value\r\n            };\r\n            var useDefaultValidator = $container && $container.hasClass(\"dx-widget\");\r\n            $container && $container.addClass(this.addWidgetPrefix(VALIDATOR_CLASS));\r\n            var validator = new Validator($container || $(\"<div>\"), {\r\n                name: column.caption,\r\n                validationRules: extend(true, [], column.validationRules),\r\n                validationGroup: validationData,\r\n                adapter: useDefaultValidator ? null : {\r\n                    getValue: getValue,\r\n                    applyValidationResults: result => {\r\n                        this.applyValidationResult($container, result)\r\n                    }\r\n                },\r\n                dataGetter: function() {\r\n                    var key = null === validationData || void 0 === validationData ? void 0 : validationData.key;\r\n                    var change = editingController.getChangeByKey(key);\r\n                    var oldData = editingController._getOldData(key);\r\n                    return {\r\n                        data: createObjectWithChanges(oldData, null === change || void 0 === change ? void 0 : change.data),\r\n                        column: column\r\n                    }\r\n                },\r\n                onInitialized: this.validatorInitialized.bind(this),\r\n                onDisposing: this.validatorDisposing.bind(this)\r\n            });\r\n            if (useDefaultValidator) {\r\n                var adapter = validator.option(\"adapter\");\r\n                if (adapter) {\r\n                    adapter.getValue = getValue;\r\n                    adapter.validationRequestsCallbacks = []\r\n                }\r\n            }\r\n            return validator\r\n        }\r\n    },\r\n    setDisableApplyValidationResults: function(flag) {\r\n        this._disableApplyValidationResults = flag\r\n    },\r\n    getDisableApplyValidationResults: function() {\r\n        return this._disableApplyValidationResults\r\n    },\r\n    isCurrentValidatorProcessing: function(_ref2) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref2;\r\n        return this._currentCellValidator && equalByValue(this._currentCellValidator.option(\"validationGroup\").key, rowKey) && this._currentCellValidator.option(\"dataGetter\")().column.index === columnIndex\r\n    },\r\n    validateCell: function(validator) {\r\n        var cellParams = {\r\n            rowKey: validator.option(\"validationGroup\").key,\r\n            columnIndex: validator.option(\"dataGetter\")().column.index\r\n        };\r\n        var validationResult = this.getCellValidationResult(cellParams);\r\n        var stateRestored = validationResultIsValid(validationResult);\r\n        if (!stateRestored) {\r\n            validationResult = validator.validate()\r\n        }\r\n        var deferred = new Deferred;\r\n        var adapter = validator.option(\"adapter\");\r\n        if (stateRestored && validationResult.status === VALIDATION_STATUS.pending) {\r\n            this.updateCellValidationResult(cellParams);\r\n            adapter.applyValidationResults(validationResult)\r\n        }\r\n        when(validationResult.complete || validationResult).done(validationResult => {\r\n            stateRestored && adapter.applyValidationResults(validationResult);\r\n            deferred.resolve(validationResult)\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    updateCellValidationResult: function(_ref3) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex,\r\n            validationResult: validationResult\r\n        } = _ref3;\r\n        var validationData = this._getValidationData(rowKey);\r\n        if (!validationData) {\r\n            return\r\n        }\r\n        if (!validationData.validationResults) {\r\n            validationData.validationResults = {}\r\n        }\r\n        var result;\r\n        if (validationResult) {\r\n            result = extend({}, validationResult);\r\n            validationData.validationResults[columnIndex] = result;\r\n            if (validationResult.status === VALIDATION_STATUS.pending) {\r\n                if (this._editingController.getEditMode() === EDIT_MODE_CELL) {\r\n                    result.deferred = new Deferred;\r\n                    result.complete.always(() => {\r\n                        result.deferred.resolve()\r\n                    });\r\n                    this._editingController.addDeferred(result.deferred)\r\n                }\r\n                if (this._disableApplyValidationResults) {\r\n                    result.disabledPendingId = validationResult.id;\r\n                    return\r\n                }\r\n            }\r\n        } else {\r\n            result = validationData.validationResults[columnIndex]\r\n        }\r\n        if (result && result.disabledPendingId) {\r\n            delete result.disabledPendingId\r\n        }\r\n    },\r\n    getCellValidationResult: function(_ref4) {\r\n        var _validationData$valid;\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref4;\r\n        var validationData = this._getValidationData(rowKey, true);\r\n        return null === validationData || void 0 === validationData ? void 0 : null === (_validationData$valid = validationData.validationResults) || void 0 === _validationData$valid ? void 0 : _validationData$valid[columnIndex]\r\n    },\r\n    removeCellValidationResult: function(_ref5) {\r\n        var {\r\n            change: change,\r\n            columnIndex: columnIndex\r\n        } = _ref5;\r\n        var validationData = this._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n        if (validationData && validationData.validationResults) {\r\n            this.cancelCellValidationResult({\r\n                change: change,\r\n                columnIndex: columnIndex\r\n            });\r\n            delete validationData.validationResults[columnIndex]\r\n        }\r\n    },\r\n    cancelCellValidationResult: function(_ref6) {\r\n        var {\r\n            change: change,\r\n            columnIndex: columnIndex\r\n        } = _ref6;\r\n        var validationData = this._getValidationData(change.key);\r\n        if (change && validationData.validationResults) {\r\n            var result = validationData.validationResults[columnIndex];\r\n            if (result) {\r\n                result.deferred && result.deferred.reject(VALIDATION_CANCELLED);\r\n                validationData.validationResults[columnIndex] = VALIDATION_CANCELLED\r\n            }\r\n        }\r\n    },\r\n    resetRowValidationResults: function(validationData) {\r\n        if (validationData) {\r\n            validationData.validationResults && delete validationData.validationResults;\r\n            delete validationData.validated\r\n        }\r\n    },\r\n    isInvalidCell: function(_ref7) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref7;\r\n        var result = this.getCellValidationResult({\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        });\r\n        return validationResultIsValid(result) && result.status === VALIDATION_STATUS.invalid\r\n    },\r\n    getCellValidator: function(_ref8) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref8;\r\n        var validationData = this._getValidationData(rowKey);\r\n        var groupConfig = validationData && ValidationEngine.getGroupConfig(validationData);\r\n        var validators = groupConfig && groupConfig.validators;\r\n        return validators && validators.filter(v => {\r\n            var column = v.option(\"dataGetter\")().column;\r\n            return column ? column.index === columnIndex : false\r\n        })[0]\r\n    },\r\n    setCellValidationStatus: function(cellOptions) {\r\n        var validationResult = this.getCellValidationResult({\r\n            rowKey: cellOptions.key,\r\n            columnIndex: cellOptions.column.index\r\n        });\r\n        if (isDefined(validationResult)) {\r\n            cellOptions.validationStatus = validationResult !== VALIDATION_CANCELLED ? validationResult.status : VALIDATION_CANCELLED\r\n        } else {\r\n            delete cellOptions.validationStatus\r\n        }\r\n    }\r\n});\r\nexport var validatingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            editing: {\r\n                texts: {\r\n                    validationCancelChanges: messageLocalization.format(\"dxDataGrid-validationCancelChanges\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        validating: ValidatingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                _addChange: function(changeParams) {\r\n                    var change = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (change && changeParams.type !== EDIT_DATA_REMOVE_TYPE) {\r\n                        validatingController.updateValidationState(change)\r\n                    }\r\n                    return change\r\n                },\r\n                _handleChangesChange: function(args) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    args.value.forEach(change => {\r\n                        if (void 0 === validatingController._getValidationData(change.key)) {\r\n                            validatingController.updateValidationState(change)\r\n                        }\r\n                    })\r\n                },\r\n                _updateRowAndPageIndices: function() {\r\n                    var that = this;\r\n                    var startInsertIndex = that.getView(\"rowsView\").getTopVisibleItemIndex();\r\n                    var rowIndex = startInsertIndex;\r\n                    each(that.getChanges(), (_, _ref9) => {\r\n                        var {\r\n                            key: key,\r\n                            type: type\r\n                        } = _ref9;\r\n                        var validationData = this.getController(\"validating\")._getValidationData(key);\r\n                        if (validationData && !validationData.isValid && validationData.pageIndex !== that._pageIndex) {\r\n                            validationData.pageIndex = that._pageIndex;\r\n                            if (type === EDIT_DATA_INSERT_TYPE) {\r\n                                validationData.rowIndex = startInsertIndex\r\n                            } else {\r\n                                validationData.rowIndex = rowIndex\r\n                            }\r\n                            rowIndex++\r\n                        }\r\n                    })\r\n                },\r\n                _getValidationGroupsInForm: function(detailOptions) {\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationData = validatingController._getValidationData(detailOptions.key, true);\r\n                    return {\r\n                        validationGroup: validationData\r\n                    }\r\n                },\r\n                _validateEditFormAfterUpdate: function(row, isCustomSetCellValue) {\r\n                    if (isCustomSetCellValue && this._editForm && !row.isNewRow) {\r\n                        this._editForm.validate()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _prepareEditCell: function(params) {\r\n                    var isNotCanceled = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (isNotCanceled && params.column.showEditorAlways) {\r\n                        validatingController.updateValidationState({\r\n                            key: params.key\r\n                        })\r\n                    }\r\n                    return isNotCanceled\r\n                },\r\n                processItems: function(items, changeType) {\r\n                    var changes = this.getChanges();\r\n                    var dataController = this.getController(\"data\");\r\n                    var validatingController = this.getController(\"validating\");\r\n                    items = this.callBase(items, changeType);\r\n                    var itemsCount = items.length;\r\n                    var addInValidItem = function(change, validationData) {\r\n                        var data = {\r\n                            key: change.key\r\n                        };\r\n                        var index = function(change, items) {\r\n                            var index = -1;\r\n                            var isInsert = change.type === EDIT_DATA_INSERT_TYPE;\r\n                            var key = change.key;\r\n                            each(items, (function(i, item) {\r\n                                if (equalByValue(key, isInsert ? item.key : dataController.keyOf(item))) {\r\n                                    index = i;\r\n                                    return false\r\n                                }\r\n                            }));\r\n                            return index\r\n                        }(change, items);\r\n                        if (index >= 0) {\r\n                            return\r\n                        }\r\n                        validationData.rowIndex = validationData.rowIndex > itemsCount ? validationData.rowIndex % itemsCount : validationData.rowIndex;\r\n                        var rowIndex = validationData.rowIndex;\r\n                        data[INSERT_INDEX] = 1;\r\n                        items.splice(rowIndex, 0, data)\r\n                    };\r\n                    if (this.getEditMode() === EDIT_MODE_BATCH && \"prepend\" !== changeType && \"append\" !== changeType) {\r\n                        changes.forEach(change => {\r\n                            var key = change.key;\r\n                            var validationData = validatingController._getValidationData(key);\r\n                            if (validationData && change.type && validationData.pageIndex === this._pageIndex && (null === change || void 0 === change ? void 0 : change.pageIndex) !== this._pageIndex) {\r\n                                addInValidItem(change, validationData)\r\n                            }\r\n                        })\r\n                    }\r\n                    return items\r\n                },\r\n                processDataItem: function(item) {\r\n                    var isInserted = item.data[INSERT_INDEX];\r\n                    var key = isInserted ? item.data.key : item.key;\r\n                    var editMode = this.getEditMode();\r\n                    if (editMode === EDIT_MODE_BATCH && isInserted && key) {\r\n                        var changes = this.getChanges();\r\n                        var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n                        if (editIndex >= 0) {\r\n                            var change = changes[editIndex];\r\n                            if (change.type !== EDIT_DATA_INSERT_TYPE) {\r\n                                var oldData = this._getOldData(change.key);\r\n                                item.data = extend(true, {}, oldData, change.data);\r\n                                item.key = key\r\n                            }\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _createInvisibleColumnValidators: function(changes) {\r\n                    var that = this;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var columns = columnsController.getColumns();\r\n                    var invisibleColumns = columnsController.getInvisibleColumns().filter(column => !column.isBand);\r\n                    var groupColumns = columnsController.getGroupColumns().filter(column => !column.showWhenGrouped && -1 === invisibleColumns.indexOf(column));\r\n                    var invisibleColumnValidators = [];\r\n                    var isCellVisible = (column, rowKey) => this._dataController.getRowIndexByKey(rowKey) >= 0 && invisibleColumns.indexOf(column) < 0;\r\n                    invisibleColumns.push(...groupColumns);\r\n                    if (-1 === FORM_BASED_MODES.indexOf(this.getEditMode())) {\r\n                        each(columns, (function(_, column) {\r\n                            changes.forEach((function(change) {\r\n                                var data;\r\n                                if (isCellVisible(column, change.key)) {\r\n                                    return\r\n                                }\r\n                                if (change.type === EDIT_DATA_INSERT_TYPE) {\r\n                                    data = change.data\r\n                                } else if (\"update\" === change.type) {\r\n                                    var oldData = that._getOldData(change.key);\r\n                                    data = createObjectWithChanges(oldData, change.data)\r\n                                }\r\n                                if (data) {\r\n                                    var validator = validatingController.createValidator({\r\n                                        column: column,\r\n                                        key: change.key,\r\n                                        value: column.calculateCellValue(data)\r\n                                    });\r\n                                    if (validator) {\r\n                                        invisibleColumnValidators.push(validator)\r\n                                    }\r\n                                }\r\n                            }))\r\n                        }))\r\n                    }\r\n                    return function() {\r\n                        invisibleColumnValidators.forEach((function(validator) {\r\n                            validator.dispose()\r\n                        }))\r\n                    }\r\n                },\r\n                _beforeSaveEditData: function(change, editIndex) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationData = validatingController._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n                    if (change) {\r\n                        var isValid = \"remove\" === change.type || validationData.isValid;\r\n                        result = result || !isValid\r\n                    } else {\r\n                        var disposeValidators = this._createInvisibleColumnValidators(this.getChanges());\r\n                        result = new Deferred;\r\n                        this.executeOperation(result, () => {\r\n                            validatingController.validate(true).done(isFullValid => {\r\n                                disposeValidators();\r\n                                this._updateRowAndPageIndices();\r\n                                switch (this.getEditMode()) {\r\n                                    case EDIT_MODE_CELL:\r\n                                        if (!isFullValid) {\r\n                                            this._focusEditingCell()\r\n                                        }\r\n                                        break;\r\n                                    case EDIT_MODE_BATCH:\r\n                                        if (!isFullValid) {\r\n                                            this._resetEditRowKey();\r\n                                            this._resetEditColumnName();\r\n                                            this.getController(\"data\").updateItems()\r\n                                        }\r\n                                }\r\n                                result.resolve(!isFullValid)\r\n                            })\r\n                        })\r\n                    }\r\n                    return result.promise ? result.promise() : result\r\n                },\r\n                _beforeEditCell: function(rowIndex, columnIndex, item) {\r\n                    var result = this.callBase(rowIndex, columnIndex, item);\r\n                    if (this.getEditMode() === EDIT_MODE_CELL) {\r\n                        var $cell = this._rowsView._getCellElement(rowIndex, columnIndex);\r\n                        var validator = $cell && $cell.data(\"dxValidator\");\r\n                        var rowOptions = $cell && $cell.closest(\".dx-row\").data(\"options\");\r\n                        var value = validator && validator.option(\"adapter\").getValue();\r\n                        if (validator && cellValueShouldBeValidated(value, rowOptions)) {\r\n                            var validatingController = this.getController(\"validating\");\r\n                            var deferred = new Deferred;\r\n                            when(validatingController.validateCell(validator), result).done((validationResult, result) => {\r\n                                deferred.resolve(validationResult.status === VALIDATION_STATUS.valid && result)\r\n                            });\r\n                            return deferred.promise()\r\n                        } else if (!validator) {\r\n                            return result\r\n                        }\r\n                    }\r\n                },\r\n                _afterSaveEditData: function(cancel) {\r\n                    var $firstErrorRow;\r\n                    var isCellEditMode = this.getEditMode() === EDIT_MODE_CELL;\r\n                    each(this.getChanges(), (_, change) => {\r\n                        var $errorRow = this._showErrorRow(change);\r\n                        $firstErrorRow = $firstErrorRow || $errorRow\r\n                    });\r\n                    if ($firstErrorRow) {\r\n                        var scrollable = this._rowsView.getScrollable();\r\n                        if (scrollable) {\r\n                            scrollable.update();\r\n                            scrollable.scrollToElement($firstErrorRow)\r\n                        }\r\n                    }\r\n                    if (cancel && isCellEditMode && this._needUpdateRow()) {\r\n                        var editRowIndex = this.getEditRowIndex();\r\n                        this._dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [editRowIndex]\r\n                        });\r\n                        this._focusEditingCell()\r\n                    } else if (!cancel) {\r\n                        var shouldResetValidationState = true;\r\n                        if (isCellEditMode) {\r\n                            var columns = this.getController(\"columns\").getColumns();\r\n                            var columnsWithValidatingEditors = columns.filter(col => {\r\n                                var _col$validationRules;\r\n                                return col.showEditorAlways && (null === (_col$validationRules = col.validationRules) || void 0 === _col$validationRules ? void 0 : _col$validationRules.length) > 0\r\n                            }).length > 0;\r\n                            shouldResetValidationState = !columnsWithValidatingEditors\r\n                        }\r\n                        if (shouldResetValidationState) {\r\n                            this.getController(\"validating\").initValidationState()\r\n                        }\r\n                    }\r\n                },\r\n                _handleDataChanged: function(args) {\r\n                    var validationState = this.getController(\"validating\")._validationState;\r\n                    if (\"standard\" === this.option(\"scrolling.mode\")) {\r\n                        this.resetRowAndPageIndices()\r\n                    }\r\n                    if (\"prepend\" === args.changeType) {\r\n                        each(validationState, (function(_, validationData) {\r\n                            validationData.rowIndex += args.items.length\r\n                        }))\r\n                    }\r\n                    this.callBase(args)\r\n                },\r\n                resetRowAndPageIndices: function() {\r\n                    var validationState = this.getController(\"validating\")._validationState;\r\n                    each(validationState, (_, validationData) => {\r\n                        if (validationData.pageIndex !== this._pageIndex) {\r\n                            delete validationData.pageIndex;\r\n                            delete validationData.rowIndex\r\n                        }\r\n                    })\r\n                },\r\n                _beforeCancelEditData: function() {\r\n                    this.getController(\"validating\").initValidationState();\r\n                    this.callBase()\r\n                },\r\n                _showErrorRow: function(change) {\r\n                    var $popupContent;\r\n                    var errorHandling = this.getController(\"errorHandling\");\r\n                    var items = this.getController(\"data\").items();\r\n                    var rowIndex = this.getIndexByKey(change.key, items);\r\n                    var validationData = this.getController(\"validating\")._getValidationData(change.key);\r\n                    if (!(null !== validationData && void 0 !== validationData && validationData.isValid) && null !== validationData && void 0 !== validationData && validationData.errorText && rowIndex >= 0) {\r\n                        $popupContent = this.getPopupContent();\r\n                        return errorHandling && errorHandling.renderErrorRow(null === validationData || void 0 === validationData ? void 0 : validationData.errorText, rowIndex, $popupContent)\r\n                    }\r\n                },\r\n                updateFieldValue: function(e) {\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var deferred = new Deferred;\r\n                    validatingController.removeCellValidationResult({\r\n                        change: this.getChangeByKey(e.key),\r\n                        columnIndex: e.column.index\r\n                    });\r\n                    this.callBase.apply(this, arguments).done(() => {\r\n                        var currentValidator = validatingController.getCellValidator({\r\n                            rowKey: e.key,\r\n                            columnIndex: e.column.index\r\n                        });\r\n                        when(currentValidator && validatingController.validateCell(currentValidator)).done(validationResult => {\r\n                            this.getController(\"editorFactory\").refocus();\r\n                            deferred.resolve(validationResult)\r\n                        })\r\n                    });\r\n                    return deferred.promise()\r\n                },\r\n                highlightDataCell: function($cell, parameters) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    validatingController.setCellValidationStatus(parameters);\r\n                    var isEditableCell = !!parameters.setValue;\r\n                    var cellModified = this.isCellModified(parameters);\r\n                    var isValidated = isDefined(parameters.validationStatus);\r\n                    var needValidation = cellModified && parameters.column.setCellValue || isEditableCell && !cellModified && !(parameters.row.isNewRow || !isValidated);\r\n                    if (needValidation) {\r\n                        var validator = $cell.data(\"dxValidator\");\r\n                        if (validator) {\r\n                            when(this.getController(\"validating\").validateCell(validator)).done(() => {\r\n                                validatingController.setCellValidationStatus(parameters)\r\n                            })\r\n                        }\r\n                    }\r\n                },\r\n                getChangeByKey: function(key) {\r\n                    var changes = this.getChanges();\r\n                    return changes[gridCoreUtils.getIndexByKey(key, changes)]\r\n                },\r\n                isCellModified: function(parameters) {\r\n                    var cellModified = this.callBase(parameters);\r\n                    var change = this.getChangeByKey(parameters.key);\r\n                    var isCellInvalid = !!parameters.row && this.getController(\"validating\").isInvalidCell({\r\n                        rowKey: parameters.key,\r\n                        columnIndex: parameters.column.index\r\n                    });\r\n                    return cellModified || this.getController(\"validating\")._rowIsValidated(change) && isCellInvalid\r\n                }\r\n            },\r\n            editorFactory: {\r\n                _showRevertButton: function($container) {\r\n                    if (!$container || !$container.length) {\r\n                        return\r\n                    }\r\n                    var $tooltipElement = this._rowsView.element().find(\".\" + this.addWidgetPrefix(REVERT_TOOLTIP_CLASS));\r\n                    var $overlayContainer = $container.closest(\".\".concat(this.addWidgetPrefix(CONTENT_CLASS)));\r\n                    $tooltipElement && $tooltipElement.remove();\r\n                    $tooltipElement = $(\"<div>\").addClass(this.addWidgetPrefix(REVERT_TOOLTIP_CLASS)).appendTo($container);\r\n                    var tooltipOptions = {\r\n                        animation: null,\r\n                        visible: true,\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        target: $container,\r\n                        shading: false,\r\n                        container: $overlayContainer,\r\n                        propagateOutsideClick: true,\r\n                        closeOnOutsideClick: false,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        contentTemplate: () => {\r\n                            var $buttonElement = $(\"<div>\").addClass(REVERT_BUTTON_CLASS);\r\n                            var buttonOptions = {\r\n                                icon: \"revert\",\r\n                                hint: this.option(\"editing.texts.validationCancelChanges\"),\r\n                                onClick: () => {\r\n                                    this._editingController.cancelEditData()\r\n                                }\r\n                            };\r\n                            return new Button($buttonElement, buttonOptions).$element()\r\n                        },\r\n                        position: {\r\n                            my: \"left top\",\r\n                            at: \"right top\",\r\n                            offset: \"1 0\",\r\n                            collision: \"flip\",\r\n                            boundaryOffset: \"0 0\",\r\n                            boundary: this._rowsView.element()\r\n                        },\r\n                        onPositioned: this._positionedHandler.bind(this)\r\n                    };\r\n                    return new Overlay($tooltipElement, tooltipOptions)\r\n                },\r\n                _hideFixedGroupCell: function($cell, overlayOptions) {\r\n                    var $nextFixedRowElement;\r\n                    var $groupCellElement;\r\n                    var isFixedColumns = this._rowsView.isFixedColumns();\r\n                    var isFormOrPopupEditMode = this._editingController.isFormOrPopupEditMode();\r\n                    if (isFixedColumns && !isFormOrPopupEditMode) {\r\n                        var nextRowOptions = $cell.closest(\".dx-row\").next().data(\"options\");\r\n                        if (nextRowOptions && \"group\" === nextRowOptions.rowType) {\r\n                            $nextFixedRowElement = $(this._rowsView.getRowElement(nextRowOptions.rowIndex)).last();\r\n                            $groupCellElement = $nextFixedRowElement.find(\".\" + GROUP_CELL_CLASS);\r\n                            if ($groupCellElement.length && \"hidden\" !== $groupCellElement.get(0).style.visibility) {\r\n                                $groupCellElement.css(\"visibility\", \"hidden\");\r\n                                overlayOptions.onDisposing = function() {\r\n                                    $groupCellElement.css(\"visibility\", \"\")\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _positionedHandler: function(e, isOverlayVisible) {\r\n                    if (!e.component.__skipPositionProcessing) {\r\n                        var isRevertButton = $(e.element).hasClass(this.addWidgetPrefix(REVERT_TOOLTIP_CLASS));\r\n                        var needRepaint = !isRevertButton && this._rowsView.updateFreeSpaceRowHeight();\r\n                        var normalizedPosition = this._normalizeValidationMessagePositionAndMaxWidth(e, isRevertButton, isOverlayVisible);\r\n                        e.component.__skipPositionProcessing = !!(needRepaint || normalizedPosition);\r\n                        if (normalizedPosition) {\r\n                            e.component.option(normalizedPosition)\r\n                        } else if (needRepaint) {\r\n                            e.component.repaint()\r\n                        }\r\n                    }\r\n                },\r\n                _showValidationMessage: function($cell, messages, alignment, revertTooltip) {\r\n                    var editorPopup = $cell.find(\".dx-dropdowneditor-overlay\").data(\"dxPopup\");\r\n                    var isOverlayVisible = editorPopup && editorPopup.option(\"visible\");\r\n                    var myPosition = isOverlayVisible ? \"top right\" : \"top \" + alignment;\r\n                    var atPosition = isOverlayVisible ? \"top left\" : \"bottom \" + alignment;\r\n                    var $overlayContainer = $cell.closest(\".\".concat(this.addWidgetPrefix(CONTENT_CLASS)));\r\n                    var errorMessageText = \"\";\r\n                    messages && messages.forEach((function(message) {\r\n                        errorMessageText += (errorMessageText.length ? \"<br/>\" : \"\") + encodeHtml(message)\r\n                    }));\r\n                    var invalidMessageClass = this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS);\r\n                    this._rowsView.element().find(\".\" + invalidMessageClass).remove();\r\n                    var $overlayElement = $(\"<div>\").addClass(INVALID_MESSAGE_CLASS).addClass(INVALID_MESSAGE_ALWAYS_CLASS).addClass(invalidMessageClass).html(errorMessageText).appendTo($cell);\r\n                    var overlayOptions = {\r\n                        target: $cell,\r\n                        container: $overlayContainer,\r\n                        shading: false,\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        visible: true,\r\n                        animation: false,\r\n                        propagateOutsideClick: true,\r\n                        closeOnOutsideClick: false,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        position: {\r\n                            collision: \"flip\",\r\n                            boundary: this._rowsView.element(),\r\n                            boundaryOffset: \"0 0\",\r\n                            offset: {\r\n                                x: 0,\r\n                                y: !isOverlayVisible && browser.mozilla ? -1 : 0\r\n                            },\r\n                            my: myPosition,\r\n                            at: atPosition\r\n                        },\r\n                        onPositioned: e => {\r\n                            this._positionedHandler(e, isOverlayVisible);\r\n                            this._shiftValidationMessageIfNeed(e.component.$content(), revertTooltip && revertTooltip.$content(), $cell)\r\n                        }\r\n                    };\r\n                    this._hideFixedGroupCell($cell, overlayOptions);\r\n                    new Overlay($overlayElement, overlayOptions)\r\n                },\r\n                _normalizeValidationMessagePositionAndMaxWidth: function(options, isRevertButton, isOverlayVisible) {\r\n                    var fixedColumns = this._columnsController.getFixedColumns();\r\n                    if (!fixedColumns || !fixedColumns.length) {\r\n                        return\r\n                    }\r\n                    var position;\r\n                    var visibleTableWidth = !isRevertButton && (that = this, element = options.element, rowIndex = $(element).closest(\"tr\").index(), $cellElements = $(that._rowsView.getRowElement(rowIndex)).first().children().filter(\":not(.dx-hidden-cell)\"), that._rowsView._getWidths($cellElements).reduce((w1, w2) => w1 + w2, 0));\r\n                    var that, element, rowIndex, $cellElements;\r\n                    var $overlayContentElement = options.component.$content();\r\n                    var validationMessageWidth = getOuterWidth($overlayContentElement, true);\r\n                    var needMaxWidth = !isRevertButton && validationMessageWidth > visibleTableWidth;\r\n                    var columnIndex = this._rowsView.getCellIndex($(options.element).closest(\"td\"));\r\n                    var boundaryNonFixedColumnsInfo = function(fixedColumns) {\r\n                        var firstNonFixedColumnIndex;\r\n                        var lastNonFixedColumnIndex;\r\n                        fixedColumns.some((column, index) => {\r\n                            if (column.command === COMMAND_TRANSPARENT) {\r\n                                firstNonFixedColumnIndex = 0 === index ? -1 : index;\r\n                                lastNonFixedColumnIndex = index === fixedColumns.length - 1 ? -1 : index + column.colspan - 1;\r\n                                return true\r\n                            }\r\n                        });\r\n                        return {\r\n                            startColumnIndex: firstNonFixedColumnIndex,\r\n                            endColumnIndex: lastNonFixedColumnIndex\r\n                        }\r\n                    }(fixedColumns);\r\n                    if (!isRevertButton && (columnIndex === boundaryNonFixedColumnsInfo.startColumnIndex || needMaxWidth)) {\r\n                        position = {\r\n                            collision: \"none flip\",\r\n                            my: \"top left\",\r\n                            at: isOverlayVisible ? \"top right\" : \"bottom left\"\r\n                        }\r\n                    } else if (columnIndex === boundaryNonFixedColumnsInfo.endColumnIndex) {\r\n                        position = {\r\n                            collision: \"none flip\",\r\n                            my: \"top right\",\r\n                            at: isRevertButton || isOverlayVisible ? \"top left\" : \"bottom right\"\r\n                        };\r\n                        if (isRevertButton) {\r\n                            position.offset = \"-1 0\"\r\n                        }\r\n                    }\r\n                    return position && {\r\n                        position: position,\r\n                        maxWidth: needMaxWidth ? visibleTableWidth - 2 : void 0\r\n                    }\r\n                },\r\n                _shiftValidationMessageIfNeed: function($content, $revertContent, $cell) {\r\n                    if (!$revertContent) {\r\n                        return\r\n                    }\r\n                    var contentOffset = $content.offset();\r\n                    var revertContentOffset = $revertContent.offset();\r\n                    if (contentOffset.top === revertContentOffset.top && contentOffset.left + getWidth($content) > revertContentOffset.left) {\r\n                        var left = getWidth($revertContent) + PADDING_BETWEEN_TOOLTIPS;\r\n                        $content.css(\"left\", revertContentOffset.left < $cell.offset().left ? -left : left)\r\n                    }\r\n                },\r\n                _getTooltipsSelector: function() {\r\n                    var invalidMessageClass = this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS);\r\n                    var revertTooltipClass = this.addWidgetPrefix(REVERT_TOOLTIP_CLASS);\r\n                    return \".dx-editor-cell .\" + revertTooltipClass + \", .dx-editor-cell .\" + invalidMessageClass + \", .dx-cell-modified .\" + invalidMessageClass\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this._columnsController = this.getController(\"columns\");\r\n                    this._rowsView = this.getView(\"rowsView\")\r\n                },\r\n                loseFocus: function(skipValidator) {\r\n                    if (!skipValidator) {\r\n                        this.getController(\"validating\").setValidator(null)\r\n                    }\r\n                    this.callBase()\r\n                },\r\n                updateCellState: function($element, validationResult, hideBorder) {\r\n                    var _change$data;\r\n                    var $focus = null === $element || void 0 === $element ? void 0 : $element.closest(this._getFocusCellSelector());\r\n                    var $cell = null !== $focus && void 0 !== $focus && $focus.is(\"td\") ? $focus : null;\r\n                    var rowOptions = null === $focus || void 0 === $focus ? void 0 : $focus.closest(\".dx-row\").data(\"options\");\r\n                    var change = rowOptions ? this.getController(\"editing\").getChangeByKey(rowOptions.key) : null;\r\n                    var column = $cell && this.getController(\"columns\").getVisibleColumns()[$cell.index()];\r\n                    var isCellModified = void 0 !== (null === change || void 0 === change ? void 0 : null === (_change$data = change.data) || void 0 === _change$data ? void 0 : _change$data[null === column || void 0 === column ? void 0 : column.name]) && !this._editingController.isSaving();\r\n                    var revertTooltip;\r\n                    if ((null === validationResult || void 0 === validationResult ? void 0 : validationResult.status) === VALIDATION_STATUS.invalid || isCellModified) {\r\n                        if (this._editingController.getEditMode() === EDIT_MODE_CELL) {\r\n                            revertTooltip = this._showRevertButton($focus)\r\n                        }\r\n                    }\r\n                    var showValidationMessage = validationResult && validationResult.status === VALIDATION_STATUS.invalid;\r\n                    if (showValidationMessage && $cell && column && validationResult && validationResult.brokenRules) {\r\n                        var errorMessages = [];\r\n                        validationResult.brokenRules.forEach((function(rule) {\r\n                            errorMessages.push(rule.message)\r\n                        }));\r\n                        this._showValidationMessage($focus, errorMessages, column.alignment || \"left\", revertTooltip)\r\n                    }!hideBorder && this._rowsView.element() && this._rowsView.updateFreeSpaceRowHeight()\r\n                },\r\n                focus: function($element, hideBorder) {\r\n                    if (!arguments.length) {\r\n                        return this.callBase()\r\n                    }\r\n                    var $tooltips = $element && $element.closest(\".\" + this.addWidgetPrefix(ROWS_VIEW_CLASS)).find(this._getTooltipsSelector());\r\n                    $tooltips && $tooltips.remove();\r\n                    if (null !== $element && void 0 !== $element && $element.hasClass(\"dx-row\")) {\r\n                        return this.callBase($element, hideBorder)\r\n                    }\r\n                    var $focus = null === $element || void 0 === $element ? void 0 : $element.closest(this._getFocusCellSelector());\r\n                    var callBase = this.callBase;\r\n                    var validator = $focus && ($focus.data(\"dxValidator\") || $element.find(\".\" + this.addWidgetPrefix(VALIDATOR_CLASS)).eq(0).data(\"dxValidator\"));\r\n                    var rowOptions = $focus && $focus.closest(\".dx-row\").data(\"options\");\r\n                    var editingController = this.getController(\"editing\");\r\n                    var change = rowOptions ? editingController.getChangeByKey(rowOptions.key) : null;\r\n                    var validationResult;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (validator) {\r\n                        validatingController.setValidator(validator);\r\n                        var value = validator.option(\"adapter\").getValue();\r\n                        if (cellValueShouldBeValidated(value, rowOptions) || validatingController._rowIsValidated(change)) {\r\n                            editingController.waitForDeferredOperations().done(() => {\r\n                                when(validatingController.validateCell(validator)).done(result => {\r\n                                    validationResult = result;\r\n                                    var column = validationResult.validator.option(\"dataGetter\")().column;\r\n                                    if (change && column && !validatingController.isCurrentValidatorProcessing({\r\n                                            rowKey: change.key,\r\n                                            columnIndex: column.index\r\n                                        })) {\r\n                                        return\r\n                                    }\r\n                                    if (validationResult.status === VALIDATION_STATUS.invalid) {\r\n                                        hideBorder = true\r\n                                    }\r\n                                    this.updateCellState($element, validationResult, hideBorder);\r\n                                    callBase.call(this, $element, hideBorder)\r\n                                })\r\n                            });\r\n                            return this.callBase($element, hideBorder)\r\n                        }\r\n                    }\r\n                    this.updateCellState($element, validationResult, hideBorder);\r\n                    return this.callBase($element, hideBorder)\r\n                },\r\n                getEditorInstance: function($container) {\r\n                    var $editor = $container.find(\".dx-texteditor\").eq(0);\r\n                    return gridCoreUtils.getWidgetInstance($editor)\r\n                }\r\n            },\r\n            data: {\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    var _oldRow$cells, _cell$column$validati;\r\n                    var cell = null === (_oldRow$cells = oldRow.cells) || void 0 === _oldRow$cells ? void 0 : _oldRow$cells[columnIndex];\r\n                    var oldValidationStatus = cell && cell.validationStatus;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationResult = validatingController.getCellValidationResult({\r\n                        rowKey: oldRow.key,\r\n                        columnIndex: columnIndex\r\n                    });\r\n                    var validationData = validatingController._getValidationData(oldRow.key);\r\n                    var newValidationStatus = validationResultIsValid(validationResult) ? validationResult.status : validationResult;\r\n                    var rowIsModified = JSON.stringify(newRow.modifiedValues) !== JSON.stringify(oldRow.modifiedValues);\r\n                    var cellIsMarkedAsInvalid = $(null === cell || void 0 === cell ? void 0 : cell.cellElement).hasClass(this.addWidgetPrefix(INVALIDATE_CLASS));\r\n                    var editingChanged = oldRow.isEditing !== newRow.isEditing;\r\n                    var hasValidationRules = null === cell || void 0 === cell ? void 0 : null === (_cell$column$validati = cell.column.validationRules) || void 0 === _cell$column$validati ? void 0 : _cell$column$validati.length;\r\n                    if (editingChanged && hasValidationRules || oldValidationStatus !== newValidationStatus && rowIsModified || validationData.isValid && cellIsMarkedAsInvalid) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                updateFreeSpaceRowHeight: function($table) {\r\n                    var $rowElements;\r\n                    var $freeSpaceRowElement;\r\n                    var $freeSpaceRowElements;\r\n                    var $element = this.element();\r\n                    var $tooltipContent = $element && $element.find(\".\" + this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS) + \" .dx-overlay-content\");\r\n                    this.callBase($table);\r\n                    if ($tooltipContent && $tooltipContent.length) {\r\n                        $rowElements = this._getRowElements();\r\n                        $freeSpaceRowElements = this._getFreeSpaceRowElements($table);\r\n                        $freeSpaceRowElement = $freeSpaceRowElements.first();\r\n                        if ($freeSpaceRowElement && 1 === $rowElements.length && (!$freeSpaceRowElement.is(\":visible\") || getOuterHeight($tooltipContent) > getOuterHeight($freeSpaceRowElement))) {\r\n                            $freeSpaceRowElements.show();\r\n                            setHeight($freeSpaceRowElements, getOuterHeight($tooltipContent));\r\n                            return true\r\n                        }\r\n                    }\r\n                },\r\n                _formItemPrepared: function(cellOptions, $container) {\r\n                    this.callBase.apply(this, arguments);\r\n                    deferUpdate(() => {\r\n                        var $editor = $container.find(\".dx-widget\").first();\r\n                        var isEditorDisposed = $editor.length && !$editor.children().length;\r\n                        if (!isEditorDisposed) {\r\n                            this.getController(\"validating\").createValidator(cellOptions, $editor)\r\n                        }\r\n                    })\r\n                },\r\n                _cellPrepared: function($cell, parameters) {\r\n                    if (!this.getController(\"editing\").isFormOrPopupEditMode()) {\r\n                        this.getController(\"validating\").createValidator(parameters, $cell)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _restoreErrorRow: function(contentTable) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    editingController && editingController.hasChanges() && this._getRowElements(contentTable).each((_, item) => {\r\n                        var rowOptions = $(item).data(\"options\");\r\n                        if (rowOptions) {\r\n                            var change = editingController.getChangeByKey(rowOptions.key);\r\n                            change && editingController._showErrorRow(change)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.validating.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    validatingModule\r\n} from \"../grid_core/ui.grid_core.validating\";\r\ngridCore.registerModule(\"validating\", validatingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid.core.virtual_data_loader.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isObject,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar needTwoPagesLoading = that => that.option(\"scrolling.loadTwoPagesOnStart\") || that._controller.isVirtual() || that._controller.getViewportItemIndex() > 0;\r\nvar getBeginPageIndex = that => that._cache.length ? that._cache[0].pageIndex : -1;\r\nvar getEndPageIndex = that => that._cache.length ? that._cache[that._cache.length - 1].pageIndex : -1;\r\nvar fireChanged = (that, changed, args) => {\r\n    that._isChangedFiring = true;\r\n    changed(args);\r\n    that._isChangedFiring = false\r\n};\r\nvar processDelayChanged = (that, changed, args) => {\r\n    if (that._isDelayChanged) {\r\n        that._isDelayChanged = false;\r\n        fireChanged(that, changed, args);\r\n        return true\r\n    }\r\n};\r\nvar getViewportPageCount = that => {\r\n    var pageSize = that._dataOptions.pageSize();\r\n    var preventPreload = that.option(\"scrolling.preventPreload\");\r\n    if (preventPreload) {\r\n        return 0\r\n    }\r\n    var realViewportSize = that._controller.viewportSize();\r\n    if (that._controller.isVirtualMode() && that.option(\"scrolling.removeInvisiblePages\")) {\r\n        realViewportSize = 0;\r\n        var viewportSize = that._controller.viewportSize() * that._controller.viewportItemSize();\r\n        var offset = that._controller.getContentOffset();\r\n        var position = that._controller.getViewportPosition();\r\n        var virtualItemsCount = that._controller.virtualItemsCount();\r\n        var totalItemsCount = that._dataOptions.totalItemsCount();\r\n        for (var itemIndex = virtualItemsCount.begin; itemIndex < totalItemsCount; itemIndex++) {\r\n            if (offset >= position + viewportSize) {\r\n                break\r\n            }\r\n            var itemSize = that._controller.getItemSizes()[itemIndex] || that._controller.viewportItemSize();\r\n            offset += itemSize;\r\n            if (offset >= position) {\r\n                realViewportSize++\r\n            }\r\n        }\r\n    }\r\n    return pageSize && realViewportSize > 0 ? Math.ceil(realViewportSize / pageSize) : 1\r\n};\r\nvar getPreloadPageCount = (that, previous) => {\r\n    var preloadEnabled = that.option(\"scrolling.preloadEnabled\");\r\n    var pageCount = getViewportPageCount(that);\r\n    var isAppendMode = that._controller.isAppendMode();\r\n    if (pageCount) {\r\n        if (previous) {\r\n            pageCount = preloadEnabled ? 1 : 0\r\n        } else {\r\n            if (preloadEnabled) {\r\n                pageCount++\r\n            }\r\n            if (isAppendMode || !needTwoPagesLoading(that)) {\r\n                pageCount--\r\n            }\r\n        }\r\n    }\r\n    return pageCount\r\n};\r\nvar getPageIndexForLoad = that => {\r\n    var result = -1;\r\n    var beginPageIndex = getBeginPageIndex(that);\r\n    var dataOptions = that._dataOptions;\r\n    if (beginPageIndex < 0) {\r\n        result = that._pageIndex\r\n    } else if (!that._cache[that._pageIndex - beginPageIndex]) {\r\n        result = that._pageIndex\r\n    } else if (beginPageIndex >= 0 && that._controller.viewportSize() >= 0) {\r\n        if (beginPageIndex > 0) {\r\n            var needToLoadPageBeforeLast = getEndPageIndex(that) + 1 === dataOptions.pageCount() && that._cache.length < getPreloadPageCount(that) + 1;\r\n            var needToLoadPrevPage = needToLoadPageBeforeLast || that._pageIndex === beginPageIndex && getPreloadPageCount(that, true);\r\n            if (needToLoadPrevPage) {\r\n                result = beginPageIndex - 1\r\n            }\r\n        }\r\n        if (result < 0) {\r\n            var needToLoadNextPage = beginPageIndex + that._cache.length <= that._pageIndex + getPreloadPageCount(that);\r\n            if (needToLoadNextPage) {\r\n                result = beginPageIndex + that._cache.length\r\n            }\r\n        }\r\n    }\r\n    if (that._loadingPageIndexes[result]) {\r\n        result = -1\r\n    }\r\n    return result\r\n};\r\nvar loadCore = (that, pageIndex) => {\r\n    var dataOptions = that._dataOptions;\r\n    if (pageIndex === that.pageIndex() || !dataOptions.isLoading() && pageIndex < dataOptions.pageCount() || !dataOptions.hasKnownLastPage() && pageIndex === dataOptions.pageCount()) {\r\n        dataOptions.pageIndex(pageIndex);\r\n        that._loadingPageIndexes[pageIndex] = true;\r\n        return when(dataOptions.load()).always(() => {\r\n            that._loadingPageIndexes[pageIndex] = false\r\n        })\r\n    }\r\n};\r\nvar processChanged = (that, changed, changeType, isDelayChanged, removeCacheItem) => {\r\n    var dataOptions = that._dataOptions;\r\n    var items = dataOptions.items().slice();\r\n    var change = isObject(changeType) ? changeType : void 0;\r\n    var isPrepend = \"prepend\" === changeType;\r\n    var viewportItems = dataOptions.viewportItems();\r\n    if (changeType && isString(changeType) && !that._isDelayChanged) {\r\n        change = {\r\n            changeType: changeType,\r\n            items: items\r\n        };\r\n        if (removeCacheItem) {\r\n            change.removeCount = removeCacheItem.itemsCount;\r\n            if (change.removeCount && dataOptions.correctCount) {\r\n                change.removeCount = dataOptions.correctCount(viewportItems, change.removeCount, isPrepend)\r\n            }\r\n        }\r\n    }\r\n    var removeItemCount = removeCacheItem ? removeCacheItem.itemsLength : 0;\r\n    if (removeItemCount && dataOptions.correctCount) {\r\n        removeItemCount = dataOptions.correctCount(viewportItems, removeItemCount, isPrepend)\r\n    }\r\n    if (\"append\" === changeType) {\r\n        viewportItems.push.apply(viewportItems, items);\r\n        if (removeCacheItem) {\r\n            viewportItems.splice(0, removeItemCount)\r\n        }\r\n    } else if (isPrepend) {\r\n        viewportItems.unshift.apply(viewportItems, items);\r\n        if (removeCacheItem) {\r\n            viewportItems.splice(-removeItemCount)\r\n        }\r\n    } else {\r\n        that._dataOptions.viewportItems(items)\r\n    }\r\n    dataOptions.updateLoading();\r\n    that._lastPageIndex = that.pageIndex();\r\n    that._isDelayChanged = isDelayChanged;\r\n    if (!isDelayChanged) {\r\n        fireChanged(that, changed, change)\r\n    }\r\n};\r\nexport class VirtualDataLoader {\r\n    constructor(controller, dataOptions) {\r\n        this._controller = controller;\r\n        this._dataOptions = dataOptions;\r\n        this._pageIndex = this._lastPageIndex = dataOptions.pageIndex();\r\n        this._cache = [];\r\n        this._loadingPageIndexes = {}\r\n    }\r\n    option() {\r\n        return this._controller.option.apply(this._controller, arguments)\r\n    }\r\n    viewportItemIndexChanged(itemIndex) {\r\n        var pageSize = this._dataOptions.pageSize();\r\n        var pageCount = this._dataOptions.pageCount();\r\n        var virtualMode = this._controller.isVirtualMode();\r\n        var appendMode = this._controller.isAppendMode();\r\n        var totalItemsCount = this._dataOptions.totalItemsCount();\r\n        var newPageIndex;\r\n        if (pageSize && (virtualMode || appendMode) && totalItemsCount >= 0) {\r\n            var viewportSize = this._controller.viewportSize();\r\n            if (viewportSize && itemIndex + viewportSize >= totalItemsCount && !this._controller.isVirtual()) {\r\n                if (this._dataOptions.hasKnownLastPage()) {\r\n                    newPageIndex = pageCount - 1;\r\n                    var lastPageSize = totalItemsCount % pageSize;\r\n                    if (newPageIndex > 0 && lastPageSize > 0 && lastPageSize < viewportSize) {\r\n                        newPageIndex--\r\n                    }\r\n                } else {\r\n                    newPageIndex = pageCount\r\n                }\r\n            } else {\r\n                newPageIndex = Math.floor(itemIndex / pageSize);\r\n                var maxPageIndex = pageCount - 1;\r\n                newPageIndex = Math.max(newPageIndex, 0);\r\n                newPageIndex = Math.min(newPageIndex, maxPageIndex)\r\n            }\r\n            this.pageIndex(newPageIndex);\r\n            return this.load()\r\n        }\r\n    }\r\n    pageIndex(pageIndex) {\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            if (void 0 !== pageIndex) {\r\n                this._pageIndex = pageIndex\r\n            }\r\n            return this._pageIndex\r\n        } else {\r\n            return this._dataOptions.pageIndex(pageIndex)\r\n        }\r\n    }\r\n    beginPageIndex(defaultPageIndex) {\r\n        var beginPageIndex = getBeginPageIndex(this);\r\n        if (beginPageIndex < 0) {\r\n            beginPageIndex = void 0 !== defaultPageIndex ? defaultPageIndex : this.pageIndex()\r\n        }\r\n        return beginPageIndex\r\n    }\r\n    endPageIndex() {\r\n        var endPageIndex = getEndPageIndex(this);\r\n        return endPageIndex > 0 ? endPageIndex : this._lastPageIndex\r\n    }\r\n    pageSize() {\r\n        return this._dataOptions.pageSize()\r\n    }\r\n    load() {\r\n        var dataOptions = this._dataOptions;\r\n        var result;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            var pageIndexForLoad = getPageIndexForLoad(this);\r\n            if (pageIndexForLoad >= 0) {\r\n                var loadResult = loadCore(this, pageIndexForLoad);\r\n                if (loadResult) {\r\n                    result = new Deferred;\r\n                    loadResult.done(() => {\r\n                        var delayDeferred = this._delayDeferred;\r\n                        if (delayDeferred) {\r\n                            delayDeferred.done(result.resolve).fail(result.reject)\r\n                        } else {\r\n                            result.resolve()\r\n                        }\r\n                    }).fail(result.reject);\r\n                    dataOptions.updateLoading()\r\n                }\r\n            }\r\n        } else {\r\n            result = dataOptions.load()\r\n        }\r\n        if (!result && this._lastPageIndex !== this.pageIndex()) {\r\n            this._dataOptions.onChanged({\r\n                changeType: \"pageIndex\"\r\n            })\r\n        }\r\n        return result || (new Deferred).resolve()\r\n    }\r\n    loadIfNeed() {\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if ((isVirtualMode || isAppendMode) && !this._dataOptions.isLoading() && (!this._isChangedFiring || this._controller.isVirtual())) {\r\n            var position = this._controller.getViewportPosition();\r\n            if (position > 0) {\r\n                this._controller._setViewportPositionCore(position)\r\n            } else {\r\n                this.load()\r\n            }\r\n        }\r\n    }\r\n    handleDataChanged(callBase, e) {\r\n        var dataOptions = this._dataOptions;\r\n        var lastCacheLength = this._cache.length;\r\n        var changeType;\r\n        var removeInvisiblePages;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (e && e.changes) {\r\n            fireChanged(this, callBase, e)\r\n        } else if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            var beginPageIndex = getBeginPageIndex(this);\r\n            if (beginPageIndex >= 0) {\r\n                if (isVirtualMode && beginPageIndex + this._cache.length !== dataOptions.pageIndex() && beginPageIndex - 1 !== dataOptions.pageIndex()) {\r\n                    lastCacheLength = 0;\r\n                    this._cache = []\r\n                }\r\n                if (isAppendMode) {\r\n                    if (0 === dataOptions.pageIndex()) {\r\n                        this._cache = []\r\n                    } else if (dataOptions.pageIndex() < getEndPageIndex(this)) {\r\n                        fireChanged(this, callBase, {\r\n                            changeType: \"append\",\r\n                            items: []\r\n                        });\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n            var cacheItem = {\r\n                pageIndex: dataOptions.pageIndex(),\r\n                itemsLength: dataOptions.items(true).length,\r\n                itemsCount: this.itemsCount(true)\r\n            };\r\n            if (this.option(\"scrolling.removeInvisiblePages\") && isVirtualMode) {\r\n                removeInvisiblePages = this._cache.length > Math.max(getPreloadPageCount(this) + (this.option(\"scrolling.preloadEnabled\") ? 1 : 0), 2)\r\n            } else {\r\n                processDelayChanged(this, callBase, {\r\n                    isDelayed: true\r\n                })\r\n            }\r\n            var removeCacheItem;\r\n            if (beginPageIndex === dataOptions.pageIndex() + 1) {\r\n                if (removeInvisiblePages) {\r\n                    removeCacheItem = this._cache.pop()\r\n                }\r\n                changeType = \"prepend\";\r\n                this._cache.unshift(cacheItem)\r\n            } else {\r\n                if (removeInvisiblePages) {\r\n                    removeCacheItem = this._cache.shift()\r\n                }\r\n                changeType = \"append\";\r\n                this._cache.push(cacheItem)\r\n            }\r\n            var isDelayChanged = isVirtualMode && 0 === lastCacheLength && needTwoPagesLoading(this);\r\n            processChanged(this, callBase, this._cache.length > 1 ? changeType : void 0, isDelayChanged, removeCacheItem);\r\n            this._delayDeferred = this.load().done(() => {\r\n                if (processDelayChanged(this, callBase)) {\r\n                    this.load()\r\n                }\r\n            })\r\n        } else {\r\n            processChanged(this, callBase, e)\r\n        }\r\n    }\r\n    getDelayDeferred() {\r\n        return this._delayDeferred\r\n    }\r\n    itemsCount(isBase) {\r\n        var itemsCount = 0;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        if (!isBase && isVirtualMode) {\r\n            this._cache.forEach(cacheItem => {\r\n                itemsCount += cacheItem.itemsCount\r\n            })\r\n        } else {\r\n            itemsCount = this._dataOptions.itemsCount()\r\n        }\r\n        return itemsCount\r\n    }\r\n    virtualItemsCount() {\r\n        var pageIndex = getBeginPageIndex(this);\r\n        if (pageIndex < 0) {\r\n            pageIndex = this._dataOptions.pageIndex()\r\n        }\r\n        var beginItemsCount = pageIndex * this._dataOptions.pageSize();\r\n        var itemsCount = this._cache.length * this._dataOptions.pageSize();\r\n        var endItemsCount = Math.max(0, this._dataOptions.totalItemsCount() - itemsCount - beginItemsCount);\r\n        return {\r\n            begin: beginItemsCount,\r\n            end: endItemsCount\r\n        }\r\n    }\r\n    reset() {\r\n        this._loadingPageIndexes = {};\r\n        this._cache = []\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    VirtualDataLoader\r\n} from \"./ui.grid.core.virtual_data_loader\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar _isVirtualMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\r\nvar _isAppendMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\r\nexport function subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\r\n    var $scrollElement;\r\n    var scrollableArray = [];\r\n    var scrollToArray = [];\r\n    var disposeArray = [];\r\n    $targetElement = $targetElement || $element;\r\n\r\n    function getElementOffset(scrollable) {\r\n        var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\r\n        var scrollableOffset = positionUtils.offset($scrollableElement);\r\n        if (!scrollableOffset) {\r\n            return $element.offset().top\r\n        }\r\n        return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top)\r\n    }\r\n    var widgetScrollStrategy = {\r\n        on: function(scrollable, eventName, handler) {\r\n            scrollable.on(\"scroll\", handler)\r\n        },\r\n        off: function(scrollable, eventName, handler) {\r\n            scrollable.off(\"scroll\", handler)\r\n        }\r\n    };\r\n\r\n    function subscribeToScrollEvents($scrollElement) {\r\n        var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\r\n        var scrollable = $scrollElement.data(\"dxScrollable\");\r\n        var eventsStrategy = widgetScrollStrategy;\r\n        if (!scrollable) {\r\n            scrollable = isDocument && $(getWindow()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\r\n            eventsStrategy = eventsEngine;\r\n            if (!scrollable) {\r\n                return\r\n            }\r\n        }\r\n        var handler = function(scrollable) {\r\n            return function() {\r\n                var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\r\n                scrollTop = scrollTop > 0 ? scrollTop : 0;\r\n                scrollChangedHandler(scrollTop)\r\n            }\r\n        }(scrollable);\r\n        eventsStrategy.on(scrollable, \"scroll\", handler);\r\n        scrollToArray.push((function(pos) {\r\n            var topOffset = getElementOffset(scrollable);\r\n            var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\r\n            if (pos - topOffset >= 0) {\r\n                scrollable[scrollMethod](pos + topOffset)\r\n            }\r\n        }));\r\n        scrollableArray.push(scrollable);\r\n        disposeArray.push((function() {\r\n            eventsStrategy.off(scrollable, \"scroll\", handler)\r\n        }))\r\n    }\r\n    for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\r\n        subscribeToScrollEvents($scrollElement)\r\n    }\r\n    return {\r\n        scrollTo: function(pos) {\r\n            each(scrollToArray, (function(_, scrollTo) {\r\n                scrollTo(pos)\r\n            }))\r\n        },\r\n        dispose: function() {\r\n            each(disposeArray, (function(_, dispose) {\r\n                dispose()\r\n            }))\r\n        }\r\n    }\r\n}\r\nexport var VirtualScrollController = Class.inherit(function() {\r\n    var members = {\r\n        ctor: function(component, dataOptions, isVirtual) {\r\n            this._dataOptions = dataOptions;\r\n            this.component = component;\r\n            this._viewportSize = false === component.option(LEGACY_SCROLLING_MODE) ? 15 : 0;\r\n            this._viewportItemSize = 20;\r\n            this._viewportItemIndex = 0;\r\n            this._position = 0;\r\n            this._isScrollingBack = false;\r\n            this._contentSize = 0;\r\n            this._itemSizes = {};\r\n            this._sizeRatio = 1;\r\n            this._isVirtual = isVirtual;\r\n            this.positionChanged = Callbacks();\r\n            this._dataLoader = new VirtualDataLoader(this, this._dataOptions)\r\n        },\r\n        getItemSizes: function() {\r\n            return this._itemSizes\r\n        },\r\n        option: function() {\r\n            return this.component.option.apply(this.component, arguments)\r\n        },\r\n        isVirtual: function() {\r\n            return this._isVirtual\r\n        },\r\n        virtualItemsCount: function() {\r\n            if (_isVirtualMode(this)) {\r\n                var dataOptions = this._dataOptions;\r\n                var totalItemsCount = dataOptions.totalItemsCount();\r\n                if (false === this.option(LEGACY_SCROLLING_MODE) && -1 !== totalItemsCount) {\r\n                    var viewportParams = this.getViewportParams();\r\n                    var loadedOffset = dataOptions.loadedOffset();\r\n                    var loadedItemCount = dataOptions.loadedItemCount();\r\n                    var skip = Math.max(viewportParams.skip, loadedOffset);\r\n                    var take = Math.min(viewportParams.take, loadedItemCount);\r\n                    var endItemsCount = Math.max(totalItemsCount - (skip + take), 0);\r\n                    return {\r\n                        begin: skip,\r\n                        end: endItemsCount\r\n                    }\r\n                }\r\n                return this._dataLoader.virtualItemsCount.apply(this._dataLoader, arguments)\r\n            }\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync)) {\r\n                scrollingTimeout = Math.min(this.option(\"scrolling.timeout\") || 0, this._dataOptions.changingDuration());\r\n                if (scrollingTimeout < this.option(\"scrolling.renderingThreshold\")) {\r\n                    scrollingTimeout = this.option(\"scrolling.minTimeout\") || 0\r\n                }\r\n            } else if (renderAsync) {\r\n                var _this$option;\r\n                scrollingTimeout = null !== (_this$option = this.option(\"scrolling.timeout\")) && void 0 !== _this$option ? _this$option : 0\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setViewportPosition: function(position) {\r\n            var result = new Deferred;\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            clearTimeout(this._scrollTimeoutID);\r\n            if (scrollingTimeout > 0) {\r\n                this._scrollTimeoutID = setTimeout(() => {\r\n                    this._setViewportPositionCore(position);\r\n                    result.resolve()\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setViewportPositionCore(position);\r\n                result.resolve()\r\n            }\r\n            return result.promise()\r\n        },\r\n        getViewportPosition: function() {\r\n            return this._position\r\n        },\r\n        getItemIndexByPosition: function(position) {\r\n            var _position;\r\n            position = null !== (_position = position) && void 0 !== _position ? _position : this._position;\r\n            var defaultItemSize = this.getItemSize();\r\n            var offset = 0;\r\n            var itemOffset = 0;\r\n            var itemOffsetsWithSize = Object.keys(this._itemSizes).concat(-1);\r\n            for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\r\n                var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\r\n                var itemOffsetDiff = (position - offset) / defaultItemSize;\r\n                if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\r\n                    itemOffset += itemOffsetDiff;\r\n                    break\r\n                } else {\r\n                    itemOffsetDiff = itemOffsetWithSize - itemOffset;\r\n                    offset += itemOffsetDiff * defaultItemSize;\r\n                    itemOffset += itemOffsetDiff\r\n                }\r\n                var itemSize = this._itemSizes[itemOffsetWithSize];\r\n                offset += itemSize;\r\n                itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize\r\n            }\r\n            return Math.round(50 * itemOffset) / 50\r\n        },\r\n        isScrollingBack: function() {\r\n            return this._isScrollingBack\r\n        },\r\n        _setViewportPositionCore: function(position) {\r\n            var prevPosition = this._position || 0;\r\n            this._position = position;\r\n            if (prevPosition !== this._position) {\r\n                this._isScrollingBack = this._position < prevPosition\r\n            }\r\n            var itemIndex = this.getItemIndexByPosition();\r\n            var result = this.setViewportItemIndex(itemIndex);\r\n            this.positionChanged.fire();\r\n            return result\r\n        },\r\n        setContentItemSizes: function(sizes) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            this._contentSize = sizes.reduce((a, b) => a + b, 0);\r\n            if (virtualItemsCount) {\r\n                sizes.forEach((size, index) => {\r\n                    this._itemSizes[virtualItemsCount.begin + index] = size\r\n                });\r\n                var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + this.itemsCount()) * this._viewportItemSize;\r\n                var contentHeightLimit = gridCoreUtils.getContentHeightLimit(browser);\r\n                if (virtualContentSize > contentHeightLimit) {\r\n                    this._sizeRatio = contentHeightLimit / virtualContentSize\r\n                } else {\r\n                    this._sizeRatio = 1\r\n                }\r\n            }\r\n        },\r\n        getItemSize: function() {\r\n            return this._viewportItemSize * this._sizeRatio\r\n        },\r\n        getItemOffset: function(itemIndex, isEnd) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            var itemCount = itemIndex;\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            var offset = 0;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            Object.keys(this._itemSizes).forEach(currentItemIndex => {\r\n                if (!itemCount) {\r\n                    return\r\n                }\r\n                if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\r\n                    offset += this._itemSizes[currentItemIndex];\r\n                    itemCount--\r\n                }\r\n            });\r\n            return Math.floor(offset + itemCount * this._viewportItemSize * this._sizeRatio)\r\n        },\r\n        getContentOffset: function(type) {\r\n            var isEnd = \"end\" === type;\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd)\r\n        },\r\n        getVirtualContentSize: function() {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            return virtualItemsCount ? this.getContentOffset(\"begin\") + this.getContentOffset(\"end\") + this._contentSize : 0\r\n        },\r\n        getViewportItemIndex: function() {\r\n            return this._viewportItemIndex\r\n        },\r\n        setViewportItemIndex: function(itemIndex) {\r\n            this._viewportItemIndex = itemIndex;\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return\r\n            }\r\n            return this._dataLoader.viewportItemIndexChanged.apply(this._dataLoader, arguments)\r\n        },\r\n        viewportItemSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportItemSize = size\r\n            }\r\n            return this._viewportItemSize\r\n        },\r\n        viewportSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportSize = size\r\n            }\r\n            return this._viewportSize\r\n        },\r\n        viewportHeight: function(height) {\r\n            var begin = this.getItemIndexByPosition();\r\n            var end = this.getItemIndexByPosition(this._position + height);\r\n            this.viewportSize(Math.ceil(end - begin));\r\n            if (this._viewportItemIndex !== begin) {\r\n                this._setViewportPositionCore(this._position)\r\n            }\r\n        },\r\n        reset: function(isRefresh) {\r\n            this._dataLoader.reset();\r\n            if (!isRefresh) {\r\n                this._itemSizes = {}\r\n            }\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            this._windowScroll = this._windowScroll || subscribeToExternalScrollers($element, scrollTop => {\r\n                if (this.viewportItemSize()) {\r\n                    this.setViewportPosition(scrollTop)\r\n                }\r\n            })\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this._windowScroll && this._windowScroll.dispose();\r\n            this._windowScroll = null\r\n        },\r\n        scrollTo: function(pos) {\r\n            this._windowScroll && this._windowScroll.scrollTo(pos)\r\n        },\r\n        isVirtualMode: function() {\r\n            return _isVirtualMode(this)\r\n        },\r\n        isAppendMode: function() {\r\n            return _isAppendMode(this)\r\n        },\r\n        getViewportParams: function() {\r\n            var _this$option2;\r\n            var virtualMode = this.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            var topIndex = this._viewportItemIndex;\r\n            var bottomIndex = this._viewportSize + topIndex;\r\n            var maxGap = this.option(\"scrolling.prerenderedRowChunkSize\") || 1;\r\n            var isScrollingBack = this.isScrollingBack();\r\n            var minGap = null !== (_this$option2 = this.option(\"scrolling.prerenderedRowCount\")) && void 0 !== _this$option2 ? _this$option2 : 1;\r\n            var topMinGap = isScrollingBack ? minGap : 0;\r\n            var bottomMinGap = isScrollingBack ? 0 : minGap;\r\n            var skip = Math.floor(Math.max(0, topIndex - topMinGap) / maxGap) * maxGap;\r\n            var take = Math.ceil((bottomIndex + bottomMinGap - skip) / maxGap) * maxGap;\r\n            if (virtualMode) {\r\n                var remainedItems = Math.max(0, totalItemsCount - skip);\r\n                take = Math.min(take, remainedItems)\r\n            }\r\n            return {\r\n                skip: skip,\r\n                take: take\r\n            }\r\n        },\r\n        itemsCount: function() {\r\n            var result = 0;\r\n            if (this.option(LEGACY_SCROLLING_MODE)) {\r\n                result = this._dataLoader.itemsCount.apply(this._dataLoader, arguments)\r\n            } else {\r\n                result = this._dataOptions.itemsCount()\r\n            }\r\n            return result\r\n        }\r\n    };\r\n    [\"pageIndex\", \"beginPageIndex\", \"endPageIndex\", \"pageSize\", \"load\", \"loadIfNeed\", \"handleDataChanged\", \"getDelayDeferred\"].forEach((function(name) {\r\n        members[name] = function() {\r\n            return this._dataLoader[name].apply(this._dataLoader, arguments)\r\n        }\r\n    }));\r\n    return members\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    VirtualScrollController,\r\n    subscribeToExternalScrollers\r\n} from \"./ui.grid_core.virtual_scrolling_core\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar BOTTOM_LOAD_PANEL_CLASS = \"bottom-load-panel\";\r\nvar TABLE_CONTENT_CLASS = \"table-content\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar FREESPACE_CLASS = \"dx-freespace-row\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LOAD_TIMEOUT = 300;\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar VISIBLE_PAGE_INDEX = \"paging.pageIndex\";\r\nvar isVirtualMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL\r\n};\r\nvar isAppendMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE\r\n};\r\nvar isVirtualPaging = function(that) {\r\n    return isVirtualMode(that) || isAppendMode(that)\r\n};\r\nvar _correctCount = function(items, count, fromEnd, isItemCountableFunc) {\r\n    for (var i = 0; i < count + 1; i++) {\r\n        var item = items[fromEnd ? items.length - 1 - i : i];\r\n        if (item && !isItemCountableFunc(item, i === count, fromEnd)) {\r\n            count++\r\n        }\r\n    }\r\n    return count\r\n};\r\nvar isItemCountableByDataSource = function(item, dataSource) {\r\n    return \"data\" === item.rowType && !item.isNewRow || \"group\" === item.rowType && dataSource.isGroupItemCountable(item.data)\r\n};\r\nvar updateItemIndices = function(items) {\r\n    items.forEach((function(item, index) {\r\n        item.rowIndex = index\r\n    }));\r\n    return items\r\n};\r\nvar VirtualScrollingDataSourceAdapterExtender = function() {\r\n    var _updateLoading = function(that) {\r\n        var beginPageIndex = that._virtualScrollController.beginPageIndex(-1);\r\n        if (isVirtualMode(that)) {\r\n            if (beginPageIndex < 0 || that.viewportSize() >= 0 && that.getViewportItemIndex() >= 0 && (beginPageIndex * that.pageSize() > that.getViewportItemIndex() || beginPageIndex * that.pageSize() + that.itemsCount() < that.getViewportItemIndex() + that.viewportSize()) && that._dataSource.isLoading()) {\r\n                if (!that._isLoading) {\r\n                    that._isLoading = true;\r\n                    that.loadingChanged.fire(true)\r\n                }\r\n            } else if (that._isLoading) {\r\n                that._isLoading = false;\r\n                that.loadingChanged.fire(false)\r\n            }\r\n        }\r\n    };\r\n    var result = {\r\n        init: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._items = [];\r\n            this._isLoaded = true;\r\n            this._loadPageCount = 1;\r\n            this._virtualScrollController = new VirtualScrollController(this.component, this._getVirtualScrollDataOptions())\r\n        },\r\n        _getVirtualScrollDataOptions: function() {\r\n            var that = this;\r\n            return {\r\n                pageSize: function() {\r\n                    return that.pageSize()\r\n                },\r\n                totalItemsCount: function() {\r\n                    return that.totalItemsCount()\r\n                },\r\n                hasKnownLastPage: function() {\r\n                    return that.hasKnownLastPage()\r\n                },\r\n                pageIndex: function(index) {\r\n                    return that._dataSource.pageIndex(index)\r\n                },\r\n                isLoading: function() {\r\n                    return that._dataSource.isLoading() && !that.isCustomLoading()\r\n                },\r\n                pageCount: function() {\r\n                    return that.pageCount()\r\n                },\r\n                load: function() {\r\n                    return that._dataSource.load()\r\n                },\r\n                updateLoading: function() {\r\n                    _updateLoading(that)\r\n                },\r\n                itemsCount: function() {\r\n                    return that.itemsCount(true)\r\n                },\r\n                items: function() {\r\n                    return that._dataSource.items()\r\n                },\r\n                viewportItems: function(items) {\r\n                    if (items) {\r\n                        that._items = items\r\n                    }\r\n                    return that._items\r\n                },\r\n                onChanged: function(e) {\r\n                    that.changed.fire(e)\r\n                },\r\n                changingDuration: function(e) {\r\n                    if (that.isLoading()) {\r\n                        return LOAD_TIMEOUT\r\n                    }\r\n                    return that._renderTime || 0\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                this.callBase.apply(this, arguments);\r\n                return\r\n            }\r\n            if (!isVirtualMode(this) || this._isLoadingAll) {\r\n                this._isLoading = isLoading;\r\n                this.callBase.apply(this, arguments)\r\n            }\r\n            if (isLoading) {\r\n                this._startLoadTime = new Date\r\n            } else {\r\n                this._startLoadTime = void 0\r\n            }\r\n        },\r\n        _handleLoadError: function() {\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                this._isLoading = false;\r\n                this.loadingChanged.fire(false)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _handleDataChanged: function(e) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                this._items = this._dataSource.items().slice();\r\n                this.callBase.apply(this, arguments);\r\n                return\r\n            }\r\n            var callBase = this.callBase.bind(this);\r\n            this._virtualScrollController.handleDataChanged(callBase, e)\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            if (!isDefined(renderAsync)) {\r\n                renderAsync = this._renderTime >= this.option(\"scrolling.renderingThreshold\")\r\n            }\r\n            if ((isVirtualMode(this) || isAppendMode(this) && newMode) && !operationTypes.reload && (operationTypes.skip || newMode) && !renderAsync) {\r\n                options.delay = void 0\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        items: function() {\r\n            return this._items\r\n        },\r\n        itemsCount: function(isBase) {\r\n            if (isBase || false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return this.callBase()\r\n            }\r\n            return this._virtualScrollController.itemsCount()\r\n        },\r\n        load: function(loadOptions) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE) || loadOptions) {\r\n                return this.callBase(loadOptions)\r\n            }\r\n            return this._virtualScrollController.load()\r\n        },\r\n        isLoading: function() {\r\n            return false === this.option(LEGACY_SCROLLING_MODE) ? this._dataSource.isLoading() : this._isLoading\r\n        },\r\n        isLoaded: function() {\r\n            return this._dataSource.isLoaded() && this._isLoaded\r\n        },\r\n        resetPagesCache: function(isLiveUpdate) {\r\n            if (!isLiveUpdate) {\r\n                this._virtualScrollController.reset(true)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _changeRowExpandCore: function() {\r\n            var result = this.callBase.apply(this, arguments);\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return result\r\n            }\r\n            this.resetPagesCache();\r\n            _updateLoading(this);\r\n            return result\r\n        },\r\n        reload: function() {\r\n            this._dataSource.pageIndex(this.pageIndex());\r\n            var virtualScrollController = this._virtualScrollController;\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE) && virtualScrollController) {\r\n                var d = new Deferred;\r\n                this.callBase.apply(this, arguments).done((function(r) {\r\n                    var delayDeferred = virtualScrollController.getDelayDeferred();\r\n                    if (delayDeferred) {\r\n                        delayDeferred.done(d.resolve).fail(d.reject)\r\n                    } else {\r\n                        d.resolve(r)\r\n                    }\r\n                })).fail(d.reject);\r\n                return d\r\n            } else {\r\n                return this.callBase.apply(this, arguments)\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                var storeLoadOptions = options.storeLoadOptions;\r\n                var dataSource = this._dataSource;\r\n                if (operationTypes.reload) {\r\n                    this._virtualScrollController.reset();\r\n                    dataSource.items().length = 0;\r\n                    this._isLoaded = false;\r\n                    _updateLoading(this);\r\n                    this._isLoaded = true;\r\n                    if (isAppendMode(this)) {\r\n                        this.pageIndex(0);\r\n                        dataSource.pageIndex(0);\r\n                        storeLoadOptions.pageIndex = 0;\r\n                        options.pageIndex = 0;\r\n                        storeLoadOptions.skip = 0\r\n                    } else {\r\n                        dataSource.pageIndex(this.pageIndex());\r\n                        if (dataSource.paginate()) {\r\n                            options.pageIndex = this.pageIndex();\r\n                            storeLoadOptions.skip = this.pageIndex() * this.pageSize()\r\n                        }\r\n                    }\r\n                } else if (isAppendMode(this) && storeLoadOptions.skip && this._totalCountCorrection < 0) {\r\n                    storeLoadOptions.skip += this._totalCountCorrection\r\n                }\r\n            }\r\n            return this.callBase.apply(this, arguments)\r\n        },\r\n        dispose: function() {\r\n            this._virtualScrollController.dispose();\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        loadPageCount: function(count) {\r\n            if (!isDefined(count)) {\r\n                return this._loadPageCount\r\n            }\r\n            this._loadPageCount = count\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var loadPageCount = this.loadPageCount();\r\n            var pageSize = this.pageSize();\r\n            var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var takeIsDefined = isDefined(storeLoadOptions.take);\r\n            options.loadPageCount = loadPageCount;\r\n            if (!options.isCustomLoading && newMode && takeIsDefined && loadPageCount > 1 && pageSize > 0) {\r\n                storeLoadOptions.take = loadPageCount * pageSize\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _loadPageSize: function() {\r\n            return this.callBase.apply(this, arguments) * this.loadPageCount()\r\n        }\r\n    };\r\n    [\"beginPageIndex\", \"endPageIndex\", \"pageIndex\"].forEach((function(name) {\r\n        result[name] = function() {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                var dataSource = this._dataSource;\r\n                return dataSource.pageIndex.apply(dataSource, arguments)\r\n            }\r\n            var virtualScrollController = this._virtualScrollController;\r\n            return virtualScrollController[name].apply(virtualScrollController, arguments)\r\n        }\r\n    }));\r\n    [\"virtualItemsCount\", \"getContentOffset\", \"getVirtualContentSize\", \"setContentItemSizes\", \"setViewportPosition\", \"getViewportItemIndex\", \"setViewportItemIndex\", \"getItemIndexByPosition\", \"viewportSize\", \"viewportItemSize\", \"getItemSize\", \"getItemSizes\", \"loadIfNeed\"].forEach((function(name) {\r\n        result[name] = function() {\r\n            var virtualScrollController = this._virtualScrollController;\r\n            return virtualScrollController[name].apply(virtualScrollController, arguments)\r\n        }\r\n    }));\r\n    return result\r\n}();\r\nvar VirtualScrollingRowsViewExtender = function() {\r\n    var removeEmptyRows = function($emptyRows, className) {\r\n        var tBodies = $emptyRows.toArray().map(row => $(row).parent(\".\" + className).get(0)).filter(row => row);\r\n        if (tBodies.length) {\r\n            $emptyRows = $(tBodies)\r\n        }\r\n        var rowCount = className === FREESPACE_CLASS ? $emptyRows.length - 1 : $emptyRows.length;\r\n        for (var i = 0; i < rowCount; i++) {\r\n            $emptyRows.eq(i).remove()\r\n        }\r\n    };\r\n    return {\r\n        init: function() {\r\n            var _dataController$state;\r\n            var dataController = this.getController(\"data\");\r\n            this.callBase();\r\n            dataController.pageChanged.add(pageIndex => {\r\n                this.scrollToPage(null !== pageIndex && void 0 !== pageIndex ? pageIndex : dataController.pageIndex())\r\n            });\r\n            dataController.dataSourceChanged.add(() => {\r\n                !this._scrollTop && this._scrollToCurrentPageOnResize()\r\n            });\r\n            null === (_dataController$state = dataController.stateLoaded) || void 0 === _dataController$state ? void 0 : _dataController$state.add(() => {\r\n                this._scrollToCurrentPageOnResize()\r\n            });\r\n            this._scrollToCurrentPageOnResize()\r\n        },\r\n        _scrollToCurrentPageOnResize: function() {\r\n            var dataController = this.getController(\"data\");\r\n            if (dataController.pageIndex() > 0) {\r\n                var resizeHandler = () => {\r\n                    this.resizeCompleted.remove(resizeHandler);\r\n                    this.scrollToPage(dataController.pageIndex())\r\n                };\r\n                this.resizeCompleted.add(resizeHandler)\r\n            }\r\n        },\r\n        scrollToPage: function(pageIndex) {\r\n            var dataController = this._dataController;\r\n            var pageSize = dataController ? dataController.pageSize() : 0;\r\n            var scrollPosition;\r\n            if (isVirtualMode(this) || isAppendMode(this)) {\r\n                var itemSize = dataController.getItemSize();\r\n                var itemSizes = dataController.getItemSizes();\r\n                var itemIndex = pageIndex * pageSize;\r\n                scrollPosition = itemIndex * itemSize;\r\n                for (var index in itemSizes) {\r\n                    if (index < itemIndex) {\r\n                        scrollPosition += itemSizes[index] - itemSize\r\n                    }\r\n                }\r\n            } else {\r\n                scrollPosition = 0\r\n            }\r\n            this.scrollTo({\r\n                y: scrollPosition,\r\n                x: this._scrollLeft\r\n            })\r\n        },\r\n        renderDelayedTemplates: function(e) {\r\n            this._updateContentPosition(true);\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _renderCore: function(e) {\r\n            var startRenderTime = new Date;\r\n            this.callBase.apply(this, arguments);\r\n            var dataSource = this._dataController._dataSource;\r\n            if (dataSource && e) {\r\n                var itemCount = e.items ? e.items.length : 20;\r\n                var viewportSize = this._dataController.viewportSize() || 20;\r\n                if (gridCoreUtils.isVirtualRowRendering(this) && itemCount > 0 && false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                    dataSource._renderTime = (new Date - startRenderTime) * viewportSize / itemCount\r\n                } else {\r\n                    dataSource._renderTime = new Date - startRenderTime\r\n                }\r\n            }\r\n        },\r\n        _getRowElements: function(tableElement) {\r\n            var $rows = this.callBase(tableElement);\r\n            return $rows && $rows.not(\".\" + VIRTUAL_ROW_CLASS)\r\n        },\r\n        _removeRowsElements: function(contentTable, removeCount, changeType) {\r\n            var rowElements = this._getRowElements(contentTable).toArray();\r\n            if (\"append\" === changeType) {\r\n                rowElements = rowElements.slice(0, removeCount)\r\n            } else {\r\n                rowElements = rowElements.slice(-removeCount)\r\n            }\r\n            var errorHandlingController = this.getController(\"errorHandling\");\r\n            rowElements.map(rowElement => {\r\n                var $rowElement = $(rowElement);\r\n                errorHandlingController && errorHandlingController.removeErrorRow($rowElement.next());\r\n                $rowElement.remove()\r\n            })\r\n        },\r\n        _updateContent: function(tableElement, change) {\r\n            var $freeSpaceRowElements;\r\n            var contentElement = this._findContentElement();\r\n            var changeType = change && change.changeType;\r\n            var contentTable = contentElement.children().first();\r\n            if (\"append\" === changeType || \"prepend\" === changeType) {\r\n                var $tBodies = this._getBodies(tableElement);\r\n                if (1 === $tBodies.length) {\r\n                    this._getBodies(contentTable)[\"append\" === changeType ? \"append\" : \"prepend\"]($tBodies.children())\r\n                } else {\r\n                    $tBodies[\"append\" === changeType ? \"appendTo\" : \"prependTo\"](contentTable)\r\n                }\r\n                tableElement.remove();\r\n                $freeSpaceRowElements = this._getFreeSpaceRowElements(contentTable);\r\n                removeEmptyRows($freeSpaceRowElements, FREESPACE_CLASS);\r\n                if (change.removeCount) {\r\n                    this._removeRowsElements(contentTable, change.removeCount, changeType)\r\n                }\r\n                this._restoreErrorRow(contentTable)\r\n            } else {\r\n                this.callBase.apply(this, arguments);\r\n                if (\"update\" === changeType) {\r\n                    this._restoreErrorRow(contentTable)\r\n                }\r\n            }\r\n            this._updateBottomLoading()\r\n        },\r\n        _addVirtualRow: function($table, isFixed, location, position) {\r\n            if (!position) {\r\n                return\r\n            }\r\n            var $virtualRow = this._createEmptyRow(VIRTUAL_ROW_CLASS, isFixed, position);\r\n            $virtualRow = this._wrapRowIfNeed($table, $virtualRow);\r\n            this._appendEmptyRow($table, $virtualRow, location)\r\n        },\r\n        _getRowHeights: function() {\r\n            var rowHeights = this._getRowElements(this._tableElement).toArray().map((function(row) {\r\n                return getBoundingRect(row).height\r\n            }));\r\n            return rowHeights\r\n        },\r\n        _correctRowHeights: function(rowHeights) {\r\n            var dataController = this._dataController;\r\n            var dataSource = dataController._dataSource;\r\n            var correctedRowHeights = [];\r\n            var visibleRows = dataController.getVisibleRows();\r\n            var itemSize = 0;\r\n            var firstCountableItem = true;\r\n            var lastLoadIndex = -1;\r\n            for (var i = 0; i < rowHeights.length; i++) {\r\n                var currentItem = visibleRows[i];\r\n                if (!isDefined(currentItem)) {\r\n                    continue\r\n                }\r\n                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                    if (lastLoadIndex >= 0 && lastLoadIndex !== currentItem.loadIndex) {\r\n                        correctedRowHeights.push(itemSize);\r\n                        itemSize = 0\r\n                    }\r\n                    lastLoadIndex = currentItem.loadIndex\r\n                } else if (isItemCountableByDataSource(currentItem, dataSource)) {\r\n                    if (firstCountableItem) {\r\n                        firstCountableItem = false\r\n                    } else {\r\n                        correctedRowHeights.push(itemSize);\r\n                        itemSize = 0\r\n                    }\r\n                }\r\n                itemSize += rowHeights[i]\r\n            }\r\n            itemSize > 0 && correctedRowHeights.push(itemSize);\r\n            return correctedRowHeights\r\n        },\r\n        _updateContentPosition: function(isRender) {\r\n            var dataController = this._dataController;\r\n            var rowHeight = this._rowHeight || 20;\r\n            dataController.viewportItemSize(rowHeight);\r\n            if (isVirtualMode(this) || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                if (!isRender) {\r\n                    var rowHeights = this._getRowHeights();\r\n                    var correctedRowHeights = this._correctRowHeights(rowHeights);\r\n                    dataController.setContentItemSizes(correctedRowHeights)\r\n                }\r\n                var top = dataController.getContentOffset(\"begin\");\r\n                var bottom = dataController.getContentOffset(\"end\");\r\n                var $tables = this.getTableElements();\r\n                var $virtualRows = $tables.children(\"tbody\").children(\".\" + VIRTUAL_ROW_CLASS);\r\n                removeEmptyRows($virtualRows, VIRTUAL_ROW_CLASS);\r\n                $tables.each((index, element) => {\r\n                    var isFixed = index > 0;\r\n                    this._isFixedTableRendering = isFixed;\r\n                    this._addVirtualRow($(element), isFixed, \"top\", top);\r\n                    this._addVirtualRow($(element), isFixed, \"bottom\", bottom);\r\n                    this._isFixedTableRendering = false\r\n                })\r\n            }\r\n        },\r\n        _isTableLinesDisplaysCorrect: function(table) {\r\n            var hasColumnLines = table.find(\".\" + COLUMN_LINES_CLASS).length > 0;\r\n            return hasColumnLines === this.option(\"showColumnLines\")\r\n        },\r\n        _isColumnElementsEqual: function($columns, $virtualColumns) {\r\n            var result = $columns.length === $virtualColumns.length;\r\n            if (result) {\r\n                each($columns, (function(index, element) {\r\n                    if (element.style.width !== $virtualColumns[index].style.width) {\r\n                        result = false;\r\n                        return result\r\n                    }\r\n                }))\r\n            }\r\n            return result\r\n        },\r\n        _getCellClasses: function(column) {\r\n            var classes = [];\r\n            var cssClass = column.cssClass;\r\n            var isExpandColumn = \"expand\" === column.command;\r\n            cssClass && classes.push(cssClass);\r\n            isExpandColumn && classes.push(this.addWidgetPrefix(GROUP_SPACE_CLASS));\r\n            return classes\r\n        },\r\n        _findBottomLoadPanel: function($contentElement) {\r\n            var $element = $contentElement || this.element();\r\n            var $bottomLoadPanel = $element && $element.find(\".\" + this.addWidgetPrefix(BOTTOM_LOAD_PANEL_CLASS));\r\n            if ($bottomLoadPanel && $bottomLoadPanel.length) {\r\n                return $bottomLoadPanel\r\n            }\r\n        },\r\n        _updateBottomLoading: function() {\r\n            var virtualMode = isVirtualMode(this);\r\n            var appendMode = isAppendMode(this);\r\n            var showBottomLoading = !this._dataController.hasKnownLastPage() && this._dataController.isLoaded() && (virtualMode || appendMode);\r\n            var $contentElement = this._findContentElement();\r\n            var bottomLoadPanelElement = this._findBottomLoadPanel($contentElement);\r\n            if (showBottomLoading) {\r\n                if (!bottomLoadPanelElement) {\r\n                    $(\"<div>\").addClass(this.addWidgetPrefix(BOTTOM_LOAD_PANEL_CLASS)).append(this._createComponent($(\"<div>\"), LoadIndicator).$element()).appendTo($contentElement)\r\n                }\r\n            } else if (bottomLoadPanelElement) {\r\n                bottomLoadPanelElement.remove()\r\n            }\r\n        },\r\n        _handleScroll: function(e) {\r\n            var legacyScrollingMode = true === this.option(LEGACY_SCROLLING_MODE);\r\n            var zeroTopPosition = 0 === e.scrollOffset.top;\r\n            if ((this._hasHeight || !legacyScrollingMode && zeroTopPosition) && this._rowHeight) {\r\n                this._dataController.setViewportPosition(e.scrollOffset.top)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _needUpdateRowHeight: function(itemsCount) {\r\n            return this.callBase.apply(this, arguments) || itemsCount > 0 && isAppendMode(this) && !gridCoreUtils.isVirtualRowRendering(this)\r\n        },\r\n        _updateRowHeight: function() {\r\n            this.callBase.apply(this, arguments);\r\n            if (this._rowHeight) {\r\n                this._updateContentPosition();\r\n                var viewportHeight = this._hasHeight ? getOuterHeight(this.element()) : getOuterHeight(getWindow());\r\n                var dataController = this._dataController;\r\n                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                    dataController.viewportHeight(viewportHeight);\r\n                    dataController.updateViewport()\r\n                } else {\r\n                    dataController.viewportSize(Math.ceil(viewportHeight / this._rowHeight))\r\n                }\r\n            }\r\n        },\r\n        updateFreeSpaceRowHeight: function() {\r\n            var result = this.callBase.apply(this, arguments);\r\n            if (result) {\r\n                this._updateContentPosition()\r\n            }\r\n            return result\r\n        },\r\n        setLoading: function(isLoading, messageText) {\r\n            var dataController = this._dataController;\r\n            var hasBottomLoadPanel = dataController.pageIndex() > 0 && dataController.isLoaded() && !!this._findBottomLoadPanel();\r\n            if (false === this.option(LEGACY_SCROLLING_MODE) && isLoading && dataController.isViewportChanging()) {\r\n                return\r\n            }\r\n            if (hasBottomLoadPanel) {\r\n                isLoading = false\r\n            }\r\n            this.callBase.call(this, isLoading, messageText)\r\n        },\r\n        _resizeCore: function() {\r\n            var that = this;\r\n            var $element = that.element();\r\n            that.callBase();\r\n            if (that.component.$element() && !that._windowScroll && $element.closest(getWindow().document).length) {\r\n                that._windowScroll = subscribeToExternalScrollers($element, (function(scrollPos) {\r\n                    if (!that._hasHeight && that._rowHeight) {\r\n                        that._dataController.setViewportPosition(scrollPos)\r\n                    }\r\n                }), that.component.$element());\r\n                that.on(\"disposing\", (function() {\r\n                    that._windowScroll.dispose()\r\n                }))\r\n            }\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                that.loadIfNeed()\r\n            }\r\n        },\r\n        loadIfNeed: function() {\r\n            var _dataController$loadI;\r\n            var dataController = this._dataController;\r\n            null === dataController || void 0 === dataController ? void 0 : null === (_dataController$loadI = dataController.loadIfNeed) || void 0 === _dataController$loadI ? void 0 : _dataController$loadI.call(dataController)\r\n        },\r\n        setColumnWidths: function(widths) {\r\n            var scrollable = this.getScrollable();\r\n            var $content;\r\n            this.callBase.apply(this, arguments);\r\n            if (\"virtual\" === this.option(\"scrolling.mode\")) {\r\n                $content = scrollable ? $(scrollable.content()) : this.element();\r\n                this.callBase(widths, $content.children(\".\" + this.addWidgetPrefix(CONTENT_CLASS)).children(\":not(.\" + this.addWidgetPrefix(TABLE_CONTENT_CLASS) + \")\"))\r\n            }\r\n        },\r\n        _restoreErrorRow: function() {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                var errorHandling = this.getController(\"errorHandling\");\r\n                null === errorHandling || void 0 === errorHandling ? void 0 : errorHandling.removeErrorRow()\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this.callBase()\r\n        }\r\n    }\r\n}();\r\nexport var virtualScrollingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                timeout: 300,\r\n                updateTimeout: 300,\r\n                minTimeout: 0,\r\n                renderingThreshold: 100,\r\n                removeInvisiblePages: true,\r\n                rowPageSize: 5,\r\n                prerenderedRowChunkSize: 1,\r\n                mode: \"standard\",\r\n                preloadEnabled: false,\r\n                rowRenderingMode: \"standard\",\r\n                loadTwoPagesOnStart: false,\r\n                legacyMode: false,\r\n                prerenderedRowCount: 1\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        dataSourceAdapter: VirtualScrollingDataSourceAdapterExtender,\r\n        controllers: {\r\n            data: function() {\r\n                var members = {\r\n                    _refreshDataSource: function() {\r\n                        var baseResult = this.callBase.apply(this, arguments) || (new Deferred).resolve().promise();\r\n                        baseResult.done(this.initVirtualRows.bind(this));\r\n                        return baseResult\r\n                    },\r\n                    _loadDataSource: function() {\r\n                        if (this._rowsScrollController) {\r\n                            var _this$getLoadPagePara, _this$_dataSource;\r\n                            var {\r\n                                loadPageCount: loadPageCount\r\n                            } = null !== (_this$getLoadPagePara = this.getLoadPageParams()) && void 0 !== _this$getLoadPagePara ? _this$getLoadPagePara : {};\r\n                            loadPageCount >= 1 && (null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.loadPageCount(loadPageCount))\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    getRowPageSize: function() {\r\n                        var rowPageSize = this.option(\"scrolling.rowPageSize\");\r\n                        var pageSize = this.pageSize();\r\n                        return pageSize && pageSize < rowPageSize ? pageSize : rowPageSize\r\n                    },\r\n                    reload: function() {\r\n                        var rowsScrollController = this._rowsScrollController || this._dataSource;\r\n                        var itemIndex = rowsScrollController && rowsScrollController.getItemIndexByPosition();\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        return result && result.done(() => {\r\n                            if (isVirtualMode(this) || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                                var rowIndexOffset = this.getRowIndexOffset();\r\n                                var rowIndex = Math.floor(itemIndex) - rowIndexOffset;\r\n                                var component = this.component;\r\n                                var scrollable = component.getScrollable && component.getScrollable();\r\n                                var isSortingOperation = this.dataSource().operationTypes().sorting;\r\n                                if (scrollable && !isSortingOperation) {\r\n                                    var rowElement = component.getRowElement(rowIndex);\r\n                                    var $rowElement = rowElement && rowElement[0] && $(rowElement[0]);\r\n                                    var top = $rowElement && $rowElement.position().top;\r\n                                    var isChromeLatest = browser.chrome && browser.version >= 91;\r\n                                    var allowedTopOffset = browser.mozilla || isChromeLatest ? 1 : 0;\r\n                                    if (top > allowedTopOffset) {\r\n                                        top = Math.round(top + getOuterHeight($rowElement) * (itemIndex % 1));\r\n                                        scrollable.scrollTo({\r\n                                            y: top\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    },\r\n                    initVirtualRows: function() {\r\n                        var virtualRowsRendering = gridCoreUtils.isVirtualRowRendering(this);\r\n                        this._allItems = null;\r\n                        this._loadViewportParams = null;\r\n                        if (\"virtual\" !== this.option(\"scrolling.mode\") && true !== virtualRowsRendering || false === virtualRowsRendering || false !== this.option(LEGACY_SCROLLING_MODE) && !this.option(\"scrolling.rowPageSize\")) {\r\n                            this._visibleItems = null;\r\n                            this._rowsScrollController = null;\r\n                            return\r\n                        }\r\n                        var pageIndex = !isVirtualMode(this) && this.pageIndex() >= this.pageCount() ? this.pageCount() - 1 : this.pageIndex();\r\n                        this._rowPageIndex = Math.ceil(pageIndex * this.pageSize() / this.getRowPageSize());\r\n                        this._visibleItems = false === this.option(LEGACY_SCROLLING_MODE) ? null : [];\r\n                        this._viewportChanging = false;\r\n                        this._needUpdateViewportAfterLoading = false;\r\n                        if (!this._rowsScrollController) {\r\n                            this._rowsScrollController = new VirtualScrollController(this.component, this._getRowsScrollDataOptions(), true);\r\n                            this._rowsScrollController.positionChanged.add(() => {\r\n                                var _this$_dataSource2;\r\n                                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                                    this._viewportChanging = true;\r\n                                    this.loadViewport();\r\n                                    this._viewportChanging = false;\r\n                                    return\r\n                                }\r\n                                null === (_this$_dataSource2 = this._dataSource) || void 0 === _this$_dataSource2 ? void 0 : _this$_dataSource2.setViewportItemIndex(this._rowsScrollController.getViewportItemIndex())\r\n                            })\r\n                        }\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            this._updateLoadViewportParams()\r\n                        }\r\n                        if (this.isLoaded() && false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                            this._rowsScrollController.load()\r\n                        }\r\n                    },\r\n                    isViewportChanging: function() {\r\n                        return this._viewportChanging\r\n                    },\r\n                    _getRowsScrollDataOptions: function() {\r\n                        var that = this;\r\n                        var isItemCountable = function(item) {\r\n                            return isItemCountableByDataSource(item, that._dataSource)\r\n                        };\r\n                        return {\r\n                            pageSize: function() {\r\n                                return that.getRowPageSize()\r\n                            },\r\n                            loadedOffset: function() {\r\n                                var _that$_dataSource;\r\n                                return isVirtualMode(that) && (null === (_that$_dataSource = that._dataSource) || void 0 === _that$_dataSource ? void 0 : _that$_dataSource.lastLoadOptions().skip) || 0\r\n                            },\r\n                            loadedItemCount: function() {\r\n                                return that._itemCount\r\n                            },\r\n                            totalItemsCount: function() {\r\n                                if (isVirtualPaging(that)) {\r\n                                    return that.totalItemsCount()\r\n                                }\r\n                                return false === that.option(LEGACY_SCROLLING_MODE) ? that._itemCount : that._items.filter(isItemCountable).length\r\n                            },\r\n                            hasKnownLastPage: function() {\r\n                                return true\r\n                            },\r\n                            pageIndex: function(index) {\r\n                                if (void 0 !== index) {\r\n                                    that._rowPageIndex = index\r\n                                }\r\n                                return that._rowPageIndex\r\n                            },\r\n                            isLoading: function() {\r\n                                return that.isLoading()\r\n                            },\r\n                            pageCount: function() {\r\n                                var pageCount = Math.ceil(this.totalItemsCount() / this.pageSize());\r\n                                return pageCount ? pageCount : 1\r\n                            },\r\n                            load: function() {\r\n                                if (that._rowsScrollController.pageIndex() >= this.pageCount()) {\r\n                                    that._rowPageIndex = this.pageCount() - 1;\r\n                                    that._rowsScrollController.pageIndex(that._rowPageIndex)\r\n                                }\r\n                                if (!this.items().length && this.totalItemsCount()) {\r\n                                    return\r\n                                }\r\n                                that._rowsScrollController.handleDataChanged(change => {\r\n                                    change = change || {};\r\n                                    change.changeType = change.changeType || \"refresh\";\r\n                                    change.items = change.items || that._visibleItems;\r\n                                    that._visibleItems.forEach((item, index) => {\r\n                                        item.rowIndex = index\r\n                                    });\r\n                                    that._fireChanged(change)\r\n                                })\r\n                            },\r\n                            updateLoading: function() {},\r\n                            itemsCount: function() {\r\n                                return this.items(true).length\r\n                            },\r\n                            correctCount: function(items, count, fromEnd) {\r\n                                return _correctCount(items, count, fromEnd, (item, isNextAfterLast, fromEnd) => {\r\n                                    if (item.isNewRow) {\r\n                                        return isNextAfterLast && !fromEnd\r\n                                    }\r\n                                    if (isNextAfterLast && fromEnd) {\r\n                                        return !item.isNewRow\r\n                                    }\r\n                                    return isItemCountable(item)\r\n                                })\r\n                            },\r\n                            items: function(countableOnly) {\r\n                                var result = that._items;\r\n                                if (that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    var dataSource = that.dataSource();\r\n                                    var virtualItemsCount = null === dataSource || void 0 === dataSource ? void 0 : dataSource.virtualItemsCount();\r\n                                    var begin = virtualItemsCount ? virtualItemsCount.begin : 0;\r\n                                    var rowPageSize = that.getRowPageSize();\r\n                                    var skip = that._rowPageIndex * rowPageSize - begin;\r\n                                    var take = rowPageSize;\r\n                                    if (skip < 0) {\r\n                                        return []\r\n                                    }\r\n                                    if (skip) {\r\n                                        skip = this.correctCount(result, skip);\r\n                                        result = result.slice(skip)\r\n                                    }\r\n                                    if (take) {\r\n                                        take = this.correctCount(result, take);\r\n                                        result = result.slice(0, take)\r\n                                    }\r\n                                }\r\n                                return countableOnly ? result.filter(isItemCountable) : result\r\n                            },\r\n                            viewportItems: function(items) {\r\n                                if (items && false !== that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    that._visibleItems = items\r\n                                }\r\n                                return that._visibleItems\r\n                            },\r\n                            onChanged: function() {},\r\n                            changingDuration: function(e) {\r\n                                var dataSource = that.dataSource();\r\n                                if (null !== dataSource && void 0 !== dataSource && dataSource.isLoading() && false !== that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    return LOAD_TIMEOUT\r\n                                }\r\n                                return (null === dataSource || void 0 === dataSource ? void 0 : dataSource._renderTime) || 0\r\n                            }\r\n                        }\r\n                    },\r\n                    _updateItemsCore: function(change) {\r\n                        var delta = this.getRowIndexDelta();\r\n                        this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && gridCoreUtils.isVirtualRowRendering(this)) {\r\n                            if (\"update\" === change.changeType && 0 === change.rowIndices.length && change.cancelEmptyChanges) {\r\n                                change.cancel = true\r\n                            }\r\n                            return\r\n                        }\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            var visibleItems = this._visibleItems;\r\n                            var isRefresh = \"refresh\" === change.changeType || change.isLiveUpdate;\r\n                            if (\"append\" === change.changeType && change.items && !change.items.length) {\r\n                                return\r\n                            }\r\n                            if (isRefresh || \"append\" === change.changeType || \"prepend\" === change.changeType) {\r\n                                change.cancel = true;\r\n                                isRefresh && rowsScrollController.reset(true);\r\n                                rowsScrollController.load()\r\n                            } else {\r\n                                if (\"update\" === change.changeType) {\r\n                                    change.rowIndices.forEach((rowIndex, index) => {\r\n                                        var changeType = change.changeTypes[index];\r\n                                        var newItem = change.items[index];\r\n                                        if (\"update\" === changeType) {\r\n                                            visibleItems[rowIndex] = newItem\r\n                                        } else if (\"insert\" === changeType) {\r\n                                            visibleItems.splice(rowIndex, 0, newItem)\r\n                                        } else if (\"remove\" === changeType) {\r\n                                            visibleItems.splice(rowIndex, 1)\r\n                                        }\r\n                                    })\r\n                                } else {\r\n                                    visibleItems.forEach((item, index) => {\r\n                                        visibleItems[index] = this._items[index + delta] || visibleItems[index]\r\n                                    });\r\n                                    change.items = visibleItems\r\n                                }\r\n                                updateItemIndices(visibleItems)\r\n                            }\r\n                        }\r\n                    },\r\n                    _updateLoadViewportParams: function() {\r\n                        var viewportParams = this._rowsScrollController.getViewportParams();\r\n                        var pageSize = this.pageSize();\r\n                        if (viewportParams && !isVirtualPaging(this) && pageSize > 0) {\r\n                            var pageOffset = this.pageIndex() * pageSize;\r\n                            viewportParams.skip += pageOffset\r\n                        }\r\n                        this._loadViewportParams = viewportParams\r\n                    },\r\n                    _processItems: function(items) {\r\n                        var newItems = this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            var _dataSource$lastLoadO;\r\n                            var dataSource = this._dataSource;\r\n                            var currentIndex = null !== (_dataSource$lastLoadO = null === dataSource || void 0 === dataSource ? void 0 : dataSource.lastLoadOptions().skip) && void 0 !== _dataSource$lastLoadO ? _dataSource$lastLoadO : 0;\r\n                            var prevCountable;\r\n                            var prevRowType;\r\n                            var isPrevRowNew;\r\n                            var wasCountableItem = false;\r\n                            newItems.forEach(item => {\r\n                                var rowType = item.rowType;\r\n                                var itemCountable = isItemCountableByDataSource(item, dataSource);\r\n                                if (!item.isNewRow && isDefined(prevCountable)) {\r\n                                    var isNextGroupItem = \"group\" === rowType && (prevCountable || itemCountable || \"group\" !== prevRowType && currentIndex > 0);\r\n                                    var isNextDataItem = \"data\" === rowType && itemCountable && (prevCountable || \"group\" !== prevRowType);\r\n                                    var isPrevNewRowFirst = isPrevRowNew && !wasCountableItem;\r\n                                    if (isNextGroupItem || isNextDataItem) {\r\n                                        wasCountableItem = true;\r\n                                        if (!isPrevNewRowFirst) {\r\n                                            currentIndex++\r\n                                        }\r\n                                    }\r\n                                }\r\n                                item.loadIndex = currentIndex;\r\n                                prevCountable = itemCountable;\r\n                                prevRowType = rowType;\r\n                                isPrevRowNew = item.isNewRow\r\n                            })\r\n                        }\r\n                        return newItems\r\n                    },\r\n                    _afterProcessItems: function(items) {\r\n                        this._itemCount = items.filter(item => isItemCountableByDataSource(item, this._dataSource)).length;\r\n                        if (isDefined(this._loadViewportParams)) {\r\n                            this._updateLoadViewportParams();\r\n                            var result = items;\r\n                            this._allItems = items;\r\n                            if (items.length) {\r\n                                var {\r\n                                    skipForCurrentPage: skipForCurrentPage\r\n                                } = this.getLoadPageParams(true);\r\n                                var skip = items[0].loadIndex + skipForCurrentPage;\r\n                                var take = this._loadViewportParams.take;\r\n                                result = items.filter(it => {\r\n                                    var isNewRowOnStart = it.isNewRow && it.loadIndex >= skip - 1;\r\n                                    var isNewRowInEmptyData = it.isNewRow && it.loadIndex === skip && 0 === take;\r\n                                    var isLoadIndexGreaterStart = it.loadIndex >= skip || isNewRowOnStart;\r\n                                    var isLoadIndexLessEnd = it.loadIndex < skip + take || isNewRowInEmptyData;\r\n                                    return isLoadIndexGreaterStart && isLoadIndexLessEnd\r\n                                })\r\n                            }\r\n                            return result\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _applyChange: function(change) {\r\n                        var that = this;\r\n                        var items = change.items;\r\n                        var changeType = change.changeType;\r\n                        var removeCount = change.removeCount;\r\n                        if (removeCount) {\r\n                            var fromEnd = \"prepend\" === changeType;\r\n                            removeCount = _correctCount(that._items, removeCount, fromEnd, (function(item, isNextAfterLast) {\r\n                                return \"data\" === item.rowType && !item.isNewRow || \"group\" === item.rowType && (that._dataSource.isGroupItemCountable(item.data) || isNextAfterLast)\r\n                            }));\r\n                            change.removeCount = removeCount\r\n                        }\r\n                        switch (changeType) {\r\n                            case \"prepend\":\r\n                                that._items.unshift.apply(that._items, items);\r\n                                if (removeCount) {\r\n                                    that._items.splice(-removeCount)\r\n                                }\r\n                                break;\r\n                            case \"append\":\r\n                                that._items.push.apply(that._items, items);\r\n                                if (removeCount) {\r\n                                    that._items.splice(0, removeCount)\r\n                                }\r\n                                break;\r\n                            default:\r\n                                that.callBase(change)\r\n                        }\r\n                    },\r\n                    items: function(allItems) {\r\n                        return allItems ? this._allItems || this._items : this._visibleItems || this._items\r\n                    },\r\n                    getRowIndexDelta: function() {\r\n                        var delta = 0;\r\n                        if (this.option(LEGACY_SCROLLING_MODE)) {\r\n                            var visibleItems = this._visibleItems;\r\n                            if (visibleItems && visibleItems[0]) {\r\n                                delta = this._items.indexOf(visibleItems[0])\r\n                            }\r\n                        }\r\n                        return delta < 0 ? 0 : delta\r\n                    },\r\n                    getRowIndexOffset: function(byLoadedRows) {\r\n                        var offset = 0;\r\n                        var dataSource = this.dataSource();\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        if (rowsScrollController && !byLoadedRows) {\r\n                            if (newMode && isDefined(this._loadViewportParams)) {\r\n                                var {\r\n                                    skipForCurrentPage: skipForCurrentPage,\r\n                                    pageIndex: pageIndex\r\n                                } = this.getLoadPageParams(true);\r\n                                var items = this.items(true);\r\n                                offset = virtualPaging ? pageIndex * this.pageSize() : 0;\r\n                                if (items.length) {\r\n                                    var firstLoadIndex = items[0].loadIndex;\r\n                                    offset += items.filter(item => item.loadIndex < firstLoadIndex + skipForCurrentPage).length\r\n                                }\r\n                            } else {\r\n                                offset = rowsScrollController.beginPageIndex() * rowsScrollController.pageSize()\r\n                            }\r\n                        } else if (virtualPaging && newMode && dataSource) {\r\n                            var _dataSource$lastLoadO2;\r\n                            offset = null !== (_dataSource$lastLoadO2 = dataSource.lastLoadOptions().skip) && void 0 !== _dataSource$lastLoadO2 ? _dataSource$lastLoadO2 : 0\r\n                        } else if (isVirtualMode(this) && dataSource) {\r\n                            offset = dataSource.beginPageIndex() * dataSource.pageSize()\r\n                        }\r\n                        return offset\r\n                    },\r\n                    viewportSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.viewportSize.apply(rowsScrollController, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.viewportSize.apply(dataSource, arguments)\r\n                    },\r\n                    viewportHeight: function(height) {\r\n                        var _this$_rowsScrollCont;\r\n                        null === (_this$_rowsScrollCont = this._rowsScrollController) || void 0 === _this$_rowsScrollCont ? void 0 : _this$_rowsScrollCont.viewportHeight(height)\r\n                    },\r\n                    viewportItemSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.viewportItemSize.apply(rowsScrollController, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.viewportItemSize.apply(dataSource, arguments)\r\n                    },\r\n                    setViewportPosition: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        if (rowsScrollController) {\r\n                            rowsScrollController.setViewportPosition.apply(rowsScrollController, arguments)\r\n                        } else {\r\n                            null === dataSource || void 0 === dataSource ? void 0 : dataSource.setViewportPosition.apply(dataSource, arguments)\r\n                        }\r\n                    },\r\n                    setContentItemSizes: function(sizes) {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.setContentItemSizes(sizes);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.setContentItemSizes(sizes)\r\n                    },\r\n                    getPreloadedRowCount: function() {\r\n                        var preloadCount = this.option(\"scrolling.preloadedRowCount\");\r\n                        var preloadEnabled = this.option(\"scrolling.preloadEnabled\");\r\n                        if (isDefined(preloadCount)) {\r\n                            return preloadCount\r\n                        }\r\n                        var viewportSize = this.viewportSize();\r\n                        return preloadEnabled ? 2 * viewportSize : viewportSize\r\n                    },\r\n                    getLoadPageParams: function(byLoadedPage) {\r\n                        var _this$_dataSource3, _this$_dataSource4;\r\n                        var pageSize = this.pageSize();\r\n                        var viewportParams = this._loadViewportParams;\r\n                        var lastLoadOptions = null === (_this$_dataSource3 = this._dataSource) || void 0 === _this$_dataSource3 ? void 0 : _this$_dataSource3.lastLoadOptions();\r\n                        var loadedPageIndex = (null === lastLoadOptions || void 0 === lastLoadOptions ? void 0 : lastLoadOptions.pageIndex) || 0;\r\n                        var loadedTake = (null === lastLoadOptions || void 0 === lastLoadOptions ? void 0 : lastLoadOptions.take) || 0;\r\n                        var isScrollingBack = this._rowsScrollController.isScrollingBack();\r\n                        var topPreloadCount = isScrollingBack ? this.getPreloadedRowCount() : 0;\r\n                        var bottomPreloadCount = isScrollingBack ? 0 : this.getPreloadedRowCount();\r\n                        var totalCountCorrection = (null === (_this$_dataSource4 = this._dataSource) || void 0 === _this$_dataSource4 ? void 0 : _this$_dataSource4.totalCountCorrection()) || 0;\r\n                        var skipWithPreload = Math.max(0, viewportParams.skip - topPreloadCount);\r\n                        var pageIndex = byLoadedPage ? loadedPageIndex : Math.floor(pageSize ? skipWithPreload / pageSize : 0);\r\n                        var pageOffset = pageIndex * pageSize;\r\n                        var skipForCurrentPage = viewportParams.skip - pageOffset;\r\n                        var loadingTake = viewportParams.take + skipForCurrentPage + bottomPreloadCount - totalCountCorrection;\r\n                        var take = byLoadedPage ? loadedTake : loadingTake;\r\n                        var loadPageCount = Math.ceil(pageSize ? take / pageSize : 0);\r\n                        return {\r\n                            pageIndex: pageIndex,\r\n                            loadPageCount: Math.max(1, loadPageCount),\r\n                            skipForCurrentPage: Math.max(0, skipForCurrentPage)\r\n                        }\r\n                    },\r\n                    _updateVisiblePageIndex: function(currentPageIndex) {\r\n                        if (!this._rowsScrollController) {\r\n                            return\r\n                        }\r\n                        if (isDefined(currentPageIndex)) {\r\n                            this._silentOption(VISIBLE_PAGE_INDEX, currentPageIndex);\r\n                            this.pageChanged.fire();\r\n                            return\r\n                        }\r\n                        var viewPortItemIndex = this._rowsScrollController.getViewportItemIndex();\r\n                        var newPageIndex = Math.floor(viewPortItemIndex / this.pageSize());\r\n                        if (this.pageIndex() !== newPageIndex) {\r\n                            this._silentOption(VISIBLE_PAGE_INDEX, newPageIndex);\r\n                            this.updateItems({\r\n                                changeType: \"pageIndex\"\r\n                            })\r\n                        }\r\n                    },\r\n                    _getChangedLoadParams: function() {\r\n                        var loadedPageParams = this.getLoadPageParams(true);\r\n                        var {\r\n                            pageIndex: pageIndex,\r\n                            loadPageCount: loadPageCount\r\n                        } = this.getLoadPageParams();\r\n                        var result = null;\r\n                        if (!this._isLoading && (pageIndex !== loadedPageParams.pageIndex || loadPageCount !== loadedPageParams.loadPageCount)) {\r\n                            result = {\r\n                                pageIndex: pageIndex,\r\n                                loadPageCount: loadPageCount\r\n                            }\r\n                        }\r\n                        return result\r\n                    },\r\n                    _loadItems: function(checkLoading) {\r\n                        var _dataSourceAdapter$lo, _dataSourceAdapter$pa;\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        var dataSourceAdapter = this._dataSource;\r\n                        var changedParams = this._getChangedLoadParams();\r\n                        var currentLoadPageCount = null !== (_dataSourceAdapter$lo = null === dataSourceAdapter || void 0 === dataSourceAdapter ? void 0 : dataSourceAdapter.loadPageCount()) && void 0 !== _dataSourceAdapter$lo ? _dataSourceAdapter$lo : 0;\r\n                        var lastRequiredItemCount = this.pageSize() * currentLoadPageCount;\r\n                        var currentPageIndex = null !== (_dataSourceAdapter$pa = null === dataSourceAdapter || void 0 === dataSourceAdapter ? void 0 : dataSourceAdapter.pageIndex()) && void 0 !== _dataSourceAdapter$pa ? _dataSourceAdapter$pa : 0;\r\n                        var pageIndexNotChanged = (null === changedParams || void 0 === changedParams ? void 0 : changedParams.pageIndex) === currentPageIndex;\r\n                        var allLoadedInAppendMode = isAppendMode(this) && this.totalItemsCount() < lastRequiredItemCount;\r\n                        var result = false;\r\n                        if (!dataSourceAdapter || virtualPaging && checkLoading && ((null === changedParams || void 0 === changedParams ? void 0 : changedParams.pageIndex) > currentPageIndex || pageIndexNotChanged && allLoadedInAppendMode)) {\r\n                            return result\r\n                        }\r\n                        if (virtualPaging && this._isLoading) {\r\n                            this._needUpdateViewportAfterLoading = true\r\n                        }\r\n                        if (virtualPaging && changedParams) {\r\n                            result = true;\r\n                            dataSourceAdapter.pageIndex(changedParams.pageIndex);\r\n                            dataSourceAdapter.loadPageCount(changedParams.loadPageCount);\r\n                            this._repaintChangesOnly = true;\r\n                            this._needUpdateDimensions = true;\r\n                            var viewportChanging = this._viewportChanging;\r\n                            this.load().always(() => {\r\n                                this._repaintChangesOnly = void 0;\r\n                                this._needUpdateDimensions = void 0\r\n                            }).done(() => {\r\n                                var isLastPage = this.pageCount() > 0 && this.pageIndex() === this.pageCount() - 1;\r\n                                (viewportChanging || isLastPage) && this._updateVisiblePageIndex();\r\n                                if (this._needUpdateViewportAfterLoading) {\r\n                                    this._needUpdateViewportAfterLoading = false;\r\n                                    this.loadViewport({\r\n                                        checkLoadedParamsOnly: true\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                        return result\r\n                    },\r\n                    loadViewport: function(params) {\r\n                        var {\r\n                            checkLoadedParamsOnly: checkLoadedParamsOnly,\r\n                            checkLoading: checkLoading\r\n                        } = null !== params && void 0 !== params ? params : {};\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        if (virtualPaging || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                            this._updateLoadViewportParams();\r\n                            var loadingItemsStarted = this._loadItems(checkLoading);\r\n                            if (!loadingItemsStarted && !(this._isLoading && checkLoading) && !checkLoadedParamsOnly) {\r\n                                this.updateItems({\r\n                                    repaintChangesOnly: true,\r\n                                    needUpdateDimensions: true,\r\n                                    useProcessedItemsCache: true,\r\n                                    cancelEmptyChanges: true\r\n                                })\r\n                            }\r\n                        }\r\n                    },\r\n                    updateViewport: function() {\r\n                        var _this$_loadViewportPa, _this$_loadViewportPa2;\r\n                        var viewportSize = this.viewportSize();\r\n                        var itemCount = this.items().length;\r\n                        var viewportIsNotFilled = viewportSize > itemCount;\r\n                        var currentTake = null !== (_this$_loadViewportPa = null === (_this$_loadViewportPa2 = this._loadViewportParams) || void 0 === _this$_loadViewportPa2 ? void 0 : _this$_loadViewportPa2.take) && void 0 !== _this$_loadViewportPa ? _this$_loadViewportPa : 0;\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var newTake = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.getViewportParams().take;\r\n                        (viewportIsNotFilled || currentTake < newTake) && itemCount && this.loadViewport({\r\n                            checkLoading: true\r\n                        })\r\n                    },\r\n                    loadIfNeed: function() {\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return\r\n                        }\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.loadIfNeed();\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.loadIfNeed()\r\n                    },\r\n                    getItemSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getItemSize.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getItemSize.apply(dataSource, arguments)\r\n                    },\r\n                    getItemSizes: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getItemSizes.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getItemSizes.apply(dataSource, arguments)\r\n                    },\r\n                    getContentOffset: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getContentOffset.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getContentOffset.apply(dataSource, arguments)\r\n                    },\r\n                    refresh: function(options) {\r\n                        var dataSource = this._dataSource;\r\n                        if (dataSource && options && options.load && isAppendMode(this)) {\r\n                            dataSource.resetCurrentTotalCount()\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    dispose: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.dispose();\r\n                        this.callBase.apply(this, arguments)\r\n                    },\r\n                    topItemIndex: function() {\r\n                        var _this$_loadViewportPa3;\r\n                        return null === (_this$_loadViewportPa3 = this._loadViewportParams) || void 0 === _this$_loadViewportPa3 ? void 0 : _this$_loadViewportPa3.skip\r\n                    },\r\n                    bottomItemIndex: function() {\r\n                        var viewportParams = this._loadViewportParams;\r\n                        return viewportParams && viewportParams.skip + viewportParams.take\r\n                    },\r\n                    virtualItemsCount: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.virtualItemsCount.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.virtualItemsCount.apply(dataSource, arguments)\r\n                    },\r\n                    pageIndex: function(_pageIndex) {\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && virtualPaging && rowsScrollController) {\r\n                            if (void 0 === _pageIndex) {\r\n                                var _this$option;\r\n                                return null !== (_this$option = this.option(VISIBLE_PAGE_INDEX)) && void 0 !== _this$option ? _this$option : 0\r\n                            }\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _fireChanged: function(e) {\r\n                        this.callBase.apply(this, arguments);\r\n                        var {\r\n                            operationTypes: operationTypes\r\n                        } = e;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this) && operationTypes) {\r\n                            var {\r\n                                fullReload: fullReload,\r\n                                pageIndex: pageIndex\r\n                            } = operationTypes;\r\n                            if (e.isDataChanged && !fullReload && pageIndex) {\r\n                                this._updateVisiblePageIndex(this._dataSource.pageIndex())\r\n                            }\r\n                        }\r\n                    },\r\n                    _getPagingOptionValue: function(optionName) {\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this)) {\r\n                            result = this[optionName]()\r\n                        }\r\n                        return result\r\n                    },\r\n                    isEmpty: function() {\r\n                        return false === this.option(LEGACY_SCROLLING_MODE) ? !this.items(true).length : this.callBase(this, arguments)\r\n                    },\r\n                    isLastPageLoaded: function() {\r\n                        var result = false;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this)) {\r\n                            var {\r\n                                pageIndex: pageIndex,\r\n                                loadPageCount: loadPageCount\r\n                            } = this.getLoadPageParams(true);\r\n                            var pageCount = this.pageCount();\r\n                            result = pageIndex + loadPageCount >= pageCount\r\n                        } else {\r\n                            result = this.callBase.apply(this, arguments)\r\n                        }\r\n                        return result\r\n                    },\r\n                    reset: function() {\r\n                        this._itemCount = 0;\r\n                        this._allItems = null;\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                };\r\n                gridCoreUtils.proxyMethod(members, \"getVirtualContentSize\");\r\n                gridCoreUtils.proxyMethod(members, \"setViewportItemIndex\");\r\n                return members\r\n            }(),\r\n            resizing: {\r\n                resize: function() {\r\n                    var that = this;\r\n                    var callBase = that.callBase;\r\n                    var result;\r\n                    if (isVirtualMode(that) || gridCoreUtils.isVirtualRowRendering(that)) {\r\n                        clearTimeout(that._resizeTimeout);\r\n                        var diff = new Date - that._lastTime;\r\n                        var updateTimeout = that.option(\"scrolling.updateTimeout\");\r\n                        if (that._lastTime && diff < updateTimeout) {\r\n                            result = new Deferred;\r\n                            that._resizeTimeout = setTimeout((function() {\r\n                                callBase.apply(that).done(result.resolve).fail(result.reject);\r\n                                that._lastTime = new Date\r\n                            }), updateTimeout);\r\n                            that._lastTime = new Date\r\n                        } else {\r\n                            result = callBase.apply(that);\r\n                            if (that._dataController.isLoaded()) {\r\n                                that._lastTime = new Date\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result = callBase.apply(that)\r\n                    }\r\n                    return result\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._resizeTimeout)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.virtual_scrolling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    virtualScrollingModule\r\n} from \"../grid_core/ui.grid_core.virtual_scrolling\";\r\ngridCore.registerModule(\"virtualScrolling\", virtualScrollingModule);\r\ndataSourceAdapter.extend(virtualScrollingModule.extenders.dataSourceAdapter);\r\n","/**\r\n * DevExtreme (esm/ui/overlay/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getInnerHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nvar WINDOW_HEIGHT_PERCENT = .9;\r\nexport var getElementMaxHeightByWindow = ($element, startLocation) => {\r\n    var $window = $(getWindow());\r\n    var {\r\n        top: elementOffset\r\n    } = $element.offset();\r\n    var actualOffset;\r\n    if (isNumeric(startLocation)) {\r\n        if (startLocation < elementOffset) {\r\n            return elementOffset - startLocation\r\n        } else {\r\n            actualOffset = getInnerHeight($window) - startLocation + $window.scrollTop()\r\n        }\r\n    } else {\r\n        var offsetTop = elementOffset - $window.scrollTop();\r\n        var offsetBottom = getInnerHeight($window) - offsetTop - getOuterHeight($element);\r\n        actualOffset = Math.max(offsetTop, offsetBottom)\r\n    }\r\n    return actualOffset * WINDOW_HEIGHT_PERCENT\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/menu/ui.submenu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getHeight,\r\n    setWidth,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport animationPosition from \"../../animation/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport ContextMenu from \"../context_menu\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nclass Submenu extends ContextMenu {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            tabIndex: null,\r\n            onHoverStart: noop\r\n        })\r\n    }\r\n    _initDataAdapter() {\r\n        this._dataAdapter = this.option(\"_dataAdapter\");\r\n        if (!this._dataAdapter) {\r\n            super._initDataAdapter()\r\n        }\r\n    }\r\n    _renderContentImpl() {\r\n        this._renderContextMenuOverlay();\r\n        super._renderContentImpl();\r\n        var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\r\n        node && this._renderItems(this._getChildNodes(node));\r\n        this._renderDelimiter()\r\n    }\r\n    _renderDelimiter() {\r\n        this.$contentDelimiter = $(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)\r\n    }\r\n    _getOverlayOptions() {\r\n        return extend(super._getOverlayOptions(), {\r\n            onPositioned: this._overlayPositionedActionHandler.bind(this)\r\n        })\r\n    }\r\n    _overlayPositionedActionHandler(arg) {\r\n        this._showDelimiter(arg)\r\n    }\r\n    _hoverEndHandler(e) {\r\n        super._hoverEndHandler(e);\r\n        this._toggleFocusClass(false, e.currentTarget)\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _hoverStartHandler(e) {\r\n        var hoverStartAction = this.option(\"onHoverStart\");\r\n        hoverStartAction(e);\r\n        super._hoverStartHandler(e);\r\n        this._toggleFocusClass(true, e.currentTarget)\r\n    }\r\n    _drawSubmenu($rootItem) {\r\n        this._actions.onShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        super._drawSubmenu($rootItem);\r\n        this._actions.onShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    }\r\n    _hideSubmenu($rootItem) {\r\n        this._actions.onHiding({\r\n            cancel: true,\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        super._hideSubmenu($rootItem);\r\n        this._actions.onHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    }\r\n    _showDelimiter(arg) {\r\n        if (!this.$contentDelimiter) {\r\n            return\r\n        }\r\n        var $submenu = this._itemContainer().children(\".\".concat(DX_SUBMENU_CLASS)).eq(0);\r\n        var $rootItem = this.option(\"position\").of;\r\n        var position = {\r\n            of: $submenu\r\n        };\r\n        var containerOffset = arg.position;\r\n        var vLocation = containerOffset.v.location;\r\n        var hLocation = containerOffset.h.location;\r\n        var rootOffset = $rootItem.offset();\r\n        var offsetLeft = Math.round(rootOffset.left);\r\n        var offsetTop = Math.round(rootOffset.top);\r\n        var rootWidth = getWidth($rootItem);\r\n        var rootHeight = getHeight($rootItem);\r\n        var submenuWidth = getWidth($submenu);\r\n        var submenuHeight = getHeight($submenu);\r\n        this.$contentDelimiter.css(\"display\", \"block\");\r\n        setWidth(this.$contentDelimiter, this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\r\n        setHeight(this.$contentDelimiter, this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\r\n        if (this._isMenuHorizontal()) {\r\n            if (vLocation > offsetTop) {\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"right top\"\r\n                }\r\n            } else {\r\n                setHeight(this.$contentDelimiter, 5);\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 4\";\r\n                    position.at = position.my = \"left bottom\"\r\n                } else {\r\n                    position.offset = \"-1 2\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        } else if (hLocation > offsetLeft) {\r\n            if (Math.round(vLocation) === offsetTop) {\r\n                position.offset = \"-1 1\";\r\n                position.at = position.my = \"left top\"\r\n            } else {\r\n                position.offset = \"-1 -1\";\r\n                position.at = position.my = \"left bottom\"\r\n            }\r\n        } else if (Math.round(vLocation) === offsetTop) {\r\n            position.offset = \"1 1\";\r\n            position.at = position.my = \"right top\"\r\n        } else {\r\n            position.offset = \"1 -1\";\r\n            position.at = position.my = \"right bottom\"\r\n        }\r\n        animationPosition.setup(this.$contentDelimiter, position)\r\n    }\r\n    _getContextMenuPosition() {\r\n        return this.option(\"position\")\r\n    }\r\n    isOverlayVisible() {\r\n        return this._overlay.option(\"visible\")\r\n    }\r\n    getOverlayContent() {\r\n        return this._overlay.$content()\r\n    }\r\n}\r\nexport default Submenu;\r\n","/**\r\n * DevExtreme (esm/ui/menu/ui.menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isPlainObject,\r\n    isObject,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../overlay/utils\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    end as hoverEventEnd\r\n} from \"../../events/hover\";\r\nimport MenuBase from \"../context_menu/ui.menu_base\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport Submenu from \"./ui.submenu\";\r\nimport Button from \"../button\";\r\nimport TreeView from \"../tree_view\";\r\nvar DX_MENU_CLASS = \"dx-menu\";\r\nvar DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\";\r\nvar DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\";\r\nvar DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\";\r\nvar DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\";\r\nvar DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\";\r\nvar DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\r\nvar DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\r\nvar DX_STATE_HOVER_CLASS = \"dx-state-hover\";\r\nvar DX_STATE_ACTIVE_CLASS = \"dx-state-active\";\r\nvar DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\";\r\nvar DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\";\r\nvar DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\";\r\nvar FOCUS_UP = \"up\";\r\nvar FOCUS_DOWN = \"down\";\r\nvar FOCUS_LEFT = \"left\";\r\nvar FOCUS_RIGHT = \"right\";\r\nvar SHOW_SUBMENU_OPERATION = \"showSubmenu\";\r\nvar NEXTITEM_OPERATION = \"nextItem\";\r\nvar PREVITEM_OPERATION = \"prevItem\";\r\nvar DEFAULT_DELAY = {\r\n    show: 50,\r\n    hide: 300\r\n};\r\nvar ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\", \"onItemRendered\"];\r\nclass Menu extends MenuBase {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    }\r\n    _setOptionsByReference() {\r\n        super._setOptionsByReference();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    }\r\n    _itemElements() {\r\n        var rootMenuElements = super._itemElements();\r\n        var submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    }\r\n    _submenuItemElements() {\r\n        var elements = [];\r\n        var itemSelector = \".\".concat(DX_MENU_ITEM_CLASS);\r\n        var currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    }\r\n    _focusTarget() {\r\n        return this.$element()\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _moveFocus(location) {\r\n        var $items = this._getAvailableItems();\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        var $activeItem = this._getActiveItem(true);\r\n        var argument;\r\n        var operation;\r\n        var navigationAction;\r\n        var $newTarget;\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return super._moveFocus(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    }\r\n    _getItemsNavigationOperation(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    }\r\n    _getKeyboardNavigationAction(operation, argument) {\r\n        var action = noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    }\r\n    _isAdaptivityEnabled() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _updateItemsWidthCache() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\".concat(DX_MENU_ITEM_CLASS));\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    }\r\n    _dimensionChanged() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = getOuterWidth(this.$element());\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._submenus = []\r\n    }\r\n    _initActions() {\r\n        this._actions = {};\r\n        each(ACTIONS, (index, action) => {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        super._initMarkup();\r\n        this.setAria(\"role\", \"menubar\")\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._initAdaptivity()\r\n    }\r\n    _renderHamburgerButton() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    }\r\n    _toggleTreeView(state) {\r\n        if (isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    }\r\n    _toggleHamburgerActiveState(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    }\r\n    _toggleAdaptiveMode(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\".concat(DX_MENU_HORIZONTAL_CLASS));\r\n        var $adaptiveElements = this.$element().find(\".\".concat(DX_ADAPTIVE_MODE_CLASS));\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    }\r\n    _removeAdaptivity() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    }\r\n    _treeviewItemClickHandler(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    }\r\n    _getAdaptiveOverlayOptions() {\r\n        var rtl = this.option(\"rtlEnabled\");\r\n        var position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: () => getElementMaxHeightByWindow(this.$element()),\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            hideOnParentScroll: true,\r\n            onHidden: () => {\r\n                this._toggleHamburgerActiveState(false)\r\n            },\r\n            height: \"auto\",\r\n            closeOnOutsideClick: e => !$(e.target).closest(\".\".concat(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS)).length,\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    }\r\n    _getTreeViewOptions() {\r\n        var menuOptions = {};\r\n        each([\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"], (_, option) => {\r\n            menuOptions[option] = this.option(option)\r\n        });\r\n        each([\"onItemContextMenu\", \"onSelectionChanged\"], (_, actionName) => {\r\n            menuOptions[actionName] = e => {\r\n                this._actions[actionName](e)\r\n            }\r\n        });\r\n        return extend(menuOptions, {\r\n            dataSource: this.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: this._treeviewItemClickHandler.bind(this),\r\n            onItemExpanded: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            },\r\n            onItemCollapsed: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            },\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    }\r\n    _initAdaptivity() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay.$wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    }\r\n    _getDelay(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    }\r\n    _keyboardHandler(e) {\r\n        return super._keyboardHandler(e, !!this._visibleSubmenu)\r\n    }\r\n    _renderContainer() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return super._renderContainer($wrapper)\r\n    }\r\n    _renderSubmenuItems(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    }\r\n    _getKeyboardListeners() {\r\n        return super._getKeyboardListeners().concat(this._visibleSubmenu)\r\n    }\r\n    _createSubmenu(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var items = this._getChildNodes(node);\r\n        var result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n            _dataAdapter: this._dataAdapter,\r\n            _parentKey: node.internalFields.key,\r\n            items: items,\r\n            onHoverStart: this._clearTimeouts.bind(this),\r\n            position: this.getSubmenuPosition($rootItem)\r\n        }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    }\r\n    _getSubmenuOptions() {\r\n        var $submenuTarget = $(\"<div>\");\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: e => {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                this.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            },\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    }\r\n    _getShowFirstSubmenuMode() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return isObject(optionValue) ? optionValue.name : optionValue\r\n    }\r\n    _moveMainMenuFocus(direction) {\r\n        var $items = this._getAvailableItems();\r\n        var itemCount = $items.length;\r\n        var $currentItem = $items.filter(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS)).eq(0);\r\n        var itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else if (itemIndex < 0) {\r\n            itemIndex = itemCount - 1\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    }\r\n    _nestedItemOnSelectionChangedHandler(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0];\r\n        var submenu = Submenu.getInstance(args.element);\r\n        var onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem)\r\n    }\r\n    _clearSelectionInSubmenus(item, targetSubmenu) {\r\n        var cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, (index, submenu) => {\r\n            var $submenu = submenu._itemContainer();\r\n            var isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer());\r\n            var $selectedItem = $submenu.find(\".\".concat(this._selectedItemClass()));\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                $selectedItem.removeClass(this._selectedItemClass());\r\n                var selectedItemData = this._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    }\r\n    _clearRootSelection() {\r\n        var $prevSelectedItem = this.$element().find(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS)).first().children().children().filter(\".\".concat(this._selectedItemClass()));\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    }\r\n    _nestedItemOnItemClickHandler(e) {\r\n        this._actions.onItemClick(e)\r\n    }\r\n    _nestedItemOnItemRenderedHandler(e) {\r\n        this._actions.onItemRendered(e)\r\n    }\r\n    _attachSubmenuHandlers($rootItem, submenu) {\r\n        var $submenuOverlayContent = submenu.getOverlayContent();\r\n        var submenus = $submenuOverlayContent.find(\".\".concat(DX_SUBMENU_CLASS));\r\n        var submenuMouseLeaveName = addNamespace(hoverEventEnd, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, (index, submenu) => {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, this._submenuMouseLeaveHandler.bind(this, $rootItem))\r\n        })\r\n    }\r\n    _submenuOnShowingHandler($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    }\r\n    _submenuOnShownHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuOnHidingHandler($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        var args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    }\r\n    _submenuOnHiddenHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuMouseLeaveHandler($rootItem, eventArgs) {\r\n        var target = $(eventArgs.relatedTarget).parents(\".\".concat(DX_CONTEXT_MENU_CLASS))[0];\r\n        var contextMenu = this._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            this._clearTimeouts();\r\n            setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideSubmenuAfterTimeout() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS);\r\n        var isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\".concat(DX_STATE_HOVER_CLASS)).length;\r\n        var hoveredElementFromSubMenu = this._visibleSubmenu.getOverlayContent().get(0).querySelector(\":hover\");\r\n        if (!hoveredElementFromSubMenu && !isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    }\r\n    _getSubmenuByRootElement($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CLASS));\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    }\r\n    getSubmenuPosition($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal();\r\n        var submenuDirection = this.option(\"submenuDirection\").toLowerCase();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var submenuPosition = {\r\n            collision: \"flip\",\r\n            of: $rootItem\r\n        };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    }\r\n    _renderBorderElement($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    }\r\n    _itemPointerDownHandler(e) {\r\n        var $target = $(e.target);\r\n        var $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        super._itemPointerDownHandler(e)\r\n    }\r\n    _hoverStartHandler(e) {\r\n        var mouseMoveEventName = addNamespace(pointerEvents.move, this.NAME);\r\n        var $item = this._getItemElementByEventArgs(e);\r\n        var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n        var isSelectionActive = isDefined(e.buttons) && 1 === e.buttons || !isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    }\r\n    _hoverEndHandler(eventArg) {\r\n        var $item = this._getItemElementByEventArgs(eventArg);\r\n        var relatedTarget = $(eventArg.relatedTarget);\r\n        super._hoverEndHandler(eventArg);\r\n        this._clearTimeouts();\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            this._hideSubmenuTimer = setTimeout(() => {\r\n                this._hideSubmenuAfterTimeout()\r\n            }, this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideVisibleSubmenu() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    }\r\n    _showSubmenu($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            this._clearTimeouts();\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    }\r\n    _hideSubmenu(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    }\r\n    _itemMouseMoveHandler(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var $item = $(e.currentTarget);\r\n        if (!isDefined(this._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        this._clearTimeouts();\r\n        this._showSubmenuTimer = setTimeout(() => {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                this._showSubmenu($item)\r\n            }\r\n        }, this._getDelay(\"show\"))\r\n    }\r\n    _clearTimeouts() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    }\r\n    _getSubmenuByElement($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    }\r\n    _updateSubmenuVisibilityOnClick(actionArgs) {\r\n        var args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        var currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        if (ACTIONS.indexOf(args.name) >= 0) {\r\n            this._initActions();\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled() && (args.name === args.fullName || \"items\" === args.name)) {\r\n                    this._treeView.option(args.fullName, args.value)\r\n                }\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _changeSubmenusOption(name, value) {\r\n        each(this._submenus, (index, submenu) => {\r\n            submenu.option(name, value)\r\n        })\r\n    }\r\n    selectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n    unselectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n}\r\nregisterComponent(\"dxMenu\", Menu);\r\nexport default Menu;\r\n","/**\r\n * DevExtreme (esm/ui/menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Menu from \"./menu/ui.menu\";\r\nexport default Menu;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_row.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Editor from \"../editor/editor\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport Menu from \"../menu\";\r\nimport {\r\n    selectView\r\n} from \"../shared/accessibility\";\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"filter-operation-equals\",\r\n    \"<>\": \"filter-operation-not-equals\",\r\n    \"<\": \"filter-operation-less\",\r\n    \"<=\": \"filter-operation-less-equal\",\r\n    \">\": \"filter-operation-greater\",\r\n    \">=\": \"filter-operation-greater-equal\",\r\n    default: \"filter-operation-default\",\r\n    notcontains: \"filter-operation-not-contains\",\r\n    contains: \"filter-operation-contains\",\r\n    startswith: \"filter-operation-starts-with\",\r\n    endswith: \"filter-operation-ends-with\",\r\n    between: \"filter-operation-between\"\r\n};\r\nvar OPERATION_DESCRIPTORS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    between: \"between\"\r\n};\r\nvar FILTERING_TIMEOUT = 700;\r\nvar CORRECT_FILTER_RANGE_OVERLAY_WIDTH = 1;\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar FILTER_RANGE_OVERLAY_CLASS = \"filter-range-overlay\";\r\nvar FILTER_RANGE_START_CLASS = \"filter-range-start\";\r\nvar FILTER_RANGE_END_CLASS = \"filter-range-end\";\r\nvar MENU_CLASS = \"dx-menu\";\r\nvar EDITOR_WITH_MENU_CLASS = \"dx-editor-with-menu\";\r\nvar EDITOR_CONTAINER_CLASS = \"dx-editor-container\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar FILTER_MENU = \"dx-filter-menu\";\r\nvar APPLY_BUTTON_CLASS = \"dx-apply-button\";\r\nvar HIGHLIGHT_OUTLINE_CLASS = \"dx-highlight-outline\";\r\nvar FOCUSED_CLASS = \"dx-focused\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FILTER_RANGE_CONTENT_CLASS = \"dx-filter-range-content\";\r\nvar FILTER_MODIFIED_CLASS = \"dx-filter-modified\";\r\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nvar BETWEEN_OPERATION_DATA_TYPES = [\"date\", \"datetime\", \"number\"];\r\n\r\nfunction isOnClickApplyFilterMode(that) {\r\n    return \"onClick\" === that.option(\"filterRow.applyFilter\")\r\n}\r\nvar ColumnHeadersViewFilterRowExtender = function() {\r\n    var getEditorInstance = function($editorContainer) {\r\n        var $editor = $editorContainer && $editorContainer.children();\r\n        var componentNames = $editor && $editor.data(\"dxComponents\");\r\n        var editor = componentNames && componentNames.length && $editor.data(componentNames[0]);\r\n        if (editor instanceof Editor) {\r\n            return editor\r\n        }\r\n    };\r\n    var getRangeTextByFilterValue = function(that, column) {\r\n        var result = \"\";\r\n        var rangeEnd = \"\";\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"filterRow\");\r\n        if (Array.isArray(filterValue)) {\r\n            result = gridCoreUtils.formatValue(filterValue[0], formatOptions);\r\n            rangeEnd = gridCoreUtils.formatValue(filterValue[1], formatOptions);\r\n            if (\"\" !== rangeEnd) {\r\n                result += \" - \" + rangeEnd\r\n            }\r\n        } else if (isDefined(filterValue)) {\r\n            result = gridCoreUtils.formatValue(filterValue, formatOptions)\r\n        }\r\n        return result\r\n    };\r\n\r\n    function getColumnFilterValue(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedFilterValue ? column.bufferedFilterValue : column.filterValue\r\n        }\r\n    }\r\n    var getColumnSelectedFilterOperation = function(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedSelectedFilterOperation ? column.bufferedSelectedFilterOperation : column.selectedFilterOperation\r\n        }\r\n    };\r\n    var getFilterValue = function(that, columnIndex, $editorContainer) {\r\n        var column = that._columnsController.columnOption(columnIndex);\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var isFilterRange = $editorContainer.closest(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).length;\r\n        var isRangeStart = $editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS));\r\n        if (filterValue && Array.isArray(filterValue) && \"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n            if (isRangeStart) {\r\n                return filterValue[0]\r\n            } else {\r\n                return filterValue[1]\r\n            }\r\n        }\r\n        return !isFilterRange && function(filterValue, column) {\r\n            if (column && BETWEEN_OPERATION_DATA_TYPES.indexOf(column.dataType) >= 0 && Array.isArray(filterValue)) {\r\n                return false\r\n            }\r\n            return void 0 !== filterValue\r\n        }(filterValue, column) ? filterValue : null\r\n    };\r\n    var updateFilterValue = function(that, options) {\r\n        var value = \"\" === options.value ? null : options.value;\r\n        var $editorContainer = options.container;\r\n        var column = that._columnsController.columnOption(options.column.index);\r\n        var filterValue = getFilterValue(that, column.index, $editorContainer);\r\n        if (!isDefined(filterValue) && !isDefined(value)) {\r\n            return\r\n        }\r\n        that._applyFilterViewController.setHighLight($editorContainer, filterValue !== value);\r\n        var columnOptionName = isOnClickApplyFilterMode(that) ? \"bufferedFilterValue\" : \"filterValue\";\r\n        var normalizedValue = function(that, filterValue, column, $editorContainer) {\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                var columnFilterValue = getColumnFilterValue(that, column);\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    return [filterValue, Array.isArray(columnFilterValue) ? columnFilterValue[1] : void 0]\r\n                } else {\r\n                    return [Array.isArray(columnFilterValue) ? columnFilterValue[0] : columnFilterValue, filterValue]\r\n                }\r\n            }\r\n            return filterValue\r\n        }(that, value, column, $editorContainer);\r\n        var isBetween = \"between\" === getColumnSelectedFilterOperation(that, column);\r\n        var notFireEvent = options.notFireEvent || isBetween && Array.isArray(normalizedValue) && normalizedValue.indexOf(void 0) >= 0;\r\n        that._columnsController.columnOption(column.index, columnOptionName, normalizedValue, notFireEvent)\r\n    };\r\n    return {\r\n        _updateEditorValue: function(column, $editorContainer) {\r\n            var editor = getEditorInstance($editorContainer);\r\n            editor && editor.option(\"value\", getFilterValue(this, column.index, $editorContainer))\r\n        },\r\n        _columnOptionChanged: function(e) {\r\n            var optionNames = e.optionNames;\r\n            var $cell;\r\n            var $editorContainer;\r\n            var $editorRangeElements;\r\n            var $menu;\r\n            if (gridCoreUtils.checkChanges(optionNames, [\"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"bufferedSelectedFilterOperation\"]) && void 0 !== e.columnIndex) {\r\n                var visibleIndex = this._columnsController.getVisibleIndex(e.columnIndex);\r\n                var column = this._columnsController.columnOption(e.columnIndex);\r\n                $cell = this._getCellElement(this.element().find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS)).index(), visibleIndex) || $();\r\n                $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                if (optionNames.filterValue || optionNames.bufferedFilterValue) {\r\n                    this._updateEditorValue(column, $editorContainer);\r\n                    var overlayInstance = $cell.find(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).data(\"dxOverlay\");\r\n                    if (overlayInstance) {\r\n                        $editorRangeElements = overlayInstance.$content().find(\".\" + EDITOR_CONTAINER_CLASS);\r\n                        this._updateEditorValue(column, $editorRangeElements.first());\r\n                        this._updateEditorValue(column, $editorRangeElements.last())\r\n                    }\r\n                    if (!overlayInstance || !overlayInstance.option(\"visible\")) {\r\n                        this._updateFilterRangeContent($cell, getRangeTextByFilterValue(this, column))\r\n                    }\r\n                }\r\n                if (optionNames.selectedFilterOperation || optionNames.bufferedSelectedFilterOperation) {\r\n                    if (visibleIndex >= 0 && column) {\r\n                        $menu = $cell.find(\".\" + MENU_CLASS);\r\n                        if ($menu.length) {\r\n                            this._updateFilterOperationChooser($menu, column, $editorContainer);\r\n                            if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\r\n                                this._renderFilterRangeContent($cell, column)\r\n                            } else if ($editorContainer.find(\".\" + FILTER_RANGE_CONTENT_CLASS).length) {\r\n                                this._renderEditor($editorContainer, this._getEditorOptions($editorContainer, column));\r\n                                this._hideFilterRange()\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return\r\n            }\r\n            this.callBase(e)\r\n        },\r\n        _renderCore: function() {\r\n            this._filterRangeOverlayInstance = null;\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _resizeCore: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint()\r\n        },\r\n        isFilterRowVisible: function() {\r\n            return this._isElementVisible(this.option(\"filterRow\"))\r\n        },\r\n        isVisible: function() {\r\n            return this.callBase() || this.isFilterRowVisible()\r\n        },\r\n        init: function() {\r\n            this.callBase();\r\n            this._applyFilterViewController = this.getController(\"applyFilter\")\r\n        },\r\n        _initFilterRangeOverlay: function($cell, column) {\r\n            var that = this;\r\n            var sharedData = {};\r\n            var $editorContainer = $cell.find(\".dx-editor-container\");\r\n            var $overlay = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).appendTo($cell);\r\n            return that._createComponent($overlay, Overlay, {\r\n                height: \"auto\",\r\n                shading: false,\r\n                showTitle: false,\r\n                focusStateEnabled: false,\r\n                closeOnOutsideClick: true,\r\n                copyRootClassesToWrapper: true,\r\n                _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                animation: false,\r\n                position: {\r\n                    my: \"top\",\r\n                    at: \"top\",\r\n                    of: $editorContainer.length && $editorContainer || $cell,\r\n                    offset: \"0 -1\"\r\n                },\r\n                contentTemplate: function(contentElement) {\r\n                    var editorOptions;\r\n                    var $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_START_CLASS)).appendTo(contentElement);\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", (function(e) {\r\n                        var $prevElement = $cell.find(\"[tabindex]\").not(e.target).first();\r\n                        if (\"tab\" === normalizeKeyName(e) && e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            if (!$prevElement.length) {\r\n                                $prevElement = $cell.prev().find(\"[tabindex]\").last()\r\n                            }\r\n                            eventsEngine.trigger($prevElement, \"focus\")\r\n                        }\r\n                    }));\r\n                    $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_END_CLASS)).appendTo(contentElement);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", (function(e) {\r\n                        if (\"tab\" === normalizeKeyName(e) && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            eventsEngine.trigger($cell.next().find(\"[tabindex]\").first(), \"focus\")\r\n                        }\r\n                    }));\r\n                    return $(contentElement).addClass(that.getWidgetContainerClass())\r\n                },\r\n                onShown: function(e) {\r\n                    var $editor = e.component.$content().find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                    eventsEngine.trigger($editor.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n                },\r\n                onHidden: function() {\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    $cell.find(\".\" + MENU_CLASS).parent().addClass(EDITOR_WITH_MENU_CLASS);\r\n                    if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                        that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\r\n                        that.component.updateDimensions()\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        _updateFilterRangeOverlay: function(options) {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.option(options)\r\n        },\r\n        _showFilterRange: function($cell, column) {\r\n            var $overlay = $cell.children(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS));\r\n            var overlayInstance = $overlay.length && $overlay.data(\"dxOverlay\");\r\n            if (!overlayInstance && column) {\r\n                overlayInstance = this._initFilterRangeOverlay($cell, column)\r\n            }\r\n            if (!overlayInstance.option(\"visible\")) {\r\n                this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.hide();\r\n                this._filterRangeOverlayInstance = overlayInstance;\r\n                this._updateFilterRangeOverlay({\r\n                    width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                });\r\n                this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.show()\r\n            }\r\n        },\r\n        _hideFilterRange: function() {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.hide()\r\n        },\r\n        getFilterRangeOverlayInstance: function() {\r\n            return this._filterRangeOverlayInstance\r\n        },\r\n        _createRow: function(row) {\r\n            var $row = this.callBase(row);\r\n            if (\"filter\" === row.rowType) {\r\n                $row.addClass(this.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    eventsEngine.on($row, \"keydown\", event => selectView(\"filterRow\", this, event))\r\n                }\r\n            }\r\n            return $row\r\n        },\r\n        _getRows: function() {\r\n            var result = this.callBase();\r\n            if (this.isFilterRowVisible()) {\r\n                result.push({\r\n                    rowType: \"filter\"\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _renderFilterCell: function(cell, options) {\r\n            var column = options.column;\r\n            var $cell = $(cell);\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n            this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaFilterCell\"), $cell);\r\n            $cell.addClass(EDITOR_CELL_CLASS);\r\n            var $container = $(\"<div>\").appendTo($cell);\r\n            var $editorContainer = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS).appendTo($container);\r\n            if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\r\n                this._renderFilterRangeContent($cell, column)\r\n            } else {\r\n                var editorOptions = this._getEditorOptions($editorContainer, column);\r\n                this._renderEditor($editorContainer, editorOptions)\r\n            }\r\n            var alignment = column.alignment;\r\n            if (alignment && \"center\" !== alignment) {\r\n                $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", column.alignment)\r\n            }\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                this._renderFilterOperationChooser($container, column, $editorContainer)\r\n            }\r\n        },\r\n        _renderCellContent: function($cell, options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            if (\"filter\" === options.rowType) {\r\n                if (column.command) {\r\n                    $cell.html(\"&nbsp;\")\r\n                } else if (column.allowFiltering) {\r\n                    that.renderTemplate($cell, that._renderFilterCell.bind(that), options).done(() => {\r\n                        that._updateCell($cell, options)\r\n                    });\r\n                    return\r\n                }\r\n            }\r\n            that.callBase($cell, options)\r\n        },\r\n        _getEditorOptions: function($editorContainer, column) {\r\n            var that = this;\r\n            var accessibilityOptions = {\r\n                editorOptions: {\r\n                    inputAttr: that._getFilterInputAccessibilityAttributes(column)\r\n                }\r\n            };\r\n            var result = extend(accessibilityOptions, column, {\r\n                value: getFilterValue(that, column.index, $editorContainer),\r\n                parentType: \"filterRow\",\r\n                showAllText: that.option(\"filterRow.showAllText\"),\r\n                updateValueTimeout: \"onClick\" === that.option(\"filterRow.applyFilter\") ? 0 : FILTERING_TIMEOUT,\r\n                width: null,\r\n                setValue: function(value, notFireEvent) {\r\n                    updateFilterValue(that, {\r\n                        column: column,\r\n                        value: value,\r\n                        container: $editorContainer,\r\n                        notFireEvent: notFireEvent\r\n                    })\r\n                }\r\n            });\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    result.placeholder = that.option(\"filterRow.betweenStartText\")\r\n                } else {\r\n                    result.placeholder = that.option(\"filterRow.betweenEndText\")\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        _getFilterInputAccessibilityAttributes: function(column) {\r\n            var columnAriaLabel = messageLocalization.format(\"dxDataGrid-ariaFilterCell\");\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                return {\r\n                    \"aria-label\": columnAriaLabel,\r\n                    \"aria-describedby\": column.headerId\r\n                }\r\n            }\r\n            return {\r\n                \"aria-label\": columnAriaLabel\r\n            }\r\n        },\r\n        _renderEditor: function($editorContainer, options) {\r\n            $editorContainer.empty();\r\n            return this.getController(\"editorFactory\").createEditor($(\"<div>\").appendTo($editorContainer), options)\r\n        },\r\n        _renderFilterRangeContent: function($cell, column) {\r\n            var that = this;\r\n            var $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n            $editorContainer.empty();\r\n            var $filterRangeContent = $(\"<div>\").addClass(FILTER_RANGE_CONTENT_CLASS).attr(\"tabindex\", this.option(\"tabIndex\"));\r\n            eventsEngine.on($filterRangeContent, \"focusin\", (function() {\r\n                that._showFilterRange($cell, column)\r\n            }));\r\n            $filterRangeContent.appendTo($editorContainer);\r\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column))\r\n        },\r\n        _updateFilterRangeContent: function($cell, value) {\r\n            var $filterRangeContent = $cell.find(\".\" + FILTER_RANGE_CONTENT_CLASS);\r\n            if ($filterRangeContent.length) {\r\n                if (\"\" === value) {\r\n                    $filterRangeContent.html(\"&nbsp;\")\r\n                } else {\r\n                    $filterRangeContent.text(value)\r\n                }\r\n            }\r\n        },\r\n        _updateFilterOperationChooser: function($menu, column, $editorContainer) {\r\n            var that = this;\r\n            var isCellWasFocused;\r\n            var restoreFocus = function() {\r\n                var menu = Menu.getInstance($menu);\r\n                menu && menu.option(\"focusedElement\", null);\r\n                isCellWasFocused && that._focusEditor($editorContainer)\r\n            };\r\n            that._createComponent($menu, Menu, {\r\n                integrationOptions: {},\r\n                activeStateEnabled: false,\r\n                selectionMode: \"single\",\r\n                cssClass: that.getWidgetContainerClass() + \" \" + CELL_FOCUS_DISABLED_CLASS + \" \" + FILTER_MENU,\r\n                showFirstSubmenuMode: \"onHover\",\r\n                hideSubmenuOnMouseLeave: true,\r\n                items: [{\r\n                    disabled: column.filterOperations && column.filterOperations.length ? false : true,\r\n                    icon: OPERATION_ICONS[getColumnSelectedFilterOperation(that, column) || \"default\"],\r\n                    selectable: false,\r\n                    items: that._getFilterOperationMenuItems(column)\r\n                }],\r\n                onItemClick: function(properties) {\r\n                    var selectedFilterOperation = properties.itemData.name;\r\n                    var columnSelectedFilterOperation = getColumnSelectedFilterOperation(that, column);\r\n                    var notFocusEditor = false;\r\n                    var isOnClickMode = isOnClickApplyFilterMode(that);\r\n                    var options = {};\r\n                    if (properties.itemData.items || selectedFilterOperation && selectedFilterOperation === columnSelectedFilterOperation) {\r\n                        return\r\n                    }\r\n                    if (selectedFilterOperation) {\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = selectedFilterOperation;\r\n                        if (\"between\" === selectedFilterOperation || \"between\" === columnSelectedFilterOperation) {\r\n                            notFocusEditor = \"between\" === selectedFilterOperation;\r\n                            options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null\r\n                        }\r\n                    } else {\r\n                        options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = column.defaultSelectedFilterOperation || null\r\n                    }\r\n                    that._columnsController.columnOption(column.index, options);\r\n                    that._applyFilterViewController.setHighLight($editorContainer, true);\r\n                    if (!selectedFilterOperation) {\r\n                        var editor = getEditorInstance($editorContainer);\r\n                        if (editor && \"dxDateBox\" === editor.NAME && !editor.option(\"isValid\")) {\r\n                            editor.reset();\r\n                            editor.option(\"isValid\", true)\r\n                        }\r\n                    }\r\n                    if (!notFocusEditor) {\r\n                        that._focusEditor($editorContainer)\r\n                    } else {\r\n                        that._showFilterRange($editorContainer.closest(\".\" + EDITOR_CELL_CLASS), column)\r\n                    }\r\n                },\r\n                onSubmenuShown: function() {\r\n                    isCellWasFocused = that._isEditorFocused($editorContainer);\r\n                    that.getController(\"editorFactory\").loseFocus()\r\n                },\r\n                onSubmenuHiding: function() {\r\n                    eventsEngine.trigger($menu, \"blur\");\r\n                    restoreFocus()\r\n                },\r\n                onContentReady: function(e) {\r\n                    eventsEngine.on($menu, \"blur\", () => {\r\n                        var menu = e.component;\r\n                        menu._hideSubmenu(menu._visibleSubmenu);\r\n                        restoreFocus()\r\n                    })\r\n                },\r\n                rtlEnabled: that.option(\"rtlEnabled\")\r\n            })\r\n        },\r\n        _isEditorFocused: function($container) {\r\n            return $container.hasClass(FOCUSED_CLASS) || $container.parents(\".\" + FOCUSED_CLASS).length\r\n        },\r\n        _focusEditor: function($container) {\r\n            this.getController(\"editorFactory\").focus($container);\r\n            eventsEngine.trigger($container.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n        },\r\n        _renderFilterOperationChooser: function($container, column, $editorContainer) {\r\n            var $menu;\r\n            if (this.option(\"filterRow.showOperationChooser\")) {\r\n                $container.addClass(EDITOR_WITH_MENU_CLASS);\r\n                $menu = $(\"<div>\").prependTo($container);\r\n                this._updateFilterOperationChooser($menu, column, $editorContainer)\r\n            }\r\n        },\r\n        _getFilterOperationMenuItems: function(column) {\r\n            var that = this;\r\n            var result = [{}];\r\n            var filterRowOptions = that.option(\"filterRow\");\r\n            var operationDescriptions = filterRowOptions && filterRowOptions.operationDescriptions || {};\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                var availableFilterOperations = column.filterOperations.filter((function(value) {\r\n                    return isDefined(OPERATION_DESCRIPTORS[value])\r\n                }));\r\n                result = map(availableFilterOperations, (function(value) {\r\n                    var descriptionName = OPERATION_DESCRIPTORS[value];\r\n                    return {\r\n                        name: value,\r\n                        selected: (getColumnSelectedFilterOperation(that, column) || column.defaultFilterOperation) === value,\r\n                        text: operationDescriptions[descriptionName],\r\n                        icon: OPERATION_ICONS[value]\r\n                    }\r\n                }));\r\n                result.push({\r\n                    name: null,\r\n                    text: filterRowOptions && filterRowOptions.resetOperationText,\r\n                    icon: OPERATION_ICONS.default\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"filterRow\":\r\n                case \"showColumnLines\":\r\n                    this._invalidate(true, true);\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        }\r\n    }\r\n}();\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        each(columns, (function() {\r\n            if (this.allowFiltering && this.calculateFilterExpression && isDefined(this.filterValue)) {\r\n                var filter = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, \"filterRow\");\r\n                filters.push(filter)\r\n            }\r\n        }));\r\n        return gridCoreUtils.combineFilters(filters)\r\n    }\r\n};\r\nvar ApplyFilterViewController = modules.ViewController.inherit({\r\n    _getHeaderPanel: function() {\r\n        if (!this._headerPanel) {\r\n            this._headerPanel = this.getView(\"headerPanel\")\r\n        }\r\n        return this._headerPanel\r\n    },\r\n    setHighLight: function($element, value) {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            $element && $element.toggleClass(HIGHLIGHT_OUTLINE_CLASS, value) && $element.closest(\".\" + EDITOR_CELL_CLASS).toggleClass(FILTER_MODIFIED_CLASS, value);\r\n            this._getHeaderPanel().enableApplyButton(value)\r\n        }\r\n    },\r\n    applyFilter: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var columns = columnsController.getColumns();\r\n        columnsController.beginUpdate();\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var column = columns[i];\r\n            if (void 0 !== column.bufferedFilterValue) {\r\n                columnsController.columnOption(i, \"filterValue\", column.bufferedFilterValue);\r\n                column.bufferedFilterValue = void 0\r\n            }\r\n            if (void 0 !== column.bufferedSelectedFilterOperation) {\r\n                columnsController.columnOption(i, \"selectedFilterOperation\", column.bufferedSelectedFilterOperation);\r\n                column.bufferedSelectedFilterOperation = void 0\r\n            }\r\n        }\r\n        columnsController.endUpdate();\r\n        this.removeHighLights()\r\n    },\r\n    removeHighLights: function() {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            var columnHeadersViewElement = this.getView(\"columnHeadersView\").element();\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + HIGHLIGHT_OUTLINE_CLASS).removeClass(HIGHLIGHT_OUTLINE_CLASS);\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + FILTER_MODIFIED_CLASS).removeClass(FILTER_MODIFIED_CLASS);\r\n            this._getHeaderPanel().enableApplyButton(false)\r\n        }\r\n    }\r\n});\r\nexport var filterRowModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterRow: {\r\n                visible: false,\r\n                showOperationChooser: true,\r\n                showAllText: messageLocalization.format(\"dxDataGrid-filterRowShowAllText\"),\r\n                resetOperationText: messageLocalization.format(\"dxDataGrid-filterRowResetOperationText\"),\r\n                applyFilter: \"auto\",\r\n                applyFilterText: messageLocalization.format(\"dxDataGrid-applyFilterText\"),\r\n                operationDescriptions: {\r\n                    equal: messageLocalization.format(\"dxDataGrid-filterRowOperationEquals\"),\r\n                    notEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationNotEquals\"),\r\n                    lessThan: messageLocalization.format(\"dxDataGrid-filterRowOperationLess\"),\r\n                    lessThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationLessOrEquals\"),\r\n                    greaterThan: messageLocalization.format(\"dxDataGrid-filterRowOperationGreater\"),\r\n                    greaterThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationGreaterOrEquals\"),\r\n                    startsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationStartsWith\"),\r\n                    contains: messageLocalization.format(\"dxDataGrid-filterRowOperationContains\"),\r\n                    notContains: messageLocalization.format(\"dxDataGrid-filterRowOperationNotContains\"),\r\n                    endsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationEndsWith\"),\r\n                    between: messageLocalization.format(\"dxDataGrid-filterRowOperationBetween\"),\r\n                    isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                },\r\n                betweenStartText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenStartText\"),\r\n                betweenEndText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenEndText\")\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        applyFilter: ApplyFilterViewController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender,\r\n            columnsResizer: {\r\n                _startResizing: function() {\r\n                    var that = this;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            var cellIndex = overlayInstance.$element().closest(\"td\").index();\r\n                            if (cellIndex === that._targetPoint.columnIndex || cellIndex === that._targetPoint.columnIndex + 1) {\r\n                                overlayInstance.$content().hide()\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _endResizing: function() {\r\n                    var that = this;\r\n                    var $cell;\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            $cell = overlayInstance.$element().closest(\"td\");\r\n                            that._columnHeadersView._updateFilterRangeOverlay({\r\n                                width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                            });\r\n                            overlayInstance.$content().show()\r\n                        }\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterRowExtender,\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var filterItem = this._prepareFilterItem(items);\r\n                    return filterItem.concat(items)\r\n                },\r\n                _prepareFilterItem: function() {\r\n                    var that = this;\r\n                    var filterItem = [];\r\n                    if (that._isShowApplyFilterButton()) {\r\n                        var hintText = that.option(\"filterRow.applyFilterText\");\r\n                        var columns = that._columnsController.getColumns();\r\n                        var disabled = !columns.filter((function(column) {\r\n                            return void 0 !== column.bufferedFilterValue\r\n                        })).length;\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: \"apply-filter\",\r\n                                disabled: disabled,\r\n                                onClick: function() {\r\n                                    that._applyFilterViewController.applyFilter()\r\n                                },\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: function(e) {\r\n                                    $(e.element).addClass(that._getToolbarButtonClass(APPLY_BUTTON_CLASS))\r\n                                }\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            name: \"applyFilterButton\",\r\n                            location: \"after\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 10\r\n                        };\r\n                        filterItem.push(toolbarItem)\r\n                    }\r\n                    return filterItem\r\n                },\r\n                _isShowApplyFilterButton: function() {\r\n                    var filterRowOptions = this.option(\"filterRow\");\r\n                    return filterRowOptions && filterRowOptions.visible && \"onClick\" === filterRowOptions.applyFilter\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._dataController = this.getController(\"data\");\r\n                    this._applyFilterViewController = this.getController(\"applyFilter\")\r\n                },\r\n                enableApplyButton: function(value) {\r\n                    this.setToolbarItemDisabled(\"applyFilterButton\", !value)\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isShowApplyFilterButton()\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"filterRow\" === args.name) {\r\n                        this._invalidate();\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_row.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterRowModule\r\n} from \"../grid_core/ui.grid_core.filter_row\";\r\ncore.registerModule(\"filterRow\", filterRowModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_filter_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Popup from \"../popup\";\r\nimport TreeView from \"../tree_view\";\r\nimport List from \"../list_light\";\r\nimport \"../list/modules/search\";\r\nimport \"../list/modules/selection\";\r\nvar HEADER_FILTER_CLASS = \"dx-header-filter\";\r\nvar HEADER_FILTER_MENU_CLASS = \"dx-header-filter-menu\";\r\nvar DEFAULT_SEARCH_EXPRESSION = \"text\";\r\n\r\nfunction resetChildrenItemSelection(items) {\r\n    items = items || [];\r\n    for (var i = 0; i < items.length; i++) {\r\n        items[i].selected = false;\r\n        resetChildrenItemSelection(items[i].items)\r\n    }\r\n}\r\n\r\nfunction updateSelectAllState(e, filterValues) {\r\n    if (e.component.option(\"searchValue\")) {\r\n        return\r\n    }\r\n    var selectAllCheckBox = $(e.element).find(\".dx-list-select-all-checkbox\").data(\"dxCheckBox\");\r\n    if (selectAllCheckBox && filterValues && filterValues.length) {\r\n        selectAllCheckBox.option(\"value\", void 0)\r\n    }\r\n}\r\n\r\nfunction isSearchEnabled(that, options) {\r\n    var headerFilter = options.headerFilter;\r\n    if (headerFilter && isDefined(headerFilter.allowSearch)) {\r\n        return headerFilter.allowSearch\r\n    }\r\n    return that.option(\"headerFilter.allowSearch\")\r\n}\r\nexport function updateHeaderFilterItemSelectionState(item, filterValuesMatch, isExcludeFilter) {\r\n    if (filterValuesMatch ^ isExcludeFilter) {\r\n        item.selected = true;\r\n        if (isExcludeFilter && item.items) {\r\n            for (var j = 0; j < item.items.length; j++) {\r\n                if (!item.items[j].selected) {\r\n                    item.selected = void 0;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    } else if (isExcludeFilter || item.selected) {\r\n        item.selected = false;\r\n        resetChildrenItemSelection(item.items)\r\n    }\r\n}\r\nexport var HeaderFilterView = modules.View.inherit({\r\n    getPopupContainer: function() {\r\n        return this._popupContainer\r\n    },\r\n    getListContainer: function() {\r\n        return this._listContainer\r\n    },\r\n    applyHeaderFilter: function(options) {\r\n        var list = this.getListContainer();\r\n        var searchValue = list.option(\"searchValue\");\r\n        var isSelectAll = !searchValue && !options.isFilterBuilder && list.$element().find(\".dx-checkbox\").eq(0).hasClass(\"dx-checkbox-checked\");\r\n        var filterValues = [];\r\n        if (!isSelectAll) {\r\n            if (\"tree\" === options.type) {\r\n                if (options.filterType) {\r\n                    options.filterType = \"include\"\r\n                }! function fillSelectedItemKeys(filterValues, items, isExclude) {\r\n                    each(items, (function(_, item) {\r\n                        if (void 0 !== item.selected && !!item.selected ^ isExclude) {\r\n                            var node = list._getNode(item);\r\n                            var hasChildren = list._hasChildren(node);\r\n                            var hasChildrenWithSelection = hasChildren && item.items && item.items.some(item => item.selected);\r\n                            if (!searchValue || !hasChildrenWithSelection) {\r\n                                filterValues.push(item.value);\r\n                                return\r\n                            }\r\n                        }\r\n                        if (item.items && item.items.length) {\r\n                            fillSelectedItemKeys(filterValues, item.items, isExclude)\r\n                        }\r\n                    }))\r\n                }(filterValues, list.option(\"items\"), false);\r\n                options.filterValues = filterValues\r\n            }\r\n        } else {\r\n            if (\"tree\" === options.type) {\r\n                options.filterType = \"exclude\"\r\n            }\r\n            if (Array.isArray(options.filterValues)) {\r\n                options.filterValues = []\r\n            }\r\n        }\r\n        if (options.filterValues && !options.filterValues.length) {\r\n            options.filterValues = null\r\n        }\r\n        options.apply();\r\n        this.hideHeaderFilterMenu()\r\n    },\r\n    showHeaderFilterMenu: function($columnElement, options) {\r\n        if (options) {\r\n            this._initializePopupContainer(options);\r\n            var popupContainer = this.getPopupContainer();\r\n            this.hideHeaderFilterMenu();\r\n            this.updatePopup($columnElement, options);\r\n            popupContainer.show()\r\n        }\r\n    },\r\n    hideHeaderFilterMenu: function() {\r\n        var headerFilterMenu = this.getPopupContainer();\r\n        headerFilterMenu && headerFilterMenu.hide()\r\n    },\r\n    updatePopup: function($element, options) {\r\n        var showColumnLines = this.option(\"showColumnLines\");\r\n        var alignment = \"right\" === options.alignment ^ !showColumnLines ? \"left\" : \"right\";\r\n        if (this._popupContainer) {\r\n            this._cleanPopupContent();\r\n            this._popupContainer.option(\"position\", {\r\n                my: alignment + \" top\",\r\n                at: alignment + \" bottom\",\r\n                of: $element,\r\n                collision: \"flip fit\"\r\n            })\r\n        }\r\n    },\r\n    _getSearchExpr: function(options) {\r\n        var lookup = options.lookup;\r\n        var useDefaultSearchExpr = options.useDefaultSearchExpr;\r\n        var headerFilterDataSource = options.headerFilter && options.headerFilter.dataSource;\r\n        if (useDefaultSearchExpr || isDefined(headerFilterDataSource) && !isFunction(headerFilterDataSource)) {\r\n            return DEFAULT_SEARCH_EXPRESSION\r\n        }\r\n        if (lookup) {\r\n            return lookup.displayExpr || \"this\"\r\n        }\r\n        if (options.dataSource) {\r\n            var group = options.dataSource.group;\r\n            if (Array.isArray(group) && group.length > 0) {\r\n                return group[0].selector\r\n            } else if (isFunction(group) && !options.remoteFiltering) {\r\n                return group\r\n            }\r\n        }\r\n        return options.dataField || options.selector\r\n    },\r\n    _cleanPopupContent: function() {\r\n        this._popupContainer && this._popupContainer.$content().empty()\r\n    },\r\n    _initializePopupContainer: function(options) {\r\n        var that = this;\r\n        var $element = that.element();\r\n        var headerFilterOptions = that.option(\"headerFilter\");\r\n        var width = options.headerFilter && options.headerFilter.width || headerFilterOptions && headerFilterOptions.width;\r\n        var height = options.headerFilter && options.headerFilter.height || headerFilterOptions && headerFilterOptions.height;\r\n        var dxPopupOptions = {\r\n            width: width,\r\n            height: height,\r\n            visible: false,\r\n            shading: false,\r\n            showTitle: false,\r\n            showCloseButton: false,\r\n            hideOnParentScroll: false,\r\n            dragEnabled: false,\r\n            closeOnOutsideClick: true,\r\n            focusStateEnabled: false,\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n            toolbarItems: [{\r\n                toolbar: \"bottom\",\r\n                location: \"after\",\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    text: headerFilterOptions.texts.ok,\r\n                    onClick: function() {\r\n                        that.applyHeaderFilter(options)\r\n                    }\r\n                }\r\n            }, {\r\n                toolbar: \"bottom\",\r\n                location: \"after\",\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    text: headerFilterOptions.texts.cancel,\r\n                    onClick: function() {\r\n                        that.hideHeaderFilterMenu()\r\n                    }\r\n                }\r\n            }],\r\n            resizeEnabled: true,\r\n            onShowing: function(e) {\r\n                e.component.$content().parent().addClass(\"dx-dropdowneditor-overlay\");\r\n                that._initializeListContainer(options);\r\n                options.onShowing && options.onShowing(e)\r\n            },\r\n            onShown: function() {\r\n                that.getListContainer().focus()\r\n            },\r\n            onHidden: options.onHidden,\r\n            onInitialized: function(e) {\r\n                var component = e.component;\r\n                component.option(\"animation\", component._getDefaultOptions().animation)\r\n            }\r\n        };\r\n        if (!isDefined(that._popupContainer)) {\r\n            that._popupContainer = that._createComponent($element, Popup, dxPopupOptions)\r\n        } else {\r\n            that._popupContainer.option(dxPopupOptions)\r\n        }\r\n    },\r\n    _initializeListContainer: function(options) {\r\n        var that = this;\r\n        var $content = that._popupContainer.$content();\r\n        var widgetOptions = {\r\n            searchEnabled: isSearchEnabled(that, options),\r\n            searchTimeout: that.option(\"headerFilter.searchTimeout\"),\r\n            searchMode: options.headerFilter && options.headerFilter.searchMode || \"\",\r\n            dataSource: options.dataSource,\r\n            onContentReady: function() {\r\n                that.renderCompleted.fire()\r\n            },\r\n            itemTemplate: function(data, _, element) {\r\n                var $element = $(element);\r\n                if (options.encodeHtml) {\r\n                    return $element.text(data.text)\r\n                }\r\n                return $element.html(data.text)\r\n            }\r\n        };\r\n\r\n        function onOptionChanged(e) {\r\n            if (\"searchValue\" === e.fullName && !options.isFilterBuilder && false !== that.option(\"headerFilter.hideSelectAllOnSearch\")) {\r\n                if (\"tree\" === options.type) {\r\n                    e.component.option(\"showCheckBoxesMode\", e.value ? \"normal\" : \"selectAll\")\r\n                } else {\r\n                    e.component.option(\"selectionMode\", e.value ? \"multiple\" : \"all\")\r\n                }\r\n            }\r\n        }\r\n        if (\"tree\" === options.type) {\r\n            that._listContainer = that._createComponent($(\"<div>\").appendTo($content), TreeView, extend(widgetOptions, {\r\n                showCheckBoxesMode: options.isFilterBuilder ? \"normal\" : \"selectAll\",\r\n                onOptionChanged: onOptionChanged,\r\n                keyExpr: \"id\"\r\n            }))\r\n        } else {\r\n            that._listContainer = that._createComponent($(\"<div>\").appendTo($content), List, extend(widgetOptions, {\r\n                searchExpr: that._getSearchExpr(options),\r\n                pageLoadMode: \"scrollBottom\",\r\n                showSelectionControls: true,\r\n                selectionMode: options.isFilterBuilder ? \"multiple\" : \"all\",\r\n                onOptionChanged: onOptionChanged,\r\n                onSelectionChanged: function(e) {\r\n                    var items = e.component.option(\"items\");\r\n                    var selectedItems = e.component.option(\"selectedItems\");\r\n                    if (!e.component._selectedItemsUpdating && !e.component.option(\"searchValue\") && !options.isFilterBuilder) {\r\n                        var filterValues = options.filterValues || [];\r\n                        var isExclude = \"exclude\" === options.filterType;\r\n                        if (0 === selectedItems.length && items.length && (filterValues.length <= 1 || isExclude && filterValues.length === items.length - 1)) {\r\n                            options.filterType = \"include\";\r\n                            options.filterValues = []\r\n                        } else if (selectedItems.length === items.length) {\r\n                            options.filterType = \"exclude\";\r\n                            options.filterValues = []\r\n                        }\r\n                    }\r\n                    each(items, (function(index, item) {\r\n                        var selected = gridCoreUtils.getIndexByKey(item, selectedItems, null) >= 0;\r\n                        var oldSelected = !!item.selected;\r\n                        if (oldSelected !== selected) {\r\n                            item.selected = selected;\r\n                            options.filterValues = options.filterValues || [];\r\n                            var filterValueIndex = gridCoreUtils.getIndexByKey(item.value, options.filterValues, null);\r\n                            if (filterValueIndex >= 0) {\r\n                                options.filterValues.splice(filterValueIndex, 1)\r\n                            }\r\n                            if (selected ^ \"exclude\" === options.filterType) {\r\n                                options.filterValues.push(item.value)\r\n                            }\r\n                        }\r\n                    }));\r\n                    updateSelectAllState(e, options.filterValues)\r\n                },\r\n                onContentReady: function(e) {\r\n                    var component = e.component;\r\n                    var items = component.option(\"items\");\r\n                    var selectedItems = [];\r\n                    each(items, (function() {\r\n                        if (this.selected) {\r\n                            selectedItems.push(this)\r\n                        }\r\n                    }));\r\n                    component._selectedItemsUpdating = true;\r\n                    component.option(\"selectedItems\", selectedItems);\r\n                    component._selectedItemsUpdating = false;\r\n                    updateSelectAllState(e, options.filterValues)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(HEADER_FILTER_MENU_CLASS)\r\n    }\r\n});\r\nexport var allowHeaderFiltering = function(column) {\r\n    return isDefined(column.allowHeaderFiltering) ? column.allowHeaderFiltering : column.allowFiltering\r\n};\r\nexport var headerFilterMixin = {\r\n    _applyColumnState: function(options) {\r\n        var $headerFilterIndicator;\r\n        var rootElement = options.rootElement;\r\n        var column = options.column;\r\n        if (\"headerFilter\" === options.name) {\r\n            rootElement.find(\".\" + HEADER_FILTER_CLASS).remove();\r\n            if (allowHeaderFiltering(column)) {\r\n                $headerFilterIndicator = this.callBase(options).toggleClass(\"dx-header-filter-empty\", this._isHeaderFilterEmpty(column));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    $headerFilterIndicator.attr(\"tabindex\", this.option(\"tabindex\") || 0)\r\n                }\r\n            }\r\n            return $headerFilterIndicator\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _isHeaderFilterEmpty: function(column) {\r\n        return !column.filterValues || !column.filterValues.length\r\n    },\r\n    _getIndicatorClassName: function(name) {\r\n        if (\"headerFilter\" === name) {\r\n            return HEADER_FILTER_CLASS\r\n        }\r\n        return this.callBase(name)\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        if (\"headerFilter\" === options.name) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            if ($container.children().length && (!rtlEnabled && \"right\" === options.columnAlignment || rtlEnabled && \"left\" === options.columnAlignment)) {\r\n                $container.prepend($indicator);\r\n                return\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"headerFilter\" === args.name) {\r\n            var requireReady = \"columnHeadersView\" === this.name;\r\n            this._invalidate(requireReady, requireReady);\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_filter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    headerFilterMixin,\r\n    HeaderFilterView,\r\n    updateHeaderFilterItemSelectionState,\r\n    allowHeaderFiltering\r\n} from \"./ui.grid_core.header_filter_core\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nimport dataQuery from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nvar DATE_INTERVAL_FORMATS = {\r\n    month: function(value) {\r\n        return dateLocalization.getMonthNames()[value - 1]\r\n    },\r\n    quarter: function(value) {\r\n        return dateLocalization.format(new Date(2e3, 3 * value - 1), \"quarter\")\r\n    }\r\n};\r\n\r\nfunction ungroupUTCDates(items, dateParts, dates) {\r\n    dateParts = dateParts || [];\r\n    dates = dates || [];\r\n    items.forEach(item => {\r\n        if (isDefined(item.key)) {\r\n            var isMonthPart = 1 === dateParts.length;\r\n            dateParts.push(isMonthPart ? item.key - 1 : item.key);\r\n            if (item.items) {\r\n                ungroupUTCDates(item.items, dateParts, dates)\r\n            } else {\r\n                var date = new Date(Date.UTC.apply(Date, dateParts));\r\n                dates.push(date)\r\n            }\r\n            dateParts.pop()\r\n        } else {\r\n            dates.push(null)\r\n        }\r\n    });\r\n    return dates\r\n}\r\n\r\nfunction convertDataFromUTCToLocal(data, column) {\r\n    var dates = ungroupUTCDates(data);\r\n    var query = dataQuery(dates);\r\n    var group = gridCoreUtils.getHeaderFilterGroupParameters(_extends({}, column, {\r\n        calculateCellValue: date => date\r\n    }));\r\n    return storeHelper.queryByOptions(query, {\r\n        group: group\r\n    }).toArray()\r\n}\r\n\r\nfunction isUTCFormat(format) {\r\n    return \"Z\" === (null === format || void 0 === format ? void 0 : format.slice(-1)) || \"'Z'\" === (null === format || void 0 === format ? void 0 : format.slice(-3))\r\n}\r\nvar HeaderFilterController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._dataController = this.getController(\"data\");\r\n        this._headerFilterView = this.getView(\"headerFilterView\")\r\n    },\r\n    _updateSelectedState: function(items, column) {\r\n        var i = items.length;\r\n        var isExclude = \"exclude\" === column.filterType;\r\n        while (i--) {\r\n            var item = items[i];\r\n            if (\"items\" in items[i]) {\r\n                this._updateSelectedState(items[i].items, column)\r\n            }\r\n            updateHeaderFilterItemSelectionState(item, gridCoreUtils.getIndexByKey(items[i].value, column.filterValues, null) > -1, isExclude)\r\n        }\r\n    },\r\n    _normalizeGroupItem: function(item, currentLevel, options) {\r\n        var value;\r\n        var displayValue;\r\n        var path = options.path;\r\n        var valueSelector = options.valueSelector;\r\n        var displaySelector = options.displaySelector;\r\n        var column = options.column;\r\n        if (valueSelector && displaySelector) {\r\n            value = valueSelector(item);\r\n            displayValue = displaySelector(item)\r\n        } else {\r\n            value = item.key;\r\n            displayValue = value\r\n        }\r\n        if (!isObject(item)) {\r\n            item = {}\r\n        } else {\r\n            item = extend({}, item)\r\n        }\r\n        path.push(value);\r\n        if (1 === path.length) {\r\n            item.value = path[0]\r\n        } else {\r\n            item.value = path.join(\"/\")\r\n        }\r\n        item.text = this.getHeaderItemText(displayValue, column, currentLevel, options.headerFilterOptions);\r\n        return item\r\n    },\r\n    getHeaderItemText: function(displayValue, column, currentLevel, headerFilterOptions) {\r\n        var text = gridCoreUtils.formatValue(displayValue, function(value, column, currentLevel) {\r\n            var groupInterval = filterUtils.getGroupInterval(column);\r\n            var result = gridCoreUtils.getFormatOptionsByColumn(column, \"headerFilter\");\r\n            if (groupInterval) {\r\n                result.groupInterval = groupInterval[currentLevel];\r\n                if (gridCoreUtils.isDateType(column.dataType)) {\r\n                    result.format = DATE_INTERVAL_FORMATS[groupInterval[currentLevel]]\r\n                } else if (\"number\" === column.dataType) {\r\n                    result.getDisplayFormat = function() {\r\n                        var formatOptions = {\r\n                            format: column.format,\r\n                            target: \"headerFilter\"\r\n                        };\r\n                        var firstValueText = gridCoreUtils.formatValue(value, formatOptions);\r\n                        var secondValue = value + groupInterval[currentLevel];\r\n                        var secondValueText = gridCoreUtils.formatValue(secondValue, formatOptions);\r\n                        return firstValueText && secondValueText ? firstValueText + \" - \" + secondValueText : \"\"\r\n                    }\r\n                }\r\n            }\r\n            return result\r\n        }(displayValue, column, currentLevel));\r\n        if (!text) {\r\n            text = headerFilterOptions.texts.emptyValue\r\n        }\r\n        return text\r\n    },\r\n    _processGroupItems: function(groupItems, currentLevel, path, options) {\r\n        var displaySelector;\r\n        var valueSelector;\r\n        var column = options.column;\r\n        var lookup = column.lookup;\r\n        var level = options.level;\r\n        path = path || [];\r\n        currentLevel = currentLevel || 0;\r\n        if (lookup) {\r\n            displaySelector = compileGetter(lookup.displayExpr);\r\n            valueSelector = compileGetter(lookup.valueExpr)\r\n        }\r\n        for (var i = 0; i < groupItems.length; i++) {\r\n            groupItems[i] = this._normalizeGroupItem(groupItems[i], currentLevel, {\r\n                column: options.column,\r\n                headerFilterOptions: options.headerFilterOptions,\r\n                displaySelector: displaySelector,\r\n                valueSelector: valueSelector,\r\n                path: path\r\n            });\r\n            if (\"items\" in groupItems[i]) {\r\n                if (currentLevel === level || !isDefined(groupItems[i].value)) {\r\n                    delete groupItems[i].items\r\n                } else {\r\n                    this._processGroupItems(groupItems[i].items, currentLevel + 1, path, options)\r\n                }\r\n            }\r\n            path.pop()\r\n        }\r\n    },\r\n    getDataSource: function(column) {\r\n        var _column$headerFilter;\r\n        var that = this;\r\n        var dataSource = that._dataController.dataSource();\r\n        var remoteGrouping = null === dataSource || void 0 === dataSource ? void 0 : dataSource.remoteOperations().grouping;\r\n        var group = gridCoreUtils.getHeaderFilterGroupParameters(column, remoteGrouping);\r\n        var headerFilterDataSource = null === (_column$headerFilter = column.headerFilter) || void 0 === _column$headerFilter ? void 0 : _column$headerFilter.dataSource;\r\n        var headerFilterOptions = that.option(\"headerFilter\");\r\n        var isLookup = false;\r\n        var options = {\r\n            component: that.component\r\n        };\r\n        if (!dataSource) {\r\n            return\r\n        }\r\n        if (isDefined(headerFilterDataSource) && !isFunction(headerFilterDataSource)) {\r\n            options.dataSource = normalizeDataSourceOptions(headerFilterDataSource)\r\n        } else if (column.lookup) {\r\n            isLookup = true;\r\n            var lookupDataSourceOptions;\r\n            if (column.lookup.items) {\r\n                lookupDataSourceOptions = column.lookup.items\r\n            } else {\r\n                lookupDataSourceOptions = column.lookup.dataSource;\r\n                if (isFunction(lookupDataSourceOptions) && !variableWrapper.isWrapped(lookupDataSourceOptions)) {\r\n                    lookupDataSourceOptions = lookupDataSourceOptions({})\r\n                }\r\n            }\r\n            options.dataSource = normalizeDataSourceOptions(lookupDataSourceOptions)\r\n        } else {\r\n            var cutoffLevel = Array.isArray(group) ? group.length - 1 : 0;\r\n            that._currentColumn = column;\r\n            var filter = that._dataController.getCombinedFilter();\r\n            that._currentColumn = null;\r\n            options.dataSource = {\r\n                filter: filter,\r\n                group: group,\r\n                useDefaultSearch: true,\r\n                load: function(options) {\r\n                    var d = new Deferred;\r\n                    options.dataField = column.dataField || column.name;\r\n                    dataSource.load(options).done((function(data) {\r\n                        var convertUTCDates = remoteGrouping && isUTCFormat(column.serializationFormat) && cutoffLevel > 3;\r\n                        if (convertUTCDates) {\r\n                            data = convertDataFromUTCToLocal(data, column)\r\n                        }\r\n                        that._processGroupItems(data, null, null, {\r\n                            level: cutoffLevel,\r\n                            column: column,\r\n                            headerFilterOptions: headerFilterOptions\r\n                        });\r\n                        d.resolve(data)\r\n                    })).fail(d.reject);\r\n                    return d\r\n                }\r\n            }\r\n        }\r\n        if (isFunction(headerFilterDataSource)) {\r\n            headerFilterDataSource.call(column, options)\r\n        }\r\n        var origPostProcess = options.dataSource.postProcess;\r\n        options.dataSource.postProcess = function(data) {\r\n            var items = data;\r\n            if (isLookup) {\r\n                if (0 === this.pageIndex() && !this.searchValue()) {\r\n                    items = items.slice(0);\r\n                    items.unshift(null)\r\n                }\r\n                that._processGroupItems(items, null, null, {\r\n                    level: 0,\r\n                    column: column,\r\n                    headerFilterOptions: headerFilterOptions\r\n                })\r\n            }\r\n            items = origPostProcess && origPostProcess.call(this, items) || items;\r\n            that._updateSelectedState(items, column);\r\n            return items\r\n        };\r\n        return options.dataSource\r\n    },\r\n    getCurrentColumn: function() {\r\n        return this._currentColumn\r\n    },\r\n    showHeaderFilterMenu: function(columnIndex, isGroupPanel) {\r\n        var columnsController = this._columnsController;\r\n        var column = extend(true, {}, this._columnsController.getColumns()[columnIndex]);\r\n        if (column) {\r\n            var visibleIndex = columnsController.getVisibleIndex(columnIndex);\r\n            var view = isGroupPanel ? this.getView(\"headerPanel\") : this.getView(\"columnHeadersView\");\r\n            var $columnElement = $columnElement || view.getColumnElements().eq(isGroupPanel ? column.groupIndex : visibleIndex);\r\n            this.showHeaderFilterMenuBase({\r\n                columnElement: $columnElement,\r\n                column: column,\r\n                applyFilter: true,\r\n                apply: function() {\r\n                    columnsController.columnOption(columnIndex, {\r\n                        filterValues: this.filterValues,\r\n                        filterType: this.filterType\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },\r\n    showHeaderFilterMenuBase: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        if (column) {\r\n            var groupInterval = filterUtils.getGroupInterval(column);\r\n            var dataSource = that._dataController.dataSource();\r\n            var remoteFiltering = dataSource && dataSource.remoteOperations().filtering;\r\n            extend(options, column, {\r\n                type: groupInterval && groupInterval.length > 1 ? \"tree\" : \"list\",\r\n                remoteFiltering: remoteFiltering,\r\n                onShowing: function(e) {\r\n                    var dxResizableInstance = e.component.$overlayContent().dxResizable(\"instance\");\r\n                    dxResizableInstance && dxResizableInstance.option(\"onResizeEnd\", (function(e) {\r\n                        var columnsController = that.getController(\"columns\");\r\n                        var headerFilterByColumn = columnsController.columnOption(options.dataField, \"headerFilter\");\r\n                        headerFilterByColumn = headerFilterByColumn || {};\r\n                        headerFilterByColumn.width = e.width;\r\n                        headerFilterByColumn.height = e.height;\r\n                        columnsController.columnOption(options.dataField, \"headerFilter\", headerFilterByColumn, true)\r\n                    }))\r\n                },\r\n                onHidden: () => restoreFocus(this)\r\n            });\r\n            options.dataSource = that.getDataSource(options);\r\n            if (options.isFilterBuilder) {\r\n                options.dataSource.filter = null;\r\n                options.alignment = \"right\"\r\n            }\r\n            that._headerFilterView.showHeaderFilterMenu(options.columnElement, options)\r\n        }\r\n    },\r\n    hideHeaderFilterMenu: function() {\r\n        this._headerFilterView.hideHeaderFilterMenu()\r\n    }\r\n});\r\nvar ColumnHeadersViewHeaderFilterExtender = extend({}, headerFilterMixin, {\r\n    _renderCellContent: function($cell, options) {\r\n        var $headerFilterIndicator;\r\n        var column = options.column;\r\n        if (!column.command && allowHeaderFiltering(column) && this.option(\"headerFilter.visible\") && \"header\" === options.rowType) {\r\n            $headerFilterIndicator = this._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            });\r\n            $headerFilterIndicator && this._subscribeToIndicatorEvent($headerFilterIndicator, column, \"headerFilter\")\r\n        }\r\n        this.callBase($cell, options)\r\n    },\r\n    _subscribeToIndicatorEvent: function($indicator, column, indicatorName) {\r\n        var that = this;\r\n        if (\"headerFilter\" === indicatorName) {\r\n            eventsEngine.on($indicator, clickEventName, that.createAction((function(e) {\r\n                e.event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(column.index, false)\r\n            })))\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        var $indicator = this.callBase($cell, column, indicatorName);\r\n        $indicator && this._subscribeToIndicatorEvent($indicator, column, indicatorName)\r\n    },\r\n    _updateHeaderFilterIndicators: function() {\r\n        if (this.option(\"headerFilter.visible\")) {\r\n            this._updateIndicators(\"headerFilter\")\r\n        }\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return true\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"filterValues\", \"filterType\"])) {\r\n            if (this._needUpdateFilterIndicators()) {\r\n                this._updateHeaderFilterIndicators()\r\n            }\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar HeaderPanelHeaderFilterExtender = extend({}, headerFilterMixin, {\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase.apply(that, arguments);\r\n        var $headerFilterIndicator;\r\n        if (!groupColumn.command && allowHeaderFiltering(groupColumn) && that.option(\"headerFilter.visible\")) {\r\n            $headerFilterIndicator = that._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $item,\r\n                column: {\r\n                    alignment: getDefaultAlignment(that.option(\"rtlEnabled\")),\r\n                    filterValues: groupColumn.filterValues,\r\n                    allowHeaderFiltering: true\r\n                },\r\n                showColumnLines: true\r\n            });\r\n            $headerFilterIndicator && eventsEngine.on($headerFilterIndicator, clickEventName, that.createAction((function(e) {\r\n                var event = e.event;\r\n                event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(groupColumn.index, true)\r\n            })))\r\n        }\r\n        return $item\r\n    }\r\n});\r\nexport function invertFilterExpression(filter) {\r\n    return [\"!\", filter]\r\n}\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        var headerFilterController = this.getController(\"headerFilter\");\r\n        var currentColumn = headerFilterController.getCurrentColumn();\r\n        each(columns, (function(_, column) {\r\n            var filter;\r\n            if (currentColumn && currentColumn.index === column.index) {\r\n                return\r\n            }\r\n            if (allowHeaderFiltering(column) && column.calculateFilterExpression && Array.isArray(column.filterValues) && column.filterValues.length) {\r\n                var filterValues = [];\r\n                each(column.filterValues, (function(_, filterValue) {\r\n                    if (Array.isArray(filterValue)) {\r\n                        filter = filterValue\r\n                    } else {\r\n                        if (column.deserializeValue && !gridCoreUtils.isDateType(column.dataType) && \"number\" !== column.dataType) {\r\n                            filterValue = column.deserializeValue(filterValue)\r\n                        }\r\n                        filter = column.createFilterExpression(filterValue, \"=\", \"headerFilter\")\r\n                    }\r\n                    if (filter) {\r\n                        filter.columnIndex = column.index\r\n                    }\r\n                    filterValues.push(filter)\r\n                }));\r\n                filterValues = gridCoreUtils.combineFilters(filterValues, \"or\");\r\n                filters.push(\"exclude\" === column.filterType ? [\"!\", filterValues] : filterValues)\r\n            }\r\n        }));\r\n        return gridCoreUtils.combineFilters(filters)\r\n    }\r\n};\r\nexport var headerFilterModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            headerFilter: {\r\n                visible: false,\r\n                width: 252,\r\n                height: 325,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: messageLocalization.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: messageLocalization.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: messageLocalization.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        headerFilter: HeaderFilterController\r\n    },\r\n    views: {\r\n        headerFilterView: HeaderFilterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewHeaderFilterExtender,\r\n            headerPanel: HeaderPanelHeaderFilterExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.header_filter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    headerFilterModule\r\n} from \"../grid_core/ui.grid_core.header_filter\";\r\ncore.registerModule(\"headerFilter\", headerFilterModule);\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/between.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar FILTER_BUILDER_RANGE_CLASS = \"dx-filterbuilder-range\";\r\nvar FILTER_BUILDER_RANGE_START_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-start\";\r\nvar FILTER_BUILDER_RANGE_END_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-end\";\r\nvar FILTER_BUILDER_RANGE_SEPARATOR_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-separator\";\r\nvar SEPARATOR = \"\\u2013\";\r\n\r\nfunction editorTemplate(conditionInfo, container) {\r\n    var $editorStart = $(\"<div>\").addClass(FILTER_BUILDER_RANGE_START_CLASS);\r\n    var $editorEnd = $(\"<div>\").addClass(FILTER_BUILDER_RANGE_END_CLASS);\r\n    var values = conditionInfo.value || [];\r\n    var getStartValue = function(values) {\r\n        return values && values.length > 0 ? values[0] : null\r\n    };\r\n    var getEndValue = function(values) {\r\n        return values && 2 === values.length ? values[1] : null\r\n    };\r\n    container.append($editorStart);\r\n    container.append($(\"<span>\").addClass(FILTER_BUILDER_RANGE_SEPARATOR_CLASS).text(SEPARATOR));\r\n    container.append($editorEnd);\r\n    container.addClass(FILTER_BUILDER_RANGE_CLASS);\r\n    this._editorFactory.createEditor.call(this, $editorStart, extend({}, conditionInfo.field, conditionInfo, {\r\n        value: getStartValue(values),\r\n        parentType: \"filterBuilder\",\r\n        setValue: function(value) {\r\n            values = [value, getEndValue(values)];\r\n            conditionInfo.setValue(values)\r\n        }\r\n    }));\r\n    this._editorFactory.createEditor.call(this, $editorEnd, extend({}, conditionInfo.field, conditionInfo, {\r\n        value: getEndValue(values),\r\n        parentType: \"filterBuilder\",\r\n        setValue: function(value) {\r\n            values = [getStartValue(values), value];\r\n            conditionInfo.setValue(values)\r\n        }\r\n    }))\r\n}\r\nexport function getConfig(caption, context) {\r\n    return {\r\n        name: \"between\",\r\n        caption: caption,\r\n        icon: \"range\",\r\n        valueSeparator: SEPARATOR,\r\n        dataTypes: [\"number\", \"date\", \"datetime\"],\r\n        editorTemplate: editorTemplate.bind(context),\r\n        notForLookup: true\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/ui.filter_operations_dictionary.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notequal\",\r\n    \"<\": \"less\",\r\n    \"<=\": \"lessorequal\",\r\n    \">\": \"greater\",\r\n    \">=\": \"greaterorequal\",\r\n    notcontains: \"doesnotcontain\",\r\n    contains: \"contains\",\r\n    startswith: \"startswith\",\r\n    endswith: \"endswith\",\r\n    isblank: \"isblank\",\r\n    isnotblank: \"isnotblank\"\r\n};\r\nvar OPERATION_NAME = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    isblank: \"isBlank\",\r\n    isnotblank: \"isNotBlank\",\r\n    between: \"between\"\r\n};\r\nexport default {\r\n    getIconByFilterOperation: function(filterOperation) {\r\n        return OPERATION_ICONS[filterOperation]\r\n    },\r\n    getNameByFilterOperation: function(filterOperation) {\r\n        return OPERATION_NAME[filterOperation]\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    errors as dataErrors\r\n} from \"../../data/errors\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport formatHelper from \"../../format_helper\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport {\r\n    getConfig\r\n} from \"./between\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport filterOperationsDictionary from \"./ui.filter_operations_dictionary\";\r\nvar DEFAULT_DATA_TYPE = \"string\";\r\nvar EMPTY_MENU_ICON = \"icon-none\";\r\nvar AND_GROUP_OPERATION = \"and\";\r\nvar EQUAL_OPERATION = \"=\";\r\nvar NOT_EQUAL_OPERATION = \"<>\";\r\nvar DATATYPE_OPERATIONS = {\r\n    number: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    string: [\"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\", \"isblank\", \"isnotblank\"],\r\n    date: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    datetime: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    boolean: [\"=\", \"<>\", \"isblank\", \"isnotblank\"],\r\n    object: [\"isblank\", \"isnotblank\"]\r\n};\r\nvar DEFAULT_FORMAT = {\r\n    date: \"shortDate\",\r\n    datetime: \"shortDateShortTime\"\r\n};\r\nvar LOOKUP_OPERATIONS = [\"=\", \"<>\", \"isblank\", \"isnotblank\"];\r\nvar AVAILABLE_FIELD_PROPERTIES = [\"caption\", \"customizeText\", \"dataField\", \"dataType\", \"editorTemplate\", \"falseText\", \"editorOptions\", \"filterOperations\", \"format\", \"lookup\", \"trueText\", \"calculateFilterExpression\", \"name\"];\r\nvar FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nvar FILTER_BUILDER_ITEM_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-text\";\r\nvar FILTER_BUILDER_ITEM_TEXT_PART_CLASS = FILTER_BUILDER_ITEM_TEXT_CLASS + \"-part\";\r\nvar FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS = FILTER_BUILDER_ITEM_TEXT_CLASS + \"-separator\";\r\nvar FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS = FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS + \"-empty\";\r\n\r\nfunction getFormattedValueText(field, value) {\r\n    var fieldFormat = field.format || DEFAULT_FORMAT[field.dataType];\r\n    return formatHelper.format(value, fieldFormat)\r\n}\r\n\r\nfunction isNegationGroup(group) {\r\n    return group && group.length > 1 && \"!\" === group[0] && !isCondition(group)\r\n}\r\nexport function getGroupCriteria(group) {\r\n    return isNegationGroup(group) ? group[1] : group\r\n}\r\n\r\nfunction setGroupCriteria(group, criteria) {\r\n    if (isNegationGroup(group)) {\r\n        group[1] = criteria\r\n    } else {\r\n        group = criteria\r\n    }\r\n    return group\r\n}\r\n\r\nfunction convertGroupToNewStructure(group, value) {\r\n    if (function(value) {\r\n            return -1 !== value.indexOf(\"!\")\r\n        }(value)) {\r\n        if (!isNegationGroup(group)) {\r\n            ! function(group) {\r\n                var criteria = group.slice(0);\r\n                group.length = 0;\r\n                group.push(\"!\", criteria)\r\n            }(group)\r\n        }\r\n    } else if (isNegationGroup(group)) {\r\n        ! function(group) {\r\n            var criteria = getGroupCriteria(group);\r\n            group.length = 0;\r\n            [].push.apply(group, criteria)\r\n        }(group)\r\n    }\r\n}\r\nexport function setGroupValue(group, value) {\r\n    convertGroupToNewStructure(group, value);\r\n    var criteria = getGroupCriteria(group);\r\n    var i;\r\n    value = function(value) {\r\n        return -1 === value.indexOf(\"!\") ? value : value.substring(1)\r\n    }(value);\r\n    ! function(criteria, value) {\r\n        for (i = 0; i < criteria.length; i++) {\r\n            if (!Array.isArray(criteria[i])) {\r\n                criteria[i] = value\r\n            }\r\n        }\r\n    }(criteria, value);\r\n    return group\r\n}\r\nexport function getGroupMenuItem(group, availableGroups) {\r\n    var groupValue = getGroupValue(group);\r\n    return availableGroups.filter((function(item) {\r\n        return item.value === groupValue\r\n    }))[0]\r\n}\r\n\r\nfunction getCriteriaOperation(criteria) {\r\n    if (isCondition(criteria)) {\r\n        return AND_GROUP_OPERATION\r\n    }\r\n    var value = \"\";\r\n    for (var i = 0; i < criteria.length; i++) {\r\n        var item = criteria[i];\r\n        if (!Array.isArray(item)) {\r\n            if (value && value !== item) {\r\n                throw new dataErrors.Error(\"E4019\")\r\n            }\r\n            if (\"!\" !== item) {\r\n                value = item\r\n            }\r\n        }\r\n    }\r\n    return value\r\n}\r\nexport function getGroupValue(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var value = getCriteriaOperation(criteria);\r\n    if (!value) {\r\n        value = AND_GROUP_OPERATION\r\n    }\r\n    if (criteria !== group) {\r\n        value = \"!\" + value\r\n    }\r\n    return value\r\n}\r\n\r\nfunction getDefaultFilterOperations(field) {\r\n    return field.lookup && LOOKUP_OPERATIONS || DATATYPE_OPERATIONS[field.dataType || DEFAULT_DATA_TYPE]\r\n}\r\n\r\nfunction containItems(entity) {\r\n    return Array.isArray(entity) && entity.length\r\n}\r\nexport function getFilterOperations(field) {\r\n    var result = containItems(field.filterOperations) ? field.filterOperations : getDefaultFilterOperations(field);\r\n    return extend([], result)\r\n}\r\nexport function getCaptionByOperation(operation, filterOperationDescriptions) {\r\n    var operationName = filterOperationsDictionary.getNameByFilterOperation(operation);\r\n    return filterOperationDescriptions && filterOperationDescriptions[operationName] ? filterOperationDescriptions[operationName] : operationName\r\n}\r\nexport function getOperationFromAvailable(operation, availableOperations) {\r\n    for (var i = 0; i < availableOperations.length; i++) {\r\n        if (availableOperations[i].value === operation) {\r\n            return availableOperations[i]\r\n        }\r\n    }\r\n    throw new errors.Error(\"E1048\", operation)\r\n}\r\nexport function getCustomOperation(customOperations, name) {\r\n    var filteredOperations = customOperations.filter((function(item) {\r\n        return item.name === name\r\n    }));\r\n    return filteredOperations.length ? filteredOperations[0] : null\r\n}\r\nexport function getAvailableOperations(field, filterOperationDescriptions, customOperations) {\r\n    var filterOperations = getFilterOperations(field);\r\n    var isLookupField = !!field.lookup;\r\n    customOperations.forEach((function(customOperation) {\r\n        if (!field.filterOperations && -1 === filterOperations.indexOf(customOperation.name)) {\r\n            var dataTypes = customOperation && customOperation.dataTypes;\r\n            var isOperationForbidden = isLookupField ? !!customOperation.notForLookup : false;\r\n            if (!isOperationForbidden && dataTypes && dataTypes.indexOf(field.dataType || DEFAULT_DATA_TYPE) >= 0) {\r\n                filterOperations.push(customOperation.name)\r\n            }\r\n        }\r\n    }));\r\n    return filterOperations.map((function(operation) {\r\n        var customOperation = getCustomOperation(customOperations, operation);\r\n        if (customOperation) {\r\n            return {\r\n                icon: customOperation.icon || EMPTY_MENU_ICON,\r\n                text: customOperation.caption || captionize(customOperation.name),\r\n                value: customOperation.name,\r\n                isCustom: true\r\n            }\r\n        } else {\r\n            return {\r\n                icon: filterOperationsDictionary.getIconByFilterOperation(operation) || EMPTY_MENU_ICON,\r\n                text: getCaptionByOperation(operation, filterOperationDescriptions),\r\n                value: operation\r\n            }\r\n        }\r\n    }))\r\n}\r\nexport function getDefaultOperation(field) {\r\n    return field.defaultFilterOperation || getFilterOperations(field)[0]\r\n}\r\nexport function createCondition(field, customOperations) {\r\n    var condition = [field.dataField, \"\", \"\"];\r\n    var filterOperation = getDefaultOperation(field);\r\n    updateConditionByOperation(condition, filterOperation, customOperations);\r\n    return condition\r\n}\r\nexport function removeItem(group, item) {\r\n    var criteria = getGroupCriteria(group);\r\n    var index = criteria.indexOf(item);\r\n    criteria.splice(index, 1);\r\n    if (1 !== criteria.length) {\r\n        criteria.splice(index, 1)\r\n    }\r\n    return group\r\n}\r\nexport function createEmptyGroup(value) {\r\n    var isNegation = isNegationGroupOperation(value);\r\n    var groupOperation = isNegation ? getGroupOperationFromNegationOperation(value) : value;\r\n    return isNegation ? [\"!\", [groupOperation]] : [groupOperation]\r\n}\r\nexport function isEmptyGroup(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    if (isCondition(criteria)) {\r\n        return false\r\n    }\r\n    var hasConditions = criteria.some((function(item) {\r\n        return isCondition(item)\r\n    }));\r\n    return !hasConditions\r\n}\r\nexport function addItem(item, group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var groupValue = getGroupValue(criteria);\r\n    1 === criteria.length ? criteria.unshift(item) : criteria.push(item, groupValue);\r\n    return group\r\n}\r\nexport function getField(dataField, fields) {\r\n    for (var i = 0; i < fields.length; i++) {\r\n        if (fields[i].name === dataField) {\r\n            return fields[i]\r\n        }\r\n        if (fields[i].dataField.toLowerCase() === dataField.toLowerCase()) {\r\n            return fields[i]\r\n        }\r\n    }\r\n    var extendedFields = getItems(fields, true).filter((function(item) {\r\n        return item.dataField.toLowerCase() === dataField.toLowerCase()\r\n    }));\r\n    if (extendedFields.length > 0) {\r\n        return extendedFields[0]\r\n    }\r\n    throw new errors.Error(\"E1047\", dataField)\r\n}\r\nexport function isGroup(criteria) {\r\n    if (!Array.isArray(criteria)) {\r\n        return false\r\n    }\r\n    return criteria.length < 2 || Array.isArray(criteria[0]) || Array.isArray(criteria[1])\r\n}\r\nexport function isCondition(criteria) {\r\n    if (!Array.isArray(criteria)) {\r\n        return false\r\n    }\r\n    return criteria.length > 1 && !Array.isArray(criteria[0]) && !Array.isArray(criteria[1])\r\n}\r\n\r\nfunction convertToInnerGroup(group, customOperations, defaultGroupOperation) {\r\n    defaultGroupOperation = defaultGroupOperation || AND_GROUP_OPERATION;\r\n    var groupOperation = getCriteriaOperation(group).toLowerCase() || defaultGroupOperation;\r\n    var innerGroup = [];\r\n    for (var i = 0; i < group.length; i++) {\r\n        if (isGroup(group[i])) {\r\n            innerGroup.push(convertToInnerStructure(group[i], customOperations, defaultGroupOperation));\r\n            innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n        } else if (isCondition(group[i])) {\r\n            innerGroup.push(convertToInnerCondition(group[i], customOperations));\r\n            innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n        }\r\n    }\r\n    if (0 === innerGroup.length) {\r\n        innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n    }\r\n    return innerGroup\r\n}\r\n\r\nfunction conditionHasCustomOperation(condition, customOperations) {\r\n    var customOperation = getCustomOperation(customOperations, condition[1]);\r\n    return customOperation && customOperation.name === condition[1]\r\n}\r\n\r\nfunction convertToInnerCondition(condition, customOperations) {\r\n    if (conditionHasCustomOperation(condition, customOperations)) {\r\n        return condition\r\n    }\r\n    if (condition.length < 3) {\r\n        condition[2] = condition[1];\r\n        condition[1] = EQUAL_OPERATION\r\n    }\r\n    return condition\r\n}\r\n\r\nfunction isNegationGroupOperation(operation) {\r\n    return -1 !== operation.indexOf(\"not\")\r\n}\r\n\r\nfunction getGroupOperationFromNegationOperation(operation) {\r\n    return operation.substring(3).toLowerCase()\r\n}\r\n\r\nfunction appendGroupOperationToCriteria(criteria, groupOperation) {\r\n    var isNegation = isNegationGroupOperation(groupOperation);\r\n    groupOperation = isNegation ? getGroupOperationFromNegationOperation(groupOperation) : groupOperation;\r\n    return isNegation ? [\"!\", criteria, groupOperation] : [criteria, groupOperation]\r\n}\r\n\r\nfunction appendGroupOperationToGroup(group, groupOperation) {\r\n    var isNegation = isNegationGroupOperation(groupOperation);\r\n    groupOperation = isNegation ? getGroupOperationFromNegationOperation(groupOperation) : groupOperation;\r\n    group.push(groupOperation);\r\n    var result = group;\r\n    if (isNegation) {\r\n        result = [\"!\", result]\r\n    }\r\n    return result\r\n}\r\nexport function convertToInnerStructure(value, customOperations, defaultGroupOperation) {\r\n    defaultGroupOperation = defaultGroupOperation || AND_GROUP_OPERATION;\r\n    if (!value) {\r\n        return createEmptyGroup(defaultGroupOperation)\r\n    }\r\n    value = extend(true, [], value);\r\n    if (isCondition(value)) {\r\n        return appendGroupOperationToCriteria(convertToInnerCondition(value, customOperations), defaultGroupOperation)\r\n    }\r\n    if (isNegationGroup(value)) {\r\n        return [\"!\", isCondition(value[1]) ? appendGroupOperationToCriteria(convertToInnerCondition(value[1], customOperations), defaultGroupOperation) : isNegationGroup(value[1]) ? appendGroupOperationToCriteria(convertToInnerStructure(value[1], customOperations), defaultGroupOperation) : convertToInnerGroup(value[1], customOperations, defaultGroupOperation)]\r\n    }\r\n    return convertToInnerGroup(value, customOperations, defaultGroupOperation)\r\n}\r\nexport function getNormalizedFields(fields) {\r\n    return fields.reduce((function(result, field) {\r\n        if (isDefined(field.dataField)) {\r\n            var normalizedField = {};\r\n            for (var key in field) {\r\n                if (field[key] && AVAILABLE_FIELD_PROPERTIES.indexOf(key) > -1) {\r\n                    normalizedField[key] = field[key]\r\n                }\r\n            }\r\n            normalizedField.defaultCalculateFilterExpression = filterUtils.defaultCalculateFilterExpression;\r\n            if (!isDefined(normalizedField.dataType)) {\r\n                normalizedField.dataType = DEFAULT_DATA_TYPE\r\n            }\r\n            if (!isDefined(normalizedField.trueText)) {\r\n                normalizedField.trueText = messageLocalization.format(\"dxDataGrid-trueText\")\r\n            }\r\n            if (!isDefined(normalizedField.falseText)) {\r\n                normalizedField.falseText = messageLocalization.format(\"dxDataGrid-falseText\")\r\n            }\r\n            result.push(normalizedField)\r\n        }\r\n        return result\r\n    }), [])\r\n}\r\n\r\nfunction getConditionFilterExpression(condition, fields, customOperations, target) {\r\n    var field = getField(condition[0], fields);\r\n    var filterExpression = convertToInnerCondition(condition, customOperations);\r\n    var customOperation = customOperations.length && getCustomOperation(customOperations, filterExpression[1]);\r\n    if (customOperation && customOperation.calculateFilterExpression) {\r\n        return customOperation.calculateFilterExpression.apply(customOperation, [filterExpression[2], field, fields])\r\n    } else if (field.createFilterExpression) {\r\n        return field.createFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    } else if (field.calculateFilterExpression) {\r\n        return field.calculateFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    } else {\r\n        return field.defaultCalculateFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    }\r\n}\r\nexport function getFilterExpression(value, fields, customOperations, target) {\r\n    if (!isDefined(value)) {\r\n        return null\r\n    }\r\n    if (isNegationGroup(value)) {\r\n        var filterExpression = getFilterExpression(value[1], fields, customOperations, target);\r\n        return [\"!\", filterExpression]\r\n    }\r\n    var criteria = getGroupCriteria(value);\r\n    if (isCondition(criteria)) {\r\n        return getConditionFilterExpression(criteria, fields, customOperations, target) || null\r\n    } else {\r\n        var result = [];\r\n        var _filterExpression;\r\n        var groupValue = getGroupValue(criteria);\r\n        for (var i = 0; i < criteria.length; i++) {\r\n            if (isGroup(criteria[i])) {\r\n                _filterExpression = getFilterExpression(criteria[i], fields, customOperations, target);\r\n                if (_filterExpression) {\r\n                    i && result.push(groupValue);\r\n                    result.push(_filterExpression)\r\n                }\r\n            } else if (isCondition(criteria[i])) {\r\n                _filterExpression = getConditionFilterExpression(criteria[i], fields, customOperations, target);\r\n                if (_filterExpression) {\r\n                    result.length && result.push(groupValue);\r\n                    result.push(_filterExpression)\r\n                }\r\n            }\r\n        }\r\n        if (1 === result.length) {\r\n            result = result[0]\r\n        }\r\n        return result.length ? result : null\r\n    }\r\n}\r\nexport function getNormalizedFilter(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var i;\r\n    if (0 === criteria.length) {\r\n        return null\r\n    }\r\n    var itemsForRemove = [];\r\n    for (i = 0; i < criteria.length; i++) {\r\n        if (isGroup(criteria[i])) {\r\n            var normalizedGroupValue = getNormalizedFilter(criteria[i]);\r\n            if (normalizedGroupValue) {\r\n                criteria[i] = normalizedGroupValue\r\n            } else {\r\n                itemsForRemove.push(criteria[i])\r\n            }\r\n        } else if (isCondition(criteria[i])) {\r\n            if (!isValidCondition(criteria[i])) {\r\n                itemsForRemove.push(criteria[i])\r\n            }\r\n        }\r\n    }\r\n    for (i = 0; i < itemsForRemove.length; i++) {\r\n        removeItem(criteria, itemsForRemove[i])\r\n    }\r\n    if (1 === criteria.length) {\r\n        return null\r\n    }\r\n    criteria.splice(criteria.length - 1, 1);\r\n    if (1 === criteria.length) {\r\n        group = setGroupCriteria(group, criteria[0])\r\n    }\r\n    if (0 === group.length) {\r\n        return null\r\n    }\r\n    return group\r\n}\r\nexport function getCurrentLookupValueText(field, value, handler) {\r\n    if (\"\" === value) {\r\n        handler(\"\");\r\n        return\r\n    }\r\n    var lookup = field.lookup;\r\n    if (lookup.items) {\r\n        handler(lookup.calculateCellValue(value) || \"\")\r\n    } else {\r\n        var lookupDataSource = isFunction(lookup.dataSource) ? lookup.dataSource({}) : lookup.dataSource;\r\n        var dataSource = new DataSource(lookupDataSource);\r\n        dataSource.loadSingle(lookup.valueExpr, value).done((function(result) {\r\n            var valueText = \"\";\r\n            if (result) {\r\n                valueText = lookup.displayExpr ? compileGetter(lookup.displayExpr)(result) : result\r\n            }\r\n            if (field.customizeText) {\r\n                valueText = field.customizeText({\r\n                    value: value,\r\n                    valueText: valueText\r\n                })\r\n            }\r\n            handler(valueText)\r\n        })).fail((function() {\r\n            handler(\"\")\r\n        }))\r\n    }\r\n}\r\n\r\nfunction getPrimitiveValueText(field, value, customOperation, target, options) {\r\n    var valueText;\r\n    if (true === value) {\r\n        valueText = field.trueText || messageLocalization.format(\"dxDataGrid-trueText\")\r\n    } else if (false === value) {\r\n        valueText = field.falseText || messageLocalization.format(\"dxDataGrid-falseText\")\r\n    } else {\r\n        valueText = getFormattedValueText(field, value)\r\n    }\r\n    if (field.customizeText) {\r\n        valueText = field.customizeText.call(field, {\r\n            value: value,\r\n            valueText: valueText,\r\n            target: target\r\n        })\r\n    }\r\n    if (customOperation && customOperation.customizeText) {\r\n        valueText = customOperation.customizeText.call(customOperation, {\r\n            value: value,\r\n            valueText: valueText,\r\n            field: field,\r\n            target: target\r\n        }, options)\r\n    }\r\n    return valueText\r\n}\r\n\r\nfunction getArrayValueText(field, value, customOperation, target) {\r\n    var options = {\r\n        values: value\r\n    };\r\n    return value.map(v => getPrimitiveValueText(field, v, customOperation, target, options))\r\n}\r\n\r\nfunction checkDefaultValue(value) {\r\n    return \"\" === value || null === value\r\n}\r\nexport function getCurrentValueText(field, value, customOperation) {\r\n    var target = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : \"filterBuilder\";\r\n    if (checkDefaultValue(value)) {\r\n        return \"\"\r\n    }\r\n    if (Array.isArray(value)) {\r\n        var result = new Deferred;\r\n        when.apply(this, getArrayValueText(field, value, customOperation, target)).done((function() {\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key]\r\n            }\r\n            var text = args.some(item => !checkDefaultValue(item)) ? args.map(item => !checkDefaultValue(item) ? item : \"?\") : \"\";\r\n            result.resolve(text)\r\n        }));\r\n        return result\r\n    } else {\r\n        return getPrimitiveValueText(field, value, customOperation, target)\r\n    }\r\n}\r\n\r\nfunction itemExists(plainItems, parentId) {\r\n    return plainItems.some((function(item) {\r\n        return item.dataField === parentId\r\n    }))\r\n}\r\n\r\nfunction pushItemAndCheckParent(originalItems, plainItems, item) {\r\n    var dataField = item.dataField;\r\n    if (hasParent(dataField)) {\r\n        item.parentId = getParentIdFromItemDataField(dataField);\r\n        if (!itemExists(plainItems, item.parentId) && !itemExists(originalItems, item.parentId)) {\r\n            pushItemAndCheckParent(originalItems, plainItems, {\r\n                id: item.parentId,\r\n                dataType: \"object\",\r\n                dataField: item.parentId,\r\n                caption: generateCaptionByDataField(item.parentId, true),\r\n                filterOperations: [\"isblank\", \"isnotblank\"]\r\n            })\r\n        }\r\n    }\r\n    plainItems.push(item)\r\n}\r\n\r\nfunction generateCaptionByDataField(dataField, allowHierarchicalFields) {\r\n    var caption = \"\";\r\n    if (allowHierarchicalFields) {\r\n        dataField = dataField.substring(dataField.lastIndexOf(\".\") + 1)\r\n    } else if (hasParent(dataField)) {\r\n        dataField.split(\".\").forEach((function(field, index, arr) {\r\n            caption += captionize(field);\r\n            if (index !== arr.length - 1) {\r\n                caption += \".\"\r\n            }\r\n        }));\r\n        return caption\r\n    }\r\n    return captionize(dataField)\r\n}\r\nexport function getItems(fields, allowHierarchicalFields) {\r\n    var items = [];\r\n    for (var i = 0; i < fields.length; i++) {\r\n        var item = extend(true, {\r\n            caption: generateCaptionByDataField(fields[i].dataField, allowHierarchicalFields)\r\n        }, fields[i]);\r\n        item.id = item.name || item.dataField;\r\n        if (allowHierarchicalFields) {\r\n            pushItemAndCheckParent(fields, items, item)\r\n        } else {\r\n            items.push(item)\r\n        }\r\n    }\r\n    return items\r\n}\r\n\r\nfunction hasParent(dataField) {\r\n    return -1 !== dataField.lastIndexOf(\".\")\r\n}\r\n\r\nfunction getParentIdFromItemDataField(dataField) {\r\n    return dataField.substring(0, dataField.lastIndexOf(\".\"))\r\n}\r\nexport function getCaptionWithParents(item, plainItems) {\r\n    if (hasParent(item.dataField)) {\r\n        var parentId = getParentIdFromItemDataField(item.dataField);\r\n        for (var i = 0; i < plainItems.length; i++) {\r\n            if (plainItems[i].dataField === parentId) {\r\n                return getCaptionWithParents(plainItems[i], plainItems) + \".\" + item.caption\r\n            }\r\n        }\r\n    }\r\n    return item.caption\r\n}\r\nexport function updateConditionByOperation(condition, operation, customOperations) {\r\n    var customOperation = getCustomOperation(customOperations, operation);\r\n    if (customOperation) {\r\n        if (false === customOperation.hasValue) {\r\n            condition[1] = operation;\r\n            condition.length = 2\r\n        } else {\r\n            condition[1] = operation;\r\n            condition[2] = \"\"\r\n        }\r\n        return condition\r\n    }\r\n    if (\"isblank\" === operation) {\r\n        condition[1] = EQUAL_OPERATION;\r\n        condition[2] = null\r\n    } else if (\"isnotblank\" === operation) {\r\n        condition[1] = NOT_EQUAL_OPERATION;\r\n        condition[2] = null\r\n    } else {\r\n        customOperation = getCustomOperation(customOperations, condition[1]);\r\n        if (customOperation || 2 === condition.length || null === condition[2]) {\r\n            condition[2] = \"\"\r\n        }\r\n        condition[1] = operation\r\n    }\r\n    return condition\r\n}\r\nexport function getOperationValue(condition) {\r\n    var caption;\r\n    if (null === condition[2]) {\r\n        if (condition[1] === EQUAL_OPERATION) {\r\n            caption = \"isblank\"\r\n        } else {\r\n            caption = \"isnotblank\"\r\n        }\r\n    } else {\r\n        caption = condition[1]\r\n    }\r\n    return caption\r\n}\r\nexport function isValidCondition(condition) {\r\n    return \"\" !== condition[2]\r\n}\r\nexport function getMergedOperations(customOperations, betweenCaption, context) {\r\n    var result = extend(true, [], customOperations);\r\n    var betweenIndex = -1;\r\n    result.some((function(customOperation, index) {\r\n        if (\"between\" === customOperation.name) {\r\n            betweenIndex = index;\r\n            return true\r\n        }\r\n    }));\r\n    if (-1 !== betweenIndex) {\r\n        result[betweenIndex] = extend(getConfig(betweenCaption, context), result[betweenIndex])\r\n    } else {\r\n        result.unshift(getConfig(betweenCaption, context))\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isMatchedCondition(filter, addedFilterDataField) {\r\n    return filter[0] === addedFilterDataField\r\n}\r\nexport function removeFieldConditionsFromFilter(filter, dataField) {\r\n    if (!filter || 0 === filter.length) {\r\n        return null\r\n    }\r\n    if (isCondition(filter)) {\r\n        var hasMatchedCondition = isMatchedCondition(filter, dataField);\r\n        return !hasMatchedCondition ? filter : null\r\n    } else {\r\n        return syncConditionIntoGroup(filter, [dataField], false)\r\n    }\r\n}\r\n\r\nfunction syncConditionIntoGroup(filter, addedFilter, canPush) {\r\n    var result = [];\r\n    filter.forEach((function(item) {\r\n        if (isCondition(item)) {\r\n            if (isMatchedCondition(item, addedFilter[0])) {\r\n                if (canPush) {\r\n                    result.push(addedFilter);\r\n                    canPush = false\r\n                } else {\r\n                    result.splice(result.length - 1, 1)\r\n                }\r\n            } else {\r\n                result.push(item)\r\n            }\r\n        } else {\r\n            (result.length || isGroup(item)) && result.push(item)\r\n        }\r\n    }));\r\n    if (0 === result.length) {\r\n        return null\r\n    }\r\n    if (canPush) {\r\n        result.push(AND_GROUP_OPERATION);\r\n        result.push(addedFilter)\r\n    }\r\n    return 1 === result.length ? result[0] : result\r\n}\r\nexport function syncFilters(filter, addedFilter) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return addedFilter\r\n    }\r\n    if (isCondition(filter)) {\r\n        if (isMatchedCondition(filter, addedFilter[0])) {\r\n            return addedFilter\r\n        } else {\r\n            return [filter, AND_GROUP_OPERATION, addedFilter]\r\n        }\r\n    }\r\n    var groupValue = getGroupValue(filter);\r\n    if (groupValue !== AND_GROUP_OPERATION) {\r\n        return [addedFilter, \"and\", filter]\r\n    }\r\n    return syncConditionIntoGroup(filter, addedFilter, true)\r\n}\r\nexport function getMatchedConditions(filter, dataField) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return []\r\n    }\r\n    if (isCondition(filter)) {\r\n        if (isMatchedCondition(filter, dataField)) {\r\n            return [filter]\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n    var groupValue = getGroupValue(filter);\r\n    if (groupValue !== AND_GROUP_OPERATION) {\r\n        return []\r\n    }\r\n    var result = filter.filter((function(item) {\r\n        return isCondition(item) && isMatchedCondition(item, dataField)\r\n    }));\r\n    return result\r\n}\r\nexport function filterHasField(filter, dataField) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return false\r\n    }\r\n    if (isCondition(filter)) {\r\n        return filter[0] === dataField\r\n    }\r\n    return filter.some((function(item) {\r\n        return (isCondition(item) || isGroup(item)) && filterHasField(item, dataField)\r\n    }))\r\n}\r\nexport var renderValueText = function($container, value, customOperation) {\r\n    if (Array.isArray(value)) {\r\n        var lastItemIndex = value.length - 1;\r\n        $container.empty();\r\n        value.forEach((t, i) => {\r\n            $(\"<span>\").addClass(FILTER_BUILDER_ITEM_TEXT_PART_CLASS).text(t).appendTo($container);\r\n            if (i !== lastItemIndex) {\r\n                $(\"<span>\").addClass(FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS).text(customOperation && customOperation.valueSeparator ? customOperation.valueSeparator : \"|\").addClass(FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS).appendTo($container)\r\n            }\r\n        })\r\n    } else if (value) {\r\n        $container.text(value)\r\n    } else {\r\n        $container.text(messageLocalization.format(\"dxFilterBuilder-enterValueText\"))\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_custom_operations.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isGroup,\r\n    isCondition,\r\n    getFilterExpression,\r\n    renderValueText\r\n} from \"../filter_builder/utils\";\r\nimport errors from \"../widget/ui.errors\";\r\n\r\nfunction baseOperation(grid) {\r\n    var getFullText = function(itemText, parentText) {\r\n        return parentText ? parentText + \"/\" + itemText : itemText\r\n    };\r\n    var headerFilterController = grid && grid.getController(\"headerFilter\");\r\n    return {\r\n        dataTypes: [\"string\", \"date\", \"datetime\", \"number\", \"boolean\", \"object\"],\r\n        calculateFilterExpression: function(filterValue, field, fields) {\r\n            var result = [];\r\n            var lastIndex = filterValue.length - 1;\r\n            filterValue && filterValue.forEach((function(value, index) {\r\n                if (isCondition(value) || isGroup(value)) {\r\n                    var filterExpression = getFilterExpression(value, fields, [], \"headerFilter\");\r\n                    result.push(filterExpression)\r\n                } else {\r\n                    result.push(getFilterExpression([field.dataField, \"=\", value], fields, [], \"headerFilter\"))\r\n                }\r\n                index !== lastIndex && result.push(\"or\")\r\n            }));\r\n            if (1 === result.length) {\r\n                result = result[0]\r\n            }\r\n            return result\r\n        },\r\n        editorTemplate: function(conditionInfo, container) {\r\n            var div = $(\"<div>\").addClass(\"dx-filterbuilder-item-value-text\").appendTo(container);\r\n            var column = extend(true, {}, grid.columnOption(conditionInfo.field.dataField));\r\n            renderValueText(div, conditionInfo.text && conditionInfo.text.split(\"|\"));\r\n            column.filterType = \"include\";\r\n            column.filterValues = conditionInfo.value ? conditionInfo.value.slice() : [];\r\n            headerFilterController.showHeaderFilterMenuBase({\r\n                columnElement: div,\r\n                column: column,\r\n                apply: function() {\r\n                    value = this.filterValues, void conditionInfo.setValue(value);\r\n                    var value;\r\n                    headerFilterController.hideHeaderFilterMenu();\r\n                    conditionInfo.closeEditor()\r\n                },\r\n                onHidden: function() {\r\n                    conditionInfo.closeEditor()\r\n                },\r\n                isFilterBuilder: true\r\n            });\r\n            return container\r\n        },\r\n        customizeText: function(fieldInfo, options) {\r\n            options = options || {};\r\n            var value = fieldInfo.value;\r\n            var column = grid.columnOption(fieldInfo.field.dataField);\r\n            var headerFilter = column && column.headerFilter;\r\n            var lookup = column && column.lookup;\r\n            var values = options.values || [value];\r\n            if (headerFilter && headerFilter.dataSource || lookup && lookup.dataSource) {\r\n                var result = new Deferred;\r\n                var itemsDeferred = options.items || new Deferred;\r\n                if (!options.items) {\r\n                    column = extend({}, column, {\r\n                        filterType: \"include\",\r\n                        filterValues: values\r\n                    });\r\n                    var dataSourceOptions = headerFilterController.getDataSource(column);\r\n                    dataSourceOptions.paginate = false;\r\n                    var dataSource = new DataSource(dataSourceOptions);\r\n                    var key = dataSource.store().key();\r\n                    if (key) {\r\n                        var {\r\n                            values: _values\r\n                        } = options;\r\n                        if (_values && _values.length > 1) {\r\n                            var filter = _values.reduce((result, value) => {\r\n                                if (result.length) {\r\n                                    result.push(\"or\")\r\n                                }\r\n                                result.push([key, \"=\", value]);\r\n                                return result\r\n                            }, []);\r\n                            dataSource.filter(filter)\r\n                        } else {\r\n                            dataSource.filter([key, \"=\", fieldInfo.value])\r\n                        }\r\n                    } else if (fieldInfo.field.calculateDisplayValue) {\r\n                        errors.log(\"W1017\")\r\n                    }\r\n                    options.items = itemsDeferred;\r\n                    dataSource.load().done(itemsDeferred.resolve)\r\n                }\r\n                itemsDeferred.done(items => {\r\n                    var index = values.indexOf(fieldInfo.value);\r\n                    result.resolve(function getSelectedItemsTexts(items, parentText) {\r\n                        var result = [];\r\n                        items.forEach((function(item) {\r\n                            if (item.items) {\r\n                                var selectedItemsTexts = getSelectedItemsTexts(item.items, getFullText(item.text, parentText));\r\n                                result = result.concat(selectedItemsTexts)\r\n                            }\r\n                            item.selected && result.push(getFullText(item.text, parentText))\r\n                        }));\r\n                        return result\r\n                    }(items)[index])\r\n                });\r\n                return result\r\n            } else {\r\n                var text = headerFilterController.getHeaderItemText(value, column, 0, grid.option(\"headerFilter\"));\r\n                return text\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function anyOf(grid) {\r\n    return extend(baseOperation(grid), {\r\n        name: \"anyof\",\r\n        icon: \"selectall\",\r\n        caption: messageLocalization.format(\"dxFilterBuilder-filterOperationAnyOf\")\r\n    })\r\n}\r\nexport function noneOf(grid) {\r\n    var baseOp = baseOperation(grid);\r\n    return extend({}, baseOp, {\r\n        calculateFilterExpression: function(filterValue, field, fields) {\r\n            var baseFilter = baseOp.calculateFilterExpression(filterValue, field, fields);\r\n            if (!baseFilter || 0 === baseFilter.length) {\r\n                return null\r\n            }\r\n            return \"!\" === baseFilter[0] ? baseFilter : [\"!\", baseFilter]\r\n        },\r\n        name: \"noneof\",\r\n        icon: \"unselectall\",\r\n        caption: messageLocalization.format(\"dxFilterBuilder-filterOperationNoneOf\")\r\n    })\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_sync.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    getDefaultOperation,\r\n    getMatchedConditions,\r\n    syncFilters,\r\n    removeFieldConditionsFromFilter,\r\n    addItem,\r\n    getNormalizedFilter,\r\n    getFilterExpression,\r\n    filterHasField\r\n} from \"../filter_builder/utils\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport {\r\n    anyOf,\r\n    noneOf\r\n} from \"./ui.grid_core.filter_custom_operations\";\r\nvar FILTER_ROW_OPERATIONS = [\"=\", \"<>\", \"<\", \"<=\", \">\", \">=\", \"notcontains\", \"contains\", \"startswith\", \"endswith\", \"between\"];\r\nvar FILTER_TYPES_INCLUDE = \"include\";\r\nvar FILTER_TYPES_EXCLUDE = \"exclude\";\r\n\r\nfunction getColumnIdentifier(column) {\r\n    return column.name || column.dataField\r\n}\r\n\r\nfunction checkForErrors(columns) {\r\n    columns.forEach(column => {\r\n        var identifier = getColumnIdentifier(column);\r\n        if (!isDefined(identifier) && column.allowFiltering) {\r\n            throw new errors.Error(\"E1049\", column.caption)\r\n        }\r\n    })\r\n}\r\nvar FilterSyncController = modules.Controller.inherit(function() {\r\n    var getEmptyFilterValues = function() {\r\n        return {\r\n            filterType: FILTER_TYPES_INCLUDE,\r\n            filterValues: void 0\r\n        }\r\n    };\r\n    var canSyncHeaderFilterWithFilterRow = function(column) {\r\n        var filterValues = column.filterValues || [];\r\n        return !filterUtils.getGroupInterval(column) && !(column.headerFilter && column.headerFilter.dataSource) || 1 === filterValues.length && null === filterValues[0]\r\n    };\r\n    var getConditionFromFilterRow = function(column) {\r\n        var value = column.filterValue;\r\n        if (isDefined(value)) {\r\n            var operation = column.selectedFilterOperation || column.defaultFilterOperation || getDefaultOperation(column);\r\n            var filter = [getColumnIdentifier(column), operation, column.filterValue];\r\n            return filter\r\n        } else {\r\n            return null\r\n        }\r\n    };\r\n    var getConditionFromHeaderFilter = function(column) {\r\n        var selectedOperation;\r\n        var value;\r\n        var filterValues = column.filterValues;\r\n        if (!filterValues) {\r\n            return null\r\n        }\r\n        if (1 === filterValues.length && canSyncHeaderFilterWithFilterRow(column) && !Array.isArray(filterValues[0])) {\r\n            column.filterType === FILTER_TYPES_EXCLUDE ? selectedOperation = \"<>\" : selectedOperation = \"=\";\r\n            value = filterValues[0]\r\n        } else {\r\n            column.filterType === FILTER_TYPES_EXCLUDE ? selectedOperation = \"noneof\" : selectedOperation = \"anyof\";\r\n            value = filterValues\r\n        }\r\n        return [getColumnIdentifier(column), selectedOperation, value]\r\n    };\r\n    var updateHeaderFilterCondition = function(columnsController, column, headerFilterCondition) {\r\n        var headerFilter = function(headerFilterCondition, column) {\r\n            if (!headerFilterCondition) {\r\n                return getEmptyFilterValues()\r\n            }\r\n            var filterType;\r\n            var selectedFilterOperation = headerFilterCondition[1];\r\n            var value = headerFilterCondition[2];\r\n            var hasArrayValue = Array.isArray(value);\r\n            if (!hasArrayValue) {\r\n                if (!canSyncHeaderFilterWithFilterRow(column)) {\r\n                    return getEmptyFilterValues()\r\n                }\r\n            }\r\n            switch (selectedFilterOperation) {\r\n                case \"anyof\":\r\n                case \"=\":\r\n                    filterType = FILTER_TYPES_INCLUDE;\r\n                    break;\r\n                case \"noneof\":\r\n                case \"<>\":\r\n                    filterType = FILTER_TYPES_EXCLUDE;\r\n                    break;\r\n                default:\r\n                    return getEmptyFilterValues()\r\n            }\r\n            return {\r\n                filterType: filterType,\r\n                filterValues: hasArrayValue ? value : [value]\r\n            }\r\n        }(headerFilterCondition, column);\r\n        columnsController.columnOption(getColumnIdentifier(column), headerFilter)\r\n    };\r\n    var updateFilterRowCondition = function(columnsController, column, condition) {\r\n        var filterRowOptions;\r\n        var selectedFilterOperation = null === condition || void 0 === condition ? void 0 : condition[1];\r\n        var filterValue = null === condition || void 0 === condition ? void 0 : condition[2];\r\n        var filterOperations = column.filterOperations || column.defaultFilterOperations;\r\n        if ((!filterOperations || filterOperations.indexOf(selectedFilterOperation) >= 0 || selectedFilterOperation === column.defaultFilterOperation) && FILTER_ROW_OPERATIONS.indexOf(selectedFilterOperation) >= 0 && null !== filterValue) {\r\n            if (selectedFilterOperation === column.defaultFilterOperation && !isDefined(column.selectedFilterOperation)) {\r\n                selectedFilterOperation = column.selectedFilterOperation\r\n            }\r\n            filterRowOptions = {\r\n                filterValue: filterValue,\r\n                selectedFilterOperation: selectedFilterOperation\r\n            }\r\n        } else {\r\n            filterRowOptions = {\r\n                filterValue: void 0,\r\n                selectedFilterOperation: void 0\r\n            }\r\n        }\r\n        columnsController.columnOption(getColumnIdentifier(column), filterRowOptions)\r\n    };\r\n    return {\r\n        syncFilterValue: function() {\r\n            var that = this;\r\n            var columnsController = that.getController(\"columns\");\r\n            var columns = columnsController.getFilteringColumns();\r\n            this._skipSyncColumnOptions = true;\r\n            columns.forEach((function(column) {\r\n                var filterConditions = getMatchedConditions(that.option(\"filterValue\"), getColumnIdentifier(column));\r\n                if (1 === filterConditions.length) {\r\n                    var filterCondition = filterConditions[0];\r\n                    updateHeaderFilterCondition(columnsController, column, filterCondition);\r\n                    updateFilterRowCondition(columnsController, column, filterCondition)\r\n                } else {\r\n                    isDefined(column.filterValues) && updateHeaderFilterCondition(columnsController, column);\r\n                    isDefined(column.filterValue) && updateFilterRowCondition(columnsController, column)\r\n                }\r\n            }));\r\n            this._skipSyncColumnOptions = false\r\n        },\r\n        _initSync: function() {\r\n            var columns = this.getController(\"columns\").getColumns();\r\n            var dataController = this.getController(\"data\");\r\n            var pageIndex = dataController.pageIndex();\r\n            checkForErrors(columns);\r\n            if (!this.option(\"filterValue\")) {\r\n                var filteringColumns = this.getController(\"columns\").getFilteringColumns();\r\n                var filterValue = this.getFilterValueFromColumns(filteringColumns);\r\n                this.option(\"filterValue\", filterValue)\r\n            }\r\n            this.syncFilterValue();\r\n            dataController.pageIndex(pageIndex)\r\n        },\r\n        init: function() {\r\n            var dataController = this.getController(\"data\");\r\n            if (dataController.isFilterSyncActive()) {\r\n                if (this.getController(\"columns\").isAllDataTypesDefined()) {\r\n                    this._initSync()\r\n                } else {\r\n                    dataController.dataSourceChanged.add(() => this._initSync())\r\n                }\r\n            }\r\n        },\r\n        _getSyncFilterRow: function(filterValue, column) {\r\n            var filter = getConditionFromFilterRow(column);\r\n            if (isDefined(filter)) {\r\n                return syncFilters(filterValue, filter)\r\n            } else {\r\n                return removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(column))\r\n            }\r\n        },\r\n        _getSyncHeaderFilter: function(filterValue, column) {\r\n            var filter = getConditionFromHeaderFilter(column);\r\n            if (filter) {\r\n                return syncFilters(filterValue, filter)\r\n            } else {\r\n                return removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(column))\r\n            }\r\n        },\r\n        getFilterValueFromColumns: function(columns) {\r\n            if (!this.getController(\"data\").isFilterSyncActive()) {\r\n                return null\r\n            }\r\n            var filterValue = [\"and\"];\r\n            columns && columns.forEach(column => {\r\n                var headerFilter = getConditionFromHeaderFilter(column);\r\n                var filterRow = getConditionFromFilterRow(column);\r\n                headerFilter && addItem(headerFilter, filterValue);\r\n                filterRow && addItem(filterRow, filterValue)\r\n            });\r\n            return getNormalizedFilter(filterValue)\r\n        },\r\n        syncFilterRow: function(column, value) {\r\n            this.option(\"filterValue\", this._getSyncFilterRow(this.option(\"filterValue\"), column))\r\n        },\r\n        syncHeaderFilter: function(column) {\r\n            this.option(\"filterValue\", this._getSyncHeaderFilter(this.option(\"filterValue\"), column))\r\n        },\r\n        getCustomFilterOperations: function() {\r\n            var filterBuilderCustomOperations = this.option(\"filterBuilder.customOperations\") || [];\r\n            return [anyOf(this.component), noneOf(this.component)].concat(filterBuilderCustomOperations)\r\n        },\r\n        publicMethods: function() {\r\n            return [\"getCustomFilterOperations\"]\r\n        }\r\n    }\r\n}());\r\nvar DataControllerFilterSyncExtender = {\r\n    isFilterSyncActive: function() {\r\n        var filterSyncEnabledValue = this.option(\"filterSyncEnabled\");\r\n        return \"auto\" === filterSyncEnabledValue ? this.option(\"filterPanel.visible\") : filterSyncEnabledValue\r\n    },\r\n    skipCalculateColumnFilters: function() {\r\n        return isDefined(this.option(\"filterValue\")) && this.isFilterSyncActive()\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (false === this.option(\"filterPanel.filterEnabled\")) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this.getController(\"columns\").getFilteringColumns();\r\n        var filterValue = this.option(\"filterValue\");\r\n        if (this.isFilterSyncActive()) {\r\n            var currentColumn = this.getController(\"headerFilter\").getCurrentColumn();\r\n            if (currentColumn && filterValue) {\r\n                filterValue = removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(currentColumn))\r\n            }\r\n        }\r\n        var customOperations = this.getController(\"filterSync\").getCustomFilterOperations();\r\n        var calculatedFilterValue = getFilterExpression(filterValue, columns, customOperations, \"filterBuilder\");\r\n        if (calculatedFilterValue) {\r\n            filters.push(calculatedFilterValue)\r\n        }\r\n        return gridCoreUtils.combineFilters(filters)\r\n    },\r\n    _parseColumnPropertyName: function(fullName) {\r\n        var matched = fullName.match(/.*\\.(.*)/);\r\n        if (matched) {\r\n            return matched[1]\r\n        } else {\r\n            return null\r\n        }\r\n    },\r\n    clearFilter: function(filterName) {\r\n        this.component.beginUpdate();\r\n        if (arguments.length > 0) {\r\n            if (\"filterValue\" === filterName) {\r\n                this.option(\"filterValue\", null)\r\n            }\r\n            this.callBase(filterName)\r\n        } else {\r\n            this.option(\"filterValue\", null);\r\n            this.callBase()\r\n        }\r\n        this.component.endUpdate()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterValue\":\r\n                this._applyFilter();\r\n                this.isFilterSyncActive() && this.getController(\"filterSync\").syncFilterValue();\r\n                args.handled = true;\r\n                break;\r\n            case \"filterSyncEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            case \"columns\":\r\n                if (this.isFilterSyncActive()) {\r\n                    var column = this.getController(\"columns\").getColumnByPath(args.fullName);\r\n                    var filterSyncController = this.getController(\"filterSync\");\r\n                    if (column && !filterSyncController._skipSyncColumnOptions) {\r\n                        var propertyName = this._parseColumnPropertyName(args.fullName);\r\n                        filterSyncController._skipSyncColumnOptions = true;\r\n                        if (\"filterType\" === propertyName) {\r\n                            if (FILTER_TYPES_EXCLUDE === args.value || FILTER_TYPES_EXCLUDE === args.previousValue) {\r\n                                filterSyncController.syncHeaderFilter(column)\r\n                            }\r\n                        } else if (\"filterValues\" === propertyName) {\r\n                            filterSyncController.syncHeaderFilter(column)\r\n                        } else if ([\"filterValue\", \"selectedFilterOperation\"].indexOf(propertyName) > -1) {\r\n                            filterSyncController.syncFilterRow(column, column.filterValue)\r\n                        }\r\n                        filterSyncController._skipSyncColumnOptions = false\r\n                    }\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n};\r\nvar ColumnHeadersViewFilterSyncExtender = {\r\n    _isHeaderFilterEmpty: function(column) {\r\n        if (this.getController(\"data\").isFilterSyncActive()) {\r\n            return !filterHasField(this.option(\"filterValue\"), getColumnIdentifier(column))\r\n        }\r\n        return this.callBase(column)\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return !this.getController(\"data\").isFilterSyncActive()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"filterValue\" === args.name) {\r\n            this._updateHeaderFilterIndicators()\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\nexport var filterSyncModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterValue: null,\r\n            filterSyncEnabled: \"auto\"\r\n        }\r\n    },\r\n    controllers: {\r\n        filterSync: FilterSyncController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterSyncExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterSyncExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_sync.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterSyncModule\r\n} from \"../grid_core/ui.grid_core.filter_sync\";\r\ncore.registerModule(\"filterSync\", filterSyncModule);\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport Class from \"../../core/class\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport TreeView from \"../tree_view\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../overlay/utils\";\r\nimport EditorFactoryMixin from \"../shared/ui.editor_factory_mixin\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    renderValueText,\r\n    getFilterExpression as _getFilterExpression,\r\n    getNormalizedFilter,\r\n    getNormalizedFields,\r\n    getMergedOperations,\r\n    convertToInnerStructure,\r\n    getGroupCriteria,\r\n    isGroup,\r\n    isCondition,\r\n    removeItem,\r\n    createEmptyGroup,\r\n    addItem,\r\n    createCondition,\r\n    getGroupMenuItem,\r\n    setGroupValue,\r\n    getCustomOperation,\r\n    getAvailableOperations,\r\n    getOperationFromAvailable,\r\n    getOperationValue,\r\n    updateConditionByOperation,\r\n    getItems,\r\n    getField,\r\n    getCaptionWithParents,\r\n    getDefaultOperation,\r\n    getGroupValue,\r\n    getCurrentLookupValueText,\r\n    getCurrentValueText\r\n} from \"./utils\";\r\nvar FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nvar FILTER_BUILDER_GROUP_CLASS = FILTER_BUILDER_CLASS + \"-group\";\r\nvar FILTER_BUILDER_GROUP_ITEM_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-item\";\r\nvar FILTER_BUILDER_GROUP_CONTENT_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-content\";\r\nvar FILTER_BUILDER_GROUP_OPERATIONS_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-operations\";\r\nvar FILTER_BUILDER_GROUP_OPERATION_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-operation\";\r\nvar FILTER_BUILDER_ACTION_CLASS = FILTER_BUILDER_CLASS + \"-action\";\r\nvar FILTER_BUILDER_IMAGE_CLASS = FILTER_BUILDER_ACTION_CLASS + \"-icon\";\r\nvar FILTER_BUILDER_IMAGE_ADD_CLASS = \"dx-icon-plus\";\r\nvar FILTER_BUILDER_IMAGE_REMOVE_CLASS = \"dx-icon-remove\";\r\nvar FILTER_BUILDER_ITEM_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-text\";\r\nvar FILTER_BUILDER_ITEM_FIELD_CLASS = FILTER_BUILDER_CLASS + \"-item-field\";\r\nvar FILTER_BUILDER_ITEM_OPERATION_CLASS = FILTER_BUILDER_CLASS + \"-item-operation\";\r\nvar FILTER_BUILDER_ITEM_VALUE_CLASS = FILTER_BUILDER_CLASS + \"-item-value\";\r\nvar FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-item-value-text\";\r\nvar FILTER_BUILDER_OVERLAY_CLASS = FILTER_BUILDER_CLASS + \"-overlay\";\r\nvar FILTER_BUILDER_FILTER_OPERATIONS_CLASS = FILTER_BUILDER_CLASS + \"-operations\";\r\nvar FILTER_BUILDER_FIELDS_CLASS = FILTER_BUILDER_CLASS + \"-fields\";\r\nvar FILTER_BUILDER_ADD_CONDITION_CLASS = FILTER_BUILDER_CLASS + \"-add-condition\";\r\nvar ACTIVE_CLASS = \"dx-state-active\";\r\nvar FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS = FILTER_BUILDER_CLASS + \"-menu-custom-operation\";\r\nvar SOURCE = \"filterBuilder\";\r\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nvar TAB_KEY = \"tab\";\r\nvar ENTER_KEY = \"enter\";\r\nvar ESCAPE_KEY = \"escape\";\r\nvar ACTIONS = [{\r\n    name: \"onEditorPreparing\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onEditorPrepared\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onValueChanged\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"]\r\n    }\r\n}];\r\nvar OPERATORS = {\r\n    and: \"and\",\r\n    or: \"or\",\r\n    notAnd: \"!and\",\r\n    notOr: \"!or\"\r\n};\r\nvar EditorFactory = Class.inherit(EditorFactoryMixin);\r\nvar FilterBuilder = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onEditorPreparing: null,\r\n            onEditorPrepared: null,\r\n            onValueChanged: null,\r\n            fields: [],\r\n            groupOperations: [\"and\", \"or\", \"notAnd\", \"notOr\"],\r\n            maxGroupLevel: void 0,\r\n            value: null,\r\n            allowHierarchicalFields: false,\r\n            groupOperationDescriptions: {\r\n                and: messageLocalization.format(\"dxFilterBuilder-and\"),\r\n                or: messageLocalization.format(\"dxFilterBuilder-or\"),\r\n                notAnd: messageLocalization.format(\"dxFilterBuilder-notAnd\"),\r\n                notOr: messageLocalization.format(\"dxFilterBuilder-notOr\")\r\n            },\r\n            customOperations: [],\r\n            closePopupOnTargetScroll: true,\r\n            filterOperationDescriptions: {\r\n                between: messageLocalization.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                equal: messageLocalization.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                notEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                lessThan: messageLocalization.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                lessThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                greaterThan: messageLocalization.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                greaterThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                startsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                contains: messageLocalization.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                notContains: messageLocalization.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                endsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n            }\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"closePopupOnTargetScroll\":\r\n                break;\r\n            case \"onEditorPreparing\":\r\n            case \"onEditorPrepared\":\r\n            case \"onValueChanged\":\r\n                this._initActions();\r\n                break;\r\n            case \"customOperations\":\r\n                this._initCustomOperations();\r\n                this._invalidate();\r\n                break;\r\n            case \"fields\":\r\n            case \"maxGroupLevel\":\r\n            case \"groupOperations\":\r\n            case \"allowHierarchicalFields\":\r\n            case \"groupOperationDescriptions\":\r\n            case \"filterOperationDescriptions\":\r\n                this._invalidate();\r\n                break;\r\n            case \"value\":\r\n                if (args.value !== args.previousValue) {\r\n                    var disableInvalidateForValue = this._disableInvalidateForValue;\r\n                    if (!disableInvalidateForValue) {\r\n                        this._initModel();\r\n                        this._invalidate()\r\n                    }\r\n                    this._disableInvalidateForValue = false;\r\n                    this.executeAction(\"onValueChanged\", {\r\n                        value: args.value,\r\n                        previousValue: args.previousValue\r\n                    });\r\n                    this._disableInvalidateForValue = disableInvalidateForValue\r\n                }\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getFilterExpression: function() {\r\n        var fields = this._getNormalizedFields();\r\n        var value = extend(true, [], this._model);\r\n        return _getFilterExpression(getNormalizedFilter(value), fields, this._customOperations, SOURCE)\r\n    },\r\n    _getNormalizedFields: function() {\r\n        return getNormalizedFields(this.option(\"fields\"))\r\n    },\r\n    _updateFilter: function() {\r\n        this._disableInvalidateForValue = true;\r\n        var value = extend(true, [], this._model);\r\n        var normalizedValue = getNormalizedFilter(value);\r\n        var oldValue = getNormalizedFilter(this._getModel(this.option(\"value\")));\r\n        if (JSON.stringify(oldValue) !== JSON.stringify(normalizedValue)) {\r\n            this.option(\"value\", normalizedValue)\r\n        }\r\n        this._disableInvalidateForValue = false;\r\n        this._fireContentReadyAction()\r\n    },\r\n    _init: function() {\r\n        this._initCustomOperations();\r\n        this._initModel();\r\n        this._initEditorFactory();\r\n        this._initActions();\r\n        this.callBase()\r\n    },\r\n    _initEditorFactory: function() {\r\n        this._editorFactory = new EditorFactory\r\n    },\r\n    _initCustomOperations: function() {\r\n        this._customOperations = getMergedOperations(this.option(\"customOperations\"), this.option(\"filterOperationDescriptions.between\"), this)\r\n    },\r\n    _getDefaultGroupOperation: function() {\r\n        var _this$option$, _this$option;\r\n        return null !== (_this$option$ = null === (_this$option = this.option(\"groupOperations\")) || void 0 === _this$option ? void 0 : _this$option[0]) && void 0 !== _this$option$ ? _this$option$ : OPERATORS.and\r\n    },\r\n    _getModel: function(value) {\r\n        return convertToInnerStructure(value, this._customOperations, this._getDefaultGroupOperation())\r\n    },\r\n    _initModel: function() {\r\n        this._model = this._getModel(this.option(\"value\"))\r\n    },\r\n    _initActions: function() {\r\n        var that = this;\r\n        that._actions = {};\r\n        ACTIONS.forEach((function(action) {\r\n            var actionConfig = extend({}, action.config);\r\n            that._actions[action.name] = that._createActionByOption(action.name, actionConfig)\r\n        }))\r\n    },\r\n    executeAction: function(actionName, options) {\r\n        var action = this._actions[actionName];\r\n        return action && action(options)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(FILTER_BUILDER_CLASS);\r\n        this.callBase();\r\n        this._createGroupElementByCriteria(this._model).appendTo(this.$element())\r\n    },\r\n    _createConditionElement: function(condition, parent) {\r\n        return $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CLASS).append(this._createConditionItem(condition, parent))\r\n    },\r\n    _createGroupElementByCriteria: function(criteria, parent) {\r\n        var groupLevel = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;\r\n        var $group = this._createGroupElement(criteria, parent, groupLevel);\r\n        var $groupContent = $group.find(\".\" + FILTER_BUILDER_GROUP_CONTENT_CLASS);\r\n        var groupCriteria = getGroupCriteria(criteria);\r\n        for (var i = 0; i < groupCriteria.length; i++) {\r\n            var innerCriteria = groupCriteria[i];\r\n            if (isGroup(innerCriteria)) {\r\n                this._createGroupElementByCriteria(innerCriteria, criteria, groupLevel + 1).appendTo($groupContent)\r\n            } else if (isCondition(innerCriteria)) {\r\n                this._createConditionElement(innerCriteria, criteria).appendTo($groupContent)\r\n            }\r\n        }\r\n        return $group\r\n    },\r\n    _createGroupElement: function(criteria, parent, groupLevel) {\r\n        var $groupItem = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_ITEM_CLASS);\r\n        var $groupContent = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CONTENT_CLASS);\r\n        var $group = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CLASS).append($groupItem).append($groupContent);\r\n        if (null != parent) {\r\n            this._createRemoveButton(() => {\r\n                removeItem(parent, criteria);\r\n                $group.remove();\r\n                this._updateFilter()\r\n            }).appendTo($groupItem)\r\n        }\r\n        this._createGroupOperationButton(criteria).appendTo($groupItem);\r\n        this._createAddButton(() => {\r\n            var newGroup = createEmptyGroup(this._getDefaultGroupOperation());\r\n            addItem(newGroup, criteria);\r\n            this._createGroupElement(newGroup, criteria, groupLevel + 1).appendTo($groupContent);\r\n            this._updateFilter()\r\n        }, () => {\r\n            var field = this.option(\"fields\")[0];\r\n            var newCondition = createCondition(field, this._customOperations);\r\n            addItem(newCondition, criteria);\r\n            this._createConditionElement(newCondition, criteria).appendTo($groupContent);\r\n            this._updateFilter()\r\n        }, groupLevel).appendTo($groupItem);\r\n        return $group\r\n    },\r\n    _createButton: function(caption) {\r\n        return $(\"<div>\").text(caption)\r\n    },\r\n    _createGroupOperationButton: function(criteria) {\r\n        var groupOperations = this._getGroupOperations(criteria);\r\n        var groupMenuItem = getGroupMenuItem(criteria, groupOperations);\r\n        var caption = groupMenuItem.text;\r\n        var $operationButton = groupOperations && groupOperations.length < 2 ? this._createButton(caption).addClass(DISABLED_STATE_CLASS) : this._createButtonWithMenu({\r\n            caption: caption,\r\n            menu: {\r\n                items: groupOperations,\r\n                displayExpr: \"text\",\r\n                keyExpr: \"value\",\r\n                onItemClick: e => {\r\n                    if (groupMenuItem !== e.itemData) {\r\n                        setGroupValue(criteria, e.itemData.value);\r\n                        $operationButton.text(e.itemData.text);\r\n                        groupMenuItem = e.itemData;\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(groupMenuItem)\r\n                },\r\n                cssClass: FILTER_BUILDER_GROUP_OPERATIONS_CLASS\r\n            }\r\n        });\r\n        return $operationButton.addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_GROUP_OPERATION_CLASS).attr(\"tabindex\", 0)\r\n    },\r\n    _createButtonWithMenu: function(options) {\r\n        var that = this;\r\n        var removeMenu = function() {\r\n            that.$element().find(\".\" + ACTIVE_CLASS).removeClass(ACTIVE_CLASS);\r\n            that.$element().find(\".dx-overlay .dx-treeview\").remove();\r\n            that.$element().find(\".dx-overlay\").remove()\r\n        };\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var position = rtlEnabled ? \"right\" : \"left\";\r\n        var $button = this._createButton(options.caption);\r\n        extend(options.menu, {\r\n            focusStateEnabled: true,\r\n            selectionMode: \"single\",\r\n            onItemClick: (handler = options.menu.onItemClick, function(e) {\r\n                handler(e);\r\n                if (\"dxclick\" === e.event.type) {\r\n                    removeMenu()\r\n                }\r\n            }),\r\n            onHiding: function(e) {\r\n                $button.removeClass(ACTIVE_CLASS)\r\n            },\r\n            position: {\r\n                my: position + \" top\",\r\n                at: position + \" bottom\",\r\n                offset: \"0 1\",\r\n                of: $button,\r\n                collision: \"flip\"\r\n            },\r\n            animation: null,\r\n            onHidden: function() {\r\n                removeMenu()\r\n            },\r\n            cssClass: FILTER_BUILDER_OVERLAY_CLASS + \" \" + options.menu.cssClass,\r\n            rtlEnabled: rtlEnabled\r\n        });\r\n        var handler;\r\n        options.popup = {\r\n            onShown: function(info) {\r\n                var treeViewElement = $(info.component.content()).find(\".dx-treeview\");\r\n                var treeView = treeViewElement.dxTreeView(\"instance\");\r\n                eventsEngine.on(treeViewElement, \"keyup keydown\", (function(e) {\r\n                    var keyName = normalizeKeyName(e);\r\n                    if (\"keydown\" === e.type && keyName === TAB_KEY || \"keyup\" === e.type && (keyName === ESCAPE_KEY || keyName === ENTER_KEY)) {\r\n                        info.component.hide();\r\n                        eventsEngine.trigger(options.menu.position.of, \"focus\")\r\n                    }\r\n                }));\r\n                treeView.focus();\r\n                treeView.option(\"focusedElement\", null)\r\n            }\r\n        };\r\n        this._subscribeOnClickAndEnterKey($button, (function() {\r\n            removeMenu();\r\n            that._createPopupWithTreeView(options, that.$element());\r\n            $button.addClass(ACTIVE_CLASS)\r\n        }));\r\n        return $button\r\n    },\r\n    _hasValueButton: function(condition) {\r\n        var customOperation = getCustomOperation(this._customOperations, condition[1]);\r\n        return customOperation ? false !== customOperation.hasValue : null !== condition[2]\r\n    },\r\n    _createOperationButtonWithMenu: function(condition, field) {\r\n        var that = this;\r\n        var availableOperations = getAvailableOperations(field, this.option(\"filterOperationDescriptions\"), this._customOperations);\r\n        var currentOperation = getOperationFromAvailable(getOperationValue(condition), availableOperations);\r\n        var $operationButton = this._createButtonWithMenu({\r\n            caption: currentOperation.text,\r\n            menu: {\r\n                items: availableOperations,\r\n                displayExpr: \"text\",\r\n                onItemRendered: function(e) {\r\n                    e.itemData.isCustom && $(e.itemElement).addClass(FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS)\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(currentOperation)\r\n                },\r\n                onItemClick: e => {\r\n                    if (currentOperation !== e.itemData) {\r\n                        currentOperation = e.itemData;\r\n                        updateConditionByOperation(condition, currentOperation.value, that._customOperations);\r\n                        var $valueButton = $operationButton.siblings().filter(\".\" + FILTER_BUILDER_ITEM_VALUE_CLASS);\r\n                        if (that._hasValueButton(condition)) {\r\n                            if (0 !== $valueButton.length) {\r\n                                $valueButton.remove()\r\n                            }\r\n                            that._createValueButton(condition, field).appendTo($operationButton.parent())\r\n                        } else {\r\n                            $valueButton.remove()\r\n                        }\r\n                        $operationButton.html(currentOperation.text);\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                cssClass: FILTER_BUILDER_FILTER_OPERATIONS_CLASS\r\n            }\r\n        }).addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_OPERATION_CLASS).attr(\"tabindex\", 0);\r\n        return $operationButton\r\n    },\r\n    _createOperationAndValueButtons: function(condition, field, $item) {\r\n        this._createOperationButtonWithMenu(condition, field).appendTo($item);\r\n        if (this._hasValueButton(condition)) {\r\n            this._createValueButton(condition, field).appendTo($item)\r\n        }\r\n    },\r\n    _createFieldButtonWithMenu: function(fields, condition, field) {\r\n        var that = this;\r\n        var allowHierarchicalFields = this.option(\"allowHierarchicalFields\");\r\n        var items = getItems(fields, allowHierarchicalFields);\r\n        var item = getField(field.name || field.dataField, items);\r\n        var getFullCaption = function(item, items) {\r\n            return allowHierarchicalFields ? getCaptionWithParents(item, items) : item.caption\r\n        };\r\n        var $fieldButton = this._createButtonWithMenu({\r\n            caption: getFullCaption(item, items),\r\n            menu: {\r\n                items: items,\r\n                dataStructure: \"plain\",\r\n                keyExpr: \"id\",\r\n                parentId: \"parentId\",\r\n                displayExpr: \"caption\",\r\n                onItemClick: e => {\r\n                    if (item !== e.itemData) {\r\n                        item = e.itemData;\r\n                        condition[0] = item.name || item.dataField;\r\n                        condition[2] = \"object\" === item.dataType ? null : \"\";\r\n                        updateConditionByOperation(condition, getDefaultOperation(item), that._customOperations);\r\n                        $fieldButton.siblings().filter(\".\" + FILTER_BUILDER_ITEM_TEXT_CLASS).remove();\r\n                        that._createOperationAndValueButtons(condition, item, $fieldButton.parent());\r\n                        var caption = getFullCaption(item, e.component.option(\"items\"));\r\n                        $fieldButton.html(caption);\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(item)\r\n                },\r\n                cssClass: FILTER_BUILDER_FIELDS_CLASS\r\n            }\r\n        }).addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_FIELD_CLASS).attr(\"tabindex\", 0);\r\n        return $fieldButton\r\n    },\r\n    _createConditionItem: function(condition, parent) {\r\n        var $item = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_ITEM_CLASS);\r\n        var fields = this._getNormalizedFields();\r\n        var field = getField(condition[0], fields);\r\n        this._createRemoveButton(() => {\r\n            removeItem(parent, condition);\r\n            var isSingleChild = 1 === $item.parent().children().length;\r\n            if (isSingleChild) {\r\n                $item.parent().remove()\r\n            } else {\r\n                $item.remove()\r\n            }\r\n            this._updateFilter()\r\n        }).appendTo($item);\r\n        this._createFieldButtonWithMenu(fields, condition, field).appendTo($item);\r\n        this._createOperationAndValueButtons(condition, field, $item);\r\n        return $item\r\n    },\r\n    _getGroupOperations: function(criteria) {\r\n        var groupOperations = this.option(\"groupOperations\");\r\n        var groupOperationDescriptions = this.option(\"groupOperationDescriptions\");\r\n        if (!groupOperations || !groupOperations.length) {\r\n            groupOperations = [getGroupValue(criteria).replace(\"!\", \"not\")]\r\n        }\r\n        return groupOperations.map(operation => ({\r\n            text: groupOperationDescriptions[operation],\r\n            value: OPERATORS[operation]\r\n        }))\r\n    },\r\n    _createRemoveButton: function(handler) {\r\n        var $removeButton = $(\"<div>\").addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(FILTER_BUILDER_IMAGE_REMOVE_CLASS).addClass(FILTER_BUILDER_ACTION_CLASS).attr(\"tabindex\", 0);\r\n        this._subscribeOnClickAndEnterKey($removeButton, handler);\r\n        return $removeButton\r\n    },\r\n    _createAddButton: function(addGroupHandler, addConditionHandler, groupLevel) {\r\n        var $button;\r\n        var maxGroupLevel = this.option(\"maxGroupLevel\");\r\n        if (isDefined(maxGroupLevel) && groupLevel >= maxGroupLevel) {\r\n            $button = this._createButton();\r\n            this._subscribeOnClickAndEnterKey($button, addConditionHandler)\r\n        } else {\r\n            $button = this._createButtonWithMenu({\r\n                menu: {\r\n                    items: [{\r\n                        caption: messageLocalization.format(\"dxFilterBuilder-addCondition\"),\r\n                        click: addConditionHandler\r\n                    }, {\r\n                        caption: messageLocalization.format(\"dxFilterBuilder-addGroup\"),\r\n                        click: addGroupHandler\r\n                    }],\r\n                    displayExpr: \"caption\",\r\n                    onItemClick: function(e) {\r\n                        e.itemData.click()\r\n                    },\r\n                    cssClass: FILTER_BUILDER_ADD_CONDITION_CLASS\r\n                }\r\n            })\r\n        }\r\n        return $button.addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(FILTER_BUILDER_IMAGE_ADD_CLASS).addClass(FILTER_BUILDER_ACTION_CLASS).attr(\"tabindex\", 0)\r\n    },\r\n    _createValueText: function(item, field, $container) {\r\n        var that = this;\r\n        var $text = $(\"<div>\").html(\"&nbsp;\").addClass(FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS).attr(\"tabindex\", 0).appendTo($container);\r\n        var value = item[2];\r\n        var customOperation = getCustomOperation(that._customOperations, item[1]);\r\n        if (!customOperation && field.lookup) {\r\n            getCurrentLookupValueText(field, value, (function(result) {\r\n                renderValueText($text, result)\r\n            }))\r\n        } else {\r\n            when(getCurrentValueText(field, value, customOperation)).done(result => {\r\n                renderValueText($text, result, customOperation)\r\n            })\r\n        }\r\n        that._subscribeOnClickAndEnterKey($text, (function(e) {\r\n            if (\"keyup\" === e.type) {\r\n                e.stopPropagation()\r\n            }\r\n            that._createValueEditorWithEvents(item, field, $container)\r\n        }));\r\n        return $text\r\n    },\r\n    _updateConditionValue: function(item, value, callback) {\r\n        var areValuesDifferent = item[2] !== value;\r\n        if (areValuesDifferent) {\r\n            item[2] = value\r\n        }\r\n        callback();\r\n        this._updateFilter()\r\n    },\r\n    _addDocumentKeyUp: function($editor, handler) {\r\n        var isComposing = false;\r\n        var hasCompositionJustEnded = false;\r\n        var document = domAdapter.getDocument();\r\n        var documentKeyUpHandler = e => {\r\n            if (isComposing || hasCompositionJustEnded) {\r\n                hasCompositionJustEnded = false;\r\n                return\r\n            }\r\n            handler(e)\r\n        };\r\n        eventsEngine.on(document, \"keyup\", documentKeyUpHandler);\r\n        var input = $editor.find(\"input\");\r\n        eventsEngine.on(input, \"compositionstart\", () => {\r\n            isComposing = true\r\n        });\r\n        eventsEngine.on(input, \"compositionend\", () => {\r\n            isComposing = false;\r\n            hasCompositionJustEnded = true\r\n        });\r\n        eventsEngine.on(input, \"keydown\", event => {\r\n            if (229 !== event.which) {\r\n                hasCompositionJustEnded = false\r\n            }\r\n        });\r\n        this._documentKeyUpHandler = documentKeyUpHandler\r\n    },\r\n    _addDocumentClick: function($editor, closeEditorFunc) {\r\n        var document = domAdapter.getDocument();\r\n        var documentClickHandler = e => {\r\n            if (!this._isFocusOnEditorParts($editor, e.target)) {\r\n                eventsEngine.trigger($editor.find(\"input\"), \"change\");\r\n                closeEditorFunc()\r\n            }\r\n        };\r\n        eventsEngine.on(document, \"dxpointerdown\", documentClickHandler);\r\n        this._documentClickHandler = documentClickHandler\r\n    },\r\n    _isFocusOnEditorParts: function($editor, target) {\r\n        var activeElement = target || domAdapter.getActiveElement();\r\n        return $(activeElement).closest($editor.children()).length || $(activeElement).closest(\".dx-dropdowneditor-overlay\").length\r\n    },\r\n    _removeEvents: function() {\r\n        var document = domAdapter.getDocument();\r\n        isDefined(this._documentKeyUpHandler) && eventsEngine.off(document, \"keyup\", this._documentKeyUpHandler);\r\n        isDefined(this._documentClickHandler) && eventsEngine.off(document, \"dxpointerdown\", this._documentClickHandler)\r\n    },\r\n    _dispose: function() {\r\n        this._removeEvents();\r\n        this.callBase()\r\n    },\r\n    _createValueEditorWithEvents: function(item, field, $container) {\r\n        var value = item[2];\r\n        var createValueText = () => {\r\n            $container.empty();\r\n            this._removeEvents();\r\n            return this._createValueText(item, field, $container)\r\n        };\r\n        var closeEditor = () => {\r\n            this._updateConditionValue(item, value, (function() {\r\n                createValueText()\r\n            }))\r\n        };\r\n        var options = {\r\n            value: \"\" === value ? null : value,\r\n            filterOperation: getOperationValue(item),\r\n            setValue: function(data) {\r\n                value = null === data ? \"\" : data\r\n            },\r\n            closeEditor: closeEditor,\r\n            text: $container.text()\r\n        };\r\n        $container.empty();\r\n        var $editor = this._createValueEditor($container, field, options);\r\n        eventsEngine.trigger($editor.find(\"input\").not(\":hidden\").eq(0), \"focus\");\r\n        this._removeEvents();\r\n        this._addDocumentClick($editor, closeEditor);\r\n        this._addDocumentKeyUp($editor, e => {\r\n            var keyName = normalizeKeyName(e);\r\n            if (keyName === TAB_KEY) {\r\n                if (this._isFocusOnEditorParts($editor)) {\r\n                    return\r\n                }\r\n                this._updateConditionValue(item, value, (function() {\r\n                    createValueText();\r\n                    if (e.shiftKey) {\r\n                        eventsEngine.trigger($container.prev(), \"focus\")\r\n                    }\r\n                }))\r\n            }\r\n            if (keyName === ESCAPE_KEY) {\r\n                eventsEngine.trigger(createValueText(), \"focus\")\r\n            }\r\n            if (keyName === ENTER_KEY) {\r\n                this._updateConditionValue(item, value, (function() {\r\n                    eventsEngine.trigger(createValueText(), \"focus\")\r\n                }))\r\n            }\r\n        });\r\n        this._fireContentReadyAction()\r\n    },\r\n    _createValueButton: function(item, field) {\r\n        var $valueButton = $(\"<div>\").addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_VALUE_CLASS);\r\n        this._createValueText(item, field, $valueButton);\r\n        return $valueButton\r\n    },\r\n    _createValueEditor: function($container, field, options) {\r\n        var $editor = $(\"<div>\").attr(\"tabindex\", 0).appendTo($container);\r\n        var customOperation = getCustomOperation(this._customOperations, options.filterOperation);\r\n        var editorTemplate = customOperation && customOperation.editorTemplate ? customOperation.editorTemplate : field.editorTemplate;\r\n        if (editorTemplate) {\r\n            var template = this._getTemplate(editorTemplate);\r\n            template.render({\r\n                model: extend({\r\n                    field: field\r\n                }, options),\r\n                container: $editor\r\n            })\r\n        } else {\r\n            this._editorFactory.createEditor.call(this, $editor, extend({}, field, options, {\r\n                parentType: SOURCE\r\n            }))\r\n        }\r\n        return $editor\r\n    },\r\n    _createPopupWithTreeView: function(options, $container) {\r\n        var that = this;\r\n        var $popup = $(\"<div>\").addClass(options.menu.cssClass).appendTo($container);\r\n        this._createComponent($popup, Popup, {\r\n            wrapperAttr: {\r\n                class: options.menu.cssClass\r\n            },\r\n            onHiding: options.menu.onHiding,\r\n            onHidden: options.menu.onHidden,\r\n            rtlEnabled: options.menu.rtlEnabled,\r\n            position: options.menu.position,\r\n            animation: options.menu.animation,\r\n            contentTemplate: function(contentElement) {\r\n                var $menuContainer = $(\"<div>\").appendTo(contentElement);\r\n                that._createComponent($menuContainer, TreeView, options.menu);\r\n                this.repaint()\r\n            },\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: function() {\r\n                return getElementMaxHeightByWindow(options.menu.position.of)\r\n            },\r\n            visible: true,\r\n            focusStateEnabled: false,\r\n            hideOnParentScroll: this.option(\"closePopupOnTargetScroll\"),\r\n            closeOnOutsideClick: true,\r\n            onShown: options.popup.onShown,\r\n            shading: false,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            showTitle: false\r\n        })\r\n    },\r\n    _subscribeOnClickAndEnterKey: function($button, handler) {\r\n        eventsEngine.on($button, \"dxclick\", handler);\r\n        eventsEngine.on($button, \"keyup\", (function(e) {\r\n            if (normalizeKeyName(e) === ENTER_KEY) {\r\n                handler(e)\r\n            }\r\n        }))\r\n    }\r\n});\r\nregisterComponent(\"dxFilterBuilder\", FilterBuilder);\r\nexport default FilterBuilder;\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport FilterBuilder from \"./filter_builder/filter_builder\";\r\nexport default FilterBuilder;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport FilterBuilder from \"./../filter_builder\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport ScrollView from \"./../scroll_view\";\r\nimport Popup from \"./../popup\";\r\nimport {\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nvar FilterBuilderView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        this._updatePopupOptions()\r\n    },\r\n    _updatePopupOptions: function() {\r\n        if (this.option(\"filterBuilderPopup.visible\")) {\r\n            this._initPopup()\r\n        } else if (this._filterBuilderPopup) {\r\n            this._filterBuilderPopup.hide()\r\n        }\r\n    },\r\n    _disposePopup: function() {\r\n        if (this._filterBuilderPopup) {\r\n            this._filterBuilderPopup.dispose();\r\n            this._filterBuilderPopup = void 0\r\n        }\r\n        if (this._filterBuilder) {\r\n            this._filterBuilder.dispose();\r\n            this._filterBuilder = void 0\r\n        }\r\n    },\r\n    _initPopup: function() {\r\n        var that = this;\r\n        that._disposePopup();\r\n        that._filterBuilderPopup = that._createComponent(that.element(), Popup, extend({\r\n            title: messageLocalization.format(\"dxDataGrid-filterBuilderPopupTitle\"),\r\n            contentTemplate: function($contentElement) {\r\n                return that._getPopupContentTemplate($contentElement)\r\n            },\r\n            onOptionChanged: function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    that.option(\"filterBuilderPopup.visible\", args.value)\r\n                }\r\n            },\r\n            toolbarItems: that._getPopupToolbarItems()\r\n        }, that.option(\"filterBuilderPopup\"), {\r\n            onHidden: function(e) {\r\n                restoreFocus(that);\r\n                that._disposePopup()\r\n            }\r\n        }))\r\n    },\r\n    _getPopupContentTemplate: function(contentElement) {\r\n        var $contentElement = $(contentElement);\r\n        var $filterBuilderContainer = $(\"<div>\").appendTo($(contentElement));\r\n        this._filterBuilder = this._createComponent($filterBuilderContainer, FilterBuilder, extend({\r\n            value: this.option(\"filterValue\"),\r\n            fields: this.getController(\"columns\").getFilteringColumns()\r\n        }, this.option(\"filterBuilder\"), {\r\n            customOperations: this.getController(\"filterSync\").getCustomFilterOperations()\r\n        }));\r\n        this._createComponent($contentElement, ScrollView, {\r\n            direction: \"both\"\r\n        })\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        var that = this;\r\n        return [{\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: messageLocalization.format(\"OK\"),\r\n                onClick: function(e) {\r\n                    var filter = that._filterBuilder.option(\"value\");\r\n                    that.option(\"filterValue\", filter);\r\n                    that._filterBuilderPopup.hide()\r\n                }\r\n            }\r\n        }, {\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: messageLocalization.format(\"Cancel\"),\r\n                onClick: function(e) {\r\n                    that._filterBuilderPopup.hide()\r\n                }\r\n            }\r\n        }]\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterBuilder\":\r\n            case \"filterBuilderPopup\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var filterBuilderModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterBuilder: {\r\n                groupOperationDescriptions: {\r\n                    and: messageLocalization.format(\"dxFilterBuilder-and\"),\r\n                    or: messageLocalization.format(\"dxFilterBuilder-or\"),\r\n                    notAnd: messageLocalization.format(\"dxFilterBuilder-notAnd\"),\r\n                    notOr: messageLocalization.format(\"dxFilterBuilder-notOr\")\r\n                },\r\n                filterOperationDescriptions: {\r\n                    between: messageLocalization.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                    equal: messageLocalization.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                    notEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                    lessThan: messageLocalization.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                    lessThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                    greaterThan: messageLocalization.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                    greaterThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                    startsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                    contains: messageLocalization.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                    notContains: messageLocalization.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                    endsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                    isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                }\r\n            },\r\n            filterBuilderPopup: {}\r\n        }\r\n    },\r\n    views: {\r\n        filterBuilderView: FilterBuilderView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterBuilderModule\r\n} from \"../grid_core/ui.grid_core.filter_builder\";\r\ncore.registerModule(\"filterBuilder\", filterBuilderModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridUtils from \"./ui.grid_core.utils\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport CheckBox from \"../check_box\";\r\nimport {\r\n    getCurrentLookupValueText,\r\n    getCustomOperation,\r\n    getCurrentValueText,\r\n    getField,\r\n    getCaptionByOperation,\r\n    getGroupValue,\r\n    isCondition,\r\n    isGroup\r\n} from \"../filter_builder/utils\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"./ui.grid_core.accessibility\";\r\nvar FILTER_PANEL_CLASS = \"filter-panel\";\r\nvar FILTER_PANEL_TEXT_CLASS = FILTER_PANEL_CLASS + \"-text\";\r\nvar FILTER_PANEL_CHECKBOX_CLASS = FILTER_PANEL_CLASS + \"-checkbox\";\r\nvar FILTER_PANEL_CLEAR_FILTER_CLASS = FILTER_PANEL_CLASS + \"-clear-filter\";\r\nvar FILTER_PANEL_LEFT_CONTAINER = FILTER_PANEL_CLASS + \"-left\";\r\nvar FILTER_PANEL_TARGET = \"filterPanel\";\r\nvar FilterPanelView = modules.View.inherit({\r\n    isVisible: function() {\r\n        return this.option(\"filterPanel.visible\") && this.getController(\"data\").dataSource()\r\n    },\r\n    init: function() {\r\n        this.getController(\"data\").dataSourceChanged.add(() => this.render())\r\n    },\r\n    _renderCore: function() {\r\n        var $element = this.element();\r\n        $element.empty().addClass(this.addWidgetPrefix(FILTER_PANEL_CLASS));\r\n        var $leftContainer = $(\"<div>\").addClass(this.addWidgetPrefix(FILTER_PANEL_LEFT_CONTAINER)).appendTo($element);\r\n        if (this.option(\"filterValue\") || this._filterValueBuffer) {\r\n            $leftContainer.append(this._getCheckElement()).append(this._getFilterElement()).append(this._getTextElement());\r\n            $element.append(this._getRemoveButtonElement())\r\n        } else {\r\n            $leftContainer.append(this._getFilterElement()).append(this._getTextElement())\r\n        }\r\n    },\r\n    _getCheckElement: function() {\r\n        var that = this;\r\n        var $element = $(\"<div>\").addClass(this.addWidgetPrefix(FILTER_PANEL_CHECKBOX_CLASS));\r\n        that._createComponent($element, CheckBox, {\r\n            value: that.option(\"filterPanel.filterEnabled\"),\r\n            onValueChanged: function(e) {\r\n                that.option(\"filterPanel.filterEnabled\", e.value)\r\n            }\r\n        });\r\n        $element.attr(\"title\", this.option(\"filterPanel.texts.filterEnabledHint\"));\r\n        return $element\r\n    },\r\n    _getFilterElement: function() {\r\n        var that = this;\r\n        var $element = $(\"<div>\").addClass(\"dx-icon-filter\");\r\n        eventsEngine.on($element, \"click\", () => that._showFilterBuilder());\r\n        registerKeyboardAction(\"filterPanel\", that, $element, void 0, () => that._showFilterBuilder());\r\n        that._addTabIndexToElement($element);\r\n        return $element\r\n    },\r\n    _getTextElement: function() {\r\n        var that = this;\r\n        var $textElement = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_TEXT_CLASS));\r\n        var filterText;\r\n        var filterValue = that.option(\"filterValue\");\r\n        if (filterValue) {\r\n            when(that.getFilterText(filterValue, that.getController(\"filterSync\").getCustomFilterOperations())).done((function(filterText) {\r\n                var customizeText = that.option(\"filterPanel.customizeText\");\r\n                if (customizeText) {\r\n                    var customText = customizeText({\r\n                        component: that.component,\r\n                        filterValue: filterValue,\r\n                        text: filterText\r\n                    });\r\n                    if (\"string\" === typeof customText) {\r\n                        filterText = customText\r\n                    }\r\n                }\r\n                $textElement.text(filterText)\r\n            }))\r\n        } else {\r\n            filterText = that.option(\"filterPanel.texts.createFilter\");\r\n            $textElement.text(filterText)\r\n        }\r\n        eventsEngine.on($textElement, \"click\", () => that._showFilterBuilder());\r\n        registerKeyboardAction(\"filterPanel\", that, $textElement, void 0, () => that._showFilterBuilder());\r\n        that._addTabIndexToElement($textElement);\r\n        return $textElement\r\n    },\r\n    _showFilterBuilder: function() {\r\n        this.option(\"filterBuilderPopup.visible\", true)\r\n    },\r\n    _getRemoveButtonElement: function() {\r\n        var that = this;\r\n        var clearFilterValue = () => that.option(\"filterValue\", null);\r\n        var $element = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_CLEAR_FILTER_CLASS)).text(that.option(\"filterPanel.texts.clearFilter\"));\r\n        eventsEngine.on($element, \"click\", clearFilterValue);\r\n        registerKeyboardAction(\"filterPanel\", this, $element, void 0, clearFilterValue);\r\n        that._addTabIndexToElement($element);\r\n        return $element\r\n    },\r\n    _addTabIndexToElement: function($element) {\r\n        if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n            var tabindex = this.option(\"tabindex\") || 0;\r\n            $element.attr(\"tabindex\", tabindex)\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterValue\":\r\n                this._invalidate();\r\n                this.option(\"filterPanel.filterEnabled\", true);\r\n                args.handled = true;\r\n                break;\r\n            case \"filterPanel\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getConditionText: function(fieldText, operationText, valueText) {\r\n        var result = \"[\".concat(fieldText, \"] \").concat(operationText);\r\n        if (isDefined(valueText)) {\r\n            result += valueText\r\n        }\r\n        return result\r\n    },\r\n    _getValueMaskedText: function(value) {\r\n        return Array.isArray(value) ? \"('\".concat(value.join(\"', '\"), \"')\") : \" '\".concat(value, \"'\")\r\n    },\r\n    _getValueText: function(field, customOperation, value) {\r\n        var deferred = new Deferred;\r\n        var hasCustomOperation = customOperation && customOperation.customizeText;\r\n        if (isDefined(value) || hasCustomOperation) {\r\n            if (!hasCustomOperation && field.lookup) {\r\n                getCurrentLookupValueText(field, value, data => {\r\n                    deferred.resolve(this._getValueMaskedText(data))\r\n                })\r\n            } else {\r\n                var displayValue = Array.isArray(value) ? value : gridUtils.getDisplayValue(field, value);\r\n                when(getCurrentValueText(field, displayValue, customOperation, FILTER_PANEL_TARGET)).done(data => {\r\n                    deferred.resolve(this._getValueMaskedText(data))\r\n                })\r\n            }\r\n        } else {\r\n            deferred.resolve(\"\")\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    getConditionText: function(filterValue, options) {\r\n        var that = this;\r\n        var operation = filterValue[1];\r\n        var deferred = new Deferred;\r\n        var customOperation = getCustomOperation(options.customOperations, operation);\r\n        var operationText;\r\n        var field = getField(filterValue[0], options.columns);\r\n        var fieldText = field.caption || \"\";\r\n        var value = filterValue[2];\r\n        if (customOperation) {\r\n            operationText = customOperation.caption || captionize(customOperation.name)\r\n        } else if (null === value) {\r\n            operationText = getCaptionByOperation(\"=\" === operation ? \"isblank\" : \"isnotblank\", options.filterOperationDescriptions)\r\n        } else {\r\n            operationText = getCaptionByOperation(operation, options.filterOperationDescriptions)\r\n        }\r\n        this._getValueText(field, customOperation, value).done(valueText => {\r\n            deferred.resolve(that._getConditionText(fieldText, operationText, valueText))\r\n        });\r\n        return deferred\r\n    },\r\n    getGroupText: function(filterValue, options, isInnerGroup) {\r\n        var that = this;\r\n        var result = new Deferred;\r\n        var textParts = [];\r\n        var groupValue = getGroupValue(filterValue);\r\n        filterValue.forEach(item => {\r\n            if (isCondition(item)) {\r\n                textParts.push(that.getConditionText(item, options))\r\n            } else if (isGroup(item)) {\r\n                textParts.push(that.getGroupText(item, options, true))\r\n            }\r\n        });\r\n        when.apply(this, textParts).done((function() {\r\n            var text;\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key]\r\n            }\r\n            if (\"!\" === groupValue[0]) {\r\n                var groupText = options.groupOperationDescriptions[\"not\" + groupValue.substring(1, 2).toUpperCase() + groupValue.substring(2)].split(\" \");\r\n                text = \"\".concat(groupText[0], \" \").concat(args[0])\r\n            } else {\r\n                text = args.join(\" \".concat(options.groupOperationDescriptions[groupValue], \" \"))\r\n            }\r\n            if (isInnerGroup) {\r\n                text = \"(\".concat(text, \")\")\r\n            }\r\n            result.resolve(text)\r\n        }));\r\n        return result\r\n    },\r\n    getFilterText: function(filterValue, customOperations) {\r\n        var options = {\r\n            customOperations: customOperations,\r\n            columns: this.getController(\"columns\").getFilteringColumns(),\r\n            filterOperationDescriptions: this.option(\"filterBuilder.filterOperationDescriptions\"),\r\n            groupOperationDescriptions: this.option(\"filterBuilder.groupOperationDescriptions\")\r\n        };\r\n        return isCondition(filterValue) ? this.getConditionText(filterValue, options) : this.getGroupText(filterValue, options)\r\n    }\r\n});\r\nexport var filterPanelModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterPanel: {\r\n                visible: false,\r\n                filterEnabled: true,\r\n                texts: {\r\n                    createFilter: messageLocalization.format(\"dxDataGrid-filterPanelCreateFilter\"),\r\n                    clearFilter: messageLocalization.format(\"dxDataGrid-filterPanelClearFilter\"),\r\n                    filterEnabledHint: messageLocalization.format(\"dxDataGrid-filterPanelFilterEnabledHint\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        filterPanelView: FilterPanelView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"filterPanel\":\r\n                            this._applyFilter();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterPanelModule\r\n} from \"../grid_core/ui.grid_core.filter_panel\";\r\ncore.registerModule(\"filterPanel\", filterPanelModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.search.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataQuery from \"../../data/query\";\r\nvar SEARCH_PANEL_CLASS = \"search-panel\";\r\nvar SEARCH_TEXT_CLASS = \"search-text\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar FILTERING_TIMEOUT = 700;\r\n\r\nfunction allowSearch(column) {\r\n    return isDefined(column.allowSearch) ? column.allowSearch : column.allowFiltering\r\n}\r\n\r\nfunction parseValue(column, text) {\r\n    var lookup = column.lookup;\r\n    if (!column.parseValue) {\r\n        return text\r\n    }\r\n    if (lookup) {\r\n        return column.parseValue.call(lookup, text)\r\n    }\r\n    return column.parseValue(text)\r\n}\r\nexport var searchModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            searchPanel: {\r\n                visible: false,\r\n                width: 160,\r\n                placeholder: messageLocalization.format(\"dxDataGrid-searchPanelPlaceholder\"),\r\n                highlightSearchText: true,\r\n                highlightCaseSensitive: false,\r\n                text: \"\",\r\n                searchVisibleColumnsOnly: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                publicMethods: function() {\r\n                    return this.callBase().concat([\"searchByText\"])\r\n                },\r\n                _calculateAdditionalFilter: function() {\r\n                    var filter = this.callBase();\r\n                    var searchFilter = function(that, text) {\r\n                        var i;\r\n                        var column;\r\n                        var columns = that._columnsController.getColumns();\r\n                        var searchVisibleColumnsOnly = that.option(\"searchPanel.searchVisibleColumnsOnly\");\r\n                        var lookup;\r\n                        var filters = [];\r\n                        if (!text) {\r\n                            return null\r\n                        }\r\n\r\n                        function onQueryDone(items) {\r\n                            var valueGetter = compileGetter(lookup.valueExpr);\r\n                            for (var _i = 0; _i < items.length; _i++) {\r\n                                var value = valueGetter(items[_i]);\r\n                                filters.push(column.createFilterExpression(value, null, \"search\"))\r\n                            }\r\n                        }\r\n                        for (i = 0; i < columns.length; i++) {\r\n                            column = columns[i];\r\n                            if (searchVisibleColumnsOnly && !column.visible) {\r\n                                continue\r\n                            }\r\n                            if (allowSearch(column) && column.calculateFilterExpression) {\r\n                                lookup = column.lookup;\r\n                                var filterValue = parseValue(column, text);\r\n                                if (lookup && lookup.items) {\r\n                                    dataQuery(lookup.items).filter(column.createFilterExpression.call({\r\n                                        dataField: lookup.displayExpr,\r\n                                        dataType: lookup.dataType,\r\n                                        calculateFilterExpression: column.calculateFilterExpression\r\n                                    }, filterValue, null, \"search\")).enumerate().done(onQueryDone)\r\n                                } else if (void 0 !== filterValue) {\r\n                                    filters.push(column.createFilterExpression(filterValue, null, \"search\"))\r\n                                }\r\n                            }\r\n                        }\r\n                        if (0 === filters.length) {\r\n                            return [\"!\"]\r\n                        }\r\n                        return gridCoreUtils.combineFilters(filters, \"or\")\r\n                    }(this, this.option(\"searchPanel.text\"));\r\n                    return gridCoreUtils.combineFilters([filter, searchFilter])\r\n                },\r\n                searchByText: function(text) {\r\n                    this.option(\"searchPanel.text\", text)\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.fullName) {\r\n                        case \"searchPanel.text\":\r\n                        case \"searchPanel\":\r\n                            this._applyFilter();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: function() {\r\n                var getSearchPanelOptions = function(that) {\r\n                    return that.option(\"searchPanel\")\r\n                };\r\n                return {\r\n                    _getToolbarItems: function() {\r\n                        var items = this.callBase();\r\n                        return this._prepareSearchItem(items)\r\n                    },\r\n                    _prepareSearchItem: function(items) {\r\n                        var that = this;\r\n                        var dataController = that.getController(\"data\");\r\n                        var searchPanelOptions = getSearchPanelOptions(that);\r\n                        if (searchPanelOptions && searchPanelOptions.visible) {\r\n                            var toolbarItem = {\r\n                                template: function(data, index, container) {\r\n                                    var $search = $(\"<div>\").addClass(that.addWidgetPrefix(SEARCH_PANEL_CLASS)).appendTo(container);\r\n                                    that.getController(\"editorFactory\").createEditor($search, {\r\n                                        width: searchPanelOptions.width,\r\n                                        placeholder: searchPanelOptions.placeholder,\r\n                                        parentType: \"searchPanel\",\r\n                                        value: that.option(\"searchPanel.text\"),\r\n                                        updateValueTimeout: FILTERING_TIMEOUT,\r\n                                        setValue: function(value) {\r\n                                            dataController.searchByText(value)\r\n                                        },\r\n                                        editorOptions: {\r\n                                            inputAttr: {\r\n                                                \"aria-label\": messageLocalization.format(\"\".concat(that.component.NAME, \"-ariaSearchInGrid\"))\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    that.resize()\r\n                                },\r\n                                name: \"searchPanel\",\r\n                                location: \"after\",\r\n                                locateInMenu: \"never\",\r\n                                sortIndex: 40\r\n                            };\r\n                            items.push(toolbarItem)\r\n                        }\r\n                        return items\r\n                    },\r\n                    getSearchTextEditor: function() {\r\n                        var that = this;\r\n                        var $element = that.element();\r\n                        var $searchPanel = $element.find(\".\" + that.addWidgetPrefix(SEARCH_PANEL_CLASS)).filter((function() {\r\n                            return $(this).closest(\".\" + that.addWidgetPrefix(HEADER_PANEL_CLASS)).is($element)\r\n                        }));\r\n                        if ($searchPanel.length) {\r\n                            return $searchPanel.dxTextBox(\"instance\")\r\n                        }\r\n                        return null\r\n                    },\r\n                    isVisible: function() {\r\n                        var searchPanelOptions = getSearchPanelOptions(this);\r\n                        return this.callBase() || searchPanelOptions && searchPanelOptions.visible\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        if (\"searchPanel\" === args.name) {\r\n                            if (\"searchPanel.text\" === args.fullName) {\r\n                                var editor = this.getSearchTextEditor();\r\n                                if (editor) {\r\n                                    editor.option(\"value\", args.value)\r\n                                }\r\n                            } else {\r\n                                this._invalidate()\r\n                            }\r\n                            args.handled = true\r\n                        } else {\r\n                            this.callBase(args)\r\n                        }\r\n                    }\r\n                }\r\n            }(),\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._searchParams = []\r\n                },\r\n                _getFormattedSearchText: function(column, searchText) {\r\n                    var value = parseValue(column, searchText);\r\n                    var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"search\");\r\n                    return gridCoreUtils.formatValue(value, formatOptions)\r\n                },\r\n                _getStringNormalizer: function() {\r\n                    var isCaseSensitive = this.option(\"searchPanel.highlightCaseSensitive\");\r\n                    return function(str) {\r\n                        return isCaseSensitive ? str : str.toLowerCase()\r\n                    }\r\n                },\r\n                _findHighlightingTextNodes: function(column, cellElement, searchText) {\r\n                    var _$items;\r\n                    var $parent = cellElement.parent();\r\n                    var $items;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var normalizedSearchText = stringNormalizer(searchText);\r\n                    var resultTextNodes = [];\r\n                    if (!$parent.length) {\r\n                        $parent = $(\"<div>\").append(cellElement)\r\n                    } else if (column) {\r\n                        if (column.groupIndex >= 0 && !column.showWhenGrouped) {\r\n                            $items = cellElement\r\n                        } else {\r\n                            var columnIndex = this._columnsController.getVisibleIndex(column.index);\r\n                            $items = $parent.children(\"td\").eq(columnIndex).find(\"*\")\r\n                        }\r\n                    }\r\n                    $items = null !== (_$items = $items) && void 0 !== _$items && _$items.length ? $items : $parent.find(\"*\");\r\n                    $items.each((function(_, element) {\r\n                        var $contents = $(element).contents();\r\n                        for (var i = 0; i < $contents.length; i++) {\r\n                            var node = $contents.get(i);\r\n                            if (3 === node.nodeType) {\r\n                                var normalizedText = stringNormalizer(node.textContent || node.nodeValue);\r\n                                if (normalizedText.indexOf(normalizedSearchText) > -1) {\r\n                                    resultTextNodes.push(node)\r\n                                }\r\n                            }\r\n                        }\r\n                    }));\r\n                    return resultTextNodes\r\n                },\r\n                _highlightSearchTextCore: function($textNode, searchText) {\r\n                    var $searchTextSpan = $(\"<span>\").addClass(this.addWidgetPrefix(SEARCH_TEXT_CLASS));\r\n                    var text = $textNode.text();\r\n                    var firstContentElement = $textNode[0];\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var index = stringNormalizer(text).indexOf(stringNormalizer(searchText));\r\n                    if (index >= 0) {\r\n                        if (firstContentElement.textContent) {\r\n                            firstContentElement.textContent = text.substr(0, index)\r\n                        } else {\r\n                            firstContentElement.nodeValue = text.substr(0, index)\r\n                        }\r\n                        $textNode.after($searchTextSpan.text(text.substr(index, searchText.length)));\r\n                        $textNode = $(domAdapter.createTextNode(text.substr(index + searchText.length))).insertAfter($searchTextSpan);\r\n                        return this._highlightSearchTextCore($textNode, searchText)\r\n                    }\r\n                },\r\n                _highlightSearchText: function(cellElement, isEquals, column) {\r\n                    var that = this;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var searchText = that.option(\"searchPanel.text\");\r\n                    if (isEquals && column) {\r\n                        searchText = searchText && that._getFormattedSearchText(column, searchText)\r\n                    }\r\n                    if (searchText && that.option(\"searchPanel.highlightSearchText\")) {\r\n                        var textNodes = that._findHighlightingTextNodes(column, cellElement, searchText);\r\n                        textNodes.forEach(textNode => {\r\n                            if (isEquals) {\r\n                                if (stringNormalizer($(textNode).text()) === stringNormalizer(searchText)) {\r\n                                    $(textNode).replaceWith($(\"<span>\").addClass(that.addWidgetPrefix(SEARCH_TEXT_CLASS)).text($(textNode).text()))\r\n                                }\r\n                            } else {\r\n                                that._highlightSearchTextCore($(textNode), searchText)\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option().rowTemplate || this.option(\"dataRowTemplate\")) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            clearTimeout(this._highlightTimer);\r\n                            this._highlightTimer = setTimeout(function() {\r\n                                this._highlightSearchText(this.getTableElement())\r\n                            }.bind(this))\r\n                        } else {\r\n                            this._highlightSearchText(this.getTableElement())\r\n                        }\r\n                    }\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    var column = parameters.column;\r\n                    var dataType = column.lookup && column.lookup.dataType || column.dataType;\r\n                    var isEquals = \"string\" !== dataType;\r\n                    if (allowSearch(column) && !parameters.isOnForm) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            if (!this._searchParams.length) {\r\n                                clearTimeout(this._highlightTimer);\r\n                                this._highlightTimer = setTimeout(function() {\r\n                                    this._searchParams.forEach(function(params) {\r\n                                        this._highlightSearchText.apply(this, params)\r\n                                    }.bind(this));\r\n                                    this._searchParams = []\r\n                                }.bind(this))\r\n                            }\r\n                            this._searchParams.push([$cell, isEquals, column])\r\n                        } else {\r\n                            this._highlightSearchText($cell, isEquals, column)\r\n                        }\r\n                    }\r\n                    this.callBase($cell, parameters)\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._highlightTimer);\r\n                    this.callBase()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.search.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    searchModule\r\n} from \"../grid_core/ui.grid_core.search\";\r\ngridCore.registerModule(\"search\", searchModule);\r\n","/**\r\n * DevExtreme (esm/renovation/component_wrapper/grid_pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Component from \"./common/component\";\r\nexport class GridPagerWrapper extends Component {\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"pageIndex\":\r\n                var pageIndexChanged = this.option(\"pageIndexChanged\");\r\n                if (pageIndexChanged) {\r\n                    pageIndexChanged(args.value)\r\n                }\r\n                break;\r\n            case \"pageSize\":\r\n                var pageSizeChanged = this.option(\"pageSizeChanged\");\r\n                if (pageSizeChanged) {\r\n                    pageSizeChanged(args.value)\r\n                }\r\n        }\r\n        super._optionChanged(args)\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/utils/type_conversion.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport function toNumber(attribute) {\r\n    return attribute ? Number(attribute.replace(\"px\", \"\")) : 0\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/utils/get_element_width.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport getElementComputedStyle from \"../../../utils/get_computed_style\";\r\nimport {\r\n    toNumber\r\n} from \"../../../utils/type_conversion\";\r\nexport function getElementStyle(name, element) {\r\n    var _getElementComputedSt;\r\n    var computedStyle = null !== (_getElementComputedSt = getElementComputedStyle(element)) && void 0 !== _getElementComputedSt ? _getElementComputedSt : {};\r\n    return toNumber(computedStyle[name])\r\n}\r\nexport function getElementWidth(element) {\r\n    return getElementStyle(\"width\", element)\r\n}\r\nexport function getElementMinWidth(element) {\r\n    return getElementStyle(\"minWidth\", element)\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/resizable_container.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"contentTemplate\", \"pagerProps\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport resizeCallbacks from \"../../../core/utils/resize_callbacks\";\r\nimport {\r\n    getElementWidth,\r\n    getElementStyle\r\n} from \"./utils/get_element_width\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        contentAttributes: contentAttributes,\r\n        infoTextRef: infoTextRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageSizesRef: pageSizesRef,\r\n        pagesRef: pagesRef,\r\n        parentRef: parentRef,\r\n        props: {\r\n            contentTemplate: Content\r\n        }\r\n    } = _ref;\r\n    return Content(_extends({\r\n        rootElementRef: parentRef,\r\n        pageSizesRef: pageSizesRef,\r\n        infoTextRef: infoTextRef,\r\n        pagesRef: pagesRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }, contentAttributes))\r\n};\r\nexport function calculateAdaptivityProps(_ref2) {\r\n    var {\r\n        info: infoWidth,\r\n        pageSizes: pageSizesWidth,\r\n        pages: pagesWidth,\r\n        parent: parentWidth\r\n    } = _ref2;\r\n    var minimalWidth = pageSizesWidth + pagesWidth + infoWidth;\r\n    var infoTextVisible = parentWidth - minimalWidth > 0;\r\n    var isLargeDisplayMode = parentWidth - (pageSizesWidth + pagesWidth) > 0;\r\n    return {\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }\r\n}\r\n\r\nfunction getElementsWidth(_ref3) {\r\n    var {\r\n        info: info,\r\n        pageSizes: pageSizes,\r\n        pages: pages,\r\n        parent: parent\r\n    } = _ref3;\r\n    var parentWidth = getElementWidth(parent);\r\n    var pageSizesWidth = getElementWidth(pageSizes);\r\n    var infoWidth = getElementWidth(info);\r\n    var pagesHtmlWidth = getElementWidth(pages);\r\n    return {\r\n        parent: parentWidth,\r\n        pageSizes: pageSizesWidth,\r\n        info: infoWidth + getElementStyle(\"marginLeft\", info) + getElementStyle(\"marginRight\", info),\r\n        pages: pagesHtmlWidth\r\n    }\r\n}\r\nexport var ResizableContainerProps = {};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class ResizableContainer extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.parentRef = infernoCreateRef();\r\n        this.pageSizesRef = infernoCreateRef();\r\n        this.infoTextRef = infernoCreateRef();\r\n        this.pagesRef = infernoCreateRef();\r\n        this.state = {\r\n            infoTextVisible: true,\r\n            isLargeDisplayMode: true\r\n        };\r\n        this.subscribeToResize = this.subscribeToResize.bind(this);\r\n        this.effectUpdateChildProps = this.effectUpdateChildProps.bind(this);\r\n        this.updateAdaptivityProps = this.updateAdaptivityProps.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.subscribeToResize, [this.state.infoTextVisible, this.state.isLargeDisplayMode]), new InfernoEffect(this.effectUpdateChildProps, [this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.infoTextVisible, this.state.isLargeDisplayMode]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])\r\n    }\r\n    subscribeToResize() {\r\n        var callback = () => {\r\n            this.parentWidth > 0 && this.updateAdaptivityProps()\r\n        };\r\n        resizeCallbacks.add(callback);\r\n        return () => {\r\n            resizeCallbacks.remove(callback)\r\n        }\r\n    }\r\n    effectUpdateChildProps() {\r\n        if (this.parentWidth > 0) {\r\n            this.updateAdaptivityProps()\r\n        }\r\n    }\r\n    get contentAttributes() {\r\n        var {\r\n            className: className,\r\n            displayMode: displayMode,\r\n            gridCompatibility: gridCompatibility,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            maxPagesCount: maxPagesCount,\r\n            onKeyDown: onKeyDown,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pagesCountText: pagesCountText,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            rtlEnabled: rtlEnabled,\r\n            showInfo: showInfo,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        } = this.props.pagerProps;\r\n        return _extends({}, this.restAttributes, {\r\n            pageSize: pageSize,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSizeChange: pageSizeChange,\r\n            gridCompatibility: gridCompatibility,\r\n            className: className,\r\n            showInfo: showInfo,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            displayMode: displayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pagesCountText: pagesCountText,\r\n            visible: visible,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            showPageSizes: showPageSizes,\r\n            pageSizes: pageSizes,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount,\r\n            onKeyDown: onKeyDown\r\n        })\r\n    }\r\n    get parentWidth() {\r\n        return this.parentRef.current ? getElementWidth(this.parentRef.current) : 0\r\n    }\r\n    updateAdaptivityProps() {\r\n        var currentElementsWidth = getElementsWidth({\r\n            parent: this.parentRef.current,\r\n            pageSizes: this.pageSizesRef.current,\r\n            info: this.infoTextRef.current,\r\n            pages: this.pagesRef.current\r\n        });\r\n        if (isDefined(this.actualAdaptivityProps) && (this.actualAdaptivityProps.infoTextVisible !== this.state.infoTextVisible || this.actualAdaptivityProps.isLargeDisplayMode !== this.state.isLargeDisplayMode)) {\r\n            return\r\n        }\r\n        var isEmpty = !isDefined(this.elementsWidth);\r\n        if (isEmpty) {\r\n            this.elementsWidth = {}\r\n        }\r\n        if (isEmpty || this.state.isLargeDisplayMode) {\r\n            this.elementsWidth.pageSizes = currentElementsWidth.pageSizes;\r\n            this.elementsWidth.pages = currentElementsWidth.pages\r\n        }\r\n        if (isEmpty || this.state.infoTextVisible) {\r\n            this.elementsWidth.info = currentElementsWidth.info\r\n        }\r\n        this.actualAdaptivityProps = calculateAdaptivityProps(_extends({\r\n            parent: currentElementsWidth.parent\r\n        }, this.elementsWidth));\r\n        this.setState(__state_argument => ({\r\n            infoTextVisible: this.actualAdaptivityProps.infoTextVisible\r\n        }));\r\n        this.setState(__state_argument => ({\r\n            isLargeDisplayMode: this.actualAdaptivityProps.isLargeDisplayMode\r\n        }))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                contentTemplate: getTemplate(props.contentTemplate)\r\n            }),\r\n            infoTextVisible: this.state.infoTextVisible,\r\n            isLargeDisplayMode: this.state.isLargeDisplayMode,\r\n            parentRef: this.parentRef,\r\n            pageSizesRef: this.pageSizesRef,\r\n            infoTextRef: this.infoTextRef,\r\n            pagesRef: this.pagesRef,\r\n            contentAttributes: this.contentAttributes,\r\n            parentWidth: this.parentWidth,\r\n            updateAdaptivityProps: this.updateAdaptivityProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nResizableContainer.defaultProps = ResizableContainerProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/base_pager_props.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var BasePagerProps = {\r\n    gridCompatibility: true,\r\n    showInfo: false,\r\n    displayMode: \"adaptive\",\r\n    maxPagesCount: 10,\r\n    pageCount: 10,\r\n    visible: true,\r\n    hasKnownLastPage: true,\r\n    pagesNavigatorVisible: \"auto\",\r\n    showPageSizes: true,\r\n    get pageSizes() {\r\n        return [5, 10]\r\n    },\r\n    showNavigationButtons: false,\r\n    totalCount: 0\r\n};\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/pager_props.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    BasePagerProps\r\n} from \"./base_pager_props\";\r\nexport var PagerProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BasePagerProps), Object.getOwnPropertyDescriptors({\r\n    defaultPageSize: 5,\r\n    pageSizeChange: () => {},\r\n    defaultPageIndex: 1,\r\n    pageIndexChange: () => {}\r\n})));\r\nexport var InternalPagerProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BasePagerProps), Object.getOwnPropertyDescriptors({\r\n    pageSize: 5,\r\n    pageIndex: 1\r\n})));\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/info.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"infoText\", \"pageCount\", \"pageIndex\", \"rootElementRef\", \"totalCount\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    format\r\n} from \"../../../core/utils/string\";\r\nimport messageLocalization from \"../../../localization/message\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"./common/pager_props\";\r\nexport var PAGER_INFO_CLASS = \"dx-info\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            rootElementRef: rootElementRef\r\n        },\r\n        text: text\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_INFO_CLASS, text, 0, null, null, rootElementRef)\r\n};\r\nexport var InfoTextProps = {};\r\nvar InfoTextPropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    },\r\n    get totalCount() {\r\n        return InternalPagerProps.totalCount\r\n    }\r\n};\r\nexport class InfoText extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get infoText() {\r\n        var _this$props$infoText;\r\n        return (null !== (_this$props$infoText = this.props.infoText) && void 0 !== _this$props$infoText ? _this$props$infoText : \"\") || messageLocalization.getFormatter(\"dxPager-infoText\")()\r\n    }\r\n    get text() {\r\n        var {\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            totalCount: totalCount\r\n        } = this.props;\r\n        return format(this.infoText, (pageIndex + 1).toString(), pageCount.toString(), totalCount.toString())\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            infoText: this.infoText,\r\n            text: this.text,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nInfoText.defaultProps = InfoTextPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/keyboard_action_context.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    createContext\r\n} from \"@devextreme/runtime/inferno\";\r\nexport var KeyboardActionContext = createContext(void 0);\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/light_button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"children\", \"className\", \"label\", \"onClick\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    subscribeToClickEvent\r\n} from \"../../../utils/subscribe_to_event\";\r\nimport {\r\n    KeyboardActionContext\r\n} from \"./keyboard_action_context\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            children: children,\r\n            className: className,\r\n            label: label\r\n        },\r\n        widgetRef: widgetRef\r\n    } = _ref;\r\n    return createVNode(1, \"div\", className, children, 0, {\r\n        tabIndex: 0,\r\n        role: \"button\",\r\n        \"aria-label\": label\r\n    }, null, widgetRef)\r\n};\r\nexport var LightButtonProps = {\r\n    className: \"\",\r\n    label: \"\"\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class LightButton extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.widgetRef = infernoCreateRef();\r\n        this.keyboardEffect = this.keyboardEffect.bind(this);\r\n        this.subscribeToClick = this.subscribeToClick.bind(this)\r\n    }\r\n    get keyboardContext() {\r\n        if (\"KeyboardActionContext\" in this.context) {\r\n            return this.context.KeyboardActionContext\r\n        }\r\n        return KeyboardActionContext\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.keyboardEffect, [this.keyboardContext, this.props.onClick]), new InfernoEffect(this.subscribeToClick, [this.props.onClick])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.keyboardContext, this.props.onClick]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props.onClick])\r\n    }\r\n    keyboardEffect() {\r\n        return this.keyboardContext.registerKeyboardAction(this.widgetRef.current, this.props.onClick)\r\n    }\r\n    subscribeToClick() {\r\n        return subscribeToClickEvent(this.widgetRef.current, this.props.onClick)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            widgetRef: this.widgetRef,\r\n            keyboardContext: this.keyboardContext,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nLightButton.defaultProps = LightButtonProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/consts.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var PAGER_CLASS = \"dx-pager\";\r\nexport var LIGHT_MODE_CLASS = \"dx-light-mode\";\r\nexport var PAGER_PAGES_CLASS = \"dx-pages\";\r\nexport var PAGER_PAGE_INDEXES_CLASS = \"dx-page-indexes\";\r\nexport var PAGER_PAGE_CLASS = \"dx-page\";\r\nexport var PAGER_SELECTION_CLASS = \"dx-selection\";\r\nexport var PAGER_PAGE_SIZE_CLASS = \"dx-page-size\";\r\nexport var PAGER_PAGE_SIZES_CLASS = \"dx-page-sizes\";\r\nexport var PAGER_SELECTED_PAGE_SIZE_CLASS = \"\".concat(PAGER_PAGE_SIZE_CLASS, \" \").concat(PAGER_SELECTION_CLASS);\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/page.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"className\", \"index\", \"onClick\", \"selected\"];\r\nimport {\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    PAGER_PAGE_CLASS,\r\n    PAGER_SELECTION_CLASS\r\n} from \"../common/consts\";\r\nimport {\r\n    combineClasses\r\n} from \"../../../utils/combine_classes\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        className: className,\r\n        label: label,\r\n        props: {\r\n            onClick: onClick\r\n        },\r\n        value: value\r\n    } = _ref;\r\n    return createComponentVNode(2, LightButton, {\r\n        className: className,\r\n        label: label,\r\n        onClick: onClick,\r\n        children: value\r\n    })\r\n};\r\nexport var PageProps = {\r\n    index: 0,\r\n    selected: false,\r\n    className: PAGER_PAGE_CLASS\r\n};\r\nexport class Page extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get label() {\r\n        return \"Page \".concat(this.value)\r\n    }\r\n    get value() {\r\n        return this.props.index + 1\r\n    }\r\n    get className() {\r\n        var {\r\n            selected: selected\r\n        } = this.props;\r\n        return combineClasses({\r\n            [\"\".concat(this.props.className)]: !!this.props.className,\r\n            [PAGER_SELECTION_CLASS]: !!selected\r\n        })\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            label: this.label,\r\n            value: this.value,\r\n            className: this.className,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPage.defaultProps = PageProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/large.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageIndexes\"],\r\n    _excluded2 = [\"maxPagesCount\", \"pageCount\", \"pageIndex\", \"pageIndexChange\"];\r\nimport {\r\n    createVNode,\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    ConfigContext\r\n} from \"../../../common/config_context\";\r\nvar PAGER_PAGE_SEPARATOR_CLASS = \"dx-separator\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pages: pages\r\n    } = _ref;\r\n    var PagesMarkup = pages.map(_ref2 => {\r\n        var {\r\n            key: key,\r\n            pageProps: pageProps\r\n        } = _ref2;\r\n        return pageProps ? createComponentVNode(2, Page, {\r\n            index: pageProps.index,\r\n            selected: pageProps.selected,\r\n            onClick: pageProps.onClick\r\n        }, key) : createVNode(1, \"div\", PAGER_PAGE_SEPARATOR_CLASS, \". . .\", 16, null, key)\r\n    });\r\n    return createFragment(PagesMarkup, 0)\r\n};\r\nvar PAGES_LIMITER = 4;\r\n\r\nfunction getDelimiterType(startIndex, slidingWindowSize, pageCount) {\r\n    if (1 === startIndex) {\r\n        return \"high\"\r\n    }\r\n    if (startIndex + slidingWindowSize === pageCount - 1) {\r\n        return \"low\"\r\n    }\r\n    return \"both\"\r\n}\r\n\r\nfunction createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter) {\r\n    var pageIndexes = [];\r\n    var indexesForReuse = [];\r\n    switch (delimiter) {\r\n        case \"none\":\r\n            pageIndexes = [...slidingWindowIndexes];\r\n            break;\r\n        case \"both\":\r\n            pageIndexes = [0, \"low\", ...slidingWindowIndexes, \"high\", pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(1, -1);\r\n            break;\r\n        case \"high\":\r\n            pageIndexes = [0, ...slidingWindowIndexes, \"high\", pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(0, -1);\r\n            break;\r\n        case \"low\":\r\n            pageIndexes = [0, \"low\", ...slidingWindowIndexes, pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(1)\r\n    }\r\n    return {\r\n        slidingWindowIndexes: slidingWindowIndexes,\r\n        indexesForReuse: indexesForReuse,\r\n        pageIndexes: pageIndexes\r\n    }\r\n}\r\n\r\nfunction createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter) {\r\n    var slidingWindowIndexes = [];\r\n    for (var i = 0; i < slidingWindowSize; i += 1) {\r\n        slidingWindowIndexes.push(i + startIndex)\r\n    }\r\n    return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter)\r\n}\r\nvar PagesLargePropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get maxPagesCount() {\r\n        return InternalPagerProps.maxPagesCount\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    }\r\n};\r\nexport class PagesLarge extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.canReuseSlidingWindow = this.canReuseSlidingWindow.bind(this);\r\n        this.generatePageIndexes = this.generatePageIndexes.bind(this);\r\n        this.isSlidingWindowMode = this.isSlidingWindowMode.bind(this);\r\n        this.onPageClick = this.onPageClick.bind(this)\r\n    }\r\n    get config() {\r\n        if (\"ConfigContext\" in this.context) {\r\n            return this.context.ConfigContext\r\n        }\r\n        return ConfigContext\r\n    }\r\n    get slidingWindowState() {\r\n        var slidingWindowState = this.slidingWindowStateHolder;\r\n        if (!slidingWindowState) {\r\n            return {\r\n                indexesForReuse: [],\r\n                slidingWindowIndexes: []\r\n            }\r\n        }\r\n        return slidingWindowState\r\n    }\r\n    canReuseSlidingWindow(currentPageCount, pageIndex) {\r\n        var {\r\n            indexesForReuse: indexesForReuse\r\n        } = this.slidingWindowState;\r\n        var currentPageNotExistInIndexes = !indexesForReuse.includes(currentPageCount);\r\n        var pageIndexExistInIndexes = indexesForReuse.includes(pageIndex);\r\n        return currentPageNotExistInIndexes && pageIndexExistInIndexes\r\n    }\r\n    generatePageIndexes() {\r\n        var {\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex\r\n        } = this.props;\r\n        var startIndex = 0;\r\n        var {\r\n            slidingWindowIndexes: slidingWindowIndexes\r\n        } = this.slidingWindowState;\r\n        if (pageIndex === slidingWindowIndexes[0]) {\r\n            startIndex = pageIndex - 1\r\n        } else if (pageIndex === slidingWindowIndexes[slidingWindowIndexes.length - 1]) {\r\n            startIndex = pageIndex + 2 - PAGES_LIMITER\r\n        } else if (pageIndex < PAGES_LIMITER) {\r\n            startIndex = 1\r\n        } else if (pageIndex >= pageCount - PAGES_LIMITER) {\r\n            startIndex = pageCount - PAGES_LIMITER - 1\r\n        } else {\r\n            startIndex = pageIndex - 1\r\n        }\r\n        var slidingWindowSize = PAGES_LIMITER;\r\n        var delimiter = getDelimiterType(startIndex, slidingWindowSize, pageCount);\r\n        var _createPageIndexes = createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter),\r\n            {\r\n                pageIndexes: pageIndexes\r\n            } = _createPageIndexes,\r\n            slidingWindowState = _objectWithoutPropertiesLoose(_createPageIndexes, _excluded);\r\n        this.slidingWindowStateHolder = slidingWindowState;\r\n        return pageIndexes\r\n    }\r\n    isSlidingWindowMode() {\r\n        var {\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        return pageCount <= PAGES_LIMITER || pageCount <= maxPagesCount\r\n    }\r\n    onPageClick(pageIndex) {\r\n        this.props.pageIndexChange(pageIndex)\r\n    }\r\n    get pageIndexes() {\r\n        var {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        if (this.isSlidingWindowMode()) {\r\n            return createPageIndexes(0, pageCount, pageCount, \"none\").pageIndexes\r\n        }\r\n        if (this.canReuseSlidingWindow(pageCount, this.props.pageIndex)) {\r\n            var {\r\n                slidingWindowIndexes: slidingWindowIndexes\r\n            } = this.slidingWindowState;\r\n            var delimiter = getDelimiterType(slidingWindowIndexes[0], PAGES_LIMITER, pageCount);\r\n            return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter).pageIndexes\r\n        }\r\n        return this.generatePageIndexes()\r\n    }\r\n    get pages() {\r\n        var _this$config;\r\n        var {\r\n            pageIndex: pageIndex\r\n        } = this.props;\r\n        var createPage = index => {\r\n            var pagerProps = \"low\" === index || \"high\" === index ? null : {\r\n                index: index,\r\n                onClick: () => this.onPageClick(index),\r\n                selected: pageIndex === index\r\n            };\r\n            return {\r\n                key: index.toString(),\r\n                pageProps: pagerProps\r\n            }\r\n        };\r\n        var rtlPageIndexes = null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled ? [...this.pageIndexes].reverse() : this.pageIndexes;\r\n        return rtlPageIndexes.map(index => createPage(index))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded2);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            config: this.config,\r\n            pageIndexes: this.pageIndexes,\r\n            pages: this.pages,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagesLarge.defaultProps = PagesLargePropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/editors/number_box.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"defaultValue\", \"disabled\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"invalidValueMessage\", \"max\", \"min\", \"mode\", \"onClick\", \"onKeyDown\", \"rtlEnabled\", \"showSpinButtons\", \"step\", \"tabIndex\", \"useLargeSpinButtons\", \"value\", \"valueChange\", \"visible\", \"width\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport LegacyNumberBox from \"../../../ui/number_box\";\r\nimport {\r\n    DomComponentWrapper\r\n} from \"../common/dom_component_wrapper\";\r\nimport {\r\n    BaseWidgetProps\r\n} from \"../common/base_props\";\r\nvar DEFAULT_VALUE = 0;\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: props,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\r\n        componentType: LegacyNumberBox,\r\n        componentProps: props,\r\n        templateNames: []\r\n    }, restAttributes)))\r\n};\r\nexport var NumberBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BaseWidgetProps), Object.getOwnPropertyDescriptors({\r\n    focusStateEnabled: true,\r\n    hoverStateEnabled: true,\r\n    defaultValue: DEFAULT_VALUE,\r\n    isReactComponentWrapper: true\r\n})));\r\nexport class NumberBox extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$value = _extends({}, this.props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nNumberBox.defaultProps = NumberBoxProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/utils/calculate_values_fitted_width.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var oneDigitWidth = 10;\r\nexport function calculateValuesFittedWidth(minWidth, values) {\r\n    return minWidth + oneDigitWidth * Math.max(...values).toString().length\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/small.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nimport {\r\n    PAGER_INFO_CLASS\r\n} from \"../info\";\r\nimport {\r\n    NumberBox\r\n} from \"../../editors/number_box\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    calculateValuesFittedWidth\r\n} from \"../utils/calculate_values_fitted_width\";\r\nimport {\r\n    getElementMinWidth\r\n} from \"../utils/get_element_width\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nvar PAGER_INFO_TEXT_CLASS = \"\".concat(PAGER_INFO_CLASS, \"  dx-info-text\");\r\nvar PAGER_PAGE_INDEX_CLASS = \"dx-page-index\";\r\nvar LIGHT_PAGES_CLASS = \"dx-light-pages\";\r\nvar PAGER_PAGES_COUNT_CLASS = \"dx-pages-count\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pageIndexRef: pageIndexRef,\r\n        pagesCountText: pagesCountText,\r\n        props: {\r\n            pageCount: pageCount\r\n        },\r\n        selectLastPageIndex: selectLastPageIndex,\r\n        value: value,\r\n        valueChange: valueChange,\r\n        width: width\r\n    } = _ref;\r\n    return createVNode(1, \"div\", LIGHT_PAGES_CLASS, [createComponentVNode(2, NumberBox, {\r\n        className: PAGER_PAGE_INDEX_CLASS,\r\n        min: 1,\r\n        max: pageCount,\r\n        width: width,\r\n        value: value,\r\n        valueChange: valueChange\r\n    }), createVNode(1, \"span\", PAGER_INFO_TEXT_CLASS, pagesCountText, 0), createComponentVNode(2, Page, {\r\n        className: PAGER_PAGES_COUNT_CLASS,\r\n        selected: false,\r\n        index: pageCount - 1,\r\n        onClick: selectLastPageIndex\r\n    })], 4, null, null, pageIndexRef)\r\n};\r\nvar PagerSmallProps = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    }\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagesSmall extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.pageIndexRef = infernoCreateRef();\r\n        this.state = {\r\n            minWidth: 10\r\n        };\r\n        this.updateWidth = this.updateWidth.bind(this);\r\n        this.selectLastPageIndex = this.selectLastPageIndex.bind(this);\r\n        this.valueChange = this.valueChange.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateWidth, [this.state.minWidth])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.minWidth])\r\n    }\r\n    updateWidth() {\r\n        var _this$pageIndexRef$cu;\r\n        var el = null === (_this$pageIndexRef$cu = this.pageIndexRef.current) || void 0 === _this$pageIndexRef$cu ? void 0 : _this$pageIndexRef$cu.querySelector(\".\".concat(PAGER_PAGE_INDEX_CLASS));\r\n        this.setState(__state_argument => ({\r\n            minWidth: el && getElementMinWidth(el) || __state_argument.minWidth\r\n        }))\r\n    }\r\n    get value() {\r\n        return this.props.pageIndex + 1\r\n    }\r\n    get width() {\r\n        var {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        return calculateValuesFittedWidth(this.state.minWidth, [pageCount])\r\n    }\r\n    get pagesCountText() {\r\n        var _this$props$pagesCoun;\r\n        return (null !== (_this$props$pagesCoun = this.props.pagesCountText) && void 0 !== _this$props$pagesCoun ? _this$props$pagesCoun : \"\") || messageLocalization.getFormatter(\"dxPager-pagesCountText\")()\r\n    }\r\n    selectLastPageIndex() {\r\n        this.props.pageIndexChange(this.props.pageCount - 1)\r\n    }\r\n    valueChange(value) {\r\n        this.props.pageIndexChange(value - 1)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            pageIndexRef: this.pageIndexRef,\r\n            value: this.value,\r\n            width: this.width,\r\n            pagesCountText: this.pagesCountText,\r\n            selectLastPageIndex: this.selectLastPageIndex,\r\n            valueChange: this.valueChange,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagesSmall.defaultProps = PagerSmallProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/page_index_selector.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"hasKnownLastPage\", \"isLargeDisplayMode\", \"maxPagesCount\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\", \"showNavigationButtons\", \"totalCount\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    PagesLarge\r\n} from \"./large\";\r\nimport {\r\n    PagesSmall\r\n} from \"./small\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    ConfigContext\r\n} from \"../../../common/config_context\";\r\nvar PAGER_NAVIGATE_BUTTON = \"dx-navigate-button\";\r\nvar PAGER_PREV_BUTTON_CLASS = \"dx-prev-button\";\r\nvar PAGER_NEXT_BUTTON_CLASS = \"dx-next-button\";\r\nexport var PAGER_BUTTON_DISABLE_CLASS = \"dx-button-disable\";\r\nvar nextButtonClassName = \"\".concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_NEXT_BUTTON_CLASS);\r\nvar prevButtonClassName = \"\".concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_PREV_BUTTON_CLASS);\r\nvar nextButtonDisabledClassName = \"\".concat(PAGER_BUTTON_DISABLE_CLASS, \" \").concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_NEXT_BUTTON_CLASS);\r\nvar prevButtonDisabledClassName = \"\".concat(PAGER_BUTTON_DISABLE_CLASS, \" \").concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_PREV_BUTTON_CLASS);\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        navigateToNextPage: navigateToNextPage,\r\n        navigateToPrevPage: navigateToPrevPage,\r\n        nextClassName: nextClassName,\r\n        pageIndexChange: pageIndexChange,\r\n        prevClassName: prevClassName,\r\n        props: {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pagesCountText: pagesCountText\r\n        },\r\n        renderNextButton: renderNextButton,\r\n        renderPrevButton: renderPrevButton\r\n    } = _ref;\r\n    return createFragment([renderPrevButton && createComponentVNode(2, LightButton, {\r\n        className: prevClassName,\r\n        label: \"Previous page\",\r\n        onClick: navigateToPrevPage\r\n    }), isLargeDisplayMode && createComponentVNode(2, PagesLarge, {\r\n        maxPagesCount: maxPagesCount,\r\n        pageCount: pageCount,\r\n        pageIndex: pageIndex,\r\n        pageIndexChange: pageIndexChange\r\n    }), !isLargeDisplayMode && createComponentVNode(2, PagesSmall, {\r\n        pageCount: pageCount,\r\n        pageIndex: pageIndex,\r\n        pageIndexChange: pageIndexChange,\r\n        pagesCountText: pagesCountText\r\n    }), renderNextButton && createComponentVNode(2, LightButton, {\r\n        className: nextClassName,\r\n        label: \"Next page\",\r\n        onClick: navigateToNextPage\r\n    })], 0)\r\n};\r\n\r\nfunction getIncrement(direction) {\r\n    return \"next\" === direction ? 1 : -1\r\n}\r\nexport var PageIndexSelectorProps = {\r\n    isLargeDisplayMode: true\r\n};\r\nvar PageIndexSelectorPropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get maxPagesCount() {\r\n        return InternalPagerProps.maxPagesCount\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    },\r\n    get hasKnownLastPage() {\r\n        return InternalPagerProps.hasKnownLastPage\r\n    },\r\n    get showNavigationButtons() {\r\n        return InternalPagerProps.showNavigationButtons\r\n    },\r\n    get totalCount() {\r\n        return InternalPagerProps.totalCount\r\n    },\r\n    get isLargeDisplayMode() {\r\n        return PageIndexSelectorProps.isLargeDisplayMode\r\n    }\r\n};\r\nexport class PageIndexSelector extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.pageIndexChange = this.pageIndexChange.bind(this);\r\n        this.navigateToNextPage = this.navigateToNextPage.bind(this);\r\n        this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\r\n        this.getNextDirection = this.getNextDirection.bind(this);\r\n        this.getPrevDirection = this.getPrevDirection.bind(this);\r\n        this.canNavigateToPage = this.canNavigateToPage.bind(this);\r\n        this.getNextPageIndex = this.getNextPageIndex.bind(this);\r\n        this.canNavigateTo = this.canNavigateTo.bind(this);\r\n        this.navigateToPage = this.navigateToPage.bind(this)\r\n    }\r\n    get config() {\r\n        if (\"ConfigContext\" in this.context) {\r\n            return this.context.ConfigContext\r\n        }\r\n        return ConfigContext\r\n    }\r\n    pageIndexChange(pageIndex) {\r\n        if (this.canNavigateToPage(pageIndex)) {\r\n            this.props.pageIndexChange(pageIndex)\r\n        }\r\n    }\r\n    navigateToNextPage() {\r\n        this.navigateToPage(this.getNextDirection())\r\n    }\r\n    navigateToPrevPage() {\r\n        this.navigateToPage(this.getPrevDirection())\r\n    }\r\n    getNextDirection() {\r\n        var _this$config;\r\n        return !(null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled) ? \"next\" : \"prev\"\r\n    }\r\n    getPrevDirection() {\r\n        var _this$config2;\r\n        return !(null !== (_this$config2 = this.config) && void 0 !== _this$config2 && _this$config2.rtlEnabled) ? \"prev\" : \"next\"\r\n    }\r\n    canNavigateToPage(pageIndex) {\r\n        if (!this.props.hasKnownLastPage) {\r\n            return pageIndex >= 0\r\n        }\r\n        return pageIndex >= 0 && pageIndex <= this.props.pageCount - 1\r\n    }\r\n    getNextPageIndex(direction) {\r\n        return this.props.pageIndex + getIncrement(direction)\r\n    }\r\n    canNavigateTo(direction) {\r\n        return this.canNavigateToPage(this.getNextPageIndex(direction))\r\n    }\r\n    navigateToPage(direction) {\r\n        this.pageIndexChange(this.getNextPageIndex(direction))\r\n    }\r\n    get renderPrevButton() {\r\n        var {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            showNavigationButtons: showNavigationButtons\r\n        } = this.props;\r\n        return !isLargeDisplayMode || showNavigationButtons\r\n    }\r\n    get renderNextButton() {\r\n        return this.renderPrevButton || !this.props.hasKnownLastPage\r\n    }\r\n    get nextClassName() {\r\n        var direction = this.getNextDirection();\r\n        var canNavigate = this.canNavigateTo(direction);\r\n        return canNavigate ? nextButtonClassName : nextButtonDisabledClassName\r\n    }\r\n    get prevClassName() {\r\n        var direction = this.getPrevDirection();\r\n        var canNavigate = this.canNavigateTo(direction);\r\n        return canNavigate ? prevButtonClassName : prevButtonDisabledClassName\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            config: this.config,\r\n            pageIndexChange: this.pageIndexChange,\r\n            navigateToNextPage: this.navigateToNextPage,\r\n            navigateToPrevPage: this.navigateToPrevPage,\r\n            renderPrevButton: this.renderPrevButton,\r\n            renderNextButton: this.renderNextButton,\r\n            nextClassName: this.nextClassName,\r\n            prevClassName: this.prevClassName,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageIndexSelector.defaultProps = PageIndexSelectorPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/editors/drop_down_editors/select_box.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"dataSource\", \"defaultValue\", \"disabled\", \"displayExpr\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"onClick\", \"onKeyDown\", \"rtlEnabled\", \"tabIndex\", \"value\", \"valueChange\", \"valueExpr\", \"visible\", \"width\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport LegacySelectBox from \"../../../../ui/select_box\";\r\nimport {\r\n    DomComponentWrapper\r\n} from \"../../common/dom_component_wrapper\";\r\nimport {\r\n    BaseWidgetProps\r\n} from \"../../common/base_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: props,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\r\n        componentType: LegacySelectBox,\r\n        componentProps: props,\r\n        templateNames: [\"dropDownButtonTemplate\", \"groupTemplate\", \"itemTemplate\"]\r\n    }, restAttributes)))\r\n};\r\nexport var SelectBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BaseWidgetProps), Object.getOwnPropertyDescriptors({\r\n    focusStateEnabled: true,\r\n    hoverStateEnabled: true,\r\n    defaultValue: null,\r\n    isReactComponentWrapper: true\r\n})));\r\nexport class SelectBox extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$value = _extends({}, this.props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nSelectBox.defaultProps = SelectBoxProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/small.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\", \"parentRef\"];\r\nimport {\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    SelectBox\r\n} from \"../../editors/drop_down_editors/select_box\";\r\nimport {\r\n    calculateValuesFittedWidth\r\n} from \"../utils/calculate_values_fitted_width\";\r\nimport {\r\n    getElementMinWidth\r\n} from \"../utils/get_element_width\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes\r\n        },\r\n        width: width\r\n    } = _ref;\r\n    return createComponentVNode(2, SelectBox, {\r\n        displayExpr: \"text\",\r\n        valueExpr: \"value\",\r\n        dataSource: pageSizes,\r\n        value: pageSize,\r\n        valueChange: pageSizeChange,\r\n        width: width\r\n    })\r\n};\r\nexport var PageSizeSmallProps = {};\r\nvar PageSizeSmallPropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    }\r\n};\r\nexport class PageSizeSmall extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            minWidth: 10\r\n        };\r\n        this.updateWidth = this.updateWidth.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateWidth, [this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes])\r\n    }\r\n    updateWidth() {\r\n        this.setState(__state_argument => ({\r\n            minWidth: getElementMinWidth(this.props.parentRef.current) || __state_argument.minWidth\r\n        }))\r\n    }\r\n    get width() {\r\n        return calculateValuesFittedWidth(this.state.minWidth, this.props.pageSizes.map(p => p.value))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            width: this.width,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeSmall.defaultProps = PageSizeSmallPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/large.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    PAGER_SELECTED_PAGE_SIZE_CLASS,\r\n    PAGER_PAGE_SIZE_CLASS\r\n} from \"../common/consts\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pageSizesText: pageSizesText\r\n    } = _ref;\r\n    return createFragment(pageSizesText.map(_ref2 => {\r\n        var {\r\n            className: className,\r\n            click: click,\r\n            label: label,\r\n            text: text\r\n        } = _ref2;\r\n        return createComponentVNode(2, LightButton, {\r\n            className: className,\r\n            label: label,\r\n            onClick: click,\r\n            children: text\r\n        }, text)\r\n    }), 0)\r\n};\r\nexport var PageSizeLargeProps = {};\r\nvar PageSizeLargePropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    }\r\n};\r\nexport class PageSizeLarge extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.__getterCache = {};\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this)\r\n    }\r\n    get pageSizesText() {\r\n        if (void 0 !== this.__getterCache.pageSizesText) {\r\n            return this.__getterCache.pageSizesText\r\n        }\r\n        return this.__getterCache.pageSizesText = (() => {\r\n            var {\r\n                pageSize: pageSize,\r\n                pageSizes: pageSizes\r\n            } = this.props;\r\n            return pageSizes.map(_ref3 => {\r\n                var {\r\n                    text: text,\r\n                    value: processedPageSize\r\n                } = _ref3;\r\n                var selected = processedPageSize === pageSize;\r\n                var className = selected ? PAGER_SELECTED_PAGE_SIZE_CLASS : PAGER_PAGE_SIZE_CLASS;\r\n                return {\r\n                    className: className,\r\n                    click: this.onPageSizeChange(processedPageSize),\r\n                    label: \"Display \".concat(processedPageSize, \" items on page\"),\r\n                    text: text\r\n                }\r\n            })\r\n        })()\r\n    }\r\n    onPageSizeChange(processedPageSize) {\r\n        return () => {\r\n            this.props.pageSizeChange(processedPageSize);\r\n            return this.props.pageSize\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        if (this.props.pageSize !== nextProps.pageSize || this.props.pageSizes !== nextProps.pageSizes || this.props.pageSizeChange !== nextProps.pageSizeChange) {\r\n            this.__getterCache.pageSizesText = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            pageSizesText: this.pageSizesText,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeLarge.defaultProps = PageSizeLargePropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/selector.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"isLargeDisplayMode\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"rootElementRef\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    PageSizeSmall\r\n} from \"./small\";\r\nimport {\r\n    PageSizeLarge\r\n} from \"./large\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    PAGER_PAGE_SIZES_CLASS\r\n} from \"../common/consts\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        htmlRef: htmlRef,\r\n        normalizedPageSizes: normalizedPageSizes,\r\n        props: {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange\r\n        }\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_PAGE_SIZES_CLASS, [isLargeDisplayMode && createComponentVNode(2, PageSizeLarge, {\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    }), !isLargeDisplayMode && createComponentVNode(2, PageSizeSmall, {\r\n        parentRef: htmlRef,\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    })], 0, null, null, htmlRef)\r\n};\r\n\r\nfunction getAllText() {\r\n    return messageLocalization.getFormatter(\"dxPager-pageSizesAllText\")()\r\n}\r\nvar PageSizeSelectorProps = {\r\n    isLargeDisplayMode: true\r\n};\r\nvar PageSizeSelectorPropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    },\r\n    get pageSizes() {\r\n        return InternalPagerProps.pageSizes\r\n    },\r\n    get isLargeDisplayMode() {\r\n        return PageSizeSelectorProps.isLargeDisplayMode\r\n    }\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PageSizeSelector extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.htmlRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.setRootElementRef = this.setRootElementRef.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.htmlRef.current\r\n        }\r\n    }\r\n    get normalizedPageSizes() {\r\n        if (void 0 !== this.__getterCache.normalizedPageSizes) {\r\n            return this.__getterCache.normalizedPageSizes\r\n        }\r\n        return this.__getterCache.normalizedPageSizes = (() => {\r\n            var {\r\n                pageSizes: pageSizes\r\n            } = this.props;\r\n            return pageSizes.map(p => \"all\" === p || 0 === p ? {\r\n                text: getAllText(),\r\n                value: 0\r\n            } : {\r\n                text: String(p),\r\n                value: p\r\n            })\r\n        })()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.pageSizes !== nextProps.pageSizes) {\r\n            this.__getterCache.normalizedPageSizes = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            htmlRef: this.htmlRef,\r\n            normalizedPageSizes: this.normalizedPageSizes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeSelector.defaultProps = PageSizeSelectorPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/content.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"infoTextRef\", \"infoTextVisible\", \"isLargeDisplayMode\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pageSizesRef\", \"pagesCountText\", \"pagesNavigatorVisible\", \"pagesRef\", \"rootElementRef\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent,\r\n    normalizeStyles\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    InfoText\r\n} from \"./info\";\r\nimport {\r\n    PageIndexSelector\r\n} from \"./pages/page_index_selector\";\r\nimport {\r\n    PageSizeSelector\r\n} from \"./page_size/selector\";\r\nimport {\r\n    PAGER_PAGES_CLASS,\r\n    PAGER_PAGE_INDEXES_CLASS,\r\n    LIGHT_MODE_CLASS,\r\n    PAGER_CLASS\r\n} from \"./common/consts\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"./common/pager_props\";\r\nimport {\r\n    combineClasses\r\n} from \"../../utils/combine_classes\";\r\nimport {\r\n    Widget\r\n} from \"../common/widget\";\r\nimport {\r\n    registerKeyboardAction as _registerKeyboardAction\r\n} from \"../../../ui/shared/accessibility\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        classes: classes,\r\n        infoVisible: infoVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageIndexSelectorVisible: pageIndexSelectorVisible,\r\n        pagesContainerVisibility: pagesContainerVisibility,\r\n        pagesContainerVisible: pagesContainerVisible,\r\n        props: {\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            infoTextRef: infoTextRef,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pageSizesRef: pageSizesRef,\r\n            pagesCountText: pagesCountText,\r\n            pagesRef: pagesRef,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        },\r\n        restAttributes: restAttributes,\r\n        widgetRootElementRef: widgetRootElementRef\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, Widget, _extends({\r\n        rootElementRef: widgetRootElementRef,\r\n        rtlEnabled: rtlEnabled,\r\n        classes: classes,\r\n        visible: visible\r\n    }, restAttributes, {\r\n        children: [showPageSizes && createComponentVNode(2, PageSizeSelector, {\r\n            rootElementRef: pageSizesRef,\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes\r\n        }), pagesContainerVisible && createVNode(1, \"div\", PAGER_PAGES_CLASS, [infoVisible && createComponentVNode(2, InfoText, {\r\n            rootElementRef: infoTextRef,\r\n            infoText: infoText,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            totalCount: totalCount\r\n        }), pageIndexSelectorVisible && createVNode(1, \"div\", PAGER_PAGE_INDEXES_CLASS, createComponentVNode(2, PageIndexSelector, {\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pagesCountText: pagesCountText,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount\r\n        }), 2, null, null, pagesRef)], 0, {\r\n            style: normalizeStyles({\r\n                visibility: pagesContainerVisibility\r\n            })\r\n        })]\r\n    })))\r\n};\r\nexport var PagerContentProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(InternalPagerProps), Object.getOwnPropertyDescriptors({\r\n    infoTextVisible: true,\r\n    isLargeDisplayMode: true\r\n})));\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagerContent extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.widgetRootElementRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.setRootElementRef = this.setRootElementRef.bind(this);\r\n        this.createFakeInstance = this.createFakeInstance.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    getChildContext() {\r\n        return _extends({}, this.context, {\r\n            KeyboardActionContext: this.keyboardAction\r\n        })\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.widgetRootElementRef.current\r\n        }\r\n    }\r\n    createFakeInstance() {\r\n        return {\r\n            option: () => false,\r\n            element: () => this.widgetRootElementRef.current,\r\n            _createActionByOption: () => e => {\r\n                var _this$props$onKeyDown, _this$props;\r\n                null === (_this$props$onKeyDown = (_this$props = this.props).onKeyDown) || void 0 === _this$props$onKeyDown ? void 0 : _this$props$onKeyDown.call(_this$props, e)\r\n            }\r\n        }\r\n    }\r\n    get keyboardAction() {\r\n        if (void 0 !== this.__getterCache.keyboardAction) {\r\n            return this.__getterCache.keyboardAction\r\n        }\r\n        return this.__getterCache.keyboardAction = (() => ({\r\n            registerKeyboardAction: (element, action) => {\r\n                var fakePagerInstance = this.createFakeInstance();\r\n                return _registerKeyboardAction(\"pager\", fakePagerInstance, element, void 0, action)\r\n            }\r\n        }))()\r\n    }\r\n    get infoVisible() {\r\n        var {\r\n            infoTextVisible: infoTextVisible,\r\n            showInfo: showInfo\r\n        } = this.props;\r\n        return showInfo && infoTextVisible && this.isLargeDisplayMode\r\n    }\r\n    get pageIndexSelectorVisible() {\r\n        return 0 !== this.props.pageSize\r\n    }\r\n    get normalizedDisplayMode() {\r\n        var {\r\n            displayMode: displayMode,\r\n            lightModeEnabled: lightModeEnabled\r\n        } = this.props;\r\n        if (\"adaptive\" === displayMode && void 0 !== lightModeEnabled) {\r\n            return lightModeEnabled ? \"compact\" : \"full\"\r\n        }\r\n        return displayMode\r\n    }\r\n    get pagesContainerVisible() {\r\n        return !!this.props.pagesNavigatorVisible && this.props.pageCount > 0\r\n    }\r\n    get pagesContainerVisibility() {\r\n        if (\"auto\" === this.props.pagesNavigatorVisible && 1 === this.props.pageCount && this.props.hasKnownLastPage) {\r\n            return \"hidden\"\r\n        }\r\n        return\r\n    }\r\n    get isLargeDisplayMode() {\r\n        var displayMode = this.normalizedDisplayMode;\r\n        var result = false;\r\n        if (\"adaptive\" === displayMode) {\r\n            result = this.props.isLargeDisplayMode\r\n        } else {\r\n            result = \"full\" === displayMode\r\n        }\r\n        return result\r\n    }\r\n    get classes() {\r\n        var classesMap = {\r\n            [\"\".concat(this.props.className)]: !!this.props.className,\r\n            [PAGER_CLASS]: true,\r\n            [LIGHT_MODE_CLASS]: !this.isLargeDisplayMode\r\n        };\r\n        return combineClasses(classesMap)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props2 = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props2, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.onKeyDown !== nextProps.onKeyDown) {\r\n            this.__getterCache.keyboardAction = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            widgetRootElementRef: this.widgetRootElementRef,\r\n            keyboardAction: this.keyboardAction,\r\n            infoVisible: this.infoVisible,\r\n            pageIndexSelectorVisible: this.pageIndexSelectorVisible,\r\n            pagesContainerVisible: this.pagesContainerVisible,\r\n            pagesContainerVisibility: this.pagesContainerVisibility,\r\n            isLargeDisplayMode: this.isLargeDisplayMode,\r\n            classes: this.classes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagerContent.defaultProps = PagerContentProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"defaultPageIndex\", \"defaultPageSize\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pagesCountText\", \"pagesNavigatorVisible\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoWrapperComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    ResizableContainer\r\n} from \"./resizable_container\";\r\nimport {\r\n    PagerProps\r\n} from \"./common/pager_props\";\r\nimport {\r\n    PagerContent\r\n} from \"./content\";\r\nimport {\r\n    combineClasses\r\n} from \"../../utils/combine_classes\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pagerProps: pagerProps,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, ResizableContainer, _extends({\r\n        contentTemplate: PagerContent,\r\n        pagerProps: pagerProps\r\n    }, restAttributes)))\r\n};\r\nimport {\r\n    createReRenderEffect\r\n} from \"@devextreme/runtime/inferno\";\r\nexport class Pager extends InfernoWrapperComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.__getterCache = {};\r\n        this.state = {\r\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.props.defaultPageSize,\r\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.props.defaultPageIndex\r\n        };\r\n        this.pageIndexChange = this.pageIndexChange.bind(this);\r\n        this.pageSizeChange = this.pageSizeChange.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [createReRenderEffect()]\r\n    }\r\n    pageIndexChange(newPageIndex) {\r\n        if (this.props.gridCompatibility) {\r\n            var __newValue;\r\n            this.setState(__state_argument => {\r\n                __newValue = newPageIndex + 1;\r\n                return {\r\n                    pageIndex: __newValue\r\n                }\r\n            });\r\n            this.props.pageIndexChange(__newValue)\r\n        } else {\r\n            var _newValue;\r\n            this.setState(__state_argument => {\r\n                _newValue = newPageIndex;\r\n                return {\r\n                    pageIndex: _newValue\r\n                }\r\n            });\r\n            this.props.pageIndexChange(_newValue)\r\n        }\r\n    }\r\n    get pageIndex() {\r\n        if (this.props.gridCompatibility) {\r\n            return (void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex) - 1\r\n        }\r\n        return void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n    }\r\n    pageSizeChange(newPageSize) {\r\n        var __newValue;\r\n        this.setState(__state_argument => {\r\n            __newValue = newPageSize;\r\n            return {\r\n                pageSize: __newValue\r\n            }\r\n        });\r\n        this.props.pageSizeChange(__newValue)\r\n    }\r\n    get className() {\r\n        if (this.props.gridCompatibility) {\r\n            return combineClasses({\r\n                \"dx-datagrid-pager\": true,\r\n                [\"\".concat(this.props.className)]: !!this.props.className\r\n            })\r\n        }\r\n        return this.props.className\r\n    }\r\n    get pagerProps() {\r\n        if (void 0 !== this.__getterCache.pagerProps) {\r\n            return this.__getterCache.pagerProps\r\n        }\r\n        return this.__getterCache.pagerProps = (() => _extends({}, _extends({}, this.props, {\r\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n        }), {\r\n            className: this.className,\r\n            pageIndex: this.pageIndex,\r\n            pageIndexChange: pageIndex => this.pageIndexChange(pageIndex),\r\n            pageSizeChange: pageSize => this.pageSizeChange(pageSize)\r\n        }))()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$pageSize$ = _extends({}, this.props, {\r\n                pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n                pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$pageSize$, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props !== nextProps || this.props.gridCompatibility !== nextProps.gridCompatibility || this.props.className !== nextProps.className || this.state.pageIndex !== nextState.pageIndex || this.props.pageIndex !== nextProps.pageIndex || this.props.pageIndexChange !== nextProps.pageIndexChange || this.props.pageSizeChange !== nextProps.pageSizeChange) {\r\n            this.__getterCache.pagerProps = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n                pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n            }),\r\n            pageIndexChange: this.pageIndexChange,\r\n            pageIndex: this.pageIndex,\r\n            pageSizeChange: this.pageSizeChange,\r\n            className: this.className,\r\n            pagerProps: this.pagerProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPager.defaultProps = PagerProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pager.j.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport {\r\n    GridPagerWrapper\r\n} from \"../../component_wrapper/grid_pager\";\r\nimport {\r\n    Pager as PagerComponent\r\n} from \"./pager\";\r\nexport default class Pager extends GridPagerWrapper {\r\n    getProps() {\r\n        var props = super.getProps();\r\n        props.onKeyDown = this._wrapKeyDownHandler(props.onKeyDown);\r\n        return props\r\n    }\r\n    get _propsInfo() {\r\n        return {\r\n            twoWay: [\r\n                [\"pageSize\", \"defaultPageSize\", \"pageSizeChange\"],\r\n                [\"pageIndex\", \"defaultPageIndex\", \"pageIndexChange\"]\r\n            ],\r\n            allowNull: [],\r\n            elements: [],\r\n            templates: [],\r\n            props: [\"defaultPageSize\", \"pageSizeChange\", \"defaultPageIndex\", \"pageIndexChange\", \"gridCompatibility\", \"className\", \"showInfo\", \"infoText\", \"lightModeEnabled\", \"displayMode\", \"maxPagesCount\", \"pageCount\", \"pagesCountText\", \"visible\", \"hasKnownLastPage\", \"pagesNavigatorVisible\", \"showPageSizes\", \"pageSizes\", \"rtlEnabled\", \"showNavigationButtons\", \"totalCount\", \"onKeyDown\", \"pageSize\", \"pageIndex\"]\r\n        }\r\n    }\r\n    get _viewComponent() {\r\n        return PagerComponent\r\n    }\r\n}\r\nregisterComponent(\"dxPager\", Pager);\r\n","/**\r\n * DevExtreme (esm/ui/pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Widget from \"../renovation/ui/pager/pager.j\";\r\nexport default Widget;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport Pager from \"../pager\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar PAGER_CLASS = \"pager\";\r\nvar MAX_PAGES_COUNT = 10;\r\nvar getPageIndex = function(dataController) {\r\n    return 1 + (parseInt(dataController.pageIndex()) || 0)\r\n};\r\nvar PagerView = modules.View.inherit({\r\n    init: function() {\r\n        var dataController = this.getController(\"data\");\r\n        dataController.changed.add(e => {\r\n            if (e && e.repaintChangesOnly) {\r\n                var pager = this._getPager();\r\n                if (pager) {\r\n                    pager.option({\r\n                        pageIndex: getPageIndex(dataController),\r\n                        pageSize: dataController.pageSize(),\r\n                        pageCount: dataController.pageCount(),\r\n                        totalCount: dataController.totalCount(),\r\n                        hasKnownLastPage: dataController.hasKnownLastPage()\r\n                    })\r\n                } else {\r\n                    this.render()\r\n                }\r\n            } else if (!e || \"update\" !== e.changeType && \"updateSelection\" !== e.changeType && \"updateFocusedRow\" !== e.changeType) {\r\n                this.render()\r\n            }\r\n        })\r\n    },\r\n    _getPager: function() {\r\n        var $element = this.element();\r\n        return $element && $element.data(\"dxPager\")\r\n    },\r\n    _renderCore: function() {\r\n        var $element = this.element().addClass(this.addWidgetPrefix(PAGER_CLASS));\r\n        var pagerOptions = this.option(\"pager\") || {};\r\n        var dataController = this.getController(\"data\");\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        var options = {\r\n            maxPagesCount: MAX_PAGES_COUNT,\r\n            pageIndex: getPageIndex(dataController),\r\n            pageCount: dataController.pageCount(),\r\n            pageSize: dataController.pageSize(),\r\n            showPageSizes: pagerOptions.showPageSizeSelector,\r\n            showInfo: pagerOptions.showInfo,\r\n            displayMode: pagerOptions.displayMode,\r\n            pagesNavigatorVisible: pagerOptions.visible,\r\n            showNavigationButtons: pagerOptions.showNavigationButtons,\r\n            pageSizes: this.getPageSizes(),\r\n            totalCount: dataController.totalCount(),\r\n            hasKnownLastPage: dataController.hasKnownLastPage(),\r\n            pageIndexChanged: function(pageIndex) {\r\n                if (dataController.pageIndex() !== pageIndex - 1) {\r\n                    setTimeout((function() {\r\n                        dataController.pageIndex(pageIndex - 1)\r\n                    }))\r\n                }\r\n            },\r\n            pageSizeChanged: function(pageSize) {\r\n                setTimeout((function() {\r\n                    dataController.pageSize(pageSize)\r\n                }))\r\n            },\r\n            onKeyDown: e => keyboardController && keyboardController.executeAction(\"onKeyDown\", e),\r\n            useLegacyKeyboardNavigation: this.option(\"useLegacyKeyboardNavigation\"),\r\n            useKeyboard: this.option(\"keyboardNavigation.enabled\")\r\n        };\r\n        if (isDefined(pagerOptions.infoText)) {\r\n            options.infoText = pagerOptions.infoText\r\n        }\r\n        if (hasWindow()) {\r\n            this._createComponent($element, Pager, options)\r\n        } else {\r\n            $element.addClass(\"dx-pager\").html('<div class=\"dx-pages\"><div class=\"dx-page\"></div></div>')\r\n        }\r\n    },\r\n    getPageSizes: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var allowedPageSizes = pagerOptions && pagerOptions.allowedPageSizes;\r\n        var pageSize = dataController.pageSize();\r\n        if (!isDefined(this._pageSizes) || -1 === inArray(pageSize, this._pageSizes)) {\r\n            this._pageSizes = [];\r\n            if (pagerOptions) {\r\n                if (Array.isArray(allowedPageSizes)) {\r\n                    this._pageSizes = allowedPageSizes\r\n                } else if (allowedPageSizes && pageSize > 1) {\r\n                    this._pageSizes = [Math.floor(pageSize / 2), pageSize, 2 * pageSize]\r\n                }\r\n            }\r\n        }\r\n        return this._pageSizes\r\n    },\r\n    isVisible: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var pagerVisible = pagerOptions && pagerOptions.visible;\r\n        var scrolling = this.option(\"scrolling\");\r\n        if (\"auto\" === pagerVisible) {\r\n            if (scrolling && (\"virtual\" === scrolling.mode || \"infinite\" === scrolling.mode)) {\r\n                pagerVisible = false\r\n            } else {\r\n                pagerVisible = dataController.pageCount() > 1 || dataController.isLoaded() && !dataController.hasKnownLastPage()\r\n            }\r\n        }\r\n        return pagerVisible\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        var name = args.name;\r\n        var isPager = \"pager\" === name;\r\n        var isPaging = \"paging\" === name;\r\n        var isDataSource = \"dataSource\" === name;\r\n        var isScrolling = \"scrolling\" === name;\r\n        var dataController = this.getController(\"data\");\r\n        if (isPager || isPaging || isScrolling || isDataSource) {\r\n            args.handled = true;\r\n            if (dataController.skipProcessingPagingChange(args.fullName)) {\r\n                return\r\n            }\r\n            if (isPager || isPaging) {\r\n                this._pageSizes = null\r\n            }\r\n            if (!isDataSource) {\r\n                this._invalidate();\r\n                if (hasWindow() && isPager && this.component) {\r\n                    this.component.resize()\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\nexport var pagerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            pager: {\r\n                visible: \"auto\",\r\n                showPageSizeSelector: false,\r\n                allowedPageSizes: \"auto\"\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        pagerView: PagerView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    pagerModule\r\n} from \"../grid_core/ui.grid_core.pager\";\r\ngridCore.registerModule(\"pager\", pagerModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setHeight as _setHeight,\r\n    getHeight,\r\n    setWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    addNamespace,\r\n    eventData as getEventData,\r\n    isTouchEvent\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../../events/drag\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport fx from \"../../animation/fx\";\r\nimport swatchContainer from \"../widget/swatch_container\";\r\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\r\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\r\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\r\nvar TRACKER_CLASS = \"tracker\";\r\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\r\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\r\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\r\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\r\nvar DRAGGING_DELTA = 5;\r\nvar COLUMN_OPACITY = .5;\r\nvar allowResizing = function(that) {\r\n    return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\")\r\n};\r\nvar allowReordering = function(that) {\r\n    return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\")\r\n};\r\nvar TrackerView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        this.callBase();\r\n        this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\r\n        this.hide()\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        if (this._positionChanged) {\r\n            this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n        }\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        that._positionChanged = function(position) {\r\n            var $element = that.element();\r\n            if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        this._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            this._unsubscribeFromCallback();\r\n            if (args.value) {\r\n                this._subscribeToCallback();\r\n                this._invalidate()\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._subscribeToCallback()\r\n    },\r\n    isVisible: function() {\r\n        return allowResizing(this)\r\n    },\r\n    show: function() {\r\n        this.element().show()\r\n    },\r\n    hide: function() {\r\n        this.element() && this.element().hide()\r\n    },\r\n    setHeight: function(value) {\r\n        _setHeight(this.element(), value)\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar SeparatorView = modules.View.inherit({\r\n    _renderSeparator: function() {},\r\n    _renderCore: function(options) {\r\n        this.callBase(options);\r\n        this._isShown = true;\r\n        this._renderSeparator();\r\n        this.hide()\r\n    },\r\n    show: function() {\r\n        this._isShown = true\r\n    },\r\n    hide: function() {\r\n        this._isShown = false\r\n    },\r\n    height: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                _setHeight($element, value)\r\n            } else {\r\n                return getHeight($element)\r\n            }\r\n        }\r\n    },\r\n    width: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                setWidth($element, value)\r\n            } else {\r\n                return getWidth($element)\r\n            }\r\n        }\r\n    }\r\n});\r\nvar ColumnsSeparatorView = SeparatorView.inherit({\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        var $element = this.element();\r\n        $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS))\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        var $element;\r\n        that._positionChanged = function(position) {\r\n            $element = that.element();\r\n            if ($element) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        that._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n    },\r\n    _init: function() {\r\n        this._isTransparent = allowResizing(this);\r\n        if (this.isVisible()) {\r\n            this._subscribeToCallback()\r\n        }\r\n    },\r\n    isVisible: function() {\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this))\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._invalidate();\r\n                this.hide(true)\r\n            } else {\r\n                this._unsubscribeFromCallback();\r\n                this._isTransparent = allowResizing(this);\r\n                this.hide(true)\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._init()\r\n    },\r\n    show: function() {\r\n        var $element = this.element();\r\n        if ($element && !this._isShown) {\r\n            if (this._isTransparent) {\r\n                $element.removeClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT))\r\n            } else {\r\n                $element.show()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    hide: function(force) {\r\n        var $element = this.element();\r\n        var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\r\n        if ($element && (this._isShown || force)) {\r\n            if (this._isTransparent) {\r\n                $element.addClass(columnsSeparatorTransparent);\r\n                $element.css(\"left\", \"\");\r\n                $element.show()\r\n            } else {\r\n                if ($element.hasClass(columnsSeparatorTransparent)) {\r\n                    $element.removeClass(columnsSeparatorTransparent)\r\n                }\r\n                $element.hide()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    moveByX: function(outerX) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"left\", null === outerX ? 0 : outerX - this._parentElement().offset().left)\r\n        }\r\n    },\r\n    changeCursor: function(cursorName) {\r\n        cursorName = isDefined(cursorName) ? cursorName : \"\";\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"cursor\", cursorName)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar BlockSeparatorView = SeparatorView.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            if (!isLoading) {\r\n                that.hide()\r\n            }\r\n        }))\r\n    },\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\")\r\n    },\r\n    hide: function() {\r\n        var $parent = this._parentElement();\r\n        var $element = this.element();\r\n        if ($element && this._isShown) {\r\n            $element.css(\"display\", \"none\")\r\n        }\r\n        if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\r\n            $parent.prepend(this.element())\r\n        }\r\n        this.callBase()\r\n    },\r\n    isVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled\r\n    },\r\n    show: function(targetLocation) {\r\n        var $element = this.element();\r\n        var startAnimate = function(toOptions) {\r\n            fx.stop($element, true);\r\n            fx.animate($element, {\r\n                type: \"slide\",\r\n                from: {\r\n                    width: 0,\r\n                    display: toOptions.display\r\n                },\r\n                to: toOptions,\r\n                duration: 300,\r\n                easing: \"swing\"\r\n            })\r\n        };\r\n        if ($element && !this._isShown) {\r\n            switch (targetLocation) {\r\n                case \"group\":\r\n                    startAnimate({\r\n                        width: \"50px\",\r\n                        display: \"inline-block\"\r\n                    });\r\n                    break;\r\n                case \"columnChooser\":\r\n                    startAnimate({\r\n                        width: \"100%\",\r\n                        display: \"block\"\r\n                    });\r\n                    break;\r\n                default:\r\n                    $element.css(\"display\", \"\")\r\n            }\r\n        }\r\n        this.callBase()\r\n    }\r\n});\r\nvar DraggingHeaderView = modules.View.inherit({\r\n    _isDragging: false,\r\n    isDragging: function() {\r\n        return this._isDragging\r\n    },\r\n    _getDraggingPanelByPos: function(pos) {\r\n        var result;\r\n        each(this._dragOptions.draggingPanels, (function(index, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var boundingRect = draggingPanel.getBoundingRect();\r\n                if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\r\n                    result = draggingPanel;\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide()\r\n    },\r\n    _resetTargetColumnOptions: function() {\r\n        var params = this._dropOptions;\r\n        params.targetColumnIndex = -1;\r\n        delete params.targetColumnElement;\r\n        delete params.isLast;\r\n        delete params.posX;\r\n        delete params.posY\r\n    },\r\n    _getVisibleIndexObject: function(rowIndex, visibleIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return {\r\n                columnIndex: visibleIndex,\r\n                rowIndex: rowIndex\r\n            }\r\n        }\r\n        return visibleIndex\r\n    },\r\n    dispose: function() {\r\n        var element = this.element();\r\n        this._dragOptions = null;\r\n        element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove()\r\n    },\r\n    isVisible: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var commonColumnSettings = columnsController.getCommonSettings();\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this._controller = this.getController(\"draggingHeader\");\r\n        this._columnsResizerViewController = this.getController(\"columnsResizer\");\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            var element = that.element();\r\n            if (!isLoading && element) {\r\n                element.hide()\r\n            }\r\n        }))\r\n    },\r\n    dragHeader: function(options) {\r\n        var columnElement = options.columnElement;\r\n        var isCommandColumn = !!options.sourceColumn.type;\r\n        this._isDragging = true;\r\n        this._dragOptions = options;\r\n        this._dropOptions = {\r\n            sourceIndex: options.index,\r\n            sourceColumnIndex: this._getVisibleIndexObject(options.rowIndex, options.columnIndex),\r\n            sourceColumnElement: options.columnElement,\r\n            sourceLocation: options.sourceLocation\r\n        };\r\n        var document = domAdapter.getDocument();\r\n        this._onSelectStart = document.onselectstart;\r\n        document.onselectstart = function() {\r\n            return false\r\n        };\r\n        this._controller.drag(this._dropOptions);\r\n        this.element().css({\r\n            textAlign: columnElement && columnElement.css(\"textAlign\"),\r\n            height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || getHeight(columnElement)),\r\n            width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || getWidth(columnElement)),\r\n            whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\r\n        }).addClass(this.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\r\n        this.element().appendTo(swatchContainer.getSwatchContainer(columnElement))\r\n    },\r\n    moveHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var eventData = getEventData(e);\r\n        var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\r\n        var dragOptions = that._dragOptions;\r\n        if (that._isDragging && !isResizing) {\r\n            var $element = that.element();\r\n            var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\r\n            var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\r\n            if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\r\n                $element.show();\r\n                var newLeft = eventData.x - dragOptions.deltaX;\r\n                var newTop = eventData.y - dragOptions.deltaY;\r\n                $element.css({\r\n                    left: newLeft,\r\n                    top: newTop\r\n                });\r\n                that.dockHeader(eventData)\r\n            }\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    dockHeader: function(eventData) {\r\n        var targetDraggingPanel = this._getDraggingPanelByPos(eventData);\r\n        var controller = this._controller;\r\n        var params = this._dropOptions;\r\n        var dragOptions = this._dragOptions;\r\n        if (targetDraggingPanel) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\r\n            var axisName = isVerticalOrientation ? \"y\" : \"x\";\r\n            var targetLocation = targetDraggingPanel.getName();\r\n            var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\r\n            var sourceColumn = dragOptions.sourceColumn;\r\n            var columnElements = targetDraggingPanel.getColumnElements(rowIndex, null === sourceColumn || void 0 === sourceColumn ? void 0 : sourceColumn.ownerBand) || [];\r\n            var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\r\n            var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns(extend({}, dragOptions, {\r\n                targetDraggingPanel: targetDraggingPanel,\r\n                columns: targetDraggingPanel.getColumns(rowIndex),\r\n                columnElements: columnElements,\r\n                isVerticalOrientation: isVerticalOrientation,\r\n                startColumnIndex: \"headers\" === targetLocation && $(columnElements[0]).index()\r\n            }));\r\n            pointsByTarget[targetLocation] = pointsByColumns;\r\n            params.targetLocation = targetLocation;\r\n            if (pointsByColumns.length > 0) {\r\n                for (var i = 0; i < pointsByColumns.length; i++) {\r\n                    var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\r\n                    if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\r\n                        params.targetColumnIndex = this._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\r\n                        if (columnElements[i]) {\r\n                            params.targetColumnElement = columnElements.eq(i);\r\n                            params.isLast = false\r\n                        } else {\r\n                            params.targetColumnElement = columnElements.last();\r\n                            params.isLast = true\r\n                        }\r\n                        params.posX = pointsByColumns[i].x;\r\n                        params.posY = pointsByColumns[i].y;\r\n                        controller.dock(params);\r\n                        break\r\n                    }\r\n                }\r\n            } else {\r\n                this._resetTargetColumnOptions();\r\n                controller.dock(params)\r\n            }\r\n        }\r\n    },\r\n    dropHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var controller = that._controller;\r\n        that.element().hide();\r\n        if (controller && that._isDragging) {\r\n            controller.drop(that._dropOptions)\r\n        }\r\n        that.element().appendTo(that._parentElement());\r\n        that._dragOptions = null;\r\n        that._dropOptions = null;\r\n        that._isDragging = false;\r\n        domAdapter.getDocument().onselectstart = that._onSelectStart || null\r\n    }\r\n});\r\nvar isNextColumnResizingMode = function(that) {\r\n    return \"widget\" !== that.option(\"columnResizingMode\")\r\n};\r\nvar ColumnsResizerViewController = modules.ViewController.inherit({\r\n    _isHeadersRowArea: function(posY) {\r\n        if (this._columnHeadersView) {\r\n            var element = this._columnHeadersView.element();\r\n            if (element) {\r\n                var offsetTop = element.offset().top;\r\n                var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\r\n                return posY >= offsetTop && posY <= offsetTop + headersRowHeight\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _isRtlParentStyle: function() {\r\n        var _this$_$parentContain;\r\n        return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"))\r\n    },\r\n    _pointCreated: function(point, cellsLength, columns) {\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\r\n        if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\r\n            point.columnIndex -= firstPointColumnIndex;\r\n            var currentColumn = columns[point.columnIndex] || {};\r\n            var nextColumn = columns[point.columnIndex + 1] || {};\r\n            return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing)\r\n        }\r\n        return true\r\n    },\r\n    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n        if (pointsByColumns) {\r\n            for (var i = 0; i < pointsByColumns.length; i++) {\r\n                if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\r\n                    continue\r\n                }\r\n                if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\r\n                    return pointsByColumns[i]\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    _moveSeparator: function(args) {\r\n        var _that$_draggingHeader;\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var columnsSeparatorWidth = that._columnsSeparatorView.width();\r\n        var isNextColumnMode = isNextColumnResizingMode(that);\r\n        var deltaX = columnsSeparatorWidth / 2;\r\n        var parentOffset = that._$parentContainer.offset();\r\n        var parentOffsetLeft = parentOffset.left;\r\n        var eventData = getEventData(e);\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var isDragging = null === (_that$_draggingHeader = that._draggingHeaderView) || void 0 === _that$_draggingHeader ? void 0 : _that$_draggingHeader.isDragging();\r\n        if (that._isResizing && that._resizingInfo) {\r\n            if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + getWidth(that._$parentContainer))) {\r\n                if (that._updateColumnsWidthIfNeeded(eventData.x)) {\r\n                    var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\r\n                    var cell = $cell[0];\r\n                    if (cell) {\r\n                        var outerWidth = cell.getBoundingClientRect().width;\r\n                        that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : outerWidth));\r\n                        that._tablePositionController.update(that._targetPoint.y);\r\n                        e.preventDefault()\r\n                    }\r\n                }\r\n            }\r\n        } else if (!isDragging) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                if (that._previousParentOffset) {\r\n                    if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\r\n                        that.pointsByColumns(null)\r\n                    }\r\n                }\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\r\n                that._previousParentOffset = parentOffset;\r\n                that._isReadyResizing = false;\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.changeCursor(\"col-resize\");\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\r\n                    that._tablePositionController.update(that._targetPoint.y);\r\n                    that._isReadyResizing = true;\r\n                    e.preventDefault()\r\n                } else {\r\n                    that._columnsSeparatorView.changeCursor();\r\n                    that._columnsSeparatorView.moveByX(null)\r\n                }\r\n            } else {\r\n                that.pointsByColumns(null);\r\n                that._isReadyResizing = false;\r\n                that._columnsSeparatorView.changeCursor();\r\n                that._columnsSeparatorView.moveByX(null)\r\n            }\r\n        }\r\n    },\r\n    _endResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        if (that._isResizing) {\r\n            that.pointsByColumns(null);\r\n            that._resizingInfo = null;\r\n            that._columnsSeparatorView.hide();\r\n            that._columnsSeparatorView.changeCursor();\r\n            that._trackerView.hide();\r\n            that._isReadyResizing = false;\r\n            that._isResizing = false\r\n        }\r\n    },\r\n    _getNextColumnIndex: function(currentColumnIndex) {\r\n        return currentColumnIndex + 1\r\n    },\r\n    _setupResizingInfo: function(posX) {\r\n        var currentColumnIndex = this._targetPoint.columnIndex;\r\n        var nextColumnIndex = this._getNextColumnIndex(currentColumnIndex);\r\n        var currentHeader = this._columnHeadersView.getHeaderElement(currentColumnIndex);\r\n        var nextHeader = this._columnHeadersView.getHeaderElement(nextColumnIndex);\r\n        this._resizingInfo = {\r\n            startPosX: posX,\r\n            currentColumnIndex: currentColumnIndex,\r\n            currentColumnWidth: currentHeader && currentHeader.length > 0 ? getBoundingRect(currentHeader[0]).width : 0,\r\n            nextColumnIndex: nextColumnIndex,\r\n            nextColumnWidth: nextHeader && nextHeader.length > 0 ? getBoundingRect(nextHeader[0]).width : 0\r\n        }\r\n    },\r\n    _startResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var eventData = getEventData(e);\r\n        if (isTouchEvent(e)) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\r\n                    that._isReadyResizing = true\r\n                }\r\n            } else {\r\n                that._isReadyResizing = false\r\n            }\r\n        }\r\n        if (that._isReadyResizing) {\r\n            that._setupResizingInfo(eventData.x);\r\n            that._isResizing = true;\r\n            that._tablePositionController.update(that._targetPoint.y);\r\n            that._columnsSeparatorView.show();\r\n            that._trackerView.show();\r\n            var scrollable = that.component.getScrollable();\r\n            if (scrollable && that._isRtlParentStyle()) {\r\n                that._scrollRight = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - scrollable.scrollLeft()\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation()\r\n        }\r\n        if (this.isResizing()) {\r\n            this.getController(\"editorFactory\").loseFocus()\r\n        }\r\n    },\r\n    _generatePointsByColumns: function() {\r\n        var that = this;\r\n        var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\r\n        var cells = that._columnHeadersView.getColumnElements();\r\n        var pointsByColumns = [];\r\n        if (cells && cells.length > 0) {\r\n            pointsByColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                return that._pointCreated(point, cells.length, columns)\r\n            }))\r\n        }\r\n        that._pointsByColumns = pointsByColumns\r\n    },\r\n    _unsubscribeFromEvents: function() {\r\n        this._moveSeparatorHandler && eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\r\n        this._startResizingHandler && eventsEngine.off(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this._startResizingHandler);\r\n        if (this._endResizingHandler) {\r\n            eventsEngine.off(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler)\r\n        }\r\n    },\r\n    _subscribeToEvents: function() {\r\n        this._moveSeparatorHandler = this.createAction(this._moveSeparator);\r\n        this._startResizingHandler = this.createAction(this._startResizing);\r\n        this._endResizingHandler = this.createAction(this._endResizing);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\r\n        eventsEngine.on(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this, this._startResizingHandler);\r\n        eventsEngine.on(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler)\r\n    },\r\n    _updateColumnsWidthIfNeeded: function(posX) {\r\n        var deltaX;\r\n        var needUpdate = false;\r\n        var nextCellWidth;\r\n        var resizingInfo = this._resizingInfo;\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnsSeparatorWidth = this._columnsSeparatorView.width();\r\n        var contentWidth = this._rowsView.contentWidth();\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\r\n        var minWidth;\r\n        var nextColumn;\r\n        var cellWidth;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n\r\n        function isPercentWidth(width) {\r\n            return isString(width) && \"%\" === width.slice(-1)\r\n        }\r\n\r\n        function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\r\n            if (column) {\r\n                var oldColumnWidth = column.width;\r\n                if (oldColumnWidth) {\r\n                    adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth)\r\n                }\r\n                if (adaptColumnWidthByRatio) {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\r\n                    columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\")\r\n                } else {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", null);\r\n                    columnsController.columnOption(column.index, \"width\", columnWidth)\r\n                }\r\n            }\r\n        }\r\n        deltaX = posX - resizingInfo.startPosX;\r\n        if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\r\n            deltaX = -deltaX\r\n        }\r\n        cellWidth = resizingInfo.currentColumnWidth + deltaX;\r\n        var column = visibleColumns[resizingInfo.currentColumnIndex];\r\n        minWidth = column && column.minWidth || columnsSeparatorWidth;\r\n        needUpdate = cellWidth >= minWidth;\r\n        if (isNextColumnMode) {\r\n            nextCellWidth = resizingInfo.nextColumnWidth - deltaX;\r\n            nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\r\n            minWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\r\n            needUpdate = needUpdate && nextCellWidth >= minWidth\r\n        }\r\n        if (needUpdate) {\r\n            columnsController.beginUpdate();\r\n            cellWidth = Math.floor(cellWidth);\r\n            contentWidth = function(contentWidth, visibleColumns) {\r\n                var allColumnsHaveWidth = visibleColumns.every(column => column.width);\r\n                if (allColumnsHaveWidth) {\r\n                    var totalPercent = visibleColumns.reduce((sum, column) => {\r\n                        if (isPercentWidth(column.width)) {\r\n                            sum += parseFloat(column.width)\r\n                        }\r\n                        return sum\r\n                    }, 0);\r\n                    if (totalPercent > 100) {\r\n                        contentWidth = contentWidth / totalPercent * 100\r\n                    }\r\n                }\r\n                return contentWidth\r\n            }(contentWidth, visibleColumns);\r\n            setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\r\n            if (isNextColumnMode) {\r\n                nextCellWidth = Math.floor(nextCellWidth);\r\n                setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio)\r\n            } else {\r\n                var columnWidths = this._columnHeadersView.getColumnWidths();\r\n                columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\r\n                var hasScroll = columnWidths.reduce((totalWidth, width) => totalWidth + width, 0) > this._rowsView.contentWidth();\r\n                if (!hasScroll) {\r\n                    var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns);\r\n                    if (lastColumnIndex >= 0) {\r\n                        columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\")\r\n                    }\r\n                }\r\n                for (var i = 0; i < columnWidths.length; i++) {\r\n                    if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\r\n                        columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i])\r\n                    }\r\n                }\r\n            }\r\n            columnsController.endUpdate();\r\n            if (!isNextColumnMode) {\r\n                this.component.updateDimensions();\r\n                var scrollable = this.component.getScrollable();\r\n                if (scrollable && isRtlParentStyle) {\r\n                    var left = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - this._scrollRight;\r\n                    scrollable.scrollTo({\r\n                        left: left\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return needUpdate\r\n    },\r\n    _subscribeToCallback: function(callback, handler) {\r\n        callback.add(handler);\r\n        this._subscribesToCallbacks.push({\r\n            callback: callback,\r\n            handler: handler\r\n        })\r\n    },\r\n    _unsubscribeFromCallbacks: function() {\r\n        for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\r\n            var subscribe = this._subscribesToCallbacks[i];\r\n            subscribe.callback.remove(subscribe.handler)\r\n        }\r\n        this._subscribesToCallbacks = []\r\n    },\r\n    _unsubscribes: function() {\r\n        this._unsubscribeFromEvents();\r\n        this._unsubscribeFromCallbacks()\r\n    },\r\n    _init: function() {\r\n        var that = this;\r\n        var generatePointsByColumnsHandler = function() {\r\n            if (!that._isResizing) {\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        var generatePointsByColumnsScrollHandler = function(offset) {\r\n            if (that._scrollLeft !== offset.left) {\r\n                that._scrollLeft = offset.left;\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._trackerView = that.getView(\"trackerView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._tablePositionController = that.getController(\"tablePosition\");\r\n        that._$parentContainer = that.component.$element();\r\n        that._draggingHeaderView = that.component.getView(\"draggingHeaderView\");\r\n        that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, (function() {\r\n            that._unsubscribeFromEvents();\r\n            that._subscribeToEvents()\r\n        }));\r\n        that._subscribeToCallback(that._rowsView.renderCompleted, (function() {\r\n            that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\r\n            that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler)\r\n        }));\r\n        var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n        var previousTableHeight = 0;\r\n        that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, (function(e) {\r\n            if (that._isResizing && !that._rowsView.isResizing) {\r\n                var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n                if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\r\n                    previousScrollbarVisibility = scrollbarVisibility;\r\n                    previousTableHeight = e.height;\r\n                    that.component.updateDimensions()\r\n                } else {\r\n                    that._rowsView.updateFreeSpaceRowHeight()\r\n                }\r\n            }\r\n            previousTableHeight = e.height\r\n        }))\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._subscribeToEvents()\r\n            } else {\r\n                this._unsubscribes()\r\n            }\r\n        }\r\n    },\r\n    isResizing: function() {\r\n        return this._isResizing\r\n    },\r\n    init: function() {\r\n        this._subscribesToCallbacks = [];\r\n        if (allowResizing(this)) {\r\n            this._init()\r\n        }\r\n    },\r\n    pointsByColumns: function(value) {\r\n        if (void 0 !== value) {\r\n            this._pointsByColumns = value\r\n        } else {\r\n            if (!this._pointsByColumns) {\r\n                this._generatePointsByColumns()\r\n            }\r\n            return this._pointsByColumns\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribes();\r\n        this.callBase()\r\n    }\r\n});\r\nvar TablePositionViewController = modules.ViewController.inherit({\r\n    update: function(top) {\r\n        var params = {};\r\n        var $element = this._columnHeadersView.element();\r\n        var offset = $element && $element.offset();\r\n        var offsetTop = offset && offset.top || 0;\r\n        var diffOffsetTop = isDefined(top) ? Math.abs(top - offsetTop) : 0;\r\n        var columnsHeadersHeight = this._columnHeadersView ? this._columnHeadersView.getHeight() : 0;\r\n        var scrollBarWidth = this._rowsView.getScrollbarWidth(true);\r\n        var rowsHeight = this._rowsView ? this._rowsView.height() - scrollBarWidth : 0;\r\n        var columnsResizerController = this.component.getController(\"columnsResizer\");\r\n        var draggingHeaderView = this.component.getView(\"draggingHeaderView\");\r\n        params.height = columnsHeadersHeight;\r\n        var isDraggingOrResizing = false !== columnsResizerController.isResizing() || draggingHeaderView.isDragging();\r\n        if (isDraggingOrResizing) {\r\n            params.height += rowsHeight - diffOffsetTop\r\n        }\r\n        if (null !== top && $element && $element.length) {\r\n            params.top = $element[0].offsetTop + diffOffsetTop\r\n        }\r\n        this.positionChanged.fire(params)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        that._rowsView = this.getView(\"rowsView\");\r\n        that._pagerView = this.getView(\"pagerView\");\r\n        that._rowsView.resizeCompleted.add((function() {\r\n            if (that.option(\"allowColumnResizing\")) {\r\n                var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\r\n                that.update(targetPoint ? targetPoint.y : null)\r\n            }\r\n        }))\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.positionChanged = Callbacks()\r\n    }\r\n});\r\nvar DraggingHeaderViewController = modules.ViewController.inherit({\r\n    _generatePointsByColumns: function(options) {\r\n        var that = this;\r\n        return gridCoreUtils.getPointsByColumns(options.columnElements, (function(point) {\r\n            return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn)\r\n        }), options.isVerticalOrientation, options.startColumnIndex)\r\n    },\r\n    _pointCreated: function(point, columns, location, sourceColumn) {\r\n        var targetColumn = columns[point.columnIndex];\r\n        var prevColumn = columns[point.columnIndex - 1];\r\n        switch (location) {\r\n            case \"columnChooser\":\r\n                return true;\r\n            case \"headers\":\r\n                return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\r\n            default:\r\n                return 0 === columns.length\r\n        }\r\n    },\r\n    _subscribeToEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columns;\r\n                var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\r\n                var nameDraggingPanel = draggingPanel.getName();\r\n                var subscribeToEvents = function(index, columnElement) {\r\n                    if (!columnElement) {\r\n                        return\r\n                    }\r\n                    var $columnElement = $(columnElement);\r\n                    var column = columns[index];\r\n                    if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\r\n                        $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE), that.createAction((function(args) {\r\n                            var e = args.event;\r\n                            var eventData = getEventData(e);\r\n                            draggingHeader.dragHeader({\r\n                                deltaX: eventData.x - $(e.currentTarget).offset().left,\r\n                                deltaY: eventData.y - $(e.currentTarget).offset().top,\r\n                                sourceColumn: column,\r\n                                index: column.index,\r\n                                columnIndex: index,\r\n                                columnElement: $columnElement,\r\n                                sourceLocation: nameDraggingPanel,\r\n                                draggingPanels: draggingPanels,\r\n                                rowIndex: that._columnsController.getRowIndex(column.index, true)\r\n                            })\r\n                        })));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.moveHeader));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.dropHeader))\r\n                    }\r\n                };\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    var columnElements = draggingPanel.getColumnElements(i) || [];\r\n                    if (columnElements.length) {\r\n                        columns = draggingPanel.getColumns(i) || [];\r\n                        each(columnElements, subscribeToEvents)\r\n                    }\r\n                }\r\n            }\r\n        }))\r\n    },\r\n    _unsubscribeFromEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columnElements = draggingPanel.getColumnElements() || [];\r\n                each(columnElements, (function(index, columnElement) {\r\n                    var $columnElement = $(columnElement);\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE));\r\n                    $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS))\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _getSeparator: function(targetLocation) {\r\n        return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView\r\n    },\r\n    hideSeparators: function(type) {\r\n        var blockSeparator = this._blockSeparatorView;\r\n        var columnsSeparator = this._columnsSeparatorView;\r\n        this._animationColumnIndex = null;\r\n        blockSeparator && blockSeparator.hide();\r\n        \"block\" !== type && columnsSeparator && columnsSeparator.hide()\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._draggingHeaderView = that.getView(\"draggingHeaderView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._blockSeparatorView = that.getView(\"blockSeparatorView\");\r\n        that._headerPanelView = that.getView(\"headerPanel\");\r\n        that._columnChooserView = that.getView(\"columnChooserView\");\r\n        var subscribeToEvents = function() {\r\n            if (that._draggingHeaderView) {\r\n                var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\r\n                that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\r\n                that._subscribeToEvents(that._draggingHeaderView, draggingPanels)\r\n            }\r\n        };\r\n        that._columnHeadersView.renderCompleted.add(subscribeToEvents);\r\n        that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\r\n        that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents)\r\n    },\r\n    allowDrop: function(parameters) {\r\n        return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n    },\r\n    drag: function(parameters) {\r\n        var sourceIndex = parameters.sourceIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        var headersView = this._columnHeadersView;\r\n        var rowsView = this._rowsView;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: COLUMN_OPACITY\r\n            });\r\n            if (\"headers\" === sourceLocation) {\r\n                headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\r\n                rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY)\r\n            }\r\n        }\r\n    },\r\n    dock: function(parameters) {\r\n        var that = this;\r\n        var targetColumnIndex = isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var targetLocation = parameters.targetLocation;\r\n        var separator = that._getSeparator(targetLocation);\r\n        var hasTargetVisibleIndex = targetColumnIndex >= 0;\r\n        that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\r\n        if (separator) {\r\n            if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\r\n                if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\r\n                    ! function() {\r\n                        if (that._animationColumnIndex !== targetColumnIndex) {\r\n                            that.hideSeparators();\r\n                            separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\r\n                            that._animationColumnIndex = targetColumnIndex;\r\n                            separator.show(targetLocation)\r\n                        }\r\n                    }()\r\n                } else {\r\n                    that.hideSeparators(\"block\");\r\n                    that.getController(\"tablePosition\").update(parameters.posY);\r\n                    separator.moveByX(parameters.posX - separator.width());\r\n                    separator.show()\r\n                }\r\n            } else {\r\n                that.hideSeparators()\r\n            }\r\n        }\r\n    },\r\n    drop: function(parameters) {\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: \"\"\r\n            });\r\n            this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS))\r\n        }\r\n        if (this.allowDrop(parameters)) {\r\n            var separator = this._getSeparator(parameters.targetLocation);\r\n            if (separator) {\r\n                separator.hide()\r\n            }\r\n            this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        if (this._draggingHeaderView) {\r\n            this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView])\r\n        }\r\n    }\r\n});\r\nexport var columnsResizingReorderingModule = {\r\n    views: {\r\n        columnsSeparatorView: ColumnsSeparatorView,\r\n        blockSeparatorView: BlockSeparatorView,\r\n        draggingHeaderView: DraggingHeaderView,\r\n        trackerView: TrackerView\r\n    },\r\n    controllers: {\r\n        draggingHeader: DraggingHeaderViewController,\r\n        tablePosition: TablePositionViewController,\r\n        columnsResizer: ColumnsResizerViewController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _needUpdateRowHeight: function(itemCount) {\r\n                    var wordWrapEnabled = this.option(\"wordWrapEnabled\");\r\n                    var columnsResizerController = this.getController(\"columnsResizer\");\r\n                    var isResizing = columnsResizerController.isResizing();\r\n                    return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editorFactory: {\r\n                renderFocusOverlay: function() {\r\n                    if (this.getController(\"columnsResizer\").isResizing()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.columns_resizing_reordering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnsResizingReorderingModule\r\n} from \"../grid_core/ui.grid_core.columns_resizing_reordering\";\r\nexport var DraggingHeaderView = columnsResizingReorderingModule.views.draggingHeaderView;\r\nexport var DraggingHeaderViewController = columnsResizingReorderingModule.controllers.draggingHeader;\r\nexport var ColumnsSeparatorView = columnsResizingReorderingModule.views.columnsSeparatorView;\r\nexport var TablePositionViewController = columnsResizingReorderingModule.controllers.tablePosition;\r\nexport var ColumnsResizerViewController = columnsResizingReorderingModule.controllers.columnsResizer;\r\nexport var TrackerView = columnsResizingReorderingModule.views.trackerView;\r\ngridCore.registerModule(\"columnsResizingReordering\", columnsResizingReorderingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.keyboard_navigation.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterHeight,\r\n    getHeight,\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport core from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport {\r\n    addNamespace,\r\n    createEvent,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport * as accessibility from \"../shared/accessibility\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    keyboard\r\n} from \"../../events/short\";\r\nimport devices from \"../../core/devices\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar EDIT_FORM_CLASS = \"edit-form\";\r\nvar GROUP_FOOTER_CLASS = \"group-footer\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FREESPACE_ROW_CLASS = \"dx-freespace-row\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_CELL_SELECTOR = \"[class^=dx-command]\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATEBOX_WIDGET_NAME = \"dxDateBox\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar FAST_EDITING_DELETE_KEY = \"delete\";\r\nvar INTERACTIVE_ELEMENTS_SELECTOR = \"input:not([type='hidden']), textarea, a, select, button, [tabindex], .dx-checkbox\";\r\nvar NON_FOCUSABLE_ELEMENTS_SELECTOR = \"\".concat(INTERACTIVE_ELEMENTS_SELECTOR, \", .dx-dropdowneditor-icon\");\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar FOCUS_TYPE_ROW = \"row\";\r\nvar FOCUS_TYPE_CELL = \"cell\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\n\r\nfunction isGroupRow($row) {\r\n    return $row && $row.hasClass(GROUP_ROW_CLASS)\r\n}\r\n\r\nfunction isDetailRow($row) {\r\n    return $row && $row.hasClass(MASTER_DETAIL_ROW_CLASS)\r\n}\r\n\r\nfunction isDataRow($row) {\r\n    return $row && !isGroupRow($row) && !isDetailRow($row)\r\n}\r\n\r\nfunction isNotFocusedRow($row) {\r\n    return !$row || $row.hasClass(FREESPACE_ROW_CLASS) || $row.hasClass(VIRTUAL_ROW_CLASS)\r\n}\r\n\r\nfunction isCellElement($element) {\r\n    return $element.length && \"TD\" === $element[0].tagName\r\n}\r\n\r\nfunction isEditorCell(that, $cell) {\r\n    return !that._isRowEditMode() && $cell && !$cell.hasClass(COMMAND_SELECT_CLASS) && $cell.hasClass(EDITOR_CELL_CLASS)\r\n}\r\n\r\nfunction isElementDefined($element) {\r\n    return isDefined($element) && $element.length > 0\r\n}\r\n\r\nfunction isMobile() {\r\n    return \"desktop\" !== devices.current().deviceType\r\n}\r\n\r\nfunction isCellInHeaderRow($cell) {\r\n    return !!$cell.parent(\".\".concat(HEADER_ROW_CLASS)).length\r\n}\r\n\r\nfunction isFixedColumnIndexOffsetRequired(that, column) {\r\n    var rtlEnabled = that.option(\"rtlEnabled\");\r\n    var result = false;\r\n    if (rtlEnabled) {\r\n        result = !(\"right\" === column.fixedPosition || isDefined(column.command) && !isDefined(column.fixedPosition))\r\n    } else {\r\n        result = !(!isDefined(column.fixedPosition) || \"left\" === column.fixedPosition)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction shouldPreventScroll(that) {\r\n    var keyboardController = that.getController(\"keyboardNavigation\");\r\n    return keyboardController._isVirtualScrolling() ? that.option(\"focusedRowIndex\") === keyboardController.getRowIndex() : false\r\n}\r\nvar KeyboardNavigationController = core.ViewController.inherit({\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._selectionController = this.getController(\"selection\");\r\n        this._editingController = this.getController(\"editing\");\r\n        this._headerPanel = this.getView(\"headerPanel\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._editorFactory = this.getController(\"editorFactory\");\r\n        if (this.isKeyboardEnabled()) {\r\n            accessibility.subscribeVisibilityChange();\r\n            this._updateFocusTimeout = null;\r\n            this._fastEditingStarted = false;\r\n            this._focusedCellPosition = {};\r\n            this._canceledCellPosition = null;\r\n            this._editorFactory.focused.add($element => {\r\n                this.setupFocusedView();\r\n                if (this._isNeedScroll) {\r\n                    if ($element.is(\":visible\") && this._focusedView && this._focusedView.getScrollable) {\r\n                        this._focusedView._scrollToElement($element);\r\n                        this._isNeedScroll = false\r\n                    }\r\n                }\r\n            });\r\n            this._initViewHandlers();\r\n            this._initDocumentHandlers();\r\n            this.createAction(\"onKeyDown\")\r\n        }\r\n    },\r\n    _initViewHandlers: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowsViewFocusHandler = event => {\r\n            var $element = $(event.target);\r\n            var isRelatedTargetInRowsView = $(event.relatedTarget).closest(rowsView.element()).length;\r\n            var isCommandButton = $element.hasClass(\"dx-link\");\r\n            if (isCommandButton && !isRelatedTargetInRowsView && this._isEventInCurrentGrid(event)) {\r\n                var $focusedCell = this._getFocusedCell();\r\n                $focusedCell = !isElementDefined($focusedCell) ? rowsView.getCellElements(0).filter(\"[tabindex]\").eq(0) : $focusedCell;\r\n                if (!$element.closest($focusedCell).length) {\r\n                    event.preventDefault();\r\n                    eventsEngine.trigger($focusedCell, \"focus\")\r\n                }\r\n            }\r\n        };\r\n        rowsView.renderCompleted.add(e => {\r\n            var $rowsView = rowsView.element();\r\n            var isFullUpdate = !e || \"refresh\" === e.changeType;\r\n            var isFocusedViewCorrect = this._focusedView && this._focusedView.name === rowsView.name;\r\n            var needUpdateFocus = false;\r\n            var isAppend = e && (\"append\" === e.changeType || \"prepend\" === e.changeType);\r\n            var $focusedElement = $(\":focus\");\r\n            var isFocusedElementCorrect = !$focusedElement.length || $focusedElement.closest($rowsView).length;\r\n            eventsEngine.off($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            eventsEngine.on($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            this._initPointerEventHandler();\r\n            this._initKeyDownHandler();\r\n            this._setRowsViewAttributes();\r\n            if (isFocusedViewCorrect && isFocusedElementCorrect) {\r\n                needUpdateFocus = this._isNeedFocus ? !isAppend : this._isHiddenFocus && isFullUpdate;\r\n                needUpdateFocus && this._updateFocus(true)\r\n            }\r\n        })\r\n    },\r\n    _initDocumentHandlers: function() {\r\n        var document = domAdapter.getDocument();\r\n        this._documentClickHandler = this.createAction(e => {\r\n            var $target = $(e.event.target);\r\n            var isCurrentRowsViewClick = this._isEventInCurrentGrid(e.event) && $target.closest(\".\".concat(this.addWidgetPrefix(ROWS_VIEW_CLASS))).length;\r\n            var isEditorOverlay = $target.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length;\r\n            var columnsResizerController = this.getController(\"columnsResizer\");\r\n            var isColumnResizing = !!columnsResizerController && columnsResizerController.isResizing();\r\n            if (!isCurrentRowsViewClick && !isEditorOverlay && !isColumnResizing) {\r\n                var targetInsideFocusedView = this._focusedView ? $target.parents().filter(this._focusedView.element()).length > 0 : false;\r\n                !targetInsideFocusedView && this._resetFocusedCell(true);\r\n                this._resetFocusedView()\r\n            }\r\n        });\r\n        eventsEngine.on(document, addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler)\r\n    },\r\n    _setRowsViewAttributes: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        var isGridEmpty = !this._dataController.getVisibleRows().length;\r\n        if (isGridEmpty) {\r\n            this._applyTabIndexToElement($rowsView)\r\n        }\r\n    },\r\n    _initPointerEventHandler: function() {\r\n        var pointerEventName = !isMobile() ? pointerEvents.down : clickEventName;\r\n        var clickSelector = \".\".concat(ROW_CLASS, \" > td, .\").concat(ROW_CLASS);\r\n        var $rowsView = this._getRowsViewElement();\r\n        if (!isDefined(this._pointerEventAction)) {\r\n            this._pointerEventAction = this.createAction(this._pointerEventHandler)\r\n        }\r\n        eventsEngine.off($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), this._pointerEventAction);\r\n        eventsEngine.on($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), clickSelector, this._pointerEventAction)\r\n    },\r\n    _initKeyDownHandler: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        keyboard.off(this._keyDownListener);\r\n        this._keyDownListener = keyboard.on($rowsView, null, e => this._keyDownHandler(e))\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        this._resetFocusedView();\r\n        keyboard.off(this._keyDownListener);\r\n        eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\r\n        clearTimeout(this._updateFocusTimeout);\r\n        accessibility.unsubscribeVisibilityChange()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"keyboardNavigation\":\r\n            case \"useLegacyKeyboardNavigation\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    isRowFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_ROW\r\n    },\r\n    isCellFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_CELL\r\n    },\r\n    setRowFocusType: function() {\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.focusType = FOCUS_TYPE_ROW\r\n        }\r\n    },\r\n    setCellFocusType: function() {\r\n        this.focusType = FOCUS_TYPE_CELL\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var needStopPropagation = true;\r\n        var isHandled = this._processOnKeyDown(e);\r\n        var isEditing = this._editingController.isEditing();\r\n        var originalEvent = e.originalEvent;\r\n        if (originalEvent.isDefaultPrevented()) {\r\n            return\r\n        }\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        this._updateFocusedCellPositionByTarget(originalEvent.target);\r\n        if (!isHandled) {\r\n            switch (e.keyName) {\r\n                case \"leftArrow\":\r\n                case \"rightArrow\":\r\n                    this._leftRightKeysHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"upArrow\":\r\n                case \"downArrow\":\r\n                    if (e.ctrl) {\r\n                        accessibility.selectView(\"rowsView\", this, originalEvent)\r\n                    } else {\r\n                        this._upDownKeysHandler(e, isEditing)\r\n                    }\r\n                    isHandled = true;\r\n                    break;\r\n                case \"pageUp\":\r\n                case \"pageDown\":\r\n                    this._pageUpDownKeyHandler(e);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"space\":\r\n                    this._spaceKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"A\":\r\n                    if (isCommandKeyPressed(e.originalEvent)) {\r\n                        this._ctrlAKeyHandler(e, isEditing);\r\n                        isHandled = true\r\n                    } else {\r\n                        isHandled = this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"tab\":\r\n                    this._tabKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"enter\":\r\n                    this._enterKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"escape\":\r\n                    this._escapeKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"F\":\r\n                    if (isCommandKeyPressed(e.originalEvent)) {\r\n                        this._ctrlFKeyHandler(e);\r\n                        isHandled = true\r\n                    } else {\r\n                        isHandled = this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"F2\":\r\n                    this._f2KeyHandler();\r\n                    isHandled = true;\r\n                    break;\r\n                case \"del\":\r\n                case \"backspace\":\r\n                    if (this._isFastEditingAllowed() && !this._isFastEditingStarted()) {\r\n                        isHandled = this._beginFastEditing(originalEvent, true)\r\n                    }\r\n            }\r\n            if (!isHandled && !this._beginFastEditing(originalEvent)) {\r\n                this._isNeedFocus = false;\r\n                this._isNeedScroll = false;\r\n                needStopPropagation = false\r\n            }\r\n            if (needStopPropagation) {\r\n                originalEvent.stopPropagation()\r\n            }\r\n        }\r\n    },\r\n    _processOnKeyDown: function(eventArgs) {\r\n        var originalEvent = eventArgs.originalEvent;\r\n        var args = {\r\n            handled: false,\r\n            event: originalEvent\r\n        };\r\n        this.executeAction(\"onKeyDown\", args);\r\n        eventArgs.ctrl = originalEvent.ctrlKey;\r\n        eventArgs.alt = originalEvent.altKey;\r\n        eventArgs.shift = originalEvent.shiftKey;\r\n        return !!args.handled\r\n    },\r\n    _closeEditCell: function() {\r\n        setTimeout(() => {\r\n            this._editingController.closeEditCell()\r\n        })\r\n    },\r\n    _leftRightKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $event = eventArgs.originalEvent;\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        var directionCode = this._getDirectionCodeByKey(eventArgs.keyName);\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && isDataRow($row);\r\n        if (allowNavigate) {\r\n            this.setCellFocusType();\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(directionCode)\r\n            }\r\n            var $cell = this._getNextCell(directionCode);\r\n            if (isElementDefined($cell)) {\r\n                this._arrowKeysHandlerFocusCell($event, $cell, directionCode)\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _upDownKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this._focusedCellPosition.rowIndex;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(visibleRowIndex);\r\n        var $event = eventArgs.originalEvent;\r\n        var isUpArrow = \"upArrow\" === eventArgs.keyName;\r\n        var dataSource = this._dataController.dataSource();\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && $row && !isDetailRow($row);\r\n        if (allowNavigate) {\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (!this._navigateNextCell($event, eventArgs.keyName)) {\r\n                if (this._isVirtualRowRender() && isUpArrow && dataSource && !dataSource.isLoading()) {\r\n                    var rowHeight = getOuterHeight($row);\r\n                    rowIndex = this._focusedCellPosition.rowIndex - 1;\r\n                    this._scrollBy(0, -rowHeight, rowIndex, $event)\r\n                }\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _pageUpDownKeyHandler: function(eventArgs) {\r\n        var pageIndex = this._dataController.pageIndex();\r\n        var pageCount = this._dataController.pageCount();\r\n        var pagingEnabled = this.option(\"paging.enabled\");\r\n        var isPageUp = \"pageUp\" === eventArgs.keyName;\r\n        var pageStep = isPageUp ? -1 : 1;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (pagingEnabled && !this._isVirtualScrolling()) {\r\n            if ((isPageUp ? pageIndex > 0 : pageIndex < pageCount - 1) && !this._isVirtualScrolling()) {\r\n                this._dataController.pageIndex(pageIndex + pageStep);\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else if (scrollable && getHeight(scrollable.container()) < getHeight(scrollable.$content())) {\r\n            this._scrollBy(0, getHeight(scrollable.container()) * pageStep);\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _spaceKeyHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $target = $(eventArgs.originalEvent && eventArgs.originalEvent.target);\r\n        if (this.option(\"selection\") && \"none\" !== this.option(\"selection\").mode && !isEditing) {\r\n            var isFocusedRowElement = \"row\" === this._getElementType($target) && this.isRowFocusType() && isDataRow($target);\r\n            var isFocusedSelectionCell = $target.hasClass(COMMAND_SELECT_CLASS);\r\n            if (isFocusedSelectionCell && \"onClick\" === this.option(\"selection.showCheckBoxesMode\")) {\r\n                this._selectionController.startSelectionWithCheckboxes()\r\n            }\r\n            if (isFocusedRowElement || $target.parent().hasClass(DATA_ROW_CLASS) || $target.hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._selectionController.changeItemSelection(rowIndex, {\r\n                    shift: eventArgs.shift,\r\n                    control: eventArgs.ctrl\r\n                });\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else {\r\n            this._beginFastEditing(eventArgs.originalEvent)\r\n        }\r\n    },\r\n    _ctrlAKeyHandler: function(eventArgs, isEditing) {\r\n        if (!isEditing && !eventArgs.alt && \"multiple\" === this.option(\"selection.mode\") && this.option(\"selection.allowSelectAll\")) {\r\n            this._selectionController.selectAll();\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _tabKeyHandler: function(eventArgs, isEditing) {\r\n        var editingOptions = this.option(\"editing\");\r\n        var direction = eventArgs.shift ? \"previous\" : \"next\";\r\n        var isCellPositionDefined = isDefined(this._focusedCellPosition) && !isEmptyObject(this._focusedCellPosition);\r\n        var isOriginalHandlerRequired = !isCellPositionDefined || !eventArgs.shift && this._isLastValidCell(this._focusedCellPosition) || eventArgs.shift && this._isFirstValidCell(this._focusedCellPosition);\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var focusedViewElement = this._focusedView && this._focusedView.element();\r\n        if (this._handleTabKeyOnMasterDetailCell(eventTarget, direction)) {\r\n            return\r\n        }\r\n        $(focusedViewElement).addClass(FOCUS_STATE_CLASS);\r\n        if (editingOptions && eventTarget && !isOriginalHandlerRequired) {\r\n            if ($(eventTarget).hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._resetFocusedCell()\r\n            }\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(direction)\r\n            }\r\n            if (isEditing) {\r\n                if (!this._editingCellTabHandler(eventArgs, direction)) {\r\n                    return\r\n                }\r\n            } else if (this._targetCellTabHandler(eventArgs, direction)) {\r\n                isOriginalHandlerRequired = true\r\n            }\r\n        }\r\n        if (isOriginalHandlerRequired) {\r\n            this._editorFactory.loseFocus();\r\n            if (this._editingController.isEditing() && !this._isRowEditMode()) {\r\n                this._resetFocusedCell(true);\r\n                this._resetFocusedView();\r\n                this._closeEditCell()\r\n            }\r\n        } else {\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _getMaxHorizontalOffset: function() {\r\n        var scrollable = this.component.getScrollable();\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var offset = scrollable ? scrollable.scrollWidth() - getWidth(rowsView.element()) : 0;\r\n        return offset\r\n    },\r\n    _isColumnRendered: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var renderedVisibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = allVisibleColumns[columnIndex];\r\n        var result = false;\r\n        if (column) {\r\n            result = renderedVisibleColumns.indexOf(column) >= 0\r\n        }\r\n        return result\r\n    },\r\n    _isFixedColumn: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var column = allVisibleColumns[columnIndex];\r\n        return !!column && !!column.fixed\r\n    },\r\n    _isColumnVirtual: function(columnIndex) {\r\n        var localColumnIndex = columnIndex - this._columnsController.getColumnIndexOffset();\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = visibleColumns[localColumnIndex];\r\n        return !!column && \"virtual\" === column.command\r\n    },\r\n    _processVirtualHorizontalPosition: function(direction) {\r\n        var scrollable = this.component.getScrollable();\r\n        var columnIndex = this.getColumnIndex();\r\n        var nextColumnIndex;\r\n        var horizontalScrollPosition = 0;\r\n        var needToScroll = false;\r\n        switch (direction) {\r\n            case \"next\":\r\n            case \"nextInRow\":\r\n                var columnsCount = this._getVisibleColumnCount();\r\n                nextColumnIndex = columnIndex + 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? this._getMaxHorizontalOffset() : 0;\r\n                if (\"next\" === direction) {\r\n                    needToScroll = columnsCount === nextColumnIndex || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = columnsCount > nextColumnIndex && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n                break;\r\n            case \"previous\":\r\n            case \"previousInRow\":\r\n                nextColumnIndex = columnIndex - 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? 0 : this._getMaxHorizontalOffset();\r\n                if (\"previous\" === direction) {\r\n                    var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n                    var leftEdgePosition = nextColumnIndex < 0 && 0 === columnIndexOffset;\r\n                    needToScroll = leftEdgePosition || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = nextColumnIndex >= 0 && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n        }\r\n        if (needToScroll) {\r\n            scrollable.scrollTo({\r\n                left: horizontalScrollPosition\r\n            })\r\n        } else if (isDefined(nextColumnIndex) && isDefined(direction) && this._isColumnVirtual(nextColumnIndex)) {\r\n            horizontalScrollPosition = this._getHorizontalScrollPositionOffset(direction);\r\n            0 !== horizontalScrollPosition && scrollable.scrollBy({\r\n                left: horizontalScrollPosition,\r\n                top: 0\r\n            })\r\n        }\r\n    },\r\n    _getHorizontalScrollPositionOffset: function(direction) {\r\n        var positionOffset = 0;\r\n        var $currentCell = this._getCell(this._focusedCellPosition);\r\n        var currentCellWidth = $currentCell && getOuterWidth($currentCell);\r\n        if (currentCellWidth > 0) {\r\n            var rtlMultiplier = this.option(\"rtlEnabled\") ? -1 : 1;\r\n            positionOffset = \"nextInRow\" === direction || \"next\" === direction ? currentCellWidth * rtlMultiplier : currentCellWidth * rtlMultiplier * -1\r\n        }\r\n        return positionOffset\r\n    },\r\n    _editingCellTabHandler: function(eventArgs, direction) {\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var isEditingAllowed;\r\n        var $event = eventArgs.originalEvent;\r\n        var elementType = this._getElementType(eventTarget);\r\n        if ($cell.is(COMMAND_CELL_SELECTOR)) {\r\n            return !this._targetCellTabHandler(eventArgs, direction)\r\n        }\r\n        this._updateFocusedCellPosition($cell);\r\n        var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n        $cell = nextCellInfo.$cell;\r\n        if (!$cell || this._handleTabKeyOnMasterDetailCell($cell, direction)) {\r\n            return false\r\n        }\r\n        var columnsController = this._columnsController;\r\n        var cellIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var columnIndex = cellIndex + columnsController.getColumnIndexOffset();\r\n        var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n        var $row = $cell.parent();\r\n        var rowIndex = this._getRowIndex($row);\r\n        var row = this._dataController.items()[rowIndex];\r\n        var editingController = this._editingController;\r\n        if (column && column.allowEditing) {\r\n            var _isDataRow = !row || \"data\" === row.rowType;\r\n            isEditingAllowed = editingController.allowUpdating({\r\n                row: row\r\n            }) ? _isDataRow : row && row.isNewRow\r\n        }\r\n        if (!isEditingAllowed) {\r\n            this._closeEditCell()\r\n        }\r\n        if (this._focusCell($cell, !nextCellInfo.isHighlighted)) {\r\n            if (!this._isRowEditMode() && isEditingAllowed) {\r\n                this._editFocusedCell()\r\n            } else {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _targetCellTabHandler: function(eventArgs, direction) {\r\n        var $event = eventArgs.originalEvent;\r\n        var eventTarget = $event.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var $lastInteractiveElement = this._getInteractiveElement($cell, !eventArgs.shift);\r\n        var isOriginalHandlerRequired = false;\r\n        var elementType;\r\n        if (!isEditorCell(this, $cell) && $lastInteractiveElement.length && eventTarget !== $lastInteractiveElement.get(0)) {\r\n            isOriginalHandlerRequired = true\r\n        } else {\r\n            if (void 0 === this._focusedCellPosition.rowIndex && $(eventTarget).hasClass(ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($cell)\r\n            }\r\n            elementType = this._getElementType(eventTarget);\r\n            if (this.isRowFocusType()) {\r\n                this.setCellFocusType();\r\n                if (\"row\" === elementType && isDataRow($(eventTarget))) {\r\n                    eventTarget = this.getFirstValidCellInRow($(eventTarget));\r\n                    elementType = this._getElementType(eventTarget)\r\n                }\r\n            }\r\n            var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n            $cell = nextCellInfo.$cell;\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            $cell = this._checkNewLineTransition($event, $cell);\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            this._focusCell($cell, !nextCellInfo.isHighlighted);\r\n            if (!isEditorCell(this, $cell)) {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return isOriginalHandlerRequired\r\n    },\r\n    _getNextCellByTabKey: function($event, direction, elementType) {\r\n        var $cell = this._getNextCell(direction, elementType);\r\n        var args = $cell && this._fireFocusedCellChanging($event, $cell, true);\r\n        if (!args || args.cancel) {\r\n            return {}\r\n        }\r\n        if (args.$newCellElement) {\r\n            $cell = args.$newCellElement\r\n        }\r\n        return {\r\n            $cell: $cell,\r\n            isHighlighted: args.isHighlighted\r\n        }\r\n    },\r\n    _checkNewLineTransition: function($event, $cell) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = $cell.parent();\r\n        if (rowIndex !== this._getRowIndex($row)) {\r\n            var cellPosition = this._getCellPosition($cell);\r\n            var args = this._fireFocusedRowChanging($event, $row);\r\n            if (args.cancel) {\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                this.setFocusedColumnIndex(cellPosition.columnIndex);\r\n                $cell = this._getFocusedCell()\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _enterKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getFocusedCell();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (this.option(\"grouping.allowCollapsing\") && isGroupRow($row) || this.option(\"masterDetail.enabled\") && $cell && $cell.hasClass(COMMAND_EXPAND_CLASS)) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var item = this._dataController.items()[rowIndex];\r\n            if (void 0 !== key && item && item.data && !item.data.isContinuation) {\r\n                this._dataController.changeRowExpand(key)\r\n            }\r\n        } else {\r\n            this._processEnterKeyForDataCell(eventArgs, isEditing)\r\n        }\r\n    },\r\n    _processEnterKeyForDataCell: function(eventArgs, isEditing) {\r\n        var direction = this._getEnterKeyDirection(eventArgs);\r\n        var allowEditingOnEnterKey = this._allowEditingOnEnterKey();\r\n        if (isEditing || !allowEditingOnEnterKey && direction) {\r\n            this._handleEnterKeyEditingCell(eventArgs.originalEvent);\r\n            if (\"next\" === direction || \"previous\" === direction) {\r\n                this._targetCellTabHandler(eventArgs, direction)\r\n            } else if (\"upArrow\" === direction || \"downArrow\" === direction) {\r\n                this._navigateNextCell(eventArgs.originalEvent, direction)\r\n            }\r\n        } else if (allowEditingOnEnterKey) {\r\n            this._startEditing(eventArgs)\r\n        }\r\n    },\r\n    _getEnterKeyDirection: function(eventArgs) {\r\n        var enterKeyDirection = this.option(\"keyboardNavigation.enterKeyDirection\");\r\n        var isShift = eventArgs.shift;\r\n        if (\"column\" === enterKeyDirection) {\r\n            return isShift ? \"upArrow\" : \"downArrow\"\r\n        }\r\n        if (\"row\" === enterKeyDirection) {\r\n            return isShift ? \"previous\" : \"next\"\r\n        }\r\n    },\r\n    _handleEnterKeyEditingCell: function(event) {\r\n        var target = event.target;\r\n        var $cell = this._getCellElementFromTarget(target);\r\n        var isRowEditMode = this._isRowEditMode();\r\n        this._updateFocusedCellPosition($cell);\r\n        if (isRowEditMode) {\r\n            this._focusEditFormCell($cell);\r\n            setTimeout(this._editingController.saveEditData.bind(this._editingController))\r\n        } else {\r\n            eventsEngine.trigger($(target), \"change\");\r\n            this._closeEditCell();\r\n            event.preventDefault()\r\n        }\r\n    },\r\n    _escapeKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getCellElementFromTarget(eventArgs.originalEvent.target);\r\n        if (isEditing) {\r\n            this._updateFocusedCellPosition($cell);\r\n            if (!this._isRowEditMode()) {\r\n                if (\"cell\" === this._editingController.getEditMode()) {\r\n                    this._editingController.cancelEditData()\r\n                } else {\r\n                    this._closeEditCell()\r\n                }\r\n            } else {\r\n                this._focusEditFormCell($cell);\r\n                this._editingController.cancelEditData();\r\n                if (0 === this._dataController.items().length) {\r\n                    this._resetFocusedCell();\r\n                    this._editorFactory.loseFocus()\r\n                }\r\n            }\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _ctrlFKeyHandler: function(eventArgs) {\r\n        if (this.option(\"searchPanel.visible\")) {\r\n            var searchTextEditor = this._headerPanel.getSearchTextEditor();\r\n            if (searchTextEditor) {\r\n                searchTextEditor.focus();\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        }\r\n    },\r\n    _f2KeyHandler: function() {\r\n        var isEditing = this._editingController.isEditing();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (!isEditing && isDataRow($row)) {\r\n            this._startEditing()\r\n        }\r\n    },\r\n    _navigateNextCell: function($event, keyCode) {\r\n        var $cell = this._getNextCell(keyCode);\r\n        var directionCode = this._getDirectionCodeByKey(keyCode);\r\n        var isCellValid = $cell && this._isCellValid($cell);\r\n        var result = isCellValid ? this._arrowKeysHandlerFocusCell($event, $cell, directionCode) : false;\r\n        return result\r\n    },\r\n    _arrowKeysHandlerFocusCell: function($event, $nextCell, direction) {\r\n        var isVerticalDirection = \"prevRow\" === direction || \"nextRow\" === direction;\r\n        var args = this._fireFocusChangingEvents($event, $nextCell, isVerticalDirection, true);\r\n        $nextCell = args.$newCellElement;\r\n        if (!args.cancel && this._isCellValid($nextCell)) {\r\n            this._focus($nextCell, !args.isHighlighted);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _beginFastEditing: function(originalEvent, isDeleting) {\r\n        if (!this._isFastEditingAllowed() || originalEvent.altKey || originalEvent.ctrlKey || this._editingController.isEditing()) {\r\n            return false\r\n        }\r\n        if (isDeleting) {\r\n            this._startEditing(originalEvent, FAST_EDITING_DELETE_KEY)\r\n        } else {\r\n            var key = originalEvent.key;\r\n            var keyCode = originalEvent.keyCode || originalEvent.which;\r\n            var fastEditingKey = key || keyCode && String.fromCharCode(keyCode);\r\n            if (fastEditingKey && (1 === fastEditingKey.length || fastEditingKey === FAST_EDITING_DELETE_KEY)) {\r\n                this._startEditing(originalEvent, fastEditingKey)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _pointerEventHandler: function(e) {\r\n        var event = e.event || e;\r\n        var $target = $(event.currentTarget);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var focusedViewElement = rowsView && rowsView.element();\r\n        var $parent = $target.parent();\r\n        var isInteractiveElement = $(event.target).is(INTERACTIVE_ELEMENTS_SELECTOR);\r\n        var isRevertButton = !!$(event.target).closest(\".\".concat(REVERT_BUTTON_CLASS)).length;\r\n        var isExpandCommandCell = $target.hasClass(COMMAND_EXPAND_CLASS);\r\n        if (!this._isEventInCurrentGrid(event)) {\r\n            return\r\n        }\r\n        if (!isRevertButton && (this._isCellValid($target, !isInteractiveElement) || isExpandCommandCell)) {\r\n            $target = this._isInsideEditForm($target) ? $(event.target) : $target;\r\n            this._focusView();\r\n            $(focusedViewElement).removeClass(FOCUS_STATE_CLASS);\r\n            if ($parent.hasClass(FREESPACE_ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($target);\r\n                this._applyTabIndexToElement(this._focusedView.element());\r\n                this._focusedView.focus()\r\n            } else if (!this._isMasterDetailCell($target)) {\r\n                this._clickTargetCellHandler(event, $target)\r\n            } else {\r\n                this._updateFocusedCellPosition($target)\r\n            }\r\n        } else if ($target.is(\"td\")) {\r\n            this._resetFocusedCell()\r\n        }\r\n    },\r\n    _clickTargetCellHandler: function(event, $cell) {\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        var isCellEditMode = this._isCellEditMode();\r\n        this.setCellFocusType();\r\n        var args = this._fireFocusChangingEvents(event, $cell, true);\r\n        $cell = args.$newCellElement;\r\n        if (!args.cancel) {\r\n            if (args.resetFocusedRow) {\r\n                this.getController(\"focus\")._resetFocusedRow();\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                $cell = this._getFocusedCell()\r\n            }\r\n            if (!args.isHighlighted && !isCellEditMode) {\r\n                this.setRowFocusType()\r\n            }\r\n            this._updateFocusedCellPosition($cell);\r\n            if (this._allowRowUpdating() && isCellEditMode && column && column.allowEditing) {\r\n                this._isNeedFocus = false;\r\n                this._isHiddenFocus = false\r\n            } else {\r\n                var $target = event && $(event.target).closest(NON_FOCUSABLE_ELEMENTS_SELECTOR + \", td\");\r\n                var skipFocusEvent = $target && $target.not($cell).is(NON_FOCUSABLE_ELEMENTS_SELECTOR);\r\n                var isEditor = !!column && !column.command && $cell.hasClass(EDITOR_CELL_CLASS);\r\n                var isDisabled = !isEditor && (!args.isHighlighted || skipFocusEvent);\r\n                this._focus($cell, isDisabled, skipFocusEvent)\r\n            }\r\n        } else {\r\n            this.setRowFocusType();\r\n            this.setFocusedRowIndex(args.prevRowIndex);\r\n            $cell = this._getFocusedCell();\r\n            if (this._editingController.isEditing() && isCellEditMode) {\r\n                this._closeEditCell()\r\n            }\r\n        }\r\n    },\r\n    _allowRowUpdating: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var row = this._dataController.items()[rowIndex];\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }, \"click\")\r\n    },\r\n    focus: function(element) {\r\n        var activeElementSelector;\r\n        var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var isHighlighted = isCellElement($(element));\r\n        if (!element) {\r\n            activeElementSelector = \".dx-datagrid-rowsview .dx-row[tabindex]\";\r\n            if (!focusedRowEnabled) {\r\n                activeElementSelector += \", .dx-datagrid-rowsview .dx-row > td[tabindex]\"\r\n            }\r\n            element = this.component.$element().find(activeElementSelector).first()\r\n        }\r\n        element && this._focusElement($(element), isHighlighted)\r\n    },\r\n    getFocusedView: function() {\r\n        return this._focusedView\r\n    },\r\n    setupFocusedView: function() {\r\n        if (this.isKeyboardEnabled() && !isDefined(this._focusedView)) {\r\n            this._focusView()\r\n        }\r\n    },\r\n    _focusElement: function($element, isHighlighted) {\r\n        var rowsViewElement = $(this._getRowsViewElement());\r\n        var $focusedView = $element.closest(rowsViewElement);\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var args = {};\r\n        if (!$focusedView.length || isCellElement($element) && !this._isCellValid($element)) {\r\n            return\r\n        }\r\n        this._focusView();\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        if (isCellElement($element) || isGroupRow($element)) {\r\n            this.setCellFocusType();\r\n            args = this._fireFocusChangingEvents(null, $element, false, isHighlighted);\r\n            $element = args.$newCellElement;\r\n            if (isRowFocusType && !args.isHighlighted) {\r\n                this.setRowFocusType()\r\n            }\r\n        }\r\n        if (!args.cancel) {\r\n            this._focus($element, !args.isHighlighted);\r\n            this._focusInteractiveElement($element)\r\n        }\r\n    },\r\n    _getFocusedViewByElement: function($element) {\r\n        var view = this.getFocusedView();\r\n        var $view = view && $(view.element());\r\n        return $element && 0 !== $element.closest($view).length\r\n    },\r\n    _focusView: function() {\r\n        this._focusedView = this.getView(\"rowsView\")\r\n    },\r\n    _resetFocusedView: function() {\r\n        this.setRowFocusType();\r\n        this._focusedView = null\r\n    },\r\n    _focusInteractiveElement: function($cell, isLast) {\r\n        if (!$cell) {\r\n            return\r\n        }\r\n        var $focusedElement = this._getInteractiveElement($cell, isLast);\r\n        gridCoreUtils.focusAndSelectElement(this, $focusedElement)\r\n    },\r\n    _focus: function($cell, disableFocus, skipFocusEvent) {\r\n        var $row = $cell && !$cell.hasClass(ROW_CLASS) ? $cell.closest(\".\".concat(ROW_CLASS)) : $cell;\r\n        if ($row && isNotFocusedRow($row)) {\r\n            return\r\n        }\r\n        var focusedView = this._focusedView;\r\n        var $focusViewElement = focusedView && focusedView.element();\r\n        var $focusElement;\r\n        this._isHiddenFocus = disableFocus;\r\n        var isRowFocus = isGroupRow($row) || this.isRowFocusType();\r\n        if (isRowFocus) {\r\n            $focusElement = $row;\r\n            if (focusedView) {\r\n                this.setFocusedRowIndex(this._getRowIndex($row))\r\n            }\r\n        } else if (isCellElement($cell)) {\r\n            $focusElement = $cell;\r\n            this._updateFocusedCellPosition($cell)\r\n        }\r\n        if ($focusElement) {\r\n            if ($focusViewElement) {\r\n                $focusViewElement.find(\".dx-row[tabindex], .dx-row > td[tabindex]\").not($focusElement).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\")\r\n            }\r\n            eventsEngine.one($focusElement, \"blur\", e => {\r\n                if (e.relatedTarget) {\r\n                    $focusElement.removeClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            });\r\n            if (!skipFocusEvent) {\r\n                this._applyTabIndexToElement($focusElement);\r\n                eventsEngine.trigger($focusElement, \"focus\")\r\n            }\r\n            if (disableFocus) {\r\n                $focusElement.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                if (isRowFocus) {\r\n                    $cell.addClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            } else {\r\n                this._editorFactory.focus($focusElement)\r\n            }\r\n        }\r\n    },\r\n    _updateFocus: function(isRenderView) {\r\n        this._updateFocusTimeout = setTimeout(() => {\r\n            var editingController = this._editingController;\r\n            var isCellEditMode = editingController.getEditMode() === EDIT_MODE_CELL;\r\n            var isBatchEditMode = editingController.getEditMode() === EDIT_MODE_BATCH;\r\n            if (isCellEditMode && editingController.hasChanges() || isBatchEditMode && editingController.isNewRowInEditMode()) {\r\n                editingController._focusEditingCell();\r\n                return\r\n            }\r\n            var $cell = this._getFocusedCell();\r\n            var isEditing = editingController.isEditing();\r\n            if ($cell && !(this._isMasterDetailCell($cell) && !this._isRowEditMode())) {\r\n                if (this._hasSkipRow($cell.parent())) {\r\n                    var direction = this._focusedCellPosition && this._focusedCellPosition.rowIndex > 0 ? \"upArrow\" : \"downArrow\";\r\n                    $cell = this._getNextCell(direction)\r\n                }\r\n                if (isElementDefined($cell)) {\r\n                    if (isRenderView && !isEditing && this._checkCellOverlapped($cell)) {\r\n                        return\r\n                    }\r\n                    if ($cell.is(\"td\") || $cell.hasClass(this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS))) {\r\n                        var isCommandCell = $cell.is(COMMAND_CELL_SELECTOR);\r\n                        var $focusedElementInsideCell = $cell.find(\":focus\");\r\n                        var isFocusedElementDefined = isElementDefined($focusedElementInsideCell);\r\n                        if ((isRenderView || !isCommandCell) && this._editorFactory.focus()) {\r\n                            if (isCommandCell && isFocusedElementDefined) {\r\n                                gridCoreUtils.focusAndSelectElement(this, $focusedElementInsideCell);\r\n                                return\r\n                            }!isFocusedElementDefined && this._focus($cell)\r\n                        } else if (!isFocusedElementDefined && (this._isNeedFocus || this._isHiddenFocus)) {\r\n                            this._focus($cell, this._isHiddenFocus)\r\n                        }\r\n                        if (isEditing) {\r\n                            this._focusInteractiveElement.bind(this)($cell)\r\n                        }\r\n                    } else {\r\n                        eventsEngine.trigger($cell, \"focus\")\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _checkCellOverlapped: function($cell) {\r\n        var cellOffset = $cell.offset();\r\n        var hasScrollable = this.component.getScrollable && this.component.getScrollable();\r\n        var isOverlapped = false;\r\n        if (hasScrollable) {\r\n            if (cellOffset.left < 0) {\r\n                isOverlapped = getWidth($cell) + cellOffset.left <= 0\r\n            } else if (cellOffset.top < 0) {\r\n                isOverlapped = getHeight($cell) + cellOffset.top <= 0\r\n            }\r\n        }\r\n        return isOverlapped\r\n    },\r\n    _getFocusedCell: function() {\r\n        return $(this._getCell(this._focusedCellPosition))\r\n    },\r\n    _updateFocusedCellPositionByTarget: function(target) {\r\n        var _this$_focusedCellPos;\r\n        var elementType = this._getElementType(target);\r\n        if (\"row\" === elementType && isDefined(null === (_this$_focusedCellPos = this._focusedCellPosition) || void 0 === _this$_focusedCellPos ? void 0 : _this$_focusedCellPos.columnIndex)) {\r\n            var $row = $(target);\r\n            this._focusedView && isGroupRow($row) && this.setFocusedRowIndex(this._getRowIndex($row))\r\n        } else {\r\n            this._updateFocusedCellPosition(this._getCellElementFromTarget(target))\r\n        }\r\n    },\r\n    _updateFocusedCellPosition: function($cell, direction) {\r\n        var position = this._getCellPosition($cell, direction);\r\n        if (position) {\r\n            if (!$cell.length || position.rowIndex >= 0 && position.columnIndex >= 0) {\r\n                this.setFocusedCellPosition(position.rowIndex, position.columnIndex)\r\n            }\r\n        }\r\n        return position\r\n    },\r\n    _getFocusedColumnIndexOffset: function(columnIndex) {\r\n        var offset = 0;\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        if (column && column.fixed) {\r\n            offset = this._getFixedColumnIndexOffset(column)\r\n        } else if (columnIndex >= 0) {\r\n            offset = this._columnsController.getColumnIndexOffset()\r\n        }\r\n        return offset\r\n    },\r\n    _getFixedColumnIndexOffset: function(column) {\r\n        var offset = isFixedColumnIndexOffsetRequired(this, column) ? this._getVisibleColumnCount() - this._columnsController.getVisibleColumns().length : 0;\r\n        return offset\r\n    },\r\n    _getCellPosition: function($cell, direction) {\r\n        var columnIndex;\r\n        var $row = isElementDefined($cell) && $cell.closest(\"tr\");\r\n        var rowsView = this.getView(\"rowsView\");\r\n        if (isElementDefined($row)) {\r\n            var rowIndex = this._getRowIndex($row);\r\n            columnIndex = rowsView.getCellIndex($cell, rowIndex);\r\n            columnIndex += this._getFocusedColumnIndexOffset(columnIndex);\r\n            if (direction) {\r\n                columnIndex = \"previous\" === direction ? columnIndex - 1 : columnIndex + 1;\r\n                columnIndex = this._applyColumnIndexBoundaries(columnIndex)\r\n            }\r\n            return {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n    },\r\n    _focusCell: function($cell, isDisabled) {\r\n        if (this._isCellValid($cell)) {\r\n            this._focus($cell, isDisabled);\r\n            return true\r\n        }\r\n    },\r\n    _focusEditFormCell: function($cell) {\r\n        if ($cell.hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n            this._editorFactory.focus($cell, true)\r\n        }\r\n    },\r\n    _resetFocusedCell: function(preventScroll) {\r\n        var _this$_focusedView;\r\n        var $cell = this._getFocusedCell();\r\n        isElementDefined($cell) && $cell.removeAttr(\"tabindex\");\r\n        this._isNeedFocus = false;\r\n        this._isNeedScroll = false;\r\n        this._focusedCellPosition = {};\r\n        clearTimeout(this._updateFocusTimeout);\r\n        null === (_this$_focusedView = this._focusedView) || void 0 === _this$_focusedView ? void 0 : _this$_focusedView.renderFocusState({\r\n            preventScroll: preventScroll\r\n        })\r\n    },\r\n    restoreFocusableElement: function(rowIndex, $event) {\r\n        var args;\r\n        var $rowElement;\r\n        var isUpArrow = isDefined(rowIndex);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var $rowsViewElement = rowsView.element();\r\n        var columnIndex = this._focusedCellPosition.columnIndex;\r\n        var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n        rowIndex = isUpArrow ? rowIndex : rowsView.getTopVisibleItemIndex() + rowIndexOffset;\r\n        if (!isUpArrow) {\r\n            this._editorFactory.loseFocus();\r\n            this._applyTabIndexToElement($rowsViewElement);\r\n            eventsEngine.trigger($rowsViewElement, \"focus\")\r\n        } else {\r\n            $rowElement = rowsView.getRow(rowIndex - rowIndexOffset);\r\n            args = this._fireFocusedRowChanging($event, $rowElement);\r\n            if (!args.cancel && args.rowIndexChanged) {\r\n                rowIndex = args.newRowIndex\r\n            }\r\n        }\r\n        if (!isUpArrow || !args.cancel) {\r\n            this.setFocusedCellPosition(rowIndex, columnIndex)\r\n        }\r\n        isUpArrow && this._updateFocus()\r\n    },\r\n    _getNewPositionByCode: function(cellPosition, elementType, code) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var visibleColumnsCount;\r\n        if (void 0 === cellPosition.rowIndex && \"next\" === code) {\r\n            return {\r\n                columnIndex: 0,\r\n                rowIndex: 0\r\n            }\r\n        }\r\n        switch (code) {\r\n            case \"nextInRow\":\r\n            case \"next\":\r\n                visibleColumnsCount = this._getVisibleColumnCount();\r\n                if (columnIndex < visibleColumnsCount - 1 && \"row\" !== elementType && this._hasValidCellAfterPosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex++\r\n                } else if (!this._isLastRow(rowIndex) && \"next\" === code) {\r\n                    columnIndex = 0;\r\n                    rowIndex++\r\n                }\r\n                break;\r\n            case \"previousInRow\":\r\n            case \"previous\":\r\n                if (columnIndex > 0 && \"row\" !== elementType && this._hasValidCellBeforePosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex--\r\n                } else if (rowIndex > 0 && \"previous\" === code) {\r\n                    rowIndex--;\r\n                    visibleColumnsCount = this._getVisibleColumnCount();\r\n                    columnIndex = visibleColumnsCount - 1\r\n                }\r\n                break;\r\n            case \"upArrow\":\r\n                rowIndex = rowIndex > 0 ? rowIndex - 1 : rowIndex;\r\n                break;\r\n            case \"downArrow\":\r\n                rowIndex = !this._isLastRow(rowIndex) ? rowIndex + 1 : rowIndex\r\n        }\r\n        return {\r\n            columnIndex: columnIndex,\r\n            rowIndex: rowIndex\r\n        }\r\n    },\r\n    setFocusedCellPosition: function(rowIndex, columnIndex) {\r\n        this.setFocusedRowIndex(rowIndex);\r\n        this.setFocusedColumnIndex(columnIndex)\r\n    },\r\n    setFocusedRowIndex: function(rowIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.rowIndex = rowIndex\r\n    },\r\n    setFocusedColumnIndex: function(columnIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.columnIndex = columnIndex\r\n    },\r\n    getRowIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.rowIndex : -1\r\n    },\r\n    getColumnIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : -1\r\n    },\r\n    getVisibleRowIndex: function() {\r\n        var rowIndex = this._focusedCellPosition && this._focusedCellPosition.rowIndex;\r\n        if (!isDefined(rowIndex) || rowIndex < 0) {\r\n            return -1\r\n        }\r\n        return rowIndex - this._dataController.getRowIndexOffset()\r\n    },\r\n    getVisibleColumnIndex: function() {\r\n        var columnIndex = this._focusedCellPosition && this._focusedCellPosition.columnIndex;\r\n        if (!isDefined(columnIndex)) {\r\n            return -1\r\n        }\r\n        return columnIndex - this._columnsController.getColumnIndexOffset()\r\n    },\r\n    _applyColumnIndexBoundaries: function(columnIndex) {\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        if (columnIndex < 0) {\r\n            columnIndex = 0\r\n        } else if (columnIndex >= visibleColumnsCount) {\r\n            columnIndex = visibleColumnsCount - 1\r\n        }\r\n        return columnIndex\r\n    },\r\n    _isCellByPositionValid: function(cellPosition) {\r\n        var $cell = $(this._getCell(cellPosition));\r\n        return this._isCellValid($cell)\r\n    },\r\n    _isLastRow: function(rowIndex) {\r\n        var dataController = this._dataController;\r\n        if (this._isVirtualRowRender()) {\r\n            return rowIndex >= dataController.getMaxRowIndex()\r\n        }\r\n        return rowIndex === dataController.items().length - 1\r\n    },\r\n    _isFirstValidCell: function(cellPosition) {\r\n        var isFirstValidCell = false;\r\n        if (0 === cellPosition.rowIndex && cellPosition.columnIndex >= 0) {\r\n            isFirstValidCell = isFirstValidCell || !this._hasValidCellBeforePosition(cellPosition)\r\n        }\r\n        return isFirstValidCell\r\n    },\r\n    _hasValidCellBeforePosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        while (columnIndex > 0 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: --columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _hasValidCellAfterPosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        var visibleColumnCount = this._getVisibleColumnCount();\r\n        while (columnIndex < visibleColumnCount - 1 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: ++columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _isLastValidCell: function(cellPosition) {\r\n        var nextColumnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex + 1 : 0;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var checkingPosition = {\r\n            columnIndex: nextColumnIndex,\r\n            rowIndex: rowIndex\r\n        };\r\n        var visibleRows = this._dataController.getVisibleRows();\r\n        var row = visibleRows && visibleRows[rowIndex];\r\n        var isLastRow = this._isLastRow(rowIndex);\r\n        if (!isLastRow) {\r\n            return false\r\n        }\r\n        if (row && \"group\" === row.rowType && cellPosition.columnIndex > 0) {\r\n            return true\r\n        }\r\n        if (cellPosition.columnIndex === this._getVisibleColumnCount() - 1) {\r\n            return true\r\n        }\r\n        if (this._isCellByPositionValid(checkingPosition)) {\r\n            return false\r\n        }\r\n        return this._isLastValidCell(checkingPosition)\r\n    },\r\n    _isCellValid: function($cell, isClick) {\r\n        if (isElementDefined($cell)) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var $row = $cell.parent();\r\n            var columnsController = this._columnsController;\r\n            var columnIndex = rowsView.getCellIndex($cell) + columnsController.getColumnIndexOffset();\r\n            var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n            var visibleColumnCount = this._getVisibleColumnCount();\r\n            var editingController = this._editingController;\r\n            var isMasterDetailRow = isDetailRow($row);\r\n            var isShowWhenGrouped = column && column.showWhenGrouped;\r\n            var isDataCell = column && !$cell.hasClass(COMMAND_EXPAND_CLASS) && isDataRow($row);\r\n            if (this._isMasterDetailCell($cell)) {\r\n                return true\r\n            }\r\n            if (visibleColumnCount > columnIndex && (!isMasterDetailRow && column && (!isDefined(column.groupIndex) || isShowWhenGrouped && isDataCell) || parseInt($cell.attr(\"colspan\")) > 1)) {\r\n                var rowItems = this._dataController.items();\r\n                var visibleRowIndex = rowsView.getRowIndex($row);\r\n                var row = rowItems[visibleRowIndex];\r\n                var isCellEditing = editingController && this._isCellEditMode() && editingController.isEditing();\r\n                var isRowEditingInCurrentRow = editingController && editingController.isEditRow(visibleRowIndex);\r\n                var isEditing = isRowEditingInCurrentRow || isCellEditing;\r\n                if (column.command) {\r\n                    if (this._isLegacyNavigation()) {\r\n                        return !isEditing && \"expand\" === column.command\r\n                    }\r\n                    if (isCellEditing) {\r\n                        return false\r\n                    }\r\n                    if (isRowEditingInCurrentRow) {\r\n                        return \"select\" !== column.command\r\n                    }\r\n                    return !isEditing\r\n                }\r\n                if (isCellEditing && row && \"data\" !== row.rowType) {\r\n                    return false\r\n                }\r\n                return !isEditing || column.allowEditing || isClick\r\n            }\r\n        }\r\n    },\r\n    getFirstValidCellInRow: function($row, columnIndex) {\r\n        var $cells = $row.find(\"> td\");\r\n        var $cell;\r\n        var $result;\r\n        columnIndex = columnIndex || 0;\r\n        for (var i = columnIndex; i < $cells.length; ++i) {\r\n            $cell = $cells.eq(i);\r\n            if (this._isCellValid($cell)) {\r\n                $result = $cell;\r\n                break\r\n            }\r\n        }\r\n        return $result\r\n    },\r\n    _getNextCell: function(keyCode, elementType, cellPosition) {\r\n        var focusedCellPosition = cellPosition || this._focusedCellPosition;\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var includeCommandCells = isRowFocusType || inArray(keyCode, [\"next\", \"previous\"]) > -1;\r\n        var $cell;\r\n        var $row;\r\n        if (this._focusedView && focusedCellPosition) {\r\n            var newFocusedCellPosition = this._getNewPositionByCode(focusedCellPosition, elementType, keyCode);\r\n            $cell = $(this._getCell(newFocusedCellPosition));\r\n            var isLastCellOnDirection = \"previous\" === keyCode ? this._isFirstValidCell(newFocusedCellPosition) : this._isLastValidCell(newFocusedCellPosition);\r\n            if (isElementDefined($cell) && !this._isCellValid($cell) && this._isCellInRow(newFocusedCellPosition, includeCommandCells) && !isLastCellOnDirection) {\r\n                if (isRowFocusType) {\r\n                    $cell = this.getFirstValidCellInRow($cell.parent(), newFocusedCellPosition.columnIndex)\r\n                } else {\r\n                    $cell = this._getNextCell(keyCode, \"cell\", newFocusedCellPosition)\r\n                }\r\n            }\r\n            $row = isElementDefined($cell) && $cell.parent();\r\n            if (this._hasSkipRow($row)) {\r\n                var rowIndex = this._getRowIndex($row);\r\n                if (!this._isLastRow(rowIndex)) {\r\n                    $cell = this._getNextCell(keyCode, \"row\", {\r\n                        columnIndex: focusedCellPosition.columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n            return isElementDefined($cell) ? $cell : null\r\n        }\r\n        return null\r\n    },\r\n    _startEditing: function(eventArgs, fastEditingKey) {\r\n        var focusedCellPosition = this._focusedCellPosition;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleColumnIndex = this.getVisibleColumnIndex();\r\n        var row = this._dataController.items()[visibleRowIndex];\r\n        var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n        if (this._isAllowEditing(row, column)) {\r\n            if (this._isRowEditMode()) {\r\n                this._editingController.editRow(visibleRowIndex)\r\n            } else if (focusedCellPosition) {\r\n                this._startEditCell(eventArgs, fastEditingKey)\r\n            }\r\n        }\r\n    },\r\n    _isAllowEditing: function(row, column) {\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }) && column && column.allowEditing\r\n    },\r\n    _editFocusedCell: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var colIndex = this.getVisibleColumnIndex();\r\n        return this._editingController.editCell(rowIndex, colIndex)\r\n    },\r\n    _startEditCell: function(eventArgs, fastEditingKey) {\r\n        this._fastEditingStarted = isDefined(fastEditingKey);\r\n        var editResult = this._editFocusedCell();\r\n        if (this._isFastEditingStarted()) {\r\n            if (true === editResult) {\r\n                this._editingCellHandler(eventArgs, fastEditingKey)\r\n            } else if (editResult && editResult.done) {\r\n                var editorValue = fastEditingKey !== FAST_EDITING_DELETE_KEY ? fastEditingKey : \"\";\r\n                editResult.done(() => this._editingCellHandler(eventArgs, editorValue))\r\n            }\r\n        }\r\n    },\r\n    _editingCellHandler: function(eventArgs, editorValue) {\r\n        var _$input$get$select, _$input$get;\r\n        var $input = this._getFocusedCell().find(INTERACTIVE_ELEMENTS_SELECTOR).eq(0);\r\n        var keyDownEvent = createEvent(eventArgs, {\r\n            type: \"keydown\",\r\n            target: $input.get(0)\r\n        });\r\n        var keyPressEvent = createEvent(eventArgs, {\r\n            type: \"keypress\",\r\n            target: $input.get(0)\r\n        });\r\n        var inputEvent = createEvent(eventArgs, {\r\n            type: \"input\",\r\n            target: $input.get(0)\r\n        });\r\n        null === (_$input$get$select = (_$input$get = $input.get(0)).select) || void 0 === _$input$get$select ? void 0 : _$input$get$select.call(_$input$get);\r\n        eventsEngine.trigger($input, keyDownEvent);\r\n        if (!keyDownEvent.isDefaultPrevented()) {\r\n            eventsEngine.trigger($input, keyPressEvent);\r\n            if (!keyPressEvent.isDefaultPrevented()) {\r\n                var timeout = browser.mozilla ? 25 : 0;\r\n                setTimeout(() => {\r\n                    $input.val(editorValue);\r\n                    var $widgetContainer = $input.closest(\".\".concat(WIDGET_CLASS));\r\n                    eventsEngine.off($widgetContainer, \"focusout\");\r\n                    eventsEngine.one($widgetContainer, \"focusout\", (function() {\r\n                        eventsEngine.trigger($input, \"change\")\r\n                    }));\r\n                    eventsEngine.trigger($input, inputEvent)\r\n                }, timeout)\r\n            }\r\n        }\r\n    },\r\n    _fireFocusChangingEvents: function($event, $cell, fireRowEvent, isHighlighted) {\r\n        var args = {};\r\n        var cellPosition = this._getCellPosition($cell) || {};\r\n        if (this.isCellFocusType()) {\r\n            args = this._fireFocusedCellChanging($event, $cell, isHighlighted);\r\n            if (!args.cancel) {\r\n                cellPosition.columnIndex = args.newColumnIndex;\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                isHighlighted = args.isHighlighted;\r\n                $cell = $(this._getCell(cellPosition))\r\n            }\r\n        }\r\n        if (!args.cancel && fireRowEvent && $cell) {\r\n            args = this._fireFocusedRowChanging($event, $cell.parent());\r\n            if (!args.cancel) {\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                args.isHighlighted = isHighlighted\r\n            }\r\n        }\r\n        args.$newCellElement = $(this._getCell(cellPosition));\r\n        if (!args.$newCellElement.length) {\r\n            args.$newCellElement = $cell\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanging: function($event, $cellElement, isHighlighted) {\r\n        var prevCellIndex = this.option(\"focusedColumnIndex\");\r\n        var prevRowIndex = this.option(\"focusedRowIndex\");\r\n        var cellPosition = this._getCellPosition($cellElement);\r\n        var columnIndex = cellPosition ? cellPosition.columnIndex : -1;\r\n        var rowIndex = cellPosition ? cellPosition.rowIndex : -1;\r\n        var args = {\r\n            cellElement: $cellElement,\r\n            prevColumnIndex: prevCellIndex,\r\n            prevRowIndex: prevRowIndex,\r\n            newColumnIndex: columnIndex,\r\n            newRowIndex: rowIndex,\r\n            rows: this._dataController.getVisibleRows(),\r\n            columns: this._columnsController.getVisibleColumns(),\r\n            event: $event,\r\n            isHighlighted: isHighlighted || false,\r\n            cancel: false\r\n        };\r\n        this._canceledCellPosition = null;\r\n        this.executeAction(\"onFocusedCellChanging\", args);\r\n        if (args.newColumnIndex !== columnIndex || args.newRowIndex !== rowIndex) {\r\n            args.$newCellElement = $(this._getCell({\r\n                columnIndex: args.newColumnIndex,\r\n                rowIndex: args.newRowIndex\r\n            }))\r\n        }\r\n        if (args.cancel) {\r\n            this._canceledCellPosition = {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanged: function($cellElement, prevCellIndex, prevRowIndex) {\r\n        var dataController = this._dataController;\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cellElement);\r\n        var rowIndex = this._getRowIndex($cellElement && $cellElement.parent());\r\n        var localRowIndex = Math.min(rowIndex - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n        var isEditingCell = this._editingController.isEditCell(localRowIndex, columnIndex);\r\n        var row = dataController.items()[localRowIndex];\r\n        if (!isEditingCell && (prevCellIndex !== columnIndex || prevRowIndex !== rowIndex)) {\r\n            this.executeAction(\"onFocusedCellChanged\", {\r\n                cellElement: $cellElement,\r\n                columnIndex: columnIndex,\r\n                rowIndex: rowIndex,\r\n                row: row,\r\n                column: this._columnsController.getVisibleColumns()[columnIndex]\r\n            })\r\n        }\r\n    },\r\n    _fireFocusedRowChanging: function(eventArgs, $newFocusedRow) {\r\n        var newRowIndex = this._getRowIndex($newFocusedRow);\r\n        var dataController = this._dataController;\r\n        var prevFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var loadingOperationTypes = dataController.loadingOperationTypes();\r\n        var args = {\r\n            rowElement: $newFocusedRow,\r\n            prevRowIndex: prevFocusedRowIndex,\r\n            newRowIndex: newRowIndex,\r\n            event: eventArgs,\r\n            rows: dataController.getVisibleRows(),\r\n            cancel: false\r\n        };\r\n        if (!dataController || dataController.isLoading() && (loadingOperationTypes.reload || loadingOperationTypes.paging)) {\r\n            args.cancel = true;\r\n            return args\r\n        }\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.executeAction(\"onFocusedRowChanging\", args);\r\n            if (!args.cancel && args.newRowIndex !== newRowIndex) {\r\n                args.resetFocusedRow = args.newRowIndex < 0;\r\n                if (!args.resetFocusedRow) {\r\n                    this.setFocusedRowIndex(args.newRowIndex)\r\n                }\r\n                args.rowIndexChanged = true\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedRowChanged: function($rowElement) {\r\n        var row;\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var focusController = this.getController(\"focus\");\r\n        var focusedRowIndex = null === focusController || void 0 === focusController ? void 0 : focusController.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            if (focusedRowIndex >= 0) {\r\n                var dataController = this._dataController;\r\n                row = focusedRowIndex >= 0 && dataController.getVisibleRows()[focusedRowIndex - dataController.getRowIndexOffset()]\r\n            }\r\n            this.executeAction(\"onFocusedRowChanged\", {\r\n                rowElement: $rowElement,\r\n                rowIndex: focusedRowIndex,\r\n                row: row\r\n            })\r\n        }\r\n    },\r\n    _isEventInCurrentGrid: function(event) {\r\n        return gridCoreUtils.isElementInCurrentGrid(this, $(event.target))\r\n    },\r\n    _isRowEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_ROW || editMode === EDIT_MODE_FORM\r\n    },\r\n    _isCellEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_CELL || editMode === EDIT_MODE_BATCH\r\n    },\r\n    _isFastEditingAllowed: function() {\r\n        return this._isCellEditMode() && this.option(\"keyboardNavigation.editOnKeyPress\")\r\n    },\r\n    _getInteractiveElement: function($cell, isLast) {\r\n        var $focusedElement = $cell.find(INTERACTIVE_ELEMENTS_SELECTOR).filter(\":visible\");\r\n        return isLast ? $focusedElement.last() : $focusedElement.first()\r\n    },\r\n    _applyTabIndexToElement: function($element) {\r\n        var tabIndex = this.option(\"tabIndex\") || 0;\r\n        $element.attr(\"tabindex\", isDefined(tabIndex) ? tabIndex : 0)\r\n    },\r\n    _getCell: function(cellPosition) {\r\n        if (this._focusedView && cellPosition) {\r\n            var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n            var column = this._columnsController.getVisibleColumns(null, true)[cellPosition.columnIndex];\r\n            var columnIndexOffset = column && column.fixed ? this._getFixedColumnIndexOffset(column) : this._columnsController.getColumnIndexOffset();\r\n            var rowIndex = cellPosition.rowIndex >= 0 ? cellPosition.rowIndex - rowIndexOffset : -1;\r\n            var columnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex - columnIndexOffset : -1;\r\n            return this._focusedView.getCell({\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            })\r\n        }\r\n    },\r\n    _getRowIndex: function($row) {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowIndex = rowsView.getRowIndex($row);\r\n        if (rowIndex >= 0) {\r\n            rowIndex += this._dataController.getRowIndexOffset()\r\n        }\r\n        return rowIndex\r\n    },\r\n    _hasSkipRow: function($row) {\r\n        var row = $row && $row.get(0);\r\n        return row && (\"none\" === row.style.display || $row.hasClass(this.addWidgetPrefix(GROUP_FOOTER_CLASS)) || isDetailRow($row) && !$row.hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS)))\r\n    },\r\n    _allowEditingOnEnterKey: function() {\r\n        return \"startEdit\" === this.option(\"keyboardNavigation.enterKeyAction\")\r\n    },\r\n    _isLegacyNavigation: function() {\r\n        return this.option(\"useLegacyKeyboardNavigation\")\r\n    },\r\n    _getDirectionCodeByKey: function(key) {\r\n        var directionCode;\r\n        switch (key) {\r\n            case \"upArrow\":\r\n                directionCode = \"prevRow\";\r\n                break;\r\n            case \"downArrow\":\r\n                directionCode = \"nextRow\";\r\n                break;\r\n            case \"leftArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"nextInRow\" : \"previousInRow\";\r\n                break;\r\n            case \"rightArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"previousInRow\" : \"nextInRow\"\r\n        }\r\n        return directionCode\r\n    },\r\n    _isVirtualScrolling: function() {\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n    },\r\n    _isVirtualRowRender: function() {\r\n        return this._isVirtualScrolling() || gridCoreUtils.isVirtualRowRendering(this)\r\n    },\r\n    _isVirtualColumnRender: function() {\r\n        return \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n    },\r\n    _scrollBy: function(left, top, rowIndex, $event) {\r\n        var that = this;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (that._focusedCellPosition) {\r\n            scrollable.on(\"scroll\", (function scrollHandler() {\r\n                scrollable.off(\"scroll\", scrollHandler);\r\n                setTimeout(that.restoreFocusableElement.bind(that, rowIndex, $event))\r\n            }))\r\n        }\r\n        return scrollable.scrollBy({\r\n            left: left,\r\n            top: top\r\n        })\r\n    },\r\n    _isInsideEditForm: function(element) {\r\n        return $(element).closest(\".\" + this.addWidgetPrefix(EDIT_FORM_CLASS)).length > 0\r\n    },\r\n    _isMasterDetailCell: function(element) {\r\n        var $masterDetailCell = $(element).closest(\".\" + MASTER_DETAIL_CELL_CLASS);\r\n        var $masterDetailGrid = $masterDetailCell.closest(\".\" + this.getWidgetContainerClass()).parent();\r\n        return $masterDetailCell.length && $masterDetailGrid.is(this.component.$element())\r\n    },\r\n    _processNextCellInMasterDetail: function($nextCell) {\r\n        if (!this._isInsideEditForm($nextCell) && $nextCell) {\r\n            this._applyTabIndexToElement($nextCell)\r\n        }\r\n    },\r\n    _handleTabKeyOnMasterDetailCell: function(target, direction) {\r\n        if (this._isMasterDetailCell(target)) {\r\n            this._updateFocusedCellPosition($(target), direction);\r\n            var $nextCell = this._getNextCell(direction, \"row\");\r\n            this._processNextCellInMasterDetail($nextCell);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _getElementType: function(target) {\r\n        return $(target).is(\"tr\") ? \"row\" : \"cell\"\r\n    },\r\n    _isFastEditingStarted: function() {\r\n        return this._isFastEditingAllowed() && this._fastEditingStarted\r\n    },\r\n    _getVisibleColumnCount: function() {\r\n        return this._columnsController.getVisibleColumns(null, true).length\r\n    },\r\n    _isCellInRow: function(cellPosition, includeCommandCells) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        return includeCommandCells ? columnIndex >= 0 && columnIndex <= visibleColumnsCount - 1 : columnIndex > 0 && columnIndex < visibleColumnsCount - 1\r\n    },\r\n    _getCellElementFromTarget: function(target) {\r\n        var elementType = this._getElementType(target);\r\n        var $targetElement = $(target);\r\n        var $cell;\r\n        if (\"cell\" === elementType) {\r\n            $cell = $targetElement.closest(\".\".concat(ROW_CLASS, \" > td\"))\r\n        } else {\r\n            $cell = $targetElement.children().not(\".\" + COMMAND_EXPAND_CLASS).first()\r\n        }\r\n        return $cell\r\n    },\r\n    _getRowsViewElement: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return rowsView && rowsView.element()\r\n    },\r\n    isKeyboardEnabled: function() {\r\n        return this.option(\"keyboardNavigation.enabled\")\r\n    },\r\n    _processCanceledEditCellPosition: function(rowIndex, columnIndex) {\r\n        if (this._canceledCellPosition) {\r\n            var isCanceled = this._canceledCellPosition.rowIndex === rowIndex && this._canceledCellPosition.columnIndex === columnIndex;\r\n            this._canceledCellPosition = null;\r\n            return isCanceled\r\n        }\r\n    },\r\n    updateFocusedRowIndex: function() {\r\n        var dataController = this._dataController;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleItems = dataController.items();\r\n        var lastVisibleIndex = visibleItems.length ? visibleItems.length - 1 : -1;\r\n        var rowIndexOffset = dataController.getRowIndexOffset();\r\n        lastVisibleIndex >= 0 && visibleRowIndex > lastVisibleIndex && this.setFocusedRowIndex(lastVisibleIndex + rowIndexOffset)\r\n    }\r\n});\r\nexport var keyboardNavigationModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            useLegacyKeyboardNavigation: false,\r\n            keyboardNavigation: {\r\n                enabled: true,\r\n                enterKeyAction: \"startEdit\",\r\n                enterKeyDirection: \"none\",\r\n                editOnKeyPress: false\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        keyboardNavigation: KeyboardNavigationController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _rowClick: function(e) {\r\n                    var editRowIndex = this.getController(\"editing\").getEditRowIndex();\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (editRowIndex === e.rowIndex) {\r\n                        keyboardController.setCellFocusType()\r\n                    }\r\n                    var needTriggerPointerEventHandler = isMobile() && this.option(\"focusedRowEnabled\");\r\n                    if (needTriggerPointerEventHandler) {\r\n                        this._triggerPointerDownEventHandler(e)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _triggerPointerDownEventHandler: function(e) {\r\n                    var originalEvent = e.event.originalEvent;\r\n                    if (originalEvent) {\r\n                        var keyboardController = this.getController(\"keyboardNavigation\");\r\n                        var $cell = $(originalEvent.target);\r\n                        var columnIndex = this.getCellIndex($cell);\r\n                        var column = this.getController(\"columns\").getVisibleColumns()[columnIndex];\r\n                        var row = this.getController(\"data\").items()[e.rowIndex];\r\n                        if (keyboardController._isAllowEditing(row, column)) {\r\n                            var eventArgs = createEvent(originalEvent, {\r\n                                currentTarget: originalEvent.target\r\n                            });\r\n                            keyboardController._pointerEventHandler(eventArgs)\r\n                        }\r\n                    }\r\n                },\r\n                renderFocusState: function(params) {\r\n                    var {\r\n                        preventScroll: preventScroll,\r\n                        pageSizeChanged: pageSizeChanged\r\n                    } = null !== params && void 0 !== params ? params : {};\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $rowsViewElement = this.element();\r\n                    if ($rowsViewElement && !focused($rowsViewElement)) {\r\n                        $rowsViewElement.attr(\"tabindex\", null)\r\n                    }\r\n                    pageSizeChanged && keyboardController.updateFocusedRowIndex();\r\n                    var rowIndex = keyboardController.getVisibleRowIndex();\r\n                    if (!isDefined(rowIndex) || rowIndex < 0) {\r\n                        rowIndex = 0\r\n                    }\r\n                    var cellElements = this.getCellElements(rowIndex);\r\n                    if (keyboardController.isKeyboardEnabled() && cellElements.length) {\r\n                        this.updateFocusElementTabIndex(cellElements, preventScroll)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function(cellElements) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $row = cellElements.eq(0).parent();\r\n                    if (isGroupRow($row)) {\r\n                        keyboardController._applyTabIndexToElement($row)\r\n                    } else {\r\n                        var columnIndex = keyboardController.getColumnIndex();\r\n                        if (!isDefined(columnIndex) || columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        this._updateFocusedCellTabIndex(cellElements, columnIndex)\r\n                    }\r\n                },\r\n                _updateFocusedCellTabIndex: function(cellElements, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var cellElementsLength = cellElements ? cellElements.length : -1;\r\n                    var updateCellTabIndex = function($cell) {\r\n                        var isMasterDetailCell = keyboardController._isMasterDetailCell($cell);\r\n                        var isValidCell = keyboardController._isCellValid($cell);\r\n                        if (!isMasterDetailCell && isValidCell && isCellElement($cell)) {\r\n                            keyboardController._applyTabIndexToElement($cell);\r\n                            keyboardController.setCellFocusType();\r\n                            return true\r\n                        }\r\n                    };\r\n                    var $cell = cellElements.filter(\"[aria-colindex='\".concat(columnIndex + 1, \"']\"));\r\n                    if ($cell.length) {\r\n                        updateCellTabIndex($cell)\r\n                    } else {\r\n                        if (cellElementsLength <= columnIndex) {\r\n                            columnIndex = cellElementsLength - 1\r\n                        }\r\n                        for (var i = columnIndex; i < cellElementsLength; ++i) {\r\n                            if (updateCellTabIndex($(cellElements[i]))) {\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                renderDelayedTemplates: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _renderFocusByChange(change) {\r\n                    var {\r\n                        operationTypes: operationTypes,\r\n                        repaintChangesOnly: repaintChangesOnly\r\n                    } = null !== change && void 0 !== change ? change : {};\r\n                    var {\r\n                        fullReload: fullReload,\r\n                        pageSize: pageSize\r\n                    } = null !== operationTypes && void 0 !== operationTypes ? operationTypes : {};\r\n                    if (!change || !repaintChangesOnly || fullReload || pageSize) {\r\n                        var preventScroll = shouldPreventScroll(this);\r\n                        this.renderFocusState({\r\n                            preventScroll: preventScroll,\r\n                            pageSizeChanged: pageSize\r\n                        })\r\n                    }\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _editCellPrepared: function($cell) {\r\n                    var editorInstance = this._getEditorInstance($cell);\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isEditingNavigationMode = keyboardController && keyboardController._isFastEditingStarted();\r\n                    if (editorInstance && isEditingNavigationMode) {\r\n                        this._handleEditingNavigationMode(editorInstance)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditingNavigationMode: function(editorInstance) {\r\n                    [\"downArrow\", \"upArrow\"].forEach((function(keyName) {\r\n                        var originalKeyHandler = editorInstance._supportedKeys()[keyName];\r\n                        editorInstance.registerKeyHandler(keyName, e => {\r\n                            var isDropDownOpened = \"true\" === editorInstance._input().attr(\"aria-expanded\");\r\n                            if (isDropDownOpened) {\r\n                                return originalKeyHandler && originalKeyHandler.call(editorInstance, e)\r\n                            }\r\n                        })\r\n                    }));\r\n                    editorInstance.registerKeyHandler(\"leftArrow\", noop);\r\n                    editorInstance.registerKeyHandler(\"rightArrow\", noop);\r\n                    var isDateBoxWithMask = editorInstance.NAME === DATEBOX_WIDGET_NAME && editorInstance.option(\"useMaskBehavior\");\r\n                    if (isDateBoxWithMask) {\r\n                        editorInstance.registerKeyHandler(\"enter\", noop)\r\n                    }\r\n                },\r\n                _getEditorInstance: function($cell) {\r\n                    var $editor = $cell.find(\".dx-texteditor\").eq(0);\r\n                    return gridCoreUtils.getWidgetInstance($editor)\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editing: {\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (keyboardController._processCanceledEditCellPosition(rowIndex, columnIndex)) {\r\n                        return false\r\n                    }\r\n                    var isCellEditing = this.callBase(rowIndex, columnIndex);\r\n                    if (isCellEditing) {\r\n                        keyboardController.setupFocusedView()\r\n                    }\r\n                    return isCellEditing\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var visibleColumnIndex = keyboardController.getVisibleColumnIndex();\r\n                    var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n                    if (column && column.type || this.option(\"editing.mode\") === EDIT_MODE_FORM) {\r\n                        keyboardController._resetFocusedCell()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                addRow: function(parentKey) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    keyboardController.setupFocusedView();\r\n                    keyboardController.setCellFocusType();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getFocusedCellInRow: function(rowIndex) {\r\n                    var keyboardNavigationController = this.getController(\"keyboardNavigation\");\r\n                    var $cell = this.callBase(rowIndex);\r\n                    if (keyboardNavigationController.isKeyboardEnabled() && keyboardNavigationController._focusedCellPosition.rowIndex === rowIndex) {\r\n                        var $focusedCell = keyboardNavigationController._getFocusedCell();\r\n                        if (isElementDefined($focusedCell) && !$focusedCell.hasClass(COMMAND_EDIT_CLASS)) {\r\n                            $cell = $focusedCell\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _processCanceledEditingCell: function() {\r\n                    this.closeEditCell().done(() => {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        keyboardNavigation._updateFocus()\r\n                    })\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._keyboardNavigationController = this.getController(\"keyboardNavigation\")\r\n                },\r\n                closeEditCell: function() {\r\n                    var keyboardNavigation = this._keyboardNavigationController;\r\n                    keyboardNavigation._fastEditingStarted = false;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    keyboardNavigation._updateFocus();\r\n                    return result\r\n                },\r\n                _delayedInputFocus: function() {\r\n                    this._keyboardNavigationController._isNeedScroll = true;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditingStart: function() {\r\n                    var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                    var cancel = this.callBase.apply(this, arguments);\r\n                    if (cancel && !keyboardNavigation._isNeedFocus) {\r\n                        var $cell = keyboardNavigation._getFocusedCell();\r\n                        keyboardNavigation._focus($cell, true)\r\n                    }\r\n                    return cancel\r\n                }\r\n            },\r\n            data: {\r\n                _correctRowIndices: function(getRowIndexCorrection) {\r\n                    var that = this;\r\n                    var keyboardNavigationController = that.getController(\"keyboardNavigation\");\r\n                    var editorFactory = that.getController(\"editorFactory\");\r\n                    var focusedCellPosition = keyboardNavigationController._focusedCellPosition;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (focusedCellPosition && focusedCellPosition.rowIndex >= 0) {\r\n                        var focusedRowIndexCorrection = getRowIndexCorrection(focusedCellPosition.rowIndex);\r\n                        if (focusedRowIndexCorrection) {\r\n                            focusedCellPosition.rowIndex += focusedRowIndexCorrection;\r\n                            editorFactory.refocus()\r\n                        }\r\n                    }\r\n                },\r\n                getMaxRowIndex: function() {\r\n                    var result = this.items().length - 1;\r\n                    var virtualItemsCount = this.virtualItemsCount();\r\n                    if (virtualItemsCount) {\r\n                        result += virtualItemsCount.begin + virtualItemsCount.end\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            adaptiveColumns: {\r\n                _showHiddenCellsInView: function(_ref) {\r\n                    var {\r\n                        viewName: viewName,\r\n                        $cells: $cells,\r\n                        isCommandColumn: isCommandColumn\r\n                    } = _ref;\r\n                    this.callBase.apply(this, arguments);\r\n                    viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && $cells.each((_, cellElement) => {\r\n                        var $cell = $(cellElement);\r\n                        isCellInHeaderRow($cell) && $cell.attr(\"tabindex\", 0)\r\n                    })\r\n                },\r\n                _hideVisibleCellInView: function(_ref2) {\r\n                    var {\r\n                        viewName: viewName,\r\n                        $cell: $cell,\r\n                        isCommandColumn: isCommandColumn\r\n                    } = _ref2;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && isCellInHeaderRow($cell)) {\r\n                        $cell.removeAttr(\"tabindex\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/aggregate_calculator.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    errors\r\n} from \"../../data/errors\";\r\nimport {\r\n    aggregators\r\n} from \"../../data/utils\";\r\n\r\nfunction depthFirstSearch(i, depth, root, callback) {\r\n    var j = 0;\r\n    if (i < depth) {\r\n        for (; j < root.items.length; j++) {\r\n            depthFirstSearch(i + 1, depth, root.items[j], callback)\r\n        }\r\n    }\r\n    if (i === depth) {\r\n        callback(root)\r\n    }\r\n}\r\n\r\nfunction map(array, callback) {\r\n    var i;\r\n    if (\"map\" in array) {\r\n        return array.map(callback)\r\n    }\r\n    var result = new Array(array.length);\r\n    for (i in array) {\r\n        result[i] = callback(array[i], i)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isEmpty(x) {\r\n    return x !== x || \"\" === x || null === x || void 0 === x\r\n}\r\n\r\nfunction isCount(aggregator) {\r\n    return aggregator === aggregators.count\r\n}\r\n\r\nfunction normalizeAggregate(aggregate) {\r\n    var selector = compileGetter(aggregate.selector);\r\n    var skipEmptyValues = \"skipEmptyValues\" in aggregate ? aggregate.skipEmptyValues : true;\r\n    var aggregator = aggregate.aggregator;\r\n    if (\"string\" === typeof aggregator) {\r\n        aggregator = aggregators[aggregator];\r\n        if (!aggregator) {\r\n            throw errors.Error(\"E4001\", aggregate.aggregator)\r\n        }\r\n    }\r\n    return {\r\n        selector: selector,\r\n        aggregator: aggregator,\r\n        skipEmptyValues: skipEmptyValues\r\n    }\r\n}\r\nexport default Class.inherit({\r\n    ctor: function(options) {\r\n        this._data = options.data;\r\n        this._groupLevel = options.groupLevel || 0;\r\n        this._totalAggregates = map(options.totalAggregates || [], normalizeAggregate);\r\n        this._groupAggregates = map(options.groupAggregates || [], normalizeAggregate);\r\n        this._totals = []\r\n    },\r\n    calculate: function() {\r\n        if (this._totalAggregates.length) {\r\n            this._calculateTotals(0, {\r\n                items: this._data\r\n            })\r\n        }\r\n        if (this._groupAggregates.length && this._groupLevel > 0) {\r\n            this._calculateGroups({\r\n                items: this._data\r\n            })\r\n        }\r\n    },\r\n    totalAggregates: function() {\r\n        return this._totals\r\n    },\r\n    _aggregate: function(aggregates, data, container) {\r\n        var length = data.items ? data.items.length : 0;\r\n        for (var i = 0; i < aggregates.length; i++) {\r\n            if (isCount(aggregates[i].aggregator)) {\r\n                container[i] = (container[i] || 0) + length;\r\n                continue\r\n            }\r\n            for (var j = 0; j < length; j++) {\r\n                this._accumulate(i, aggregates[i], container, data.items[j])\r\n            }\r\n        }\r\n    },\r\n    _calculateTotals: function(level, data) {\r\n        if (0 === level) {\r\n            this._totals = this._seed(this._totalAggregates)\r\n        }\r\n        if (level === this._groupLevel) {\r\n            this._aggregate(this._totalAggregates, data, this._totals)\r\n        } else {\r\n            for (var i = 0; i < data.items.length; i++) {\r\n                this._calculateTotals(level + 1, data.items[i])\r\n            }\r\n        }\r\n        if (0 === level) {\r\n            this._totals = this._finalize(this._totalAggregates, this._totals)\r\n        }\r\n    },\r\n    _calculateGroups: function(root) {\r\n        var maxLevel = this._groupLevel;\r\n        var currentLevel = maxLevel + 1;\r\n        var seedFn = this._seed.bind(this, this._groupAggregates);\r\n        var stepFn = this._aggregate.bind(this, this._groupAggregates);\r\n        var finalizeFn = this._finalize.bind(this, this._groupAggregates);\r\n\r\n        function aggregator(node) {\r\n            node.aggregates = seedFn(currentLevel - 1);\r\n            if (currentLevel === maxLevel) {\r\n                stepFn(node, node.aggregates)\r\n            } else {\r\n                depthFirstSearch(currentLevel, maxLevel, node, (function(innerNode) {\r\n                    stepFn(innerNode, node.aggregates)\r\n                }))\r\n            }\r\n            node.aggregates = finalizeFn(node.aggregates)\r\n        }\r\n        while (--currentLevel > 0) {\r\n            depthFirstSearch(0, currentLevel, root, aggregator)\r\n        }\r\n    },\r\n    _seed: function(aggregates, groupIndex) {\r\n        return map(aggregates, (function(aggregate) {\r\n            var aggregator = aggregate.aggregator;\r\n            var seed = \"seed\" in aggregator ? isFunction(aggregator.seed) ? aggregator.seed(groupIndex) : aggregator.seed : NaN;\r\n            return seed\r\n        }))\r\n    },\r\n    _accumulate: function(aggregateIndex, aggregate, results, item) {\r\n        var value = aggregate.selector(item);\r\n        var aggregator = aggregate.aggregator;\r\n        var skipEmptyValues = aggregate.skipEmptyValues;\r\n        if (skipEmptyValues && isEmpty(value)) {\r\n            return\r\n        }\r\n        if (results[aggregateIndex] !== results[aggregateIndex]) {\r\n            results[aggregateIndex] = value\r\n        } else {\r\n            results[aggregateIndex] = aggregator.step(results[aggregateIndex], value)\r\n        }\r\n    },\r\n    _finalize: function(aggregates, results) {\r\n        return map(aggregates, (function(aggregate, index) {\r\n            var fin = aggregate.aggregator.finalize;\r\n            return fin ? fin(results[index]) : results[index]\r\n        }))\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.keyboard_navigation.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    keyboardNavigationModule\r\n} from \"../grid_core/ui.grid_core.keyboard_navigation\";\r\ngridCore.registerModule(\"keyboardNavigation\", keyboardNavigationModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.summary.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject,\r\n    isString,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    ColumnsView\r\n} from \"../grid_core/ui.grid_core.columns_view\";\r\nimport AggregateCalculator from \"./aggregate_calculator\";\r\nimport dataQuery from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nvar DATAGRID_TOTAL_FOOTER_CLASS = \"dx-datagrid-total-footer\";\r\nvar DATAGRID_SUMMARY_ITEM_CLASS = \"dx-datagrid-summary-item\";\r\nvar DATAGRID_TEXT_CONTENT_CLASS = \"dx-datagrid-text-content\";\r\nvar DATAGRID_GROUP_FOOTER_CLASS = \"dx-datagrid-group-footer\";\r\nvar DATAGRID_GROUP_TEXT_CONTENT_CLASS = \"dx-datagrid-group-text-content\";\r\nvar DATAGRID_NOWRAP_CLASS = \"dx-datagrid-nowrap\";\r\nvar DATAGRID_GROUP_FOOTER_ROW_TYPE = \"groupFooter\";\r\nexport var renderSummaryCell = function(cell, options) {\r\n    var $cell = $(cell);\r\n    var column = options.column;\r\n    var summaryItems = options.summaryItems;\r\n    var $summaryItems = [];\r\n    if (!column.command && summaryItems) {\r\n        for (var i = 0; i < summaryItems.length; i++) {\r\n            var summaryItem = summaryItems[i];\r\n            $summaryItems.push($(\"<div>\").css(\"textAlign\", summaryItem.alignment || column.alignment).addClass(DATAGRID_SUMMARY_ITEM_CLASS).addClass(DATAGRID_TEXT_CONTENT_CLASS).addClass(summaryItem.cssClass).toggleClass(DATAGRID_GROUP_TEXT_CONTENT_CLASS, \"group\" === options.rowType).text(gridCore.getSummaryText(summaryItem, options.summaryTexts)))\r\n        }\r\n        $cell.append($summaryItems)\r\n    }\r\n};\r\nvar getSummaryCellOptions = function(that, options) {\r\n    var summaryTexts = that.option(\"summary.texts\") || {};\r\n    return {\r\n        totalItem: options.row,\r\n        summaryItems: options.row.summaryCells[options.columnIndex],\r\n        summaryTexts: summaryTexts\r\n    }\r\n};\r\nvar getGroupAggregates = function(data) {\r\n    return data.summary || data.aggregates || []\r\n};\r\nvar recalculateWhileEditing = function(that) {\r\n    return that.option(\"summary.recalculateWhileEditing\")\r\n};\r\nexport var FooterView = ColumnsView.inherit({\r\n    _getRows: function() {\r\n        return this._dataController.footerItems()\r\n    },\r\n    _getCellOptions: function(options) {\r\n        return extend(this.callBase(options), getSummaryCellOptions(this, options))\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        renderSummaryCell($cell, options);\r\n        this.callBase($cell, options)\r\n    },\r\n    _renderCore: function(change) {\r\n        var needUpdateScrollLeft = false;\r\n        var totalItem = this._dataController.footerItems()[0];\r\n        if (!change || !change.columnIndices) {\r\n            this.element().empty().addClass(DATAGRID_TOTAL_FOOTER_CLASS).toggleClass(DATAGRID_NOWRAP_CLASS, !this.option(\"wordWrapEnabled\"));\r\n            needUpdateScrollLeft = true\r\n        }\r\n        if (totalItem && totalItem.summaryCells && totalItem.summaryCells.length) {\r\n            this._updateContent(this._renderTable({\r\n                change: change\r\n            }), change);\r\n            needUpdateScrollLeft && this._updateScrollLeftPosition()\r\n        }\r\n    },\r\n    _updateContent: function($newTable, change) {\r\n        if (change && \"update\" === change.changeType && change.columnIndices) {\r\n            var $row = this.getTableElement().find(\".dx-row\");\r\n            var $newRow = $newTable.find(\".dx-row\");\r\n            this._updateCells($row, $newRow, change.columnIndices[0])\r\n        } else {\r\n            return this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _rowClick: function(e) {\r\n        var item = this._dataController.footerItems()[e.rowIndex] || {};\r\n        this.executeAction(\"onRowClick\", extend({}, e, item))\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (e.changeTypes.grouping) {\r\n            return\r\n        }\r\n        if (optionNames.width || optionNames.visibleWidth) {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _handleDataChanged: function(e) {\r\n        var changeType = e.changeType;\r\n        if (\"update\" === e.changeType && e.repaintChangesOnly) {\r\n            if (!e.totalColumnIndices) {\r\n                this.render()\r\n            } else if (e.totalColumnIndices.length) {\r\n                this.render(null, {\r\n                    changeType: \"update\",\r\n                    columnIndices: [e.totalColumnIndices]\r\n                })\r\n            }\r\n        } else if (\"refresh\" === changeType || \"append\" === changeType || \"prepend\" === changeType) {\r\n            this.render()\r\n        }\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    isVisible: function() {\r\n        return !!this._dataController.footerItems().length\r\n    }\r\n});\r\nvar SummaryDataSourceAdapterExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._totalAggregates = [];\r\n        this._summaryGetter = noop\r\n    },\r\n    summaryGetter: function(_summaryGetter) {\r\n        if (!arguments.length) {\r\n            return this._summaryGetter\r\n        }\r\n        if (isFunction(_summaryGetter)) {\r\n            this._summaryGetter = _summaryGetter\r\n        }\r\n    },\r\n    summary: function(_summary) {\r\n        if (!arguments.length) {\r\n            return this._summaryGetter()\r\n        }\r\n        this._summaryGetter = function() {\r\n            return _summary\r\n        }\r\n    },\r\n    totalAggregates: function() {\r\n        return this._totalAggregates\r\n    },\r\n    isLastLevelGroupItemsPagingLocal: function() {\r\n        var summary = this.summary();\r\n        var sortByGroupsInfo = summary && summary.sortByGroups();\r\n        return sortByGroupsInfo && sortByGroupsInfo.length\r\n    },\r\n    sortLastLevelGroupItems: function(items, groups, paths) {\r\n        var groupedItems = storeHelper.multiLevelGroup(dataQuery(items), groups).toArray();\r\n        var result = [];\r\n        paths.forEach((function(path) {\r\n            ! function forEachGroup(groups, groupCount, callback, path) {\r\n                path = path || [];\r\n                for (var i = 0; i < groups.length; i++) {\r\n                    path.push(groups[i].key);\r\n                    if (1 === groupCount) {\r\n                        callback(path, groups[i].items)\r\n                    } else {\r\n                        forEachGroup(groups[i].items, groupCount - 1, callback, path)\r\n                    }\r\n                    path.pop()\r\n                }\r\n            }(groupedItems, groups.length, (function(itemsPath, items) {\r\n                if (path.toString() === itemsPath.toString()) {\r\n                    result = result.concat(items)\r\n                }\r\n            }))\r\n        }));\r\n        return result\r\n    }\r\n};\r\nvar SummaryDataSourceAdapterClientExtender = function() {\r\n    var calculateAggregates = function(that, summary, data, groupLevel) {\r\n        var calculator;\r\n        if (recalculateWhileEditing(that)) {\r\n            var editingController = that.getController(\"editing\");\r\n            if (editingController) {\r\n                var insertedData = editingController.getInsertedData();\r\n                if (insertedData.length) {\r\n                    data = function applyAddedData(data, insertedData, groupLevel) {\r\n                        if (groupLevel) {\r\n                            return applyAddedData(data, insertedData.map(item => ({\r\n                                items: [item]\r\n                            }), groupLevel - 1))\r\n                        }\r\n                        return data.concat(insertedData)\r\n                    }(data, insertedData, groupLevel)\r\n                }\r\n                var removedData = editingController.getRemovedData();\r\n                if (removedData.length) {\r\n                    data = function applyRemovedData(data, removedData, groupLevel) {\r\n                        if (groupLevel) {\r\n                            return data.map(data => {\r\n                                var updatedData = {};\r\n                                var updatedItems = applyRemovedData(data.items || [], removedData, groupLevel - 1);\r\n                                Object.defineProperty(updatedData, \"aggregates\", {\r\n                                    get: () => data.aggregates,\r\n                                    set: value => {\r\n                                        data.aggregates = value\r\n                                    }\r\n                                });\r\n                                return extend(updatedData, data, {\r\n                                    items: updatedItems\r\n                                })\r\n                            })\r\n                        }\r\n                        return data.filter(data => removedData.indexOf(data) < 0)\r\n                    }(data, removedData, groupLevel)\r\n                }\r\n            }\r\n        }\r\n        if (summary) {\r\n            calculator = new AggregateCalculator({\r\n                totalAggregates: summary.totalAggregates,\r\n                groupAggregates: summary.groupAggregates,\r\n                data: data,\r\n                groupLevel: groupLevel\r\n            });\r\n            calculator.calculate()\r\n        }\r\n        return calculator ? calculator.totalAggregates() : []\r\n    };\r\n    var sortGroupsBySummary = function(data, group, summary) {\r\n        var sortByGroups = summary && summary.sortByGroups && summary.sortByGroups();\r\n        if (sortByGroups && sortByGroups.length) {\r\n            return function sortGroupsBySummaryCore(items, groups, sortByGroups) {\r\n                if (!items || !groups.length) {\r\n                    return items\r\n                }\r\n                var group = groups[0];\r\n                var sorts = sortByGroups[0];\r\n                var query;\r\n                if (group && sorts && sorts.length) {\r\n                    query = dataQuery(items);\r\n                    each(sorts, (function(index) {\r\n                        if (0 === index) {\r\n                            query = query.sortBy(this.selector, this.desc)\r\n                        } else {\r\n                            query = query.thenBy(this.selector, this.desc)\r\n                        }\r\n                    }));\r\n                    query.enumerate().done((function(sortedItems) {\r\n                        items = sortedItems\r\n                    }))\r\n                }\r\n                groups = groups.slice(1);\r\n                sortByGroups = sortByGroups.slice(1);\r\n                if (groups.length && sortByGroups.length) {\r\n                    each(items, (function() {\r\n                        this.items = sortGroupsBySummaryCore(this.items, groups, sortByGroups)\r\n                    }))\r\n                }\r\n                return items\r\n            }(data, group, sortByGroups)\r\n        }\r\n        return data\r\n    };\r\n    return {\r\n        _customizeRemoteOperations: function(options) {\r\n            var summary = this.summary();\r\n            if (summary) {\r\n                if (options.remoteOperations.summary) {\r\n                    if (!options.isCustomLoading || options.storeLoadOptions.isLoadingAll) {\r\n                        if (options.storeLoadOptions.group) {\r\n                            if (options.remoteOperations.grouping) {\r\n                                options.storeLoadOptions.groupSummary = summary.groupAggregates\r\n                            } else if (summary.groupAggregates.length) {\r\n                                options.remoteOperations.paging = false\r\n                            }\r\n                        }\r\n                        options.storeLoadOptions.totalSummary = summary.totalAggregates\r\n                    }\r\n                } else if (summary.totalAggregates.length || summary.groupAggregates.length && options.storeLoadOptions.group) {\r\n                    options.remoteOperations.paging = false\r\n                }\r\n            }\r\n            this.callBase.apply(this, arguments);\r\n            var cachedExtra = options.cachedData.extra;\r\n            if (cachedExtra && cachedExtra.summary && !options.isCustomLoading) {\r\n                options.storeLoadOptions.totalSummary = void 0\r\n            }\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            var groups = normalizeSortingInfo(options.storeLoadOptions.group || options.loadOptions.group || []);\r\n            var remoteOperations = options.remoteOperations || {};\r\n            var summary = this.summaryGetter()(remoteOperations);\r\n            if (!options.isCustomLoading || options.storeLoadOptions.isLoadingAll) {\r\n                if (remoteOperations.summary) {\r\n                    if (!remoteOperations.paging && groups.length && summary) {\r\n                        if (!remoteOperations.grouping) {\r\n                            calculateAggregates(this, {\r\n                                groupAggregates: summary.groupAggregates\r\n                            }, options.data, groups.length)\r\n                        }\r\n                        options.data = sortGroupsBySummary(options.data, groups, summary)\r\n                    }\r\n                } else if (!remoteOperations.paging && summary) {\r\n                    var _options$cachedData, _options$cachedData$e;\r\n                    var operationTypes = options.operationTypes || {};\r\n                    var hasOperations = Object.keys(operationTypes).some(type => operationTypes[type]);\r\n                    if (!hasOperations || !(null !== (_options$cachedData = options.cachedData) && void 0 !== _options$cachedData && null !== (_options$cachedData$e = _options$cachedData.extra) && void 0 !== _options$cachedData$e && _options$cachedData$e.summary) || groups.length && summary.groupAggregates.length) {\r\n                        var totalAggregates = calculateAggregates(this, summary, options.data, groups.length);\r\n                        options.extra = isPlainObject(options.extra) ? options.extra : {};\r\n                        options.extra.summary = totalAggregates;\r\n                        if (options.cachedData) {\r\n                            options.cachedData.extra = options.extra\r\n                        }\r\n                    }\r\n                    options.data = sortGroupsBySummary(options.data, groups, summary)\r\n                }\r\n            }\r\n            if (!options.isCustomLoading) {\r\n                this._totalAggregates = options.extra && options.extra.summary || this._totalAggregates\r\n            }\r\n            this.callBase(options)\r\n        }\r\n    }\r\n}();\r\ndataSourceAdapter.extend(SummaryDataSourceAdapterExtender);\r\ndataSourceAdapter.extend(SummaryDataSourceAdapterClientExtender);\r\ngridCore.registerModule(\"summary\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            summary: {\r\n                groupItems: void 0,\r\n                totalItems: void 0,\r\n                calculateCustomSummary: void 0,\r\n                skipEmptyValues: true,\r\n                recalculateWhileEditing: false,\r\n                texts: {\r\n                    sum: messageLocalization.format(\"dxDataGrid-summarySum\"),\r\n                    sumOtherColumn: messageLocalization.format(\"dxDataGrid-summarySumOtherColumn\"),\r\n                    min: messageLocalization.format(\"dxDataGrid-summaryMin\"),\r\n                    minOtherColumn: messageLocalization.format(\"dxDataGrid-summaryMinOtherColumn\"),\r\n                    max: messageLocalization.format(\"dxDataGrid-summaryMax\"),\r\n                    maxOtherColumn: messageLocalization.format(\"dxDataGrid-summaryMaxOtherColumn\"),\r\n                    avg: messageLocalization.format(\"dxDataGrid-summaryAvg\"),\r\n                    avgOtherColumn: messageLocalization.format(\"dxDataGrid-summaryAvgOtherColumn\"),\r\n                    count: messageLocalization.format(\"dxDataGrid-summaryCount\")\r\n                }\r\n            },\r\n            sortByGroupSummaryInfo: void 0\r\n        }\r\n    },\r\n    views: {\r\n        footerView: FooterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                _isDataColumn: function(column) {\r\n                    return column && (!isDefined(column.groupIndex) || column.showWhenGrouped)\r\n                },\r\n                _isGroupFooterVisible: function() {\r\n                    var groupItems = this.option(\"summary.groupItems\") || [];\r\n                    for (var i = 0; i < groupItems.length; i++) {\r\n                        var groupItem = groupItems[i];\r\n                        var column = this._columnsController.columnOption(groupItem.showInColumn || groupItem.column);\r\n                        if (groupItem.showInGroupFooter && this._isDataColumn(column)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                },\r\n                _processGroupItems: function(items, groupCount, options) {\r\n                    var data = options && options.data;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (options) {\r\n                        if (void 0 === options.isGroupFooterVisible) {\r\n                            options.isGroupFooterVisible = this._isGroupFooterVisible()\r\n                        }\r\n                        if (data && data.items && options.isGroupFooterVisible && (options.collectContinuationItems || !data.isContinuationOnNextPage)) {\r\n                            result.push({\r\n                                rowType: DATAGRID_GROUP_FOOTER_ROW_TYPE,\r\n                                key: options.path.slice(),\r\n                                data: data,\r\n                                groupIndex: options.path.length - 1,\r\n                                values: []\r\n                            })\r\n                        }\r\n                    }\r\n                    return result\r\n                },\r\n                _processGroupItem: function(groupItem, options) {\r\n                    var that = this;\r\n                    if (!options.summaryGroupItems) {\r\n                        options.summaryGroupItems = that.option(\"summary.groupItems\") || []\r\n                    }\r\n                    if (\"group\" === groupItem.rowType) {\r\n                        var groupColumnIndex = -1;\r\n                        var afterGroupColumnIndex = -1;\r\n                        each(options.visibleColumns, (function(visibleIndex) {\r\n                            var prevColumn = options.visibleColumns[visibleIndex - 1];\r\n                            if (groupItem.groupIndex === this.groupIndex) {\r\n                                groupColumnIndex = this.index\r\n                            }\r\n                            if (visibleIndex > 0 && \"expand\" === prevColumn.command && \"expand\" !== this.command) {\r\n                                afterGroupColumnIndex = this.index\r\n                            }\r\n                        }));\r\n                        groupItem.summaryCells = this._calculateSummaryCells(options.summaryGroupItems, getGroupAggregates(groupItem.data), options.visibleColumns, (function(summaryItem, column) {\r\n                            if (summaryItem.showInGroupFooter) {\r\n                                return -1\r\n                            }\r\n                            if (summaryItem.alignByColumn && column && !isDefined(column.groupIndex) && column.index !== afterGroupColumnIndex) {\r\n                                return column.index\r\n                            } else {\r\n                                return groupColumnIndex\r\n                            }\r\n                        }), true)\r\n                    }\r\n                    if (groupItem.rowType === DATAGRID_GROUP_FOOTER_ROW_TYPE) {\r\n                        groupItem.summaryCells = this._calculateSummaryCells(options.summaryGroupItems, getGroupAggregates(groupItem.data), options.visibleColumns, (function(summaryItem, column) {\r\n                            return summaryItem.showInGroupFooter && that._isDataColumn(column) ? column.index : -1\r\n                        }))\r\n                    }\r\n                    return groupItem\r\n                },\r\n                _calculateSummaryCells: function(summaryItems, aggregates, visibleColumns, calculateTargetColumnIndex, isGroupRow) {\r\n                    var that = this;\r\n                    var summaryCells = [];\r\n                    var summaryCellsByColumns = {};\r\n                    each(summaryItems, (function(summaryIndex, summaryItem) {\r\n                        var column = that._columnsController.columnOption(summaryItem.column);\r\n                        var showInColumn = summaryItem.showInColumn && that._columnsController.columnOption(summaryItem.showInColumn) || column;\r\n                        var columnIndex = calculateTargetColumnIndex(summaryItem, showInColumn);\r\n                        if (columnIndex >= 0) {\r\n                            if (!summaryCellsByColumns[columnIndex]) {\r\n                                summaryCellsByColumns[columnIndex] = []\r\n                            }\r\n                            var aggregate = aggregates[summaryIndex];\r\n                            if (aggregate === aggregate) {\r\n                                var valueFormat;\r\n                                if (isDefined(summaryItem.valueFormat)) {\r\n                                    valueFormat = summaryItem.valueFormat\r\n                                } else if (\"count\" !== summaryItem.summaryType) {\r\n                                    valueFormat = gridCore.getFormatByDataType(column && column.dataType)\r\n                                }\r\n                                summaryCellsByColumns[columnIndex].push(extend({}, summaryItem, {\r\n                                    value: isString(aggregate) && column && column.deserializeValue ? column.deserializeValue(aggregate) : aggregate,\r\n                                    valueFormat: valueFormat,\r\n                                    columnCaption: column && column.index !== columnIndex ? column.caption : void 0\r\n                                }))\r\n                            }\r\n                        }\r\n                    }));\r\n                    if (!isEmptyObject(summaryCellsByColumns)) {\r\n                        visibleColumns.forEach((column, visibleIndex) => {\r\n                            var prevColumn = visibleColumns[visibleIndex - 1];\r\n                            var columnIndex = isGroupRow && (\"expand\" === (null === prevColumn || void 0 === prevColumn ? void 0 : prevColumn.command) || \"expand\" === column.command) ? null === prevColumn || void 0 === prevColumn ? void 0 : prevColumn.index : column.index;\r\n                            summaryCells.push(summaryCellsByColumns[columnIndex] || [])\r\n                        })\r\n                    }\r\n                    return summaryCells\r\n                },\r\n                _getSummaryCells: function(summaryTotalItems, totalAggregates) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    return that._calculateSummaryCells(summaryTotalItems, totalAggregates, columnsController.getVisibleColumns(), (function(summaryItem, column) {\r\n                        return that._isDataColumn(column) ? column.index : -1\r\n                    }))\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    var summaryCells;\r\n                    var dataSource = this._dataSource;\r\n                    var footerItems = this._footerItems;\r\n                    var oldSummaryCells = footerItems && footerItems[0] && footerItems[0].summaryCells;\r\n                    var summaryTotalItems = this.option(\"summary.totalItems\");\r\n                    this._footerItems = [];\r\n                    if (dataSource && summaryTotalItems && summaryTotalItems.length) {\r\n                        var totalAggregates = dataSource.totalAggregates();\r\n                        summaryCells = this._getSummaryCells(summaryTotalItems, totalAggregates);\r\n                        if (change && change.repaintChangesOnly && oldSummaryCells) {\r\n                            change.totalColumnIndices = summaryCells.map((function(summaryCell, index) {\r\n                                if (JSON.stringify(summaryCell) !== JSON.stringify(oldSummaryCells[index])) {\r\n                                    return index\r\n                                }\r\n                                return -1\r\n                            })).filter(index => index >= 0)\r\n                        }\r\n                        if (summaryCells.length) {\r\n                            this._footerItems.push({\r\n                                rowType: \"totalFooter\",\r\n                                summaryCells: summaryCells\r\n                            })\r\n                        }\r\n                    }\r\n                    this.callBase(change)\r\n                },\r\n                _prepareUnsavedDataSelector: function(selector) {\r\n                    if (recalculateWhileEditing(this)) {\r\n                        var editingController = this.getController(\"editing\");\r\n                        if (editingController) {\r\n                            return function(data) {\r\n                                data = editingController.getUpdatedData(data);\r\n                                return selector(data)\r\n                            }\r\n                        }\r\n                    }\r\n                    return selector\r\n                },\r\n                _prepareAggregateSelector: function(selector, aggregator) {\r\n                    selector = this._prepareUnsavedDataSelector(selector);\r\n                    if (\"avg\" === aggregator || \"sum\" === aggregator) {\r\n                        return function(data) {\r\n                            var value = selector(data);\r\n                            return isDefined(value) ? Number(value) : value\r\n                        }\r\n                    }\r\n                    return selector\r\n                },\r\n                _getAggregates: function(summaryItems, remoteOperations) {\r\n                    var that = this;\r\n                    var columnsController = that.getController(\"columns\");\r\n                    var calculateCustomSummary = that.option(\"summary.calculateCustomSummary\");\r\n                    var commonSkipEmptyValues = that.option(\"summary.skipEmptyValues\");\r\n                    return map(summaryItems || [], (function(summaryItem) {\r\n                        var column = columnsController.columnOption(summaryItem.column);\r\n                        var calculateCellValue = column && column.calculateCellValue ? column.calculateCellValue.bind(column) : compileGetter(column ? column.dataField : summaryItem.column);\r\n                        var aggregator = summaryItem.summaryType || \"count\";\r\n                        var selector = summaryItem.column;\r\n                        var skipEmptyValues = isDefined(summaryItem.skipEmptyValues) ? summaryItem.skipEmptyValues : commonSkipEmptyValues;\r\n                        if (remoteOperations) {\r\n                            return {\r\n                                selector: summaryItem.column,\r\n                                summaryType: aggregator\r\n                            }\r\n                        } else {\r\n                            selector = that._prepareAggregateSelector(calculateCellValue, aggregator);\r\n                            if (\"custom\" === aggregator) {\r\n                                if (!calculateCustomSummary) {\r\n                                    errors.log(\"E1026\");\r\n                                    calculateCustomSummary = function() {}\r\n                                }\r\n                                var options = {\r\n                                    component: that.component,\r\n                                    name: summaryItem.name\r\n                                };\r\n                                calculateCustomSummary(options);\r\n                                options.summaryProcess = \"calculate\";\r\n                                aggregator = {\r\n                                    seed: function(groupIndex) {\r\n                                        options.summaryProcess = \"start\";\r\n                                        options.totalValue = void 0;\r\n                                        options.groupIndex = groupIndex;\r\n                                        delete options.value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    },\r\n                                    step: function(totalValue, value) {\r\n                                        options.summaryProcess = \"calculate\";\r\n                                        options.totalValue = totalValue;\r\n                                        options.value = value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    },\r\n                                    finalize: function(totalValue) {\r\n                                        options.summaryProcess = \"finalize\";\r\n                                        options.totalValue = totalValue;\r\n                                        delete options.value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    }\r\n                                }\r\n                            }\r\n                            return {\r\n                                selector: selector,\r\n                                aggregator: aggregator,\r\n                                skipEmptyValues: skipEmptyValues\r\n                            }\r\n                        }\r\n                    }))\r\n                },\r\n                _addSortInfo: function(sortByGroups, groupColumn, selector, sortOrder) {\r\n                    if (groupColumn) {\r\n                        var groupIndex = groupColumn.groupIndex;\r\n                        sortOrder = sortOrder || groupColumn.sortOrder;\r\n                        if (isDefined(groupIndex)) {\r\n                            sortByGroups[groupIndex] = sortByGroups[groupIndex] || [];\r\n                            sortByGroups[groupIndex].push({\r\n                                selector: selector,\r\n                                desc: \"desc\" === sortOrder\r\n                            })\r\n                        }\r\n                    }\r\n                },\r\n                _findSummaryItem: function(summaryItems, name) {\r\n                    var summaryItemIndex = -1;\r\n                    if (isDefined(name)) {\r\n                        each(summaryItems || [], (function(index) {\r\n                            if (this.name === name || index === name || this.summaryType === name || this.column === name || (summaryItem = this, summaryType = summaryItem.summaryType, column = summaryItem.column, summaryType && column && summaryType + \"_\" + column) === name) {\r\n                                summaryItemIndex = index;\r\n                                return false\r\n                            }\r\n                            var summaryItem, summaryType, column\r\n                        }))\r\n                    }\r\n                    return summaryItemIndex\r\n                },\r\n                _getSummarySortByGroups: function(sortByGroupSummaryInfo, groupSummaryItems) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var groupColumns = columnsController.getGroupColumns();\r\n                    var sortByGroups = [];\r\n                    if (!groupSummaryItems || !groupSummaryItems.length) {\r\n                        return\r\n                    }\r\n                    each(sortByGroupSummaryInfo || [], (function() {\r\n                        var sortOrder = this.sortOrder;\r\n                        var groupColumn = this.groupColumn;\r\n                        var summaryItemIndex = that._findSummaryItem(groupSummaryItems, this.summaryItem);\r\n                        if (summaryItemIndex < 0) {\r\n                            return\r\n                        }\r\n                        var selector = function(data) {\r\n                            return getGroupAggregates(data)[summaryItemIndex]\r\n                        };\r\n                        if (isDefined(groupColumn)) {\r\n                            groupColumn = columnsController.columnOption(groupColumn);\r\n                            that._addSortInfo(sortByGroups, groupColumn, selector, sortOrder)\r\n                        } else {\r\n                            each(groupColumns, (function(groupIndex, groupColumn) {\r\n                                that._addSortInfo(sortByGroups, groupColumn, selector, sortOrder)\r\n                            }))\r\n                        }\r\n                    }));\r\n                    return sortByGroups\r\n                },\r\n                _createDataSourceAdapterCore: function(dataSource, remoteOperations) {\r\n                    var that = this;\r\n                    var dataSourceAdapter = this.callBase(dataSource, remoteOperations);\r\n                    dataSourceAdapter.summaryGetter((function(currentRemoteOperations) {\r\n                        return that._getSummaryOptions(currentRemoteOperations || remoteOperations)\r\n                    }));\r\n                    return dataSourceAdapter\r\n                },\r\n                _getSummaryOptions: function(remoteOperations) {\r\n                    var that = this;\r\n                    var groupSummaryItems = that.option(\"summary.groupItems\");\r\n                    var totalSummaryItems = that.option(\"summary.totalItems\");\r\n                    var sortByGroupSummaryInfo = that.option(\"sortByGroupSummaryInfo\");\r\n                    var groupAggregates = that._getAggregates(groupSummaryItems, remoteOperations && remoteOperations.grouping && remoteOperations.summary);\r\n                    var totalAggregates = that._getAggregates(totalSummaryItems, remoteOperations && remoteOperations.summary);\r\n                    if (groupAggregates.length || totalAggregates.length) {\r\n                        return {\r\n                            groupAggregates: groupAggregates,\r\n                            totalAggregates: totalAggregates,\r\n                            sortByGroups: function() {\r\n                                return that._getSummarySortByGroups(sortByGroupSummaryInfo, groupSummaryItems)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    var methods = this.callBase();\r\n                    methods.push(\"getTotalSummaryValue\");\r\n                    return methods\r\n                },\r\n                getTotalSummaryValue: function(summaryItemName) {\r\n                    var summaryItemIndex = this._findSummaryItem(this.option(\"summary.totalItems\"), summaryItemName);\r\n                    var aggregates = this._dataSource.totalAggregates();\r\n                    if (aggregates.length && summaryItemIndex > -1) {\r\n                        return aggregates[summaryItemIndex]\r\n                    }\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"summary\" === args.name || \"sortByGroupSummaryInfo\" === args.name) {\r\n                        args.name = \"dataSource\"\r\n                    }\r\n                    this.callBase(args)\r\n                },\r\n                init: function() {\r\n                    this._footerItems = [];\r\n                    this.callBase()\r\n                },\r\n                footerItems: function() {\r\n                    return this._footerItems\r\n                }\r\n            },\r\n            editing: {\r\n                _refreshSummary: function() {\r\n                    if (recalculateWhileEditing(this) && !this.isSaving()) {\r\n                        this._dataController.refresh({\r\n                            load: true,\r\n                            changesOnly: true\r\n                        })\r\n                    }\r\n                },\r\n                _addChange: function(params) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (params.type) {\r\n                        this._refreshSummary()\r\n                    }\r\n                    return result\r\n                },\r\n                _removeChange: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    this._refreshSummary();\r\n                    return result\r\n                },\r\n                cancelEditData: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    this._refreshSummary();\r\n                    return result\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    row && $row.addClass(row.rowType === DATAGRID_GROUP_FOOTER_ROW_TYPE ? DATAGRID_GROUP_FOOTER_CLASS : \"\");\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (\"group\" === options.row.rowType && options.row.summaryCells && options.row.summaryCells.length) {\r\n                        this._renderGroupSummaryCells($row, options)\r\n                    }\r\n                },\r\n                _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n                    return !isDefined(options.columns[columnIndex].groupIndex) && options.row.summaryCells[columnIndex].length\r\n                },\r\n                _getAlignByColumnCellCount: function(groupCellColSpan, options) {\r\n                    var alignByColumnCellCount = 0;\r\n                    for (var i = 1; i < groupCellColSpan; i++) {\r\n                        var columnIndex = options.row.summaryCells.length - i;\r\n                        alignByColumnCellCount = this._hasAlignByColumnSummaryItems(columnIndex, options) ? i : alignByColumnCellCount\r\n                    }\r\n                    return alignByColumnCellCount\r\n                },\r\n                _renderGroupSummaryCells: function($row, options) {\r\n                    var $groupCell = $row.children().last();\r\n                    var groupCellColSpan = Number($groupCell.attr(\"colSpan\")) || 1;\r\n                    var alignByColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n                    this._renderGroupSummaryCellsCore($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n                },\r\n                _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n                    if (alignByColumnCellCount > 0) {\r\n                        $groupCell.attr(\"colSpan\", groupCellColSpan - alignByColumnCellCount);\r\n                        for (var i = 0; i < alignByColumnCellCount; i++) {\r\n                            var columnIndex = options.columns.length - alignByColumnCellCount + i;\r\n                            this._renderCell($groupCell.parent(), extend({\r\n                                column: options.columns[columnIndex],\r\n                                columnIndex: this._getSummaryCellIndex(columnIndex, options.columns)\r\n                            }, options))\r\n                        }\r\n                    }\r\n                },\r\n                _getSummaryCellIndex: function(columnIndex) {\r\n                    return columnIndex\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    if (!options.column.command && !isDefined(options.column.groupIndex) && options.summaryItems && options.summaryItems.length) {\r\n                        return renderSummaryCell\r\n                    } else {\r\n                        return this.callBase(options)\r\n                    }\r\n                },\r\n                _getCellOptions: function(options) {\r\n                    var parameters = this.callBase(options);\r\n                    if (options.row.summaryCells) {\r\n                        return extend(parameters, getSummaryCellOptions(this, options))\r\n                    } else {\r\n                        return parameters\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_fixing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as wheelEventName\r\n} from \"../../events/core/wheel\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    move\r\n} from \"../../animation/translator\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar FIRST_CELL_CLASS = \"dx-first-cell\";\r\nvar LAST_CELL_CLASS = \"dx-last-cell\";\r\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\r\nvar FIXED_COL_CLASS = \"dx-col-fixed\";\r\nvar FIXED_COLUMNS_CLASS = \"dx-fixed-columns\";\r\nvar POINTER_EVENTS_NONE_CLASS = \"dx-pointer-events-none\";\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar getTransparentColumnIndex = function(fixedColumns) {\r\n    var transparentColumnIndex = -1;\r\n    each(fixedColumns, (function(index, column) {\r\n        if (column.command === COMMAND_TRANSPARENT) {\r\n            transparentColumnIndex = index;\r\n            return false\r\n        }\r\n    }));\r\n    return transparentColumnIndex\r\n};\r\nvar normalizeColumnWidths = function(fixedColumns, widths, fixedWidths) {\r\n    var fixedColumnIndex = 0;\r\n    if (fixedColumns && widths && fixedWidths) {\r\n        for (var i = 0; i < fixedColumns.length; i++) {\r\n            if (fixedColumns[i].command === COMMAND_TRANSPARENT) {\r\n                fixedColumnIndex += fixedColumns[i].colspan\r\n            } else {\r\n                if (widths[fixedColumnIndex] < fixedWidths[i]) {\r\n                    widths[fixedColumnIndex] = fixedWidths[i]\r\n                }\r\n                fixedColumnIndex++\r\n            }\r\n        }\r\n    }\r\n    return widths\r\n};\r\nvar baseFixedColumns = {\r\n    init: function() {\r\n        this.callBase();\r\n        this._isFixedTableRendering = false;\r\n        this._isFixedColumns = false\r\n    },\r\n    _createCol: function(column) {\r\n        return this.callBase(column).toggleClass(FIXED_COL_CLASS, !!(this._isFixedTableRendering && (column.fixed || column.command && column.command !== COMMAND_TRANSPARENT)))\r\n    },\r\n    _correctColumnIndicesForFixedColumns: function(fixedColumns, change) {\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColspan = fixedColumns[transparentColumnIndex].colspan;\r\n        var columnIndices = change && change.columnIndices;\r\n        if (columnIndices) {\r\n            change.columnIndices = columnIndices.map((function(columnIndices) {\r\n                if (columnIndices) {\r\n                    return columnIndices.map((function(columnIndex) {\r\n                        if (columnIndex < transparentColumnIndex) {\r\n                            return columnIndex\r\n                        } else if (columnIndex >= transparentColumnIndex + transparentColspan) {\r\n                            return columnIndex - transparentColspan + 1\r\n                        }\r\n                        return -1\r\n                    })).filter((function(columnIndex) {\r\n                        return columnIndex >= 0\r\n                    }))\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _partialUpdateFixedTable(fixedColumns) {\r\n        var fixedTableElement = this._fixedTableElement;\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColumn = fixedColumns[transparentColumnIndex];\r\n        var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n        var $rows = this._getRowElementsCore(fixedTableElement);\r\n        var $colgroup = fixedTableElement.children(\"colgroup\");\r\n        $colgroup.replaceWith(this._createColGroup(fixedColumns));\r\n        for (var i = 0; i < $rows.length; i++) {\r\n            var cellElements = $rows[i].childNodes;\r\n            var colIndex = columnIndexOffset + 1;\r\n            for (var j = 0; j < cellElements.length; j++) {\r\n                cellElements[j].setAttribute(\"aria-colindex\", colIndex);\r\n                if (j === transparentColumnIndex) {\r\n                    cellElements[j].setAttribute(\"colspan\", transparentColumn.colspan);\r\n                    colIndex += transparentColumn.colspan\r\n                } else {\r\n                    colIndex++\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        var $fixedTable;\r\n        var fixedColumns = this.getFixedColumns();\r\n        this._isFixedColumns = !!fixedColumns.length;\r\n        var $table = this.callBase(options);\r\n        if (this._isFixedColumns) {\r\n            var change = null === options || void 0 === options ? void 0 : options.change;\r\n            this._isFixedTableRendering = true;\r\n            if (null !== change && void 0 !== change && change.virtualColumnsScrolling && true !== this.option(\"scrolling.legacyMode\")) {\r\n                this._partialUpdateFixedTable(fixedColumns)\r\n            } else {\r\n                var columnIndices = null === change || void 0 === change ? void 0 : change.columnIndices;\r\n                this._correctColumnIndicesForFixedColumns(fixedColumns, change);\r\n                $fixedTable = this._createTable(fixedColumns);\r\n                this._renderRows($fixedTable, extend({}, options, {\r\n                    columns: fixedColumns\r\n                }));\r\n                this._updateContent($fixedTable, change);\r\n                if (columnIndices) {\r\n                    change.columnIndices = columnIndices\r\n                }\r\n            }\r\n            this._isFixedTableRendering = false\r\n        } else {\r\n            this._fixedTableElement && this._fixedTableElement.parent().remove();\r\n            this._fixedTableElement = null\r\n        }\r\n        return $table\r\n    },\r\n    _renderRow: function($table, options) {\r\n        var fixedCorrection;\r\n        var cells = options.row.cells;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering && cells && cells.length) {\r\n            fixedCorrection = 0;\r\n            var fixedCells = options.row.cells || [];\r\n            cells = cells.slice();\r\n            options.row.cells = cells;\r\n            for (var i = 0; i < fixedCells.length; i++) {\r\n                if (fixedCells[i].column && fixedCells[i].column.command === COMMAND_TRANSPARENT) {\r\n                    fixedCorrection = (fixedCells[i].column.colspan || 1) - 1;\r\n                    continue\r\n                }\r\n                cells[i + fixedCorrection] = fixedCells[i]\r\n            }\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        var columnCommand = column && column.command;\r\n        var rowType = options.rowType;\r\n        var $cell = that.callBase.apply(that, arguments);\r\n        var fixedColumns;\r\n        var prevFixedColumn;\r\n        var transparentColumnIndex;\r\n        if (that._isFixedTableRendering || \"filter\" === rowType) {\r\n            fixedColumns = that.getFixedColumns();\r\n            transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n            prevFixedColumn = fixedColumns[transparentColumnIndex - 1]\r\n        }\r\n        if (that._isFixedTableRendering) {\r\n            if (columnCommand === COMMAND_TRANSPARENT) {\r\n                $cell.addClass(POINTER_EVENTS_NONE_CLASS).toggleClass(FIRST_CELL_CLASS, 0 === transparentColumnIndex || prevFixedColumn && \"expand\" === prevFixedColumn.command).toggleClass(LAST_CELL_CLASS, fixedColumns.length && transparentColumnIndex === fixedColumns.length - 1);\r\n                if (\"freeSpace\" !== rowType) {\r\n                    gridCoreUtils.setEmptyText($cell)\r\n                }\r\n            }\r\n        } else if (\"filter\" === rowType) {\r\n            $cell.toggleClass(FIRST_CELL_CLASS, options.columnIndex === transparentColumnIndex)\r\n        }\r\n        var isRowAltStyle = that.option(\"rowAlternationEnabled\") && options.isAltRow;\r\n        if (browser.mozilla && options.column.fixed && \"group\" !== options.rowType && !isRowAltStyle) {\r\n            $cell.addClass(FIXED_COL_CLASS)\r\n        }\r\n        return $cell\r\n    },\r\n    _wrapTableInScrollContainer: function() {\r\n        var $scrollContainer = this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_FIXED_CLASS))\r\n        }\r\n        return $scrollContainer\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var isEmptyCell;\r\n        var column = options.column;\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var isGroupCell = \"group\" === options.rowType && isDefined(column.groupIndex);\r\n        if (isFixedTableRendering && isGroupCell && !column.command && !column.groupCellTemplate) {\r\n            $cell.css(\"pointerEvents\", \"none\")\r\n        }\r\n        if (!isFixedTableRendering && this._isFixedColumns) {\r\n            isEmptyCell = column.fixed || column.command && false !== column.fixed;\r\n            if (isGroupCell) {\r\n                isEmptyCell = false;\r\n                if (options.row.summaryCells && options.row.summaryCells.length) {\r\n                    var columns = this._columnsController.getVisibleColumns();\r\n                    var alignByFixedColumnCellCount = this._getAlignByColumnCellCount ? this._getAlignByColumnCellCount(column.colspan, {\r\n                        columns: columns,\r\n                        row: options.row,\r\n                        isFixed: true\r\n                    }) : 0;\r\n                    if (alignByFixedColumnCellCount > 0) {\r\n                        var transparentColumnIndex = getTransparentColumnIndex(this._columnsController.getFixedColumns());\r\n                        isEmptyCell = columns.length - alignByFixedColumnCellCount < transparentColumnIndex\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyCell) {\r\n                if (column.command && \"buttons\" !== column.type || \"group\" === options.rowType) {\r\n                    $cell.html(\"&nbsp;\").addClass(column.cssClass);\r\n                    return\r\n                } else {\r\n                    $cell.addClass(\"dx-hidden-cell\")\r\n                }\r\n            }\r\n        }\r\n        if (column.command !== COMMAND_TRANSPARENT) {\r\n            this.callBase($cell, options)\r\n        }\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var cellElements = this.callBase.apply(this, arguments);\r\n        var isGroupRow = cellElements.parent().hasClass(GROUP_ROW_CLASS);\r\n        var headerRowIndex = \"columnHeadersView\" === this.name ? rowIndex : void 0;\r\n        if (this._fixedTableElement && cellElements) {\r\n            var fixedColumns = this.getFixedColumns(headerRowIndex);\r\n            var fixedCellElements = this._getRowElements(this._fixedTableElement).eq(rowIndex).children(\"td\");\r\n            each(fixedCellElements, (columnIndex, cell) => {\r\n                if (isGroupRow) {\r\n                    if (cellElements[columnIndex] && \"hidden\" !== cell.style.visibility) {\r\n                        cellElements[columnIndex] = cell\r\n                    }\r\n                } else {\r\n                    var fixedColumn = fixedColumns[columnIndex];\r\n                    if (fixedColumn) {\r\n                        if (fixedColumn.command === COMMAND_TRANSPARENT) {\r\n                            if (fixedCellElements.eq(columnIndex).hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n                                cellElements[columnIndex] = cell || cellElements[columnIndex]\r\n                            }\r\n                        } else {\r\n                            var fixedColumnIndex = this._columnsController.getVisibleIndexByColumn(fixedColumn, headerRowIndex);\r\n                            cellElements[fixedColumnIndex] = cell || cellElements[fixedColumnIndex]\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return cellElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement && result.length) {\r\n            fixedWidths = this.callBase(this._fixedTableElement)\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    },\r\n    getTableElement: function() {\r\n        var tableElement = this._isFixedTableRendering ? this._fixedTableElement : this.callBase();\r\n        return tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            this._fixedTableElement = tableElement.addClass(POINTER_EVENTS_NONE_CLASS)\r\n        } else {\r\n            this.callBase(tableElement)\r\n        }\r\n    },\r\n    getColumns: function(rowIndex, $tableElement) {\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if (this._isFixedTableRendering || $tableElement && $tableElement.closest(\"table\").parent(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).length) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex, $tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        if ($fixedTable && $fixedTable.find($row).length) {\r\n            return this._getRowElements($fixedTable).index($row)\r\n        }\r\n        return this.callBase($row)\r\n    },\r\n    getTableElements: function() {\r\n        var result = this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            result = $([result.get(0), this._fixedTableElement.get(0)])\r\n        }\r\n        return result\r\n    },\r\n    getFixedColumns: function(rowIndex) {\r\n        return this._columnsController.getFixedColumns(rowIndex)\r\n    },\r\n    getFixedColumnsOffset: function() {\r\n        var offset = {\r\n            left: 0,\r\n            right: 0\r\n        };\r\n        var $transparentColumn;\r\n        if (this._fixedTableElement) {\r\n            $transparentColumn = this.getTransparentColumnElement();\r\n            var positionTransparentColumn = $transparentColumn.position();\r\n            offset = {\r\n                left: positionTransparentColumn.left,\r\n                right: getOuterWidth(this.element(), true) - (getOuterWidth($transparentColumn, true) + positionTransparentColumn.left)\r\n            }\r\n        }\r\n        return offset\r\n    },\r\n    getTransparentColumnElement: function() {\r\n        return this._fixedTableElement && this._fixedTableElement.find(\".\" + POINTER_EVENTS_NONE_CLASS).first()\r\n    },\r\n    getFixedTableElement: function() {\r\n        return this._fixedTableElement\r\n    },\r\n    isFixedColumns: function() {\r\n        return this._isFixedColumns\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase();\r\n        this.synchronizeRows()\r\n    },\r\n    setColumnWidths: function(options) {\r\n        var columns;\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var widths = options.widths;\r\n        var isWidthsSynchronized = widths && widths.length && isDefined(visibleColumns[0].visibleWidth);\r\n        var optionNames = options.optionNames;\r\n        var isColumnWidthChanged = optionNames && optionNames.width;\r\n        var useVisibleColumns = false;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            var hasAutoWidth = widths && widths.some((function(width) {\r\n                return \"auto\" === width\r\n            }));\r\n            useVisibleColumns = hasAutoWidth && (!isWidthsSynchronized || !this.isScrollbarVisible(true));\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n            this.callBase(extend({}, options, {\r\n                $tableElement: this._fixedTableElement,\r\n                columns: columns,\r\n                fixed: true\r\n            }))\r\n        }\r\n        if (isWidthsSynchronized || isColumnWidthChanged && this.option(\"wordWrapEnabled\")) {\r\n            this.synchronizeRows()\r\n        }\r\n    },\r\n    _createColGroup: function(columns) {\r\n        if (this._isFixedTableRendering && !this.option(\"columnAutoWidth\")) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var useVisibleColumns = visibleColumns.filter((function(column) {\r\n                return !column.width\r\n            })).length;\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n        }\r\n        return this.callBase(columns)\r\n    },\r\n    _getClientHeight: function(element) {\r\n        var boundingClientRectElement = element.getBoundingClientRect && getBoundingRect(element);\r\n        return boundingClientRectElement && boundingClientRectElement.height ? boundingClientRectElement.height : element.clientHeight\r\n    },\r\n    synchronizeRows: function() {\r\n        var rowHeights = [];\r\n        var fixedRowHeights = [];\r\n        var rowIndex;\r\n        var $rowElements;\r\n        var $fixedRowElements;\r\n        var $contentElement;\r\n        if (this._isFixedColumns && this._tableElement && this._fixedTableElement) {\r\n            var heightTable = this._getClientHeight(this._tableElement.get(0));\r\n            var heightFixedTable = this._getClientHeight(this._fixedTableElement.get(0));\r\n            $rowElements = this._getRowElements(this._tableElement);\r\n            $fixedRowElements = this._getRowElements(this._fixedTableElement);\r\n            $contentElement = this._findContentElement();\r\n            if (heightTable !== heightFixedTable) {\r\n                $contentElement && $contentElement.css(\"height\", heightTable);\r\n                $rowElements.css(\"height\", \"\");\r\n                $fixedRowElements.css(\"height\", \"\");\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    rowHeights.push(this._getClientHeight($rowElements.get(rowIndex)));\r\n                    fixedRowHeights.push(this._getClientHeight($fixedRowElements.get(rowIndex)))\r\n                }\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    var rowHeight = rowHeights[rowIndex];\r\n                    var fixedRowHeight = fixedRowHeights[rowIndex];\r\n                    if (rowHeight > fixedRowHeight) {\r\n                        $fixedRowElements.eq(rowIndex).css(\"height\", rowHeight)\r\n                    } else if (rowHeight < fixedRowHeight) {\r\n                        $rowElements.eq(rowIndex).css(\"height\", fixedRowHeight)\r\n                    }\r\n                }\r\n                $contentElement && $contentElement.css(\"height\", \"\")\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(width) {\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        this.callBase(width);\r\n        this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    }\r\n};\r\nvar ColumnHeadersViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _getRowVisibleColumns: function(rowIndex) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex)\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var column = options.column;\r\n        var columnFixingOptions = this.option(\"columnFixing\");\r\n        var items = this.callBase(options);\r\n        if (options.row && \"header\" === options.row.rowType) {\r\n            if (true === columnFixingOptions.enabled && column && column.allowFixing) {\r\n                var onItemClick = params => {\r\n                    switch (params.itemData.value) {\r\n                        case \"none\":\r\n                            this._columnsController.columnOption(column.index, \"fixed\", false);\r\n                            break;\r\n                        case \"left\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"left\"\r\n                            });\r\n                            break;\r\n                        case \"right\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"right\"\r\n                            })\r\n                    }\r\n                };\r\n                items = items || [];\r\n                items.push({\r\n                    text: columnFixingOptions.texts.fix,\r\n                    beginGroup: true,\r\n                    items: [{\r\n                        text: columnFixingOptions.texts.leftPosition,\r\n                        value: \"left\",\r\n                        disabled: column.fixed && (!column.fixedPosition || \"left\" === column.fixedPosition),\r\n                        onItemClick: onItemClick\r\n                    }, {\r\n                        text: columnFixingOptions.texts.rightPosition,\r\n                        value: \"right\",\r\n                        disabled: column.fixed && \"right\" === column.fixedPosition,\r\n                        onItemClick: onItemClick\r\n                    }]\r\n                }, {\r\n                    text: columnFixingOptions.texts.unfix,\r\n                    value: \"none\",\r\n                    disabled: !column.fixed,\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    getFixedColumnElements: function(rowIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(rowIndex).children()\r\n        }\r\n        var columnElements = this.getColumnElements();\r\n        var $transparentColumnElement = this.getTransparentColumnElement();\r\n        if (columnElements && $transparentColumnElement && $transparentColumnElement.length) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(this.getFixedColumns());\r\n            columnElements.splice(transparentColumnIndex, $transparentColumnElement.get(0).colSpan, $transparentColumnElement.get(0))\r\n        }\r\n        return columnElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var $fixedColumnElements = this.getFixedColumnElements();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement) {\r\n            if ($fixedColumnElements && $fixedColumnElements.length) {\r\n                fixedWidths = this._getWidths($fixedColumnElements)\r\n            } else {\r\n                fixedWidths = this.callBase(this._fixedTableElement)\r\n            }\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    }\r\n});\r\nvar RowsViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _detachHoverEvents: function() {\r\n        this._fixedTableElement && eventsEngine.off(this._fixedTableElement, \"mouseover mouseout\", \".dx-data-row\");\r\n        this._tableElement && eventsEngine.off(this._tableElement, \"mouseover mouseout\", \".dx-data-row\")\r\n    },\r\n    _attachHoverEvents: function() {\r\n        var that = this;\r\n        var attachHoverEvent = function($table) {\r\n            eventsEngine.on($table, \"mouseover mouseout\", \".dx-data-row\", that.createAction((function(args) {\r\n                var event = args.event;\r\n                var rowIndex = that.getRowIndex($(event.target).closest(\".dx-row\"));\r\n                var isHover = \"mouseover\" === event.type;\r\n                if (rowIndex >= 0) {\r\n                    that._tableElement && that._getRowElements(that._tableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\r\n                    that._fixedTableElement && that._getRowElements(that._fixedTableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover)\r\n                }\r\n            })))\r\n        };\r\n        if (that._fixedTableElement && that._tableElement) {\r\n            attachHoverEvent(that._fixedTableElement);\r\n            attachHoverEvent(that._tableElement)\r\n        }\r\n    },\r\n    _findContentElement: function() {\r\n        var that = this;\r\n        var $content;\r\n        var scrollTop;\r\n        var contentClass = that.addWidgetPrefix(CONTENT_CLASS);\r\n        var element = that.element();\r\n        var scrollDelay = browser.mozilla ? 60 : 0;\r\n        if (element && that._isFixedTableRendering) {\r\n            $content = element.children(\".\" + contentClass);\r\n            var scrollable = that.getScrollable();\r\n            if (!$content.length && scrollable) {\r\n                $content = $(\"<div>\").addClass(contentClass);\r\n                eventsEngine.on($content, \"scroll\", (function(e) {\r\n                    clearTimeout(that._fixedScrollTimeout);\r\n                    that._fixedScrollTimeout = setTimeout((function() {\r\n                        scrollTop = $(e.target).scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop\r\n                        })\r\n                    }), scrollDelay)\r\n                }));\r\n                eventsEngine.on($content, wheelEventName, (function(e) {\r\n                    var $nearestScrollable = $(e.target).closest(\".dx-scrollable\");\r\n                    var shouldScroll = false;\r\n                    if (scrollable && scrollable.$element().is($nearestScrollable)) {\r\n                        shouldScroll = true\r\n                    } else {\r\n                        var nearestScrollableInstance = $nearestScrollable.length && Scrollable.getInstance($nearestScrollable.get(0));\r\n                        var nearestScrollableHasVerticalScrollbar = nearestScrollableInstance && nearestScrollableInstance.scrollHeight() - nearestScrollableInstance.clientHeight() > 0;\r\n                        shouldScroll = nearestScrollableInstance && !nearestScrollableHasVerticalScrollbar\r\n                    }\r\n                    if (shouldScroll) {\r\n                        scrollTop = scrollable.scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop - e.delta\r\n                        });\r\n                        if (scrollable.scrollTop() > 0 && scrollable.scrollTop() + scrollable.clientHeight() < scrollable.scrollHeight() + that.getScrollbarWidth()) {\r\n                            return false\r\n                        }\r\n                    }\r\n                }));\r\n                $content.appendTo(element)\r\n            }\r\n            return $content\r\n        }\r\n        return that.callBase()\r\n    },\r\n    _updateScrollable: function() {\r\n        this.callBase();\r\n        var scrollable = this.getScrollable();\r\n        if (null !== scrollable && void 0 !== scrollable && scrollable._disposed) {\r\n            return\r\n        }\r\n        var scrollTop = scrollable && scrollable.scrollOffset().top;\r\n        this._updateFixedTablePosition(scrollTop)\r\n    },\r\n    _renderContent: function(contentElement, tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            return contentElement.empty().addClass(this.addWidgetPrefix(CONTENT_CLASS) + \" \" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).append(tableElement)\r\n        }\r\n        return this.callBase(contentElement, tableElement)\r\n    },\r\n    _getGroupCellOptions: function(options) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.callBase(extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _renderGroupedCells: function($row, options) {\r\n        return this.callBase($row, extend({}, options, {\r\n            columns: this._columnsController.getVisibleColumns()\r\n        }))\r\n    },\r\n    _renderGroupSummaryCells: function($row, options) {\r\n        if (this._isFixedTableRendering) {\r\n            this.callBase($row, extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        } else {\r\n            this.callBase($row, options)\r\n        }\r\n    },\r\n    _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n        var result = this.callBase.apply(this, arguments);\r\n        var column = options.columns[columnIndex];\r\n        if (options.isFixed) {\r\n            return column.fixed && (result || \"right\" === column.fixedPosition)\r\n        }\r\n        return result && (!this._isFixedColumns || !column.fixed)\r\n    },\r\n    _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n        var alignByFixedColumnCellCount;\r\n        if (this._isFixedTableRendering) {\r\n            options.isFixed = true;\r\n            alignByFixedColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n            options.isFixed = false;\r\n            var startColumnIndex = options.columns.length - alignByFixedColumnCellCount;\r\n            options = extend({}, options, {\r\n                columns: this.getFixedColumns()\r\n            });\r\n            var transparentColumnIndex = getTransparentColumnIndex(options.columns);\r\n            if (startColumnIndex < transparentColumnIndex) {\r\n                alignByFixedColumnCellCount -= options.columns[transparentColumnIndex].colspan - 1 || 0;\r\n                groupCellColSpan -= options.columns[transparentColumnIndex].colspan - 1 || 0\r\n            } else if (alignByColumnCellCount > 0) {\r\n                $groupCell.css(\"visibility\", \"hidden\")\r\n            }\r\n            alignByColumnCellCount = alignByFixedColumnCellCount\r\n        }\r\n        this.callBase($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n    },\r\n    _getSummaryCellIndex: function(columnIndex, columns) {\r\n        if (this._isFixedTableRendering) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(columns);\r\n            if (columnIndex > transparentColumnIndex) {\r\n                columnIndex += columns[transparentColumnIndex].colspan - 1\r\n            }\r\n            return columnIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _renderCore: function(change) {\r\n        this._detachHoverEvents();\r\n        this.callBase(change);\r\n        var isFixedColumns = this._isFixedColumns;\r\n        this.element().toggleClass(FIXED_COLUMNS_CLASS, isFixedColumns);\r\n        if (this.option(\"hoverStateEnabled\") && isFixedColumns) {\r\n            this._attachHoverEvents()\r\n        }\r\n    },\r\n    setRowsOpacity: function(columnIndex, value) {\r\n        this.callBase(columnIndex, value);\r\n        var $rows = this._getRowElements(this._fixedTableElement);\r\n        this._setRowsOpacityCore($rows, this.getFixedColumns(), columnIndex, value)\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"hoverStateEnabled\" === args.name && this._isFixedColumns) {\r\n            args.value ? this._attachHoverEvents() : this._detachHoverEvents()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        var cellIndex = 0;\r\n        if ($fixedTable && $cell.is(\"td\") && $cell.closest($fixedTable).length) {\r\n            var columns = this.getFixedColumns();\r\n            each(columns, (function(index, column) {\r\n                if (index === $cell[0].cellIndex) {\r\n                    return false\r\n                }\r\n                if (column.colspan) {\r\n                    cellIndex += column.colspan;\r\n                    return\r\n                }\r\n                cellIndex++\r\n            }));\r\n            return cellIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _updateFixedTablePosition: function(scrollTop, needFocus) {\r\n        if (this._fixedTableElement && this._tableElement) {\r\n            var $focusedElement;\r\n            var editorFactory = this.getController(\"editorFactory\");\r\n            this._fixedTableElement.parent().scrollTop(scrollTop);\r\n            if (needFocus && editorFactory) {\r\n                $focusedElement = editorFactory.focus();\r\n                $focusedElement && editorFactory.focus($focusedElement)\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(vWidth, hWidth) {\r\n        var styles = {\r\n            marginBottom: 0\r\n        };\r\n        var $fixedContent = this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if ($fixedContent.length && this._fixedTableElement) {\r\n            $fixedContent.css(styles);\r\n            this._fixedTableElement.css(styles);\r\n            styles[this.option(\"rtlEnabled\") ? \"marginLeft\" : \"marginRight\"] = vWidth;\r\n            styles.marginBottom = hWidth;\r\n            var useNativeScrolling = this._scrollable && this._scrollable.option(\"useNative\");\r\n            (useNativeScrolling ? $fixedContent : this._fixedTableElement).css(styles)\r\n        }\r\n    },\r\n    _getElasticScrollTop: function(e) {\r\n        var elasticScrollTop = 0;\r\n        var scrollbarWidth = this.getScrollbarWidth(true);\r\n        if (e.scrollOffset.top < 0) {\r\n            elasticScrollTop = -e.scrollOffset.top\r\n        } else if (e.reachedBottom) {\r\n            var scrollableContent = this._findContentElement();\r\n            var $scrollableContainer = $(e.component.container());\r\n            var maxScrollTop = Math.max(getHeight(scrollableContent) + scrollbarWidth - getHeight($scrollableContainer), 0);\r\n            elasticScrollTop = maxScrollTop - e.scrollOffset.top\r\n        }\r\n        return elasticScrollTop\r\n    },\r\n    _applyElasticScrolling: function(e) {\r\n        if (this._fixedTableElement) {\r\n            var elasticScrollTop = this._getElasticScrollTop(e);\r\n            if (0 !== Math.ceil(elasticScrollTop)) {\r\n                move(this._fixedTableElement, {\r\n                    top: elasticScrollTop\r\n                })\r\n            } else {\r\n                this._fixedTableElement.css(\"transform\", \"\")\r\n            }\r\n        }\r\n    },\r\n    _handleScroll: function(e) {\r\n        this._updateFixedTablePosition(e.scrollOffset.top, true);\r\n        this._applyElasticScrolling(e);\r\n        this.callBase(e)\r\n    },\r\n    _updateContentPosition: function(isRender) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!isRender) {\r\n            this._updateFixedTablePosition(this._scrollTop)\r\n        }\r\n    },\r\n    _afterRowPrepared: function(e) {\r\n        if (this._isFixedTableRendering) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _scrollToElement: function($element) {\r\n        this.callBase($element, this.getFixedColumnsOffset())\r\n    },\r\n    dispose: function() {\r\n        this.callBase.apply(this, arguments);\r\n        clearTimeout(this._fixedScrollTimeout)\r\n    }\r\n});\r\nvar FooterViewFixedColumnsExtender = baseFixedColumns;\r\nexport var columnFixingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnFixing: {\r\n                enabled: false,\r\n                texts: {\r\n                    fix: messageLocalization.format(\"dxDataGrid-columnFixingFix\"),\r\n                    unfix: messageLocalization.format(\"dxDataGrid-columnFixingUnfix\"),\r\n                    leftPosition: messageLocalization.format(\"dxDataGrid-columnFixingLeftPosition\"),\r\n                    rightPosition: messageLocalization.format(\"dxDataGrid-columnFixingRightPosition\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFixedColumnsExtender,\r\n            rowsView: RowsViewFixedColumnsExtender,\r\n            footerView: FooterViewFixedColumnsExtender\r\n        },\r\n        controllers: function() {\r\n            var normalizeColumnIndicesByPoints = function(columns, fixedColumns, pointsByColumns) {\r\n                var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n                var correctIndex = columns.length - fixedColumns.length;\r\n                each(pointsByColumns, (function(_, point) {\r\n                    if (point.index > transparentColumnIndex) {\r\n                        point.columnIndex += correctIndex;\r\n                        point.index += correctIndex\r\n                    }\r\n                }));\r\n                return pointsByColumns\r\n            };\r\n            return {\r\n                draggingHeader: {\r\n                    _generatePointsByColumns: function(options) {\r\n                        var visibleColumns = options.columns;\r\n                        var targetDraggingPanel = options.targetDraggingPanel;\r\n                        if (targetDraggingPanel && \"headers\" === targetDraggingPanel.getName() && targetDraggingPanel.isFixedColumns()) {\r\n                            if (options.sourceColumn.fixed) {\r\n                                if (!options.rowIndex) {\r\n                                    options.columnElements = targetDraggingPanel.getFixedColumnElements(0)\r\n                                }\r\n                                options.columns = targetDraggingPanel.getFixedColumns(options.rowIndex);\r\n                                var pointsByColumns = this.callBase(options);\r\n                                normalizeColumnIndicesByPoints(visibleColumns, options.columns, pointsByColumns);\r\n                                return pointsByColumns\r\n                            }\r\n                        }\r\n                        return this.callBase(options)\r\n                    },\r\n                    _pointCreated: function(point, columns, location, sourceColumn) {\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        var targetColumn = columns[point.columnIndex];\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if (!result && \"headers\" === location && $transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                            if (sourceColumn && sourceColumn.fixed) {\r\n                                return \"right\" === sourceColumn.fixedPosition ? point.x < boundingRect.right : point.x > boundingRect.left\r\n                            } else {\r\n                                if (targetColumn && targetColumn.fixed && \"right\" !== targetColumn.fixedPosition) {\r\n                                    return true\r\n                                }\r\n                                return point.x < boundingRect.left || point.x > boundingRect.right\r\n                            }\r\n                        }\r\n                        return result\r\n                    }\r\n                },\r\n                columnsResizer: {\r\n                    _generatePointsByColumns: function() {\r\n                        var that = this;\r\n                        var columnsController = that._columnsController;\r\n                        var columns = columnsController && that._columnsController.getVisibleColumns();\r\n                        var fixedColumns = columnsController && that._columnsController.getFixedColumns();\r\n                        var cells = that._columnHeadersView.getFixedColumnElements();\r\n                        var pointsByFixedColumns = [];\r\n                        that.callBase();\r\n                        if (cells && cells.length > 0) {\r\n                            pointsByFixedColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                                return that._pointCreated(point, cells.length, fixedColumns)\r\n                            }));\r\n                            that._pointsByFixedColumns = normalizeColumnIndicesByPoints(columns, fixedColumns, pointsByFixedColumns)\r\n                        }\r\n                    },\r\n                    _pointCreated: function(point, cellsLength, columns) {\r\n                        var isWidgetResizingMode = \"widget\" === this.option(\"columnResizingMode\");\r\n                        if (point.index > 0 && point.index < cellsLength) {\r\n                            var currentColumn = columns[point.columnIndex - 1] || {};\r\n                            var nextColumn = columns[point.columnIndex] || {};\r\n                            if (currentColumn.fixed || nextColumn.fixed) {\r\n                                point.columnIndex -= 1;\r\n                                return !((currentColumn.allowResizing || currentColumn.command === COMMAND_TRANSPARENT) && (isWidgetResizingMode || nextColumn.allowResizing || nextColumn.command === COMMAND_TRANSPARENT))\r\n                            }\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if ($transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                            if (currentX <= boundingRect.left || currentX >= boundingRect.right) {\r\n                                return this.callBase(this._pointsByFixedColumns, currentX, deltaX)\r\n                            }\r\n                        }\r\n                        return this.callBase(pointsByColumns, currentX, deltaX)\r\n                    }\r\n                }\r\n            }\r\n        }()\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_fixing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnFixingModule\r\n} from \"../grid_core/ui.grid_core.column_fixing\";\r\ngridCore.registerModule(\"columnFixing\", columnFixingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.adaptivity.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport Guid from \"../../core/guid\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport Form from \"../form\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport messageLocalization from \"../../localization/message\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\nvar ROWS_VIEW = \"rowsView\";\r\nvar FOOTER_VIEW = \"footerView\";\r\nvar COLUMN_VIEWS = [COLUMN_HEADERS_VIEW, ROWS_VIEW, FOOTER_VIEW];\r\nvar ADAPTIVE_NAMESPACE = \"dxDataGridAdaptivity\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"adaptiveHidden\";\r\nvar ADAPTIVE_ROW_TYPE = \"detailAdaptive\";\r\nvar FORM_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar FORM_ITEM_MODIFIED = \"dx-item-modified\";\r\nvar HIDDEN_COLUMN_CLASS = \"hidden-column\";\r\nvar ADAPTIVE_COLUMN_BUTTON_CLASS = \"adaptive-more\";\r\nvar ADAPTIVE_COLUMN_NAME_CLASS = \"dx-command-adaptive\";\r\nvar COMMAND_ADAPTIVE_HIDDEN_CLASS = \"dx-command-adaptive-hidden\";\r\nvar ADAPTIVE_DETAIL_ROW_CLASS = \"dx-adaptive-detail-row\";\r\nvar ADAPTIVE_ITEM_TEXT_CLASS = \"dx-adaptive-item-text\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar LAST_DATA_CELL_CLASS = \"dx-last-data-cell\";\r\nvar ADAPTIVE_COLUMN_NAME = \"adaptive\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar REVERT_TOOLTIP_CLASS = \"revert-tooltip\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar EXPAND_ARIA_NAME = \"dxDataGrid-ariaAdaptiveExpand\";\r\nvar COLLAPSE_ARIA_NAME = \"dxDataGrid-ariaAdaptiveCollapse\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\n\r\nfunction getColumnId(that, column) {\r\n    return that._columnsController.getColumnId(column)\r\n}\r\n\r\nfunction getDataCellElements($row) {\r\n    return $row.find(\"td:not(.dx-datagrid-hidden-column):not([class*='dx-command-'])\")\r\n}\r\n\r\nfunction adaptiveCellTemplate(container, options) {\r\n    var $adaptiveColumnButton;\r\n    var $container = $(container);\r\n    var adaptiveColumnsController = options.component.getController(\"adaptiveColumns\");\r\n    if (\"data\" === options.rowType) {\r\n        $adaptiveColumnButton = $(\"<span>\").addClass(adaptiveColumnsController.addWidgetPrefix(ADAPTIVE_COLUMN_BUTTON_CLASS));\r\n        eventsEngine.on($adaptiveColumnButton, addNamespace(clickEventName, ADAPTIVE_NAMESPACE), adaptiveColumnsController.createAction((function() {\r\n            adaptiveColumnsController.toggleExpandAdaptiveDetailRow(options.key)\r\n        })));\r\n        $adaptiveColumnButton.appendTo($container)\r\n    } else {\r\n        gridCoreUtils.setEmptyText($container)\r\n    }\r\n}\r\nvar AdaptiveColumnsController = modules.ViewController.inherit({\r\n    _isRowEditMode: function() {\r\n        var editMode = this._getEditMode();\r\n        return editMode === EDIT_MODE_ROW\r\n    },\r\n    _isItemModified: function(item, cellOptions) {\r\n        var columnIndex = this._columnsController.getVisibleIndex(item.column.index);\r\n        var rowIndex = this._dataController.getRowIndexByKey(cellOptions.key);\r\n        var row = this._dataController.items()[rowIndex + 1];\r\n        return row && row.modifiedValues && isDefined(row.modifiedValues[columnIndex])\r\n    },\r\n    _renderFormViewTemplate: function(item, cellOptions, $container) {\r\n        var column = item.column;\r\n        var focusAction = this.createAction((function() {\r\n            eventsEngine.trigger($container, clickEventName)\r\n        }));\r\n        var value = column.calculateCellValue(cellOptions.data);\r\n        var displayValue = gridCoreUtils.getDisplayValue(column, value, cellOptions.data, cellOptions.rowType);\r\n        var text = gridCoreUtils.formatValue(displayValue, column);\r\n        var isCellOrBatchEditMode = this._editingController.isCellOrBatchEditMode();\r\n        var rowsView = this._rowsView;\r\n        if (column.allowEditing && this.getController(\"keyboardNavigation\").isKeyboardEnabled()) {\r\n            $container.attr(\"tabIndex\", this.option(\"tabIndex\"));\r\n            if (isCellOrBatchEditMode) {\r\n                eventsEngine.off($container, \"focus\", focusAction);\r\n                eventsEngine.on($container, \"focus\", focusAction)\r\n            }\r\n        }\r\n        if (column.cellTemplate) {\r\n            var templateOptions = extend({}, cellOptions, {\r\n                value: value,\r\n                displayValue: displayValue,\r\n                text: text,\r\n                column: column\r\n            });\r\n            var isDomElement = !!$container.closest(getWindow().document).length;\r\n            rowsView.renderTemplate($container, column.cellTemplate, templateOptions, isDomElement).done(() => {\r\n                rowsView._cellPrepared($container, cellOptions)\r\n            })\r\n        } else {\r\n            var container = $container.get(0);\r\n            if (column.encodeHtml) {\r\n                container.textContent = text\r\n            } else {\r\n                container.innerHTML = text\r\n            }\r\n            $container.addClass(ADAPTIVE_ITEM_TEXT_CLASS);\r\n            if (!isDefined(text) || \"\" === text) {\r\n                $container.html(\"&nbsp;\")\r\n            }\r\n            if (!this._isRowEditMode()) {\r\n                if (this._isItemModified(item, cellOptions)) {\r\n                    $container.addClass(FORM_ITEM_MODIFIED)\r\n                }\r\n            }\r\n            rowsView._cellPrepared($container, cellOptions)\r\n        }\r\n    },\r\n    _getTemplate: function(item, cellOptions) {\r\n        var that = this;\r\n        var column = item.column;\r\n        var editingController = this.getController(\"editing\");\r\n        return function(options, container) {\r\n            var $container = $(container);\r\n            var columnIndex = that._columnsController.getVisibleIndex(column.index);\r\n            var templateOptions = extend({}, cellOptions);\r\n            var renderFormTemplate = function() {\r\n                var isItemEdited = that._isItemEdited(item);\r\n                templateOptions.value = cellOptions.row.values[columnIndex];\r\n                if (isItemEdited || column.showEditorAlways) {\r\n                    editingController.renderFormEditTemplate(templateOptions, item, options, $container, !isItemEdited)\r\n                } else {\r\n                    templateOptions.column = column;\r\n                    templateOptions.columnIndex = columnIndex;\r\n                    that._renderFormViewTemplate(item, templateOptions, $container)\r\n                }\r\n            };\r\n            renderFormTemplate();\r\n            templateOptions.watch && templateOptions.watch((function() {\r\n                return {\r\n                    isItemEdited: that._isItemEdited(item),\r\n                    value: cellOptions.row.values[columnIndex]\r\n                }\r\n            }), (function() {\r\n                $container.contents().remove();\r\n                $container.removeClass(ADAPTIVE_ITEM_TEXT_CLASS);\r\n                renderFormTemplate()\r\n            }))\r\n        }\r\n    },\r\n    _isVisibleColumnsValid: function(visibleColumns) {\r\n        if (visibleColumns < 2) {\r\n            return false\r\n        }\r\n        if (visibleColumns.length - function() {\r\n                var result = 0;\r\n                for (var j = 0; j < visibleColumns.length; j++) {\r\n                    var visibleColumn = visibleColumns[j];\r\n                    if (visibleColumn.command) {\r\n                        result++\r\n                    }\r\n                }\r\n                return result\r\n            }() <= 1) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _calculatePercentWidths: function(widths, visibleColumns) {\r\n        var that = this;\r\n        var percentWidths = 0;\r\n        visibleColumns.forEach((function(item, index) {\r\n            if (widths[index] !== HIDDEN_COLUMNS_WIDTH) {\r\n                percentWidths += that._getItemPercentWidth(item)\r\n            }\r\n        }));\r\n        return percentWidths\r\n    },\r\n    _isPercentWidth: function(width) {\r\n        return isString(width) && \"%\" === width.slice(-1)\r\n    },\r\n    _isColumnHidden: function(column) {\r\n        return this._hiddenColumns.filter((function(hiddenColumn) {\r\n            return hiddenColumn.index === column.index\r\n        })).length > 0\r\n    },\r\n    _getAverageColumnsWidth: function(containerWidth, columns, columnsCanFit) {\r\n        var that = this;\r\n        var fixedColumnsWidth = 0;\r\n        var columnsWithoutFixedWidthCount = 0;\r\n        columns.forEach((function(column) {\r\n            if (!that._isColumnHidden(column)) {\r\n                var width = column.width;\r\n                if (isDefined(width) && !isNaN(parseFloat(width))) {\r\n                    fixedColumnsWidth += that._isPercentWidth(width) ? that._calculatePercentWidth({\r\n                        visibleIndex: column.visibleIndex,\r\n                        columnsCount: columns.length,\r\n                        columnsCanFit: columnsCanFit,\r\n                        bestFitWidth: column.bestFitWidth,\r\n                        columnWidth: width,\r\n                        containerWidth: containerWidth\r\n                    }) : parseFloat(width)\r\n                } else {\r\n                    columnsWithoutFixedWidthCount++\r\n                }\r\n            }\r\n        }));\r\n        return (containerWidth - fixedColumnsWidth) / columnsWithoutFixedWidthCount\r\n    },\r\n    _calculateColumnWidth: function(column, containerWidth, contentColumns, columnsCanFit) {\r\n        var columnId = getColumnId(this, column);\r\n        var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n        var bestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n        var columnsCount = contentColumns.length;\r\n        var colWidth;\r\n        if (widthOption && \"auto\" !== widthOption) {\r\n            if (this._isPercentWidth(widthOption)) {\r\n                colWidth = this._calculatePercentWidth({\r\n                    visibleIndex: column.visibleIndex,\r\n                    columnsCount: columnsCount,\r\n                    columnsCanFit: columnsCanFit,\r\n                    bestFitWidth: bestFitWidth,\r\n                    columnWidth: widthOption,\r\n                    containerWidth: containerWidth\r\n                })\r\n            } else {\r\n                return parseFloat(widthOption)\r\n            }\r\n        } else {\r\n            var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n            colWidth = columnAutoWidth || !!column.command ? bestFitWidth : this._getAverageColumnsWidth(containerWidth, contentColumns, columnsCanFit)\r\n        }\r\n        return colWidth\r\n    },\r\n    _calculatePercentWidth: function(options) {\r\n        var columnFitted = options.visibleIndex < options.columnsCount - 1 && options.columnsCanFit;\r\n        var partialWidth = options.containerWidth * parseFloat(options.columnWidth) / 100;\r\n        var resultWidth = options.columnsCanFit && partialWidth < options.bestFitWidth ? options.bestFitWidth : partialWidth;\r\n        return columnFitted ? options.containerWidth * parseFloat(options.columnWidth) / 100 : resultWidth\r\n    },\r\n    _getNotTruncatedColumnWidth: function(column, containerWidth, contentColumns, columnsCanFit) {\r\n        var columnId = getColumnId(this, column);\r\n        var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n        var bestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n        if (widthOption && \"auto\" !== widthOption && !this._isPercentWidth(widthOption)) {\r\n            return parseFloat(widthOption)\r\n        }\r\n        var colWidth = this._calculateColumnWidth(column, containerWidth, contentColumns, columnsCanFit);\r\n        return colWidth < bestFitWidth ? null : colWidth\r\n    },\r\n    _getItemPercentWidth: function(item) {\r\n        var result = 0;\r\n        if (item.width && this._isPercentWidth(item.width)) {\r\n            result = parseFloat(item.width)\r\n        }\r\n        return result\r\n    },\r\n    _getCommandColumnsWidth: function() {\r\n        var that = this;\r\n        var columns = that._columnsController.getVisibleColumns();\r\n        var colWidth = 0;\r\n        each(columns, (function(index, column) {\r\n            if (column.index < 0 || column.command) {\r\n                colWidth += that._columnsController.columnOption(getColumnId(that, column), \"bestFitWidth\") || 0\r\n            }\r\n        }));\r\n        return colWidth\r\n    },\r\n    _isItemEdited: function(item) {\r\n        if (this.isFormOrPopupEditMode()) {\r\n            return false\r\n        }\r\n        if (this._isRowEditMode()) {\r\n            var editRowKey = this.option(\"editing.editRowKey\");\r\n            if (equalByValue(editRowKey, this._dataController.adaptiveExpandedKey())) {\r\n                return true\r\n            }\r\n        } else {\r\n            var rowIndex = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1;\r\n            var columnIndex = this._columnsController.getVisibleIndex(item.column.index);\r\n            return this._editingController.isEditCell(rowIndex, columnIndex)\r\n        }\r\n    },\r\n    _getFormItemsByHiddenColumns: function(hiddenColumns) {\r\n        var items = [];\r\n        each(hiddenColumns, (function(_, column) {\r\n            items.push({\r\n                column: column,\r\n                name: column.name,\r\n                dataField: column.dataField,\r\n                visibleIndex: column.visibleIndex\r\n            })\r\n        }));\r\n        return items\r\n    },\r\n    _getAdaptiveColumnVisibleIndex: function(visibleColumns) {\r\n        for (var i = 0; i < visibleColumns.length; i++) {\r\n            var column = visibleColumns[i];\r\n            if (column.command === ADAPTIVE_COLUMN_NAME) {\r\n                return i\r\n            }\r\n        }\r\n    },\r\n    _hideAdaptiveColumn: function(resultWidths, visibleColumns) {\r\n        var visibleIndex = this._getAdaptiveColumnVisibleIndex(visibleColumns);\r\n        if (isDefined(visibleIndex)) {\r\n            resultWidths[visibleIndex] = HIDDEN_COLUMNS_WIDTH;\r\n            this._hideVisibleColumn({\r\n                isCommandColumn: true,\r\n                visibleIndex: visibleIndex\r\n            })\r\n        }\r\n    },\r\n    _showHiddenCellsInView: function(_ref) {\r\n        var {\r\n            $cells: $cells,\r\n            isCommandColumn: isCommandColumn\r\n        } = _ref;\r\n        var cssClassNameToRemove = isCommandColumn ? COMMAND_ADAPTIVE_HIDDEN_CLASS : this.addWidgetPrefix(HIDDEN_COLUMN_CLASS);\r\n        $cells.removeClass(cssClassNameToRemove)\r\n    },\r\n    _showHiddenColumns: function() {\r\n        for (var i = 0; i < COLUMN_VIEWS.length; i++) {\r\n            var view = this.getView(COLUMN_VIEWS[i]);\r\n            if (view && view.isVisible() && view.element()) {\r\n                var viewName = view.name;\r\n                var $hiddenCommandCells = view.element().find(\".\" + COMMAND_ADAPTIVE_HIDDEN_CLASS);\r\n                this._showHiddenCellsInView({\r\n                    viewName: viewName,\r\n                    $cells: $hiddenCommandCells,\r\n                    isCommandColumn: true\r\n                });\r\n                var $hiddenCells = view.element().find(\".\" + this.addWidgetPrefix(HIDDEN_COLUMN_CLASS));\r\n                this._showHiddenCellsInView({\r\n                    viewName: viewName,\r\n                    $cells: $hiddenCells\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _isCellValid: function($cell) {\r\n        return $cell && $cell.length && !$cell.hasClass(MASTER_DETAIL_CELL_CLASS) && !$cell.hasClass(GROUP_CELL_CLASS)\r\n    },\r\n    _hideVisibleColumn: function(_ref2) {\r\n        var {\r\n            isCommandColumn: isCommandColumn,\r\n            visibleIndex: visibleIndex\r\n        } = _ref2;\r\n        var that = this;\r\n        COLUMN_VIEWS.forEach((function(viewName) {\r\n            var view = that.getView(viewName);\r\n            view && that._hideVisibleColumnInView({\r\n                view: view,\r\n                isCommandColumn: isCommandColumn,\r\n                visibleIndex: visibleIndex\r\n            })\r\n        }))\r\n    },\r\n    _hideVisibleColumnInView: function(_ref3) {\r\n        var {\r\n            view: view,\r\n            isCommandColumn: isCommandColumn,\r\n            visibleIndex: visibleIndex\r\n        } = _ref3;\r\n        var viewName = view.name;\r\n        var $cellElement;\r\n        var column = this._columnsController.getVisibleColumns()[visibleIndex];\r\n        var editFormRowIndex = this._editingController && this._editingController.getEditFormRowIndex();\r\n        if (view && view.isVisible() && column) {\r\n            var rowsCount = view.getRowsCount();\r\n            var $rowElements = view._getRowElements();\r\n            for (var rowIndex = 0; rowIndex < rowsCount; rowIndex++) {\r\n                var cancelClassAdding = rowIndex === editFormRowIndex && viewName === ROWS_VIEW && \"popup\" !== this.option(\"editing.mode\");\r\n                if (!cancelClassAdding) {\r\n                    var currentVisibleIndex = viewName === COLUMN_HEADERS_VIEW ? this._columnsController.getVisibleIndex(column.index, rowIndex) : visibleIndex;\r\n                    if (currentVisibleIndex >= 0) {\r\n                        var $rowElement = $rowElements.eq(rowIndex);\r\n                        $cellElement = this._findCellElementInRow($rowElement, currentVisibleIndex);\r\n                        this._isCellValid($cellElement) && this._hideVisibleCellInView({\r\n                            viewName: viewName,\r\n                            isCommandColumn: isCommandColumn,\r\n                            $cell: $cellElement\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _findCellElementInRow($rowElement, visibleColumnIndex) {\r\n        var $rowCells = $rowElement.children();\r\n        var visibleIndex = visibleColumnIndex;\r\n        var cellIsInsideGroup = false;\r\n        if ($rowElement.hasClass(GROUP_ROW_CLASS)) {\r\n            var $groupCell = $rowElement.find(\".\".concat(GROUP_CELL_CLASS));\r\n            var colSpan = $groupCell.attr(\"colspan\");\r\n            if ($groupCell.length && isDefined(colSpan)) {\r\n                var groupCellLength = parseInt(colSpan);\r\n                var endGroupIndex = $groupCell.index() + groupCellLength - 1;\r\n                if (visibleColumnIndex > endGroupIndex) {\r\n                    visibleIndex = visibleColumnIndex - groupCellLength + 1\r\n                } else {\r\n                    cellIsInsideGroup = true\r\n                }\r\n            }\r\n        }\r\n        var $cellElement = !cellIsInsideGroup ? $rowCells.eq(visibleIndex) : void 0;\r\n        return $cellElement\r\n    },\r\n    _hideVisibleCellInView: function(_ref4) {\r\n        var {\r\n            $cell: $cell,\r\n            isCommandColumn: isCommandColumn\r\n        } = _ref4;\r\n        var cssClassNameToAdd = isCommandColumn ? COMMAND_ADAPTIVE_HIDDEN_CLASS : this.addWidgetPrefix(HIDDEN_COLUMN_CLASS);\r\n        $cell.addClass(cssClassNameToAdd)\r\n    },\r\n    _getEditMode: function() {\r\n        return this._editingController.getEditMode()\r\n    },\r\n    isFormOrPopupEditMode: function() {\r\n        var editMode = this._getEditMode();\r\n        return editMode === EDIT_MODE_FORM || editMode === EDIT_MODE_POPUP\r\n    },\r\n    hideRedundantColumns: function(resultWidths, visibleColumns, hiddenQueue) {\r\n        this._hiddenColumns = [];\r\n        if (this._isVisibleColumnsValid(visibleColumns) && hiddenQueue.length) {\r\n            var totalWidth = 0;\r\n            var $rootElement = this.component.$element();\r\n            var rootElementWidth = getWidth($rootElement) - this._getCommandColumnsWidth();\r\n            var getVisibleContentColumns = function() {\r\n                return visibleColumns.filter(item => !item.command && 0 === this._hiddenColumns.filter(i => i.index === item.index).length)\r\n            }.bind(this);\r\n            var visibleContentColumns = getVisibleContentColumns();\r\n            var contentColumnsCount = visibleContentColumns.length;\r\n            var i;\r\n            var hasHiddenColumns;\r\n            var needHideColumn;\r\n            do {\r\n                needHideColumn = false;\r\n                totalWidth = 0;\r\n                var percentWidths = this._calculatePercentWidths(resultWidths, visibleColumns);\r\n                var columnsCanFit = percentWidths < 100 && 0 !== percentWidths;\r\n                for (i = 0; i < visibleColumns.length; i++) {\r\n                    var visibleColumn = visibleColumns[i];\r\n                    var columnWidth = this._getNotTruncatedColumnWidth(visibleColumn, rootElementWidth, visibleContentColumns, columnsCanFit);\r\n                    var columnId = getColumnId(this, visibleColumn);\r\n                    var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n                    var minWidth = this._columnsController.columnOption(columnId, \"minWidth\");\r\n                    var columnBestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n                    if (resultWidths[i] === HIDDEN_COLUMNS_WIDTH) {\r\n                        hasHiddenColumns = true;\r\n                        continue\r\n                    }\r\n                    if (!columnWidth && !visibleColumn.command && !visibleColumn.fixed) {\r\n                        needHideColumn = true;\r\n                        break\r\n                    }\r\n                    if (!widthOption || \"auto\" === widthOption) {\r\n                        columnWidth = Math.max(columnBestFitWidth || 0, minWidth || 0)\r\n                    }\r\n                    if (visibleColumn.command !== ADAPTIVE_COLUMN_NAME || hasHiddenColumns) {\r\n                        totalWidth += columnWidth\r\n                    }\r\n                }\r\n                needHideColumn = needHideColumn || totalWidth > getWidth($rootElement);\r\n                if (needHideColumn) {\r\n                    var column = hiddenQueue.pop();\r\n                    var visibleIndex = this._columnsController.getVisibleIndex(column.index);\r\n                    rootElementWidth += this._calculateColumnWidth(column, rootElementWidth, visibleContentColumns, columnsCanFit);\r\n                    this._hideVisibleColumn({\r\n                        visibleIndex: visibleIndex\r\n                    });\r\n                    resultWidths[visibleIndex] = HIDDEN_COLUMNS_WIDTH;\r\n                    this._hiddenColumns.push(column);\r\n                    visibleContentColumns = getVisibleContentColumns()\r\n                }\r\n            } while (needHideColumn && visibleContentColumns.length > 1 && hiddenQueue.length);\r\n            if (contentColumnsCount === visibleContentColumns.length) {\r\n                this._hideAdaptiveColumn(resultWidths, visibleColumns)\r\n            }\r\n        } else {\r\n            this._hideAdaptiveColumn(resultWidths, visibleColumns)\r\n        }\r\n    },\r\n    getItemContentByColumnIndex: function(visibleColumnIndex) {\r\n        var $itemContent;\r\n        for (var i = 0; i < this._$itemContents.length; i++) {\r\n            $itemContent = this._$itemContents.eq(i);\r\n            var item = $itemContent.data(\"dx-form-item\");\r\n            if (item && item.column && this._columnsController.getVisibleIndex(item.column.index) === visibleColumnIndex) {\r\n                return $itemContent\r\n            }\r\n        }\r\n    },\r\n    toggleExpandAdaptiveDetailRow: function(key, alwaysExpanded) {\r\n        if (!(this.isFormOrPopupEditMode() && this._editingController.isEditing())) {\r\n            this.getController(\"data\").toggleExpandAdaptiveDetailRow(key, alwaysExpanded)\r\n        }\r\n    },\r\n    createFormByHiddenColumns: function(container, options) {\r\n        var that = this;\r\n        var $container = $(container);\r\n        var userFormOptions = {\r\n            items: that._getFormItemsByHiddenColumns(that._hiddenColumns),\r\n            formID: \"dx-\" + new Guid\r\n        };\r\n        var defaultFormOptions = isMaterial() ? {\r\n            colCount: 2\r\n        } : {};\r\n        this.executeAction(\"onAdaptiveDetailRowPreparing\", {\r\n            formOptions: userFormOptions\r\n        });\r\n        that._$itemContents = null;\r\n        that._form = that._createComponent($(\"<div>\").appendTo($container), Form, extend(defaultFormOptions, userFormOptions, {\r\n            customizeItem: function(item) {\r\n                var column = item.column || that._columnsController.columnOption(item.name || item.dataField);\r\n                if (column) {\r\n                    item.label = item.label || {};\r\n                    item.label.text = item.label.text || column.caption;\r\n                    item.column = column;\r\n                    item.template = that._getTemplate(item, options, that.updateForm.bind(that))\r\n                }\r\n                userFormOptions.customizeItem && userFormOptions.customizeItem.call(this, item)\r\n            },\r\n            onContentReady: function(e) {\r\n                userFormOptions.onContentReady && userFormOptions.onContentReady.call(this, e);\r\n                that._$itemContents = $container.find(\".\" + FORM_ITEM_CONTENT_CLASS)\r\n            }\r\n        }))\r\n    },\r\n    hasAdaptiveDetailRowExpanded: function() {\r\n        return isDefined(this._dataController.adaptiveExpandedKey())\r\n    },\r\n    updateForm: function(hiddenColumns) {\r\n        if (this.hasAdaptiveDetailRowExpanded()) {\r\n            if (this._form && isDefined(this._form._contentReadyAction)) {\r\n                if (hiddenColumns && hiddenColumns.length) {\r\n                    this._form.option(\"items\", this._getFormItemsByHiddenColumns(hiddenColumns))\r\n                } else {\r\n                    this._form.repaint()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateHidingQueue: function(columns) {\r\n        var hideableColumns = columns.filter((function(column) {\r\n            return column.visible && !column.type && !column.fixed && !(isDefined(column.groupIndex) && column.groupIndex >= 0)\r\n        }));\r\n        var columnsHasHidingPriority;\r\n        var i;\r\n        this._hidingColumnsQueue = [];\r\n        if (this.option(\"allowColumnResizing\") && \"widget\" === this.option(\"columnResizingMode\")) {\r\n            return this._hidingColumnsQueue\r\n        }\r\n        for (i = 0; i < hideableColumns.length; i++) {\r\n            if (isDefined(hideableColumns[i].hidingPriority) && hideableColumns[i].hidingPriority >= 0) {\r\n                columnsHasHidingPriority = true;\r\n                this._hidingColumnsQueue[hideableColumns[i].hidingPriority] = hideableColumns[i]\r\n            }\r\n        }\r\n        if (columnsHasHidingPriority) {\r\n            this._hidingColumnsQueue.reverse()\r\n        } else if (this.option(\"columnHidingEnabled\")) {\r\n            for (i = 0; i < hideableColumns.length; i++) {\r\n                var visibleIndex = this._columnsController.getVisibleIndex(hideableColumns[i].index);\r\n                this._hidingColumnsQueue[visibleIndex] = hideableColumns[i]\r\n            }\r\n        }\r\n        this._hidingColumnsQueue = this._hidingColumnsQueue.filter(Object);\r\n        return this._hidingColumnsQueue\r\n    },\r\n    getHiddenColumns: function() {\r\n        return this._hiddenColumns\r\n    },\r\n    hasHiddenColumns: function() {\r\n        return this._hiddenColumns.length > 0\r\n    },\r\n    getHidingColumnsQueue: function() {\r\n        return this._hidingColumnsQueue\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController.addCommandColumn({\r\n            type: ADAPTIVE_COLUMN_NAME,\r\n            command: ADAPTIVE_COLUMN_NAME,\r\n            visible: true,\r\n            adaptiveHidden: true,\r\n            cssClass: ADAPTIVE_COLUMN_NAME_CLASS,\r\n            alignment: \"center\",\r\n            width: \"auto\",\r\n            cellTemplate: adaptiveCellTemplate,\r\n            fixedPosition: \"right\"\r\n        });\r\n        that._columnsController.columnsChanged.add((function() {\r\n            var isAdaptiveVisible = !!that.updateHidingQueue(that._columnsController.getColumns()).length;\r\n            that._columnsController.columnOption(\"command:adaptive\", \"adaptiveHidden\", !isAdaptiveVisible, true)\r\n        }));\r\n        that._editingController = that.getController(\"editing\");\r\n        that._hidingColumnsQueue = [];\r\n        that._hiddenColumns = [];\r\n        that.createAction(\"onAdaptiveDetailRowPreparing\");\r\n        that.callBase()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"columnHidingEnabled\" === args.name) {\r\n            this._columnsController.columnOption(\"command:adaptive\", \"adaptiveHidden\", !args.value)\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    publicMethods: function() {\r\n        return [\"isAdaptiveDetailRowExpanded\", \"expandAdaptiveDetailRow\", \"collapseAdaptiveDetailRow\"]\r\n    },\r\n    isAdaptiveDetailRowExpanded: function(key) {\r\n        return this._dataController.adaptiveExpandedKey() && equalByValue(this._dataController.adaptiveExpandedKey(), key)\r\n    },\r\n    expandAdaptiveDetailRow: function(key) {\r\n        if (!this.hasAdaptiveDetailRowExpanded()) {\r\n            this.toggleExpandAdaptiveDetailRow(key)\r\n        }\r\n    },\r\n    collapseAdaptiveDetailRow: function() {\r\n        if (this.hasAdaptiveDetailRowExpanded()) {\r\n            this.toggleExpandAdaptiveDetailRow()\r\n        }\r\n    },\r\n    updateCommandAdaptiveAriaLabel: function(key, label) {\r\n        var rowIndex = this._dataController.getRowIndexByKey(key);\r\n        if (-1 === rowIndex) {\r\n            return\r\n        }\r\n        var $row = $(this.component.getRowElement(rowIndex));\r\n        this.setCommandAdaptiveAriaLabel($row, label)\r\n    },\r\n    setCommandAdaptiveAriaLabel: function($row, labelName) {\r\n        var $adaptiveCommand = $row.find(\".dx-command-adaptive\");\r\n        $adaptiveCommand.attr(\"aria-label\", messageLocalization.format(labelName))\r\n    }\r\n});\r\nexport var adaptivityModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnHidingEnabled: false,\r\n            onAdaptiveDetailRowPreparing: null\r\n        }\r\n    },\r\n    controllers: {\r\n        adaptiveColumns: AdaptiveColumnsController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    if (options.rowType === ADAPTIVE_ROW_TYPE && \"detail\" === column.command) {\r\n                        return function(container, options) {\r\n                            that._adaptiveColumnsController.createFormByHiddenColumns($(container), options)\r\n                        }\r\n                    }\r\n                    return that.callBase(options)\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row && row.rowType === ADAPTIVE_ROW_TYPE && row.key === this._dataController.adaptiveExpandedKey()) {\r\n                        $row.addClass(ADAPTIVE_DETAIL_ROW_CLASS)\r\n                    }\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    this.callBase($row, options);\r\n                    var adaptiveColumnsController = this._adaptiveColumnsController;\r\n                    var hidingColumnsQueueLength = adaptiveColumnsController.getHidingColumnsQueue().length;\r\n                    var hiddenColumnsLength = adaptiveColumnsController.getHiddenColumns().length;\r\n                    if (hidingColumnsQueueLength && !hiddenColumnsLength) {\r\n                        getDataCellElements($row).last().addClass(LAST_DATA_CELL_CLASS)\r\n                    }\r\n                    if (\"data\" === options.row.rowType) {\r\n                        adaptiveColumnsController.setCommandAdaptiveAriaLabel($row, EXPAND_ARIA_NAME)\r\n                    }\r\n                },\r\n                _getColumnIndexByElementCore: function($element) {\r\n                    var $itemContent = $element.closest(\".\" + FORM_ITEM_CONTENT_CLASS);\r\n                    if ($itemContent.length && $itemContent.closest(this.component.$element()).length) {\r\n                        var formItem = $itemContent.length ? $itemContent.first().data(\"dx-form-item\") : null;\r\n                        return formItem && formItem.column && this._columnsController.getVisibleIndex(formItem.column.index)\r\n                    } else {\r\n                        return this.callBase($element)\r\n                    }\r\n                },\r\n                _cellPrepared: function($cell, options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (options.row.rowType !== ADAPTIVE_ROW_TYPE && options.column.visibleWidth === HIDDEN_COLUMNS_WIDTH) {\r\n                        $cell.addClass(this.addWidgetPrefix(HIDDEN_COLUMN_CLASS))\r\n                    }\r\n                },\r\n                _getCellElement: function(rowIndex, columnIdentifier) {\r\n                    var item = this._dataController.items()[rowIndex];\r\n                    if (item && item.rowType === ADAPTIVE_ROW_TYPE) {\r\n                        return this._adaptiveColumnsController.getItemContentByColumnIndex(columnIdentifier)\r\n                    } else {\r\n                        return this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                getContextMenuItems: function(options) {\r\n                    if (options.row && \"detailAdaptive\" === options.row.rowType) {\r\n                        var view = this.component.getView(\"columnHeadersView\");\r\n                        var formItem = $(options.targetElement).closest(\".dx-field-item-label\").next().data(\"dx-form-item\");\r\n                        options.column = formItem ? formItem.column : options.column;\r\n                        return view.getContextMenuItems && view.getContextMenuItems(options)\r\n                    }\r\n                    return this.callBase && this.callBase(options)\r\n                },\r\n                isClickableElement: function($target) {\r\n                    var isClickable = this.callBase ? this.callBase($target) : false;\r\n                    return isClickable || !!$target.closest(\".\" + ADAPTIVE_COLUMN_NAME_CLASS).length\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            export: {\r\n                _updateColumnWidth: function(column, width) {\r\n                    this.callBase(column, column.visibleWidth === HIDDEN_COLUMNS_WIDTH ? column.bestFitWidth : width)\r\n                }\r\n            },\r\n            columnsResizer: {\r\n                _pointCreated: function(point, cellsLength, columns) {\r\n                    var result = this.callBase(point, cellsLength, columns);\r\n                    var currentColumn = columns[point.columnIndex] || {};\r\n                    var nextColumnIndex = this._getNextColumnIndex(point.columnIndex);\r\n                    var nextColumn = columns[nextColumnIndex] || {};\r\n                    var hasHiddenColumnsOnly = nextColumnIndex !== point.columnIndex + 1 && nextColumn.command;\r\n                    var hasAdaptiveHiddenWidth = currentColumn.visibleWidth === HIDDEN_COLUMNS_WIDTH || hasHiddenColumnsOnly;\r\n                    return result || hasAdaptiveHiddenWidth\r\n                },\r\n                _getNextColumnIndex: function(currentColumnIndex) {\r\n                    var visibleColumns = this._columnsController.getVisibleColumns();\r\n                    var index = this.callBase(currentColumnIndex);\r\n                    while (visibleColumns[index] && visibleColumns[index].visibleWidth === HIDDEN_COLUMNS_WIDTH) {\r\n                        index++\r\n                    }\r\n                    return index\r\n                }\r\n            },\r\n            draggingHeader: {\r\n                _pointCreated: function(point, columns, location, sourceColumn) {\r\n                    var result = this.callBase(point, columns, location, sourceColumn);\r\n                    var column = columns[point.columnIndex - 1] || {};\r\n                    var hasAdaptiveHiddenWidth = column.visibleWidth === HIDDEN_COLUMNS_WIDTH;\r\n                    return result || hasAdaptiveHiddenWidth\r\n                }\r\n            },\r\n            editing: {\r\n                _isRowEditMode: function() {\r\n                    return this.getEditMode() === EDIT_MODE_ROW\r\n                },\r\n                _getFormEditItemTemplate: function(cellOptions, column) {\r\n                    if (this.getEditMode() !== EDIT_MODE_ROW && \"detailAdaptive\" === cellOptions.rowType) {\r\n                        cellOptions.columnIndex = this._columnsController.getVisibleIndex(column.index);\r\n                        return this.getColumnTemplate(cellOptions)\r\n                    }\r\n                    return this.callBase(cellOptions, column)\r\n                },\r\n                _closeEditItem: function($targetElement) {\r\n                    var $itemContents = $targetElement.closest(\".\" + FORM_ITEM_CONTENT_CLASS);\r\n                    var rowIndex = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1;\r\n                    var formItem = $itemContents.length ? $itemContents.first().data(\"dx-form-item\") : null;\r\n                    var columnIndex = formItem && formItem.column && this._columnsController.getVisibleIndex(formItem.column.index);\r\n                    if (!this.isEditCell(rowIndex, columnIndex)) {\r\n                        this.callBase($targetElement)\r\n                    }\r\n                },\r\n                _beforeUpdateItems: function(rowIndices, rowIndex) {\r\n                    if (!this._adaptiveController.isFormOrPopupEditMode() && this._adaptiveController.hasHiddenColumns()) {\r\n                        var items = this._dataController.items();\r\n                        var item = items[rowIndex];\r\n                        var oldExpandRowIndex = gridCoreUtils.getIndexByKey(this._dataController.adaptiveExpandedKey(), items);\r\n                        this._isForceRowAdaptiveExpand = !this._adaptiveController.hasAdaptiveDetailRowExpanded();\r\n                        if (oldExpandRowIndex >= 0) {\r\n                            rowIndices.push(oldExpandRowIndex + 1)\r\n                        }\r\n                        rowIndices.push(rowIndex + 1);\r\n                        this._dataController.adaptiveExpandedKey(item.key)\r\n                    }\r\n                },\r\n                _afterInsertRow: function(key) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this._adaptiveController.hasHiddenColumns()) {\r\n                        this._adaptiveController.toggleExpandAdaptiveDetailRow(key, this.isRowEditMode());\r\n                        this._isForceRowAdaptiveExpand = true\r\n                    }\r\n                },\r\n                _collapseAdaptiveDetailRow: function() {\r\n                    if (this._isRowEditMode() && this._isForceRowAdaptiveExpand) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow();\r\n                        this._isForceRowAdaptiveExpand = false\r\n                    }\r\n                },\r\n                _cancelEditAdaptiveDetailRow: function() {\r\n                    if (this._adaptiveController.hasHiddenColumns()) {\r\n                        this._collapseAdaptiveDetailRow()\r\n                    }\r\n                },\r\n                _afterSaveEditData: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    var deferred = new Deferred;\r\n                    if (this._isRowEditMode() && this._adaptiveController.hasHiddenColumns()) {\r\n                        when(this.getController(\"validating\").validate(true)).done(isValid => {\r\n                            if (isValid) {\r\n                                this._cancelEditAdaptiveDetailRow()\r\n                            }\r\n                            deferred.resolve()\r\n                        })\r\n                    } else {\r\n                        deferred.resolve()\r\n                    }\r\n                    return deferred.promise()\r\n                },\r\n                _beforeCancelEditData: function() {\r\n                    this.callBase();\r\n                    this._cancelEditAdaptiveDetailRow()\r\n                },\r\n                _getRowIndicesForCascadeUpdating: function(row) {\r\n                    var rowIndices = this.callBase.apply(this, arguments);\r\n                    if (this._adaptiveController.isAdaptiveDetailRowExpanded(row.key)) {\r\n                        rowIndices.push(row.rowType === ADAPTIVE_ROW_TYPE ? row.rowIndex - 1 : row.rowIndex + 1)\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                _beforeCloseEditCellInBatchMode: function(rowIndices) {\r\n                    var expandedKey = this._dataController._adaptiveExpandedKey;\r\n                    if (expandedKey) {\r\n                        var rowIndex = gridCoreUtils.getIndexByKey(expandedKey, this._dataController.items());\r\n                        if (rowIndex > -1) {\r\n                            rowIndices.unshift(rowIndex)\r\n                        }\r\n                    }\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    if (this._adaptiveController.isFormOrPopupEditMode()) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                deleteRow: function(rowIndex) {\r\n                    var rowKey = this._dataController.getKeyByRowIndex(rowIndex);\r\n                    if (this.getEditMode() === EDIT_MODE_BATCH && this._adaptiveController.isAdaptiveDetailRowExpanded(rowKey)) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            },\r\n            resizing: {\r\n                _needBestFit: function() {\r\n                    return this.callBase() || !!this._adaptiveColumnsController.getHidingColumnsQueue().length\r\n                },\r\n                _correctColumnWidths: function(resultWidths, visibleColumns) {\r\n                    var adaptiveController = this._adaptiveColumnsController;\r\n                    var oldHiddenColumns = adaptiveController.getHiddenColumns();\r\n                    var hidingColumnsQueue = adaptiveController.updateHidingQueue(this._columnsController.getColumns());\r\n                    adaptiveController.hideRedundantColumns(resultWidths, visibleColumns, hidingColumnsQueue);\r\n                    var hiddenColumns = adaptiveController.getHiddenColumns();\r\n                    if (adaptiveController.hasAdaptiveDetailRowExpanded()) {\r\n                        if (oldHiddenColumns.length !== hiddenColumns.length) {\r\n                            adaptiveController.updateForm(hiddenColumns)\r\n                        }\r\n                    }!hiddenColumns.length && adaptiveController.collapseAdaptiveDetailRow();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _toggleBestFitMode: function(isBestFit) {\r\n                    isBestFit && this._adaptiveColumnsController._showHiddenColumns();\r\n                    this.callBase(isBestFit)\r\n                },\r\n                _needStretch: function() {\r\n                    var adaptiveColumnsController = this._adaptiveColumnsController;\r\n                    return this.callBase.apply(this, arguments) || adaptiveColumnsController.getHidingColumnsQueue().length || adaptiveColumnsController.hasHiddenColumns()\r\n                },\r\n                init: function() {\r\n                    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n                    this.callBase()\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._updateScrollableTimeoutID)\r\n                }\r\n            },\r\n            data: {\r\n                _processItems: function(items, change) {\r\n                    var changeType = change.changeType;\r\n                    items = this.callBase.apply(this, arguments);\r\n                    if (\"loadingAll\" === changeType || !isDefined(this._adaptiveExpandedKey)) {\r\n                        return items\r\n                    }\r\n                    var expandRowIndex = gridCoreUtils.getIndexByKey(this._adaptiveExpandedKey, items);\r\n                    var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n                    if (expandRowIndex >= 0) {\r\n                        var item = items[expandRowIndex];\r\n                        items.splice(expandRowIndex + 1, 0, {\r\n                            visible: true,\r\n                            rowType: ADAPTIVE_ROW_TYPE,\r\n                            key: item.key,\r\n                            data: item.data,\r\n                            node: item.node,\r\n                            modifiedValues: item.modifiedValues,\r\n                            isNewRow: item.isNewRow,\r\n                            values: item.values\r\n                        })\r\n                    } else if (\"refresh\" === changeType && !(newMode && change.repaintChangesOnly)) {\r\n                        this._adaptiveExpandedKey = void 0\r\n                    }\r\n                    return items\r\n                },\r\n                _getRowIndicesForExpand: function(key) {\r\n                    var rowIndices = this.callBase.apply(this, arguments);\r\n                    if (this.getController(\"adaptiveColumns\").isAdaptiveDetailRowExpanded(key)) {\r\n                        var lastRowIndex = rowIndices[rowIndices.length - 1];\r\n                        rowIndices.push(lastRowIndex + 1)\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                adaptiveExpandedKey: function(value) {\r\n                    if (isDefined(value)) {\r\n                        this._adaptiveExpandedKey = value\r\n                    } else {\r\n                        return this._adaptiveExpandedKey\r\n                    }\r\n                },\r\n                toggleExpandAdaptiveDetailRow: function(key, alwaysExpanded) {\r\n                    var oldExpandLoadedRowIndex = gridCoreUtils.getIndexByKey(this._adaptiveExpandedKey, this._items);\r\n                    var newExpandLoadedRowIndex = gridCoreUtils.getIndexByKey(key, this._items);\r\n                    if (oldExpandLoadedRowIndex >= 0 && oldExpandLoadedRowIndex === newExpandLoadedRowIndex && !alwaysExpanded) {\r\n                        key = void 0;\r\n                        newExpandLoadedRowIndex = -1\r\n                    }\r\n                    var oldKey = this._adaptiveExpandedKey;\r\n                    this._adaptiveExpandedKey = key;\r\n                    if (oldExpandLoadedRowIndex >= 0) {\r\n                        oldExpandLoadedRowIndex++\r\n                    }\r\n                    if (newExpandLoadedRowIndex >= 0) {\r\n                        newExpandLoadedRowIndex++\r\n                    }\r\n                    var rowIndexDelta = this.getRowIndexDelta();\r\n                    this.updateItems({\r\n                        allowInvisibleRowIndices: true,\r\n                        changeType: \"update\",\r\n                        rowIndices: [oldExpandLoadedRowIndex - rowIndexDelta, newExpandLoadedRowIndex - rowIndexDelta]\r\n                    });\r\n                    var adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n                    adaptiveColumnsController.updateCommandAdaptiveAriaLabel(key, COLLAPSE_ARIA_NAME);\r\n                    adaptiveColumnsController.updateCommandAdaptiveAriaLabel(oldKey, EXPAND_ARIA_NAME)\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveExpandedKey = void 0\r\n                }\r\n            },\r\n            editorFactory: {\r\n                _getFocusCellSelector: function() {\r\n                    return this.callBase() + \", .dx-adaptive-detail-row .dx-field-item > .dx-field-item-content\"\r\n                },\r\n                _getTooltipsSelector: function() {\r\n                    return this.callBase() + \", .dx-field-item-content .\" + this.addWidgetPrefix(REVERT_TOOLTIP_CLASS)\r\n                }\r\n            },\r\n            columns: {\r\n                _isColumnVisible: function(column) {\r\n                    return this.callBase(column) && !column.adaptiveHidden\r\n                }\r\n            },\r\n            keyboardNavigation: {\r\n                _isCellValid: function($cell) {\r\n                    return this.callBase.apply(this, arguments) && !$cell.hasClass(this.addWidgetPrefix(HIDDEN_COLUMN_CLASS))\r\n                },\r\n                _processNextCellInMasterDetail: function($nextCell) {\r\n                    this.callBase($nextCell);\r\n                    var isCellOrBatchMode = this._editingController.isCellOrBatchEditMode();\r\n                    if (!this._isInsideEditForm($nextCell) && $nextCell && isCellOrBatchMode) {\r\n                        eventsEngine.on($nextCell, \"focus\", (function focusHandler() {\r\n                            eventsEngine.off($nextCell, \"focus\", focusHandler);\r\n                            eventsEngine.trigger($nextCell, \"dxclick\")\r\n                        }))\r\n                    }\r\n                },\r\n                _handleTabKeyOnMasterDetailCell: function(eventTarget, direction) {\r\n                    var result = this.callBase(eventTarget, direction);\r\n                    var $currentCell = this._getFocusedCell();\r\n                    var $row = $currentCell && $currentCell.parent();\r\n                    if (!result && $row && $row.length) {\r\n                        var $dataCells = getDataCellElements($row);\r\n                        var $targetCell = \"next\" === direction ? $dataCells.last() : $dataCells.first();\r\n                        var rowIndex = $row.get(0).rowIndex;\r\n                        var adaptiveController = this._adaptiveController;\r\n                        var key = this._dataController.getKeyByRowIndex(\"next\" === direction ? rowIndex : rowIndex - 1);\r\n                        var isCellElementsEquals = $currentCell && $targetCell && $currentCell.get(0) === $targetCell.get(0);\r\n                        return adaptiveController.isAdaptiveDetailRowExpanded(key) && isCellElementsEquals\r\n                    }\r\n                    return result\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nexport function foreachColumnInfo(info, callback, rowIndex, offsets, columnCount, lastProcessedIndexes) {\r\n    rowIndex = rowIndex || 0;\r\n    offsets = offsets || [];\r\n    lastProcessedIndexes = lastProcessedIndexes || [];\r\n    offsets[rowIndex] = offsets[rowIndex] || 0;\r\n    var row = info[rowIndex];\r\n    var startIndex = lastProcessedIndexes[rowIndex] + 1 || 0;\r\n    var processedColumnCount = 0;\r\n    var colIndex;\r\n    if (!row) {\r\n        return\r\n    }\r\n    for (colIndex = startIndex; colIndex < row.length; colIndex++) {\r\n        var cell = row[colIndex];\r\n        var visibleIndex = colIndex + offsets[rowIndex];\r\n        var colspan = cell.colspan || 1;\r\n        foreachColumnInfo(info, callback, rowIndex + (cell.rowspan || 1), offsets, colspan, lastProcessedIndexes);\r\n        offsets[rowIndex] += colspan - 1;\r\n        processedColumnCount += colspan;\r\n        if (cell.rowspan) {\r\n            for (var i = rowIndex + 1; i < rowIndex + cell.rowspan; i++) {\r\n                offsets[i] = offsets[i] || 0;\r\n                offsets[i] += cell.colspan || 1\r\n            }\r\n        }\r\n        if (false === callback(cell, visibleIndex, rowIndex, colIndex)) {\r\n            break\r\n        }\r\n        if (void 0 !== columnCount && processedColumnCount >= columnCount) {\r\n            break\r\n        }\r\n    }\r\n    lastProcessedIndexes[rowIndex] = colIndex\r\n}\r\nexport function createColumnsInfo(info, startIndex, endIndex) {\r\n    var newInfo = [];\r\n    foreachColumnInfo(info, (function(columnInfo, visibleIndex, rowIndex) {\r\n        var cell = columnInfo;\r\n        var colspan;\r\n        var cellColspan = cell.colspan || 1;\r\n        var isVisible = visibleIndex + cellColspan - 1 >= startIndex && visibleIndex < endIndex;\r\n        newInfo[rowIndex] = newInfo[rowIndex] || [];\r\n        if (isVisible) {\r\n            if (visibleIndex < startIndex) {\r\n                colspan = cellColspan - (startIndex - visibleIndex);\r\n                visibleIndex = startIndex\r\n            } else {\r\n                colspan = cellColspan\r\n            }\r\n            if (visibleIndex + colspan > endIndex) {\r\n                colspan = endIndex - visibleIndex\r\n            }\r\n            if (colspan !== cellColspan) {\r\n                cell = extend({}, cell, {\r\n                    colspan: colspan\r\n                })\r\n            }\r\n            newInfo[rowIndex].push(cell)\r\n        } else if (visibleIndex > endIndex) {\r\n            return false\r\n        }\r\n    }));\r\n    for (var i = 0; i < newInfo.length; i++) {\r\n        newInfo[i] = newInfo[i] || []\r\n    }\r\n    return newInfo\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.adaptivity.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    adaptivityModule\r\n} from \"../grid_core/ui.grid_core.adaptivity\";\r\ngridCore.registerModule(\"adaptivity\", adaptivityModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    createColumnsInfo\r\n} from \"./ui.grid_core.virtual_columns_core\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar DEFAULT_COLUMN_WIDTH = 50;\r\nvar VirtualScrollingRowsViewExtender = {\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._columnsController.resize()\r\n    },\r\n    _handleScroll: function(e) {\r\n        var that = this;\r\n        var scrollable = this.getScrollable();\r\n        var left = e.scrollOffset.left;\r\n        that.callBase.apply(that, arguments);\r\n        if (that.option(\"rtlEnabled\") && scrollable) {\r\n            left = getWidth(scrollable.$content()) - getWidth(scrollable.$element()) - left\r\n        }\r\n        that._columnsController.setScrollPosition(left)\r\n    }\r\n};\r\nvar HeaderViewExtender = {\r\n    _renderCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (this._columnsController.isVirtualMode()) {\r\n            this._updateScrollLeftPosition()\r\n        }\r\n    }\r\n};\r\nvar ColumnsControllerExtender = function() {\r\n    var getWidths = function(columns) {\r\n        return columns.map(column => column.visibleWidth || parseFloat(column.width) || DEFAULT_COLUMN_WIDTH)\r\n    };\r\n    var members = {\r\n        init: function() {\r\n            this.callBase();\r\n            this._beginPageIndex = 0;\r\n            this._endPageIndex = 0;\r\n            this._position = 0;\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        resetColumnsCache: function() {\r\n            this.callBase();\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        getBeginPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.floor(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return 0\r\n        },\r\n        getTotalWidth: function() {\r\n            var width = this.option(\"width\");\r\n            if (\"number\" === typeof width) {\r\n                return width\r\n            }\r\n            return this.getController(\"resizing\")._lastWidth || getOuterWidth(this.component.$element())\r\n        },\r\n        getEndPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            position += this.getTotalWidth();\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.ceil(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return Math.ceil(widths.length / this.getColumnPageSize())\r\n        },\r\n        getColumnPageSize: function() {\r\n            return this.option(\"scrolling.columnPageSize\")\r\n        },\r\n        _fireColumnsChanged: function() {\r\n            var date = new Date;\r\n            this.columnsChanged.fire({\r\n                optionNames: {\r\n                    all: true,\r\n                    length: 1\r\n                },\r\n                changeTypes: {\r\n                    columns: true,\r\n                    virtualColumnsScrolling: true,\r\n                    length: 2\r\n                }\r\n            });\r\n            this._renderTime = new Date - date\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderingThreshold = this.option(\"scrolling.columnRenderingThreshold\");\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync) && this._renderTime > renderingThreshold || renderAsync) {\r\n                scrollingTimeout = this.option(\"scrolling.timeout\")\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setScrollPosition: function(position) {\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            if (scrollingTimeout > 0) {\r\n                clearTimeout(this._changedTimeout);\r\n                this._changedTimeout = setTimeout(() => {\r\n                    this._setScrollPositionCore(position)\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setScrollPositionCore(position)\r\n            }\r\n        },\r\n        isVirtualMode: function() {\r\n            return hasWindow() && \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n        },\r\n        resize: function() {\r\n            this._setScrollPositionCore(this._position)\r\n        },\r\n        _setScrollPositionCore: function(position) {\r\n            if (this.isVirtualMode()) {\r\n                var beginPageIndex = this.getBeginPageIndex(position);\r\n                var endPageIndex = this.getEndPageIndex(position);\r\n                var needColumnsChanged = position < this._position ? this._beginPageIndex > beginPageIndex : this._endPageIndex < endPageIndex;\r\n                this._position = position;\r\n                if (needColumnsChanged) {\r\n                    this._beginPageIndex = beginPageIndex;\r\n                    this._endPageIndex = endPageIndex;\r\n                    this._fireColumnsChanged()\r\n                }\r\n            }\r\n        },\r\n        getFixedColumns: function(rowIndex, isBase) {\r\n            var fixedColumns = this.callBase(rowIndex);\r\n            if (this.isVirtualMode() && !isBase && fixedColumns.length) {\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                fixedColumns[transparentColumnIndex].colspan = this.getVisibleColumns().length - this.callBase().length + 1;\r\n                return fixedColumns\r\n            }\r\n            return fixedColumns\r\n        },\r\n        getVisibleColumns: function(rowIndex, isBase) {\r\n            if (isBase || !this.isVirtualMode()) {\r\n                return this.callBase(rowIndex)\r\n            }\r\n            if (!this._beginPageIndex && !this._endPageIndex) {\r\n                this._beginPageIndex = this.getBeginPageIndex(this._position);\r\n                this._endPageIndex = this.getEndPageIndex(this._position)\r\n            }\r\n            var beginPageIndex = this._beginPageIndex;\r\n            var endPageIndex = this._endPageIndex;\r\n            var visibleColumnsHash = rowIndex + \"-\" + beginPageIndex + \"-\" + endPageIndex;\r\n            if (this._virtualVisibleColumns[visibleColumnsHash]) {\r\n                return this._virtualVisibleColumns[visibleColumnsHash]\r\n            }\r\n            var visibleColumns = this.callBase();\r\n            var rowCount = this.getRowCount();\r\n            var pageSize = this.getColumnPageSize();\r\n            var startIndex = beginPageIndex * pageSize;\r\n            var endIndex = endPageIndex * pageSize;\r\n            var fixedColumns = this.getFixedColumns(void 0, true);\r\n            var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n            var beginFixedColumnCount = fixedColumns.length ? transparentColumnIndex : 0;\r\n            var beginFixedColumns = visibleColumns.slice(0, beginFixedColumnCount);\r\n            var beginColumns = visibleColumns.slice(beginFixedColumnCount, startIndex);\r\n            var beginWidth = getWidths(beginColumns).reduce((a, b) => a + b, 0);\r\n            if (!beginWidth) {\r\n                startIndex = 0\r\n            }\r\n            var endFixedColumnCount = fixedColumns.length ? fixedColumns.length - transparentColumnIndex - 1 : 0;\r\n            var endFixedColumns = visibleColumns.slice(visibleColumns.length - endFixedColumnCount);\r\n            var endColumns = visibleColumns.slice(endIndex, visibleColumns.length - endFixedColumnCount);\r\n            var endWidth = getWidths(endColumns).reduce((a, b) => a + b, 0);\r\n            if (!endWidth) {\r\n                endIndex = visibleColumns.length\r\n            }\r\n            if (rowCount > 1 && \"number\" === typeof rowIndex) {\r\n                var columnsInfo = [];\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    columnsInfo.push(this.callBase(i))\r\n                }\r\n                beginFixedColumns = createColumnsInfo(columnsInfo, 0, beginFixedColumns.length)[rowIndex] || [];\r\n                endFixedColumns = createColumnsInfo(columnsInfo, visibleColumns.length - endFixedColumns.length, visibleColumns.length)[rowIndex] || [];\r\n                visibleColumns = createColumnsInfo(columnsInfo, startIndex, endIndex)[rowIndex] || []\r\n            } else {\r\n                visibleColumns = visibleColumns.slice(startIndex, endIndex)\r\n            }\r\n            if (beginWidth) {\r\n                visibleColumns.unshift({\r\n                    command: \"virtual\",\r\n                    width: beginWidth\r\n                });\r\n                visibleColumns = beginFixedColumns.concat(visibleColumns)\r\n            }\r\n            if (endWidth) {\r\n                visibleColumns.push({\r\n                    command: \"virtual\",\r\n                    width: endWidth\r\n                });\r\n                visibleColumns = visibleColumns.concat(endFixedColumns)\r\n            }\r\n            this._virtualVisibleColumns[visibleColumnsHash] = visibleColumns;\r\n            return visibleColumns\r\n        },\r\n        getColumnIndexOffset: function() {\r\n            var offset = 0;\r\n            if (this._beginPageIndex > 0) {\r\n                var fixedColumns = this.getFixedColumns();\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                var leftFixedColumnCount = transparentColumnIndex >= 0 ? transparentColumnIndex : 0;\r\n                offset = this._beginPageIndex * this.getColumnPageSize() - leftFixedColumnCount - 1\r\n            }\r\n            return offset > 0 ? offset : 0\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._changedTimeout);\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    };\r\n    return members\r\n}();\r\nexport var virtualColumnsModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                columnRenderingMode: \"standard\",\r\n                columnPageSize: 5,\r\n                columnRenderingThreshold: 300\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: ColumnsControllerExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: HeaderViewExtender,\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.virtual_columns.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    virtualColumnsModule\r\n} from \"../grid_core/ui.grid_core.virtual_columns\";\r\ngridCore.registerModule(\"virtualColumns\", virtualColumnsModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.export_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nexport default {\r\n    _getEmptyCell: function() {\r\n        return {\r\n            text: \"\",\r\n            value: void 0,\r\n            colspan: 1,\r\n            rowspan: 1\r\n        }\r\n    },\r\n    _defaultSetter: function(value) {\r\n        return !value ? 1 : value\r\n    },\r\n    _cloneItem: function(item) {\r\n        return extend({}, item, this._getEmptyCell())\r\n    },\r\n    _prepareItems: function(items) {\r\n        var that = this;\r\n        var resultItems = [];\r\n        var cols = (items[0] || []).reduce((sum, item) => sum + that._defaultSetter(item.colspan), 0);\r\n        var getItem = function(items) {\r\n            var rowIndex = 0;\r\n            var cellIndex = 0;\r\n            return function() {\r\n                var row = items[rowIndex] || [];\r\n                var item = row[cellIndex++];\r\n                if (cellIndex >= row.length) {\r\n                    rowIndex++;\r\n                    cellIndex = 0\r\n                }\r\n                if (item) {\r\n                    item.colspan = that._defaultSetter(item.colspan);\r\n                    item.rowspan = that._defaultSetter(item.rowspan)\r\n                }\r\n                return item\r\n            }\r\n        }(items);\r\n\r\n        function addItem(rowIndex, cellIndex, item) {\r\n            var row = resultItems[rowIndex] = resultItems[rowIndex] || [];\r\n            row[cellIndex] = item;\r\n            if (item.colspan > 1 || item.rowspan > 1) {\r\n                var clone = that._cloneItem(item);\r\n                for (var c = 1; c < item.colspan; c++) {\r\n                    addItem(rowIndex, cellIndex + c, clone)\r\n                }\r\n                for (var r = 1; r < item.rowspan; r++) {\r\n                    for (var _c = 0; _c < item.colspan; _c++) {\r\n                        addItem(rowIndex + r, cellIndex + _c, clone)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var item = getItem();\r\n        var rowIndex = 0;\r\n        while (item) {\r\n            for (var cellIndex = 0; cellIndex < cols; cellIndex++) {\r\n                if (!item) {\r\n                    break\r\n                }\r\n                if (resultItems[rowIndex] && resultItems[rowIndex][cellIndex]) {\r\n                    continue\r\n                }\r\n                addItem(rowIndex, cellIndex, item);\r\n                cellIndex += item.colspan - 1;\r\n                item = getItem()\r\n            }\r\n            rowIndex++\r\n        }\r\n        return resultItems\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/button_group.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport Button from \"./button\";\r\nimport CollectionWidget from \"./collection/ui.collection_widget.edit\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../core/utils/type\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../core/templates/bindable_template\";\r\nvar BUTTON_GROUP_CLASS = \"dx-buttongroup\";\r\nvar BUTTON_GROUP_WRAPPER_CLASS = BUTTON_GROUP_CLASS + \"-wrapper\";\r\nvar BUTTON_GROUP_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-item\";\r\nvar BUTTON_GROUP_FIRST_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-first-item\";\r\nvar BUTTON_GROUP_LAST_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-last-item\";\r\nvar BUTTON_GROUP_ITEM_HAS_WIDTH = BUTTON_GROUP_ITEM_CLASS + \"-has-width\";\r\nvar SHAPE_STANDARD_CLASS = \"dx-shape-standard\";\r\nvar ButtonCollection = CollectionWidget.inherit({\r\n    _initTemplates() {\r\n        this.callBase();\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new BindableTemplate(($container, data, model) => {\r\n                this._prepareItemStyles($container);\r\n                var template = this.option(\"buttonTemplate\");\r\n                this._createComponent($container, Button, extend({}, model, data, this._getBasicButtonOptions(), {\r\n                    _templateData: this._hasCustomTemplate(template) ? model : {},\r\n                    template: model.template || template\r\n                }))\r\n            }, [\"text\", \"type\", \"icon\", \"disabled\", \"visible\", \"hint\"], this.option(\"integrationOptions.watchMethod\"))\r\n        })\r\n    },\r\n    _getBasicButtonOptions() {\r\n        return {\r\n            focusStateEnabled: false,\r\n            onClick: null,\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\")\r\n        }\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            itemTemplateProperty: null\r\n        })\r\n    },\r\n    _hasCustomTemplate(template) {\r\n        return isFunction(template) || this.option(\"integrationOptions.templates\")[template]\r\n    },\r\n    _prepareItemStyles($item) {\r\n        var itemIndex = $item.data(\"dxItemIndex\");\r\n        0 === itemIndex && $item.addClass(BUTTON_GROUP_FIRST_ITEM_CLASS);\r\n        var items = this.option(\"items\");\r\n        items && itemIndex === items.length - 1 && $item.addClass(BUTTON_GROUP_LAST_ITEM_CLASS);\r\n        $item.addClass(SHAPE_STANDARD_CLASS)\r\n    },\r\n    _renderItemContent(args) {\r\n        args.container = $(args.container).parent();\r\n        return this.callBase(args)\r\n    },\r\n    _renderItemContentByNode: function(args, $node) {\r\n        args.container = $(args.container.children().first());\r\n        return this.callBase(args, $node)\r\n    },\r\n    _focusTarget() {\r\n        return this.$element().parent()\r\n    },\r\n    _keyboardEventBindingTarget() {\r\n        return this._focusTarget()\r\n    },\r\n    _refreshContent() {\r\n        this._prepareContent();\r\n        this._renderContent()\r\n    },\r\n    _itemClass: () => BUTTON_GROUP_ITEM_CLASS,\r\n    _itemSelectHandler: function(e) {\r\n        if (\"single\" === this.option(\"selectionMode\") && this.isItemSelected(e.currentTarget)) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar ButtonGroup = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            selectionMode: \"single\",\r\n            selectedItems: [],\r\n            selectedItemKeys: [],\r\n            stylingMode: \"contained\",\r\n            keyExpr: \"text\",\r\n            items: [],\r\n            buttonTemplate: \"content\",\r\n            onSelectionChanged: null,\r\n            onItemClick: null\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._createItemClickAction()\r\n    },\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _initMarkup() {\r\n        this.setAria(\"role\", \"group\");\r\n        this.$element().addClass(BUTTON_GROUP_CLASS);\r\n        this._renderButtons();\r\n        this._syncSelectionOptions();\r\n        this.callBase()\r\n    },\r\n    _fireSelectionChangeEvent: function(addedItems, removedItems) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: addedItems,\r\n            removedItems: removedItems\r\n        })\r\n    },\r\n    _renderButtons() {\r\n        var $buttons = $(\"<div>\").addClass(BUTTON_GROUP_WRAPPER_CLASS).appendTo(this.$element());\r\n        var selectedItems = this.option(\"selectedItems\");\r\n        var options = {\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            items: this.option(\"items\"),\r\n            keyExpr: this.option(\"keyExpr\"),\r\n            buttonTemplate: this.option(\"buttonTemplate\"),\r\n            scrollingEnabled: false,\r\n            selectedItemKeys: this.option(\"selectedItemKeys\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            accessKey: this.option(\"accessKey\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            noDataText: \"\",\r\n            selectionRequired: false,\r\n            onItemRendered: e => {\r\n                var width = this.option(\"width\");\r\n                isDefined(width) && $(e.itemElement).addClass(BUTTON_GROUP_ITEM_HAS_WIDTH)\r\n            },\r\n            onSelectionChanged: e => {\r\n                this._syncSelectionOptions();\r\n                this._fireSelectionChangeEvent(e.addedItems, e.removedItems)\r\n            },\r\n            onItemClick: e => {\r\n                this._itemClickAction(e)\r\n            }\r\n        };\r\n        if (isDefined(selectedItems) && selectedItems.length) {\r\n            options.selectedItems = selectedItems\r\n        }\r\n        this._buttonsCollection = this._createComponent($buttons, ButtonCollection, options)\r\n    },\r\n    _syncSelectionOptions() {\r\n        this._setOptionWithoutOptionChange(\"selectedItems\", this._buttonsCollection.option(\"selectedItems\"));\r\n        this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._buttonsCollection.option(\"selectedItemKeys\"))\r\n    },\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"stylingMode\":\r\n            case \"selectionMode\":\r\n            case \"keyExpr\":\r\n            case \"buttonTemplate\":\r\n            case \"items\":\r\n            case \"activeStateEnabled\":\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n            case \"tabIndex\":\r\n                this._invalidate();\r\n                break;\r\n            case \"selectedItemKeys\":\r\n            case \"selectedItems\":\r\n                this._buttonsCollection.option(args.name, args.value);\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._buttonsCollection.itemElements().toggleClass(BUTTON_GROUP_ITEM_HAS_WIDTH, !!args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxButtonGroup\", ButtonGroup);\r\nexport default ButtonGroup;\r\n","/**\r\n * DevExtreme (esm/ui/drop_down_button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"../core/templates/function_template\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport ButtonGroup from \"./button_group\";\r\nimport Popup from \"./popup\";\r\nimport List from \"./list_light\";\r\nimport {\r\n    compileGetter\r\n} from \"../core/utils/data\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    getImageContainer\r\n} from \"../core/utils/icon\";\r\nimport DataHelperMixin from \"../data_helper\";\r\nimport {\r\n    DataSource\r\n} from \"../data/data_source/data_source\";\r\nimport ArrayStore from \"../data/array_store\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isPlainObject,\r\n    isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    ensureDefined,\r\n    noop\r\n} from \"../core/utils/common\";\r\nimport Guid from \"../core/guid\";\r\nimport {\r\n    getElementWidth,\r\n    getSizeValue\r\n} from \"./drop_down_editor/utils\";\r\nimport messageLocalization from \"../localization/message\";\r\nvar DROP_DOWN_BUTTON_CLASS = \"dx-dropdownbutton\";\r\nvar DROP_DOWN_BUTTON_CONTENT = \"dx-dropdownbutton-content\";\r\nvar DROP_DOWN_BUTTON_ACTION_CLASS = \"dx-dropdownbutton-action\";\r\nvar DROP_DOWN_BUTTON_TOGGLE_CLASS = \"dx-dropdownbutton-toggle\";\r\nvar DROP_DOWN_BUTTON_HAS_ARROW_CLASS = \"dx-dropdownbutton-has-arrow\";\r\nvar DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS = \"dx-dropdownbutton-popup-wrapper\";\r\nvar DROP_DOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar DX_BUTTON_TEXT_CLASS = \"dx-button-text\";\r\nvar DX_ICON_RIGHT_CLASS = \"dx-icon-right\";\r\nvar DropDownButton = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            itemTemplate: \"item\",\r\n            keyExpr: \"this\",\r\n            displayExpr: void 0,\r\n            selectedItem: null,\r\n            selectedItemKey: null,\r\n            stylingMode: \"outlined\",\r\n            deferRendering: true,\r\n            noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\r\n            useSelectMode: false,\r\n            splitButton: false,\r\n            showArrowIcon: true,\r\n            text: \"\",\r\n            icon: void 0,\r\n            onButtonClick: null,\r\n            onSelectionChanged: null,\r\n            onItemClick: null,\r\n            opened: false,\r\n            items: null,\r\n            dataSource: null,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            dropDownOptions: {},\r\n            dropDownContentTemplate: \"content\",\r\n            wrapItemText: false,\r\n            useItemTextAsTitle: true,\r\n            grouped: false,\r\n            groupTemplate: \"group\",\r\n            buttonGroupOptions: {}\r\n        })\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._createItemClickAction();\r\n        this._createActionClickAction();\r\n        this._createSelectionChangedAction();\r\n        this._initDataSource();\r\n        this._compileKeyGetter();\r\n        this._compileDisplayGetter();\r\n        this._itemsToDataSource(this.option(\"items\"));\r\n        this._options.cache(\"buttonGroupOptions\", this.option(\"buttonGroupOptions\"));\r\n        this._options.cache(\"dropDownOptions\", this.option(\"dropDownOptions\"))\r\n    },\r\n    _initTemplates() {\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new FunctionTemplate(options => {\r\n                var $popupContent = $(options.container);\r\n                var $listContainer = $(\"<div>\").appendTo($popupContent);\r\n                this._list = this._createComponent($listContainer, List, this._listOptions());\r\n                this._list.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"tab\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"leftArrow\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"rightArrow\", this._escHandler.bind(this))\r\n            })\r\n        });\r\n        this.callBase()\r\n    },\r\n    _itemsToDataSource: function(value) {\r\n        if (!this._dataSource) {\r\n            this._dataSource = new DataSource({\r\n                store: new ArrayStore({\r\n                    key: this._getKey(),\r\n                    data: value\r\n                }),\r\n                pageSize: 0\r\n            })\r\n        }\r\n    },\r\n    _getKey: function() {\r\n        var _this$_dataSource;\r\n        var keyExpr = this.option(\"keyExpr\");\r\n        var storeKey = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.key();\r\n        return isDefined(storeKey) && (!isDefined(keyExpr) || \"this\" === keyExpr) ? storeKey : keyExpr\r\n    },\r\n    _compileKeyGetter() {\r\n        this._keyGetter = compileGetter(this._getKey())\r\n    },\r\n    _compileDisplayGetter() {\r\n        this._displayGetter = compileGetter(this.option(\"displayExpr\"))\r\n    },\r\n    _initMarkup() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_BUTTON_CLASS);\r\n        this._renderButtonGroup();\r\n        this._updateArrowClass();\r\n        if (isDefined(this.option(\"selectedItemKey\"))) {\r\n            this._loadSelectedItem().done(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _renderFocusTarget: noop,\r\n    _render() {\r\n        if (!this.option(\"deferRendering\") || this.option(\"opened\")) {\r\n            this._renderPopup()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl() {\r\n        if (this._popup) {\r\n            this._renderPopupContent()\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _loadSelectedItem() {\r\n        var _this$_loadSingleDefe;\r\n        null === (_this$_loadSingleDefe = this._loadSingleDeferred) || void 0 === _this$_loadSingleDefe ? void 0 : _this$_loadSingleDefe.reject();\r\n        var d = new Deferred;\r\n        if (this._list && void 0 !== this._lastSelectedItemData) {\r\n            var cachedResult = this.option(\"useSelectMode\") ? this._list.option(\"selectedItem\") : this._lastSelectedItemData;\r\n            return d.resolve(cachedResult)\r\n        }\r\n        this._lastSelectedItemData = void 0;\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._loadSingle(this._getKey(), selectedItemKey).done(d.resolve).fail(() => {\r\n            d.resolve(null)\r\n        });\r\n        this._loadSingleDeferred = d;\r\n        return d.promise()\r\n    },\r\n    _createActionClickAction() {\r\n        this._actionClickAction = this._createActionByOption(\"onButtonClick\")\r\n    },\r\n    _createSelectionChangedAction() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    },\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _fireSelectionChangedAction(_ref) {\r\n        var {\r\n            previousValue: previousValue,\r\n            value: value\r\n        } = _ref;\r\n        this._selectionChangedAction({\r\n            item: value,\r\n            previousItem: previousValue\r\n        })\r\n    },\r\n    _fireItemClickAction(_ref2) {\r\n        var {\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: itemData\r\n        } = _ref2;\r\n        return this._itemClickAction({\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: this._actionItem || itemData\r\n        })\r\n    },\r\n    _actionButtonConfig() {\r\n        return {\r\n            text: this.option(\"text\"),\r\n            icon: this.option(\"icon\"),\r\n            elementAttr: {\r\n                class: DROP_DOWN_BUTTON_ACTION_CLASS\r\n            }\r\n        }\r\n    },\r\n    _getButtonGroupItems() {\r\n        var items = [];\r\n        items.push(this._actionButtonConfig());\r\n        if (this.option(\"splitButton\")) {\r\n            items.push({\r\n                icon: \"spindown\",\r\n                elementAttr: {\r\n                    class: DROP_DOWN_BUTTON_TOGGLE_CLASS\r\n                }\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    _buttonGroupItemClick(_ref3) {\r\n        var {\r\n            event: event,\r\n            itemData: itemData\r\n        } = _ref3;\r\n        var isActionButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_ACTION_CLASS;\r\n        var isToggleButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_TOGGLE_CLASS;\r\n        if (isToggleButton) {\r\n            this.toggle()\r\n        } else if (isActionButton) {\r\n            this._actionClickAction({\r\n                event: event,\r\n                selectedItem: this.option(\"selectedItem\")\r\n            });\r\n            if (!this.option(\"splitButton\")) {\r\n                this.toggle()\r\n            }\r\n        }\r\n    },\r\n    _buttonGroupOptions() {\r\n        var buttonTemplate = this.option(\"splitButton\") || !this.option(\"showArrowIcon\") ? \"content\" : (_ref4, buttonContent) => {\r\n            var {\r\n                text: text,\r\n                icon: icon\r\n            } = _ref4;\r\n            var $firstIcon = getImageContainer(icon);\r\n            var $textContainer = text ? $(\"<span>\").text(text).addClass(DX_BUTTON_TEXT_CLASS) : void 0;\r\n            var $secondIcon = getImageContainer(\"spindown\").addClass(DX_ICON_RIGHT_CLASS);\r\n            $(buttonContent).append($firstIcon, $textContainer, $secondIcon)\r\n        };\r\n        return extend({\r\n            items: this._getButtonGroupItems(),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            onItemClick: this._buttonGroupItemClick.bind(this),\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            selectionMode: \"none\",\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            onKeyboardHandled: e => this._keyboardHandler(e),\r\n            buttonTemplate: buttonTemplate\r\n        }, this._options.cache(\"buttonGroupOptions\"))\r\n    },\r\n    _renderPopupContent() {\r\n        var $content = this._popup.$content();\r\n        var template = this._getTemplateByOption(\"dropDownContentTemplate\");\r\n        $content.empty();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, $content);\r\n        return template.render({\r\n            container: getPublicElement($content),\r\n            model: this.option(\"items\") || this._dataSource\r\n        })\r\n    },\r\n    _popupOptions() {\r\n        var horizontalAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        return extend({\r\n            dragEnabled: false,\r\n            focusStateEnabled: false,\r\n            deferRendering: this.option(\"deferRendering\"),\r\n            closeOnOutsideClick: e => {\r\n                var $element = this.$element();\r\n                var $buttonClicked = $(e.target).closest(\".\".concat(DROP_DOWN_BUTTON_CLASS));\r\n                return !$buttonClicked.is($element)\r\n            },\r\n            showTitle: false,\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            _ignoreFunctionValueDeprecation: true,\r\n            width: () => getElementWidth(this.$element()),\r\n            height: \"auto\",\r\n            shading: false,\r\n            position: {\r\n                of: this.$element(),\r\n                collision: \"flipfit\",\r\n                my: horizontalAlignment + \" top\",\r\n                at: horizontalAlignment + \" bottom\"\r\n            },\r\n            wrapperAttr: {\r\n                class: DROP_DOWN_EDITOR_OVERLAY_CLASS\r\n            }\r\n        }, this._options.cache(\"dropDownOptions\"), {\r\n            visible: this.option(\"opened\")\r\n        })\r\n    },\r\n    _listOptions() {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        var useSelectMode = this.option(\"useSelectMode\");\r\n        return {\r\n            selectionMode: useSelectMode ? \"single\" : \"none\",\r\n            wrapItemText: this.option(\"wrapItemText\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            useItemTextAsTitle: this.option(\"useItemTextAsTitle\"),\r\n            onContentReady: () => this._fireContentReadyAction(),\r\n            selectedItemKeys: isDefined(selectedItemKey) && useSelectMode ? [selectedItemKey] : [],\r\n            grouped: this.option(\"grouped\"),\r\n            groupTemplate: this.option(\"groupTemplate\"),\r\n            keyExpr: this._getKey(),\r\n            noDataText: this.option(\"noDataText\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            items: this.option(\"items\"),\r\n            dataSource: this._dataSource,\r\n            onItemClick: e => {\r\n                if (!this.option(\"useSelectMode\")) {\r\n                    this._lastSelectedItemData = e.itemData\r\n                }\r\n                this.option(\"selectedItemKey\", this._keyGetter(e.itemData));\r\n                var actionResult = this._fireItemClickAction(e);\r\n                if (false !== actionResult) {\r\n                    this.toggle(false);\r\n                    this._buttonGroup.focus()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _upDownKeyHandler() {\r\n        if (this._popup && this._popup.option(\"visible\") && this._list) {\r\n            this._list.focus()\r\n        } else {\r\n            this.open()\r\n        }\r\n        return true\r\n    },\r\n    _escHandler() {\r\n        this.close();\r\n        this._buttonGroup.focus();\r\n        return true\r\n    },\r\n    _tabHandler() {\r\n        this.close();\r\n        return true\r\n    },\r\n    _renderPopup() {\r\n        var $popup = $(\"<div>\");\r\n        this.$element().append($popup);\r\n        this._popup = this._createComponent($popup, Popup, this._popupOptions());\r\n        this._popup.$content().addClass(DROP_DOWN_BUTTON_CONTENT);\r\n        this._popup.$wrapper().addClass(DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS);\r\n        this._popup.on(\"hiding\", this._popupHidingHandler.bind(this));\r\n        this._popup.on(\"showing\", this._popupShowingHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._popup, \"dropDownOptions\")\r\n    },\r\n    _popupHidingHandler() {\r\n        this.option(\"opened\", false);\r\n        this._setAriaExpanded(false)\r\n    },\r\n    _popupOptionChanged: function(args) {\r\n        var options = Widget.getOptionsFromContainer(args);\r\n        this._setPopupOption(options);\r\n        var optionsKeys = Object.keys(options);\r\n        if (-1 !== optionsKeys.indexOf(\"width\") || -1 !== optionsKeys.indexOf(\"height\")) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var popupWidth = getSizeValue(this.option(\"dropDownOptions.width\"));\r\n        if (void 0 === popupWidth) {\r\n            this._setPopupOption(\"width\", () => getElementWidth(this.$element()))\r\n        }\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _popupShowingHandler() {\r\n        this.option(\"opened\", true);\r\n        this._setAriaExpanded(true)\r\n    },\r\n    _setAriaExpanded(value) {\r\n        this._ariaExpandedElements.forEach(ariaElement => {\r\n            this.setAria({\r\n                expanded: value,\r\n                owns: value ? this._popupContentId : void 0\r\n            }, $(ariaElement))\r\n        })\r\n    },\r\n    _renderButtonGroup() {\r\n        var $buttonGroup = this._buttonGroup && this._buttonGroup.$element() || $(\"<div>\");\r\n        if (!this._buttonGroup) {\r\n            this.$element().append($buttonGroup)\r\n        }\r\n        this._buttonGroup = this._createComponent($buttonGroup, ButtonGroup, this._buttonGroupOptions());\r\n        var buttonElements = this._buttonGroup.$element().find(\".dx-button\").toArray();\r\n        this._ariaExpandedElements = [...buttonElements, this.$element()];\r\n        this._buttonGroup.registerKeyHandler(\"downArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"tab\", this._tabHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"upArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._buttonGroup, \"buttonGroupOptions\");\r\n        this._setAriaExpanded(this.option(\"opened\"))\r\n    },\r\n    _updateArrowClass() {\r\n        var hasArrow = this.option(\"splitButton\") || this.option(\"showArrowIcon\");\r\n        this.$element().toggleClass(DROP_DOWN_BUTTON_HAS_ARROW_CLASS, hasArrow)\r\n    },\r\n    toggle(visible) {\r\n        if (!this._popup) {\r\n            this._renderPopup();\r\n            this._renderContent()\r\n        }\r\n        return this._popup.toggle(visible)\r\n    },\r\n    open() {\r\n        return this.toggle(true)\r\n    },\r\n    close() {\r\n        return this.toggle(false)\r\n    },\r\n    _setListOption(name, value) {\r\n        this._list && this._list.option(name, value)\r\n    },\r\n    _getDisplayValue(item) {\r\n        var isPrimitiveItem = !isPlainObject(item);\r\n        var displayValue = isPrimitiveItem ? item : this._displayGetter(item);\r\n        return !isPlainObject(displayValue) ? String(ensureDefined(displayValue, \"\")) : \"\"\r\n    },\r\n    _updateActionButton(selectedItem) {\r\n        if (this.option(\"useSelectMode\")) {\r\n            this.option({\r\n                text: this._getDisplayValue(selectedItem),\r\n                icon: isPlainObject(selectedItem) ? selectedItem.icon : void 0\r\n            })\r\n        }\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\r\n        this._setOptionWithoutOptionChange(\"selectedItemKey\", this._keyGetter(selectedItem))\r\n    },\r\n    _clean() {\r\n        this._list && this._list.$element().remove();\r\n        this._popup && this._popup.$element().remove()\r\n    },\r\n    _selectedItemKeyChanged(value) {\r\n        this._setListOption(\"selectedItemKeys\", this.option(\"useSelectMode\") && isDefined(value) ? [value] : []);\r\n        var previousItem = this.option(\"selectedItem\");\r\n        this._loadSelectedItem().done(selectedItem => {\r\n            this._updateActionButton(selectedItem);\r\n            if (this._displayGetter(previousItem) !== this._displayGetter(selectedItem)) {\r\n                this._fireSelectionChangedAction({\r\n                    previousValue: previousItem,\r\n                    value: selectedItem\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _actionButtonOptionChanged(_ref5) {\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = _ref5;\r\n        var newConfig = {};\r\n        newConfig[name] = value;\r\n        this._buttonGroup.option(\"items[0]\", extend({}, this._actionButtonConfig(), newConfig));\r\n        this._popup && this._popup.repaint()\r\n    },\r\n    _selectModeChanged(value) {\r\n        if (value) {\r\n            this._setListOption(\"selectionMode\", \"single\");\r\n            var selectedItemKey = this.option(\"selectedItemKey\");\r\n            this._setListOption(\"selectedItemKeys\", isDefined(selectedItemKey) ? [selectedItemKey] : []);\r\n            this._selectedItemKeyChanged(this.option(\"selectedItemKey\"))\r\n        } else {\r\n            this._setListOption(\"selectionMode\", \"none\");\r\n            this.option({\r\n                selectedItemKey: void 0,\r\n                selectedItem: void 0\r\n            });\r\n            this._actionButtonOptionChanged({\r\n                text: this.option(\"text\")\r\n            })\r\n        }\r\n    },\r\n    _updateItemCollection(optionName) {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._setListOption(\"selectedItem\", null);\r\n        this._setWidgetOption(\"_list\", [optionName]);\r\n        if (isDefined(selectedItemKey)) {\r\n            this._loadSelectedItem().done(selectedItem => {\r\n                this._setListOption(\"selectedItemKeys\", [selectedItemKey]);\r\n                this._setListOption(\"selectedItem\", selectedItem)\r\n            }).fail(error => {\r\n                this._setListOption(\"selectedItemKeys\", [])\r\n            }).always(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _updateDataSource: function() {\r\n        var items = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._dataSource.items();\r\n        this._dataSource = void 0;\r\n        this._itemsToDataSource(items);\r\n        this._updateKeyExpr()\r\n    },\r\n    _updateKeyExpr: function() {\r\n        this._compileKeyGetter();\r\n        this._setListOption(\"keyExpr\", this._getKey())\r\n    },\r\n    focus: function() {\r\n        this._buttonGroup.focus()\r\n    },\r\n    _optionChanged(args) {\r\n        var _this$_popup;\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = args;\r\n        switch (name) {\r\n            case \"useSelectMode\":\r\n                this._selectModeChanged(value);\r\n                break;\r\n            case \"splitButton\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                break;\r\n            case \"displayExpr\":\r\n                this._compileDisplayGetter();\r\n                this._setListOption(name, value);\r\n                this._updateActionButton(this.option(\"selectedItem\"));\r\n                break;\r\n            case \"keyExpr\":\r\n                this._updateDataSource();\r\n                break;\r\n            case \"buttonGroupOptions\":\r\n                this._innerWidgetOptionChanged(this._buttonGroup, args);\r\n                break;\r\n            case \"dropDownOptions\":\r\n                if (\"dropDownOptions.visible\" === args.fullName) {\r\n                    break\r\n                }\r\n                if (void 0 !== args.value.visible) {\r\n                    delete args.value.visible\r\n                }\r\n                this._popupOptionChanged(args);\r\n                this._innerWidgetOptionChanged(this._popup, args);\r\n                break;\r\n            case \"opened\":\r\n                this.toggle(value);\r\n                break;\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n                this._setListOption(name, value);\r\n                this._buttonGroup.option(name, value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                this._updateDataSource(this.option(\"items\"));\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"dataSource\":\r\n                if (Array.isArray(value)) {\r\n                    this._updateDataSource(this.option(\"dataSource\"))\r\n                } else {\r\n                    this._initDataSource();\r\n                    this._updateKeyExpr()\r\n                }\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"icon\":\r\n            case \"text\":\r\n                this._actionButtonOptionChanged(args);\r\n                break;\r\n            case \"showArrowIcon\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                this._popup && this._popup.repaint();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.repaint();\r\n                break;\r\n            case \"stylingMode\":\r\n                this._buttonGroup.option(name, value);\r\n                break;\r\n            case \"itemTemplate\":\r\n            case \"grouped\":\r\n            case \"noDataText\":\r\n            case \"groupTemplate\":\r\n            case \"wrapItemText\":\r\n            case \"useItemTextAsTitle\":\r\n                this._setListOption(name, value);\r\n                break;\r\n            case \"dropDownContentTemplate\":\r\n                this._renderContent();\r\n                break;\r\n            case \"selectedItemKey\":\r\n                this._selectedItemKeyChanged(value);\r\n                break;\r\n            case \"selectedItem\":\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onButtonClick\":\r\n                this._createActionClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"deferRendering\":\r\n                this.toggle(this.option(\"opened\"));\r\n                break;\r\n            case \"tabIndex\":\r\n                this._buttonGroup.option(name, value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n}).include(DataHelperMixin);\r\nregisterComponent(\"dxDropDownButton\", DropDownButton);\r\nexport default DropDownButton;\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.export.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    merge\r\n} from \"../../core/utils/array\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport exportMixin from \"../grid_core/ui.grid_core.export_mixin\";\r\nimport {\r\n    export as clientExport,\r\n    excel\r\n} from \"../../exporter\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport \"../button\";\r\nimport \"../drop_down_button\";\r\nimport List from \"../list_light\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar DATAGRID_EXPORT_MENU_CLASS = \"dx-datagrid-export-menu\";\r\nvar DATAGRID_EXPORT_BUTTON_CLASS = \"dx-datagrid-export-button\";\r\nvar DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME = \"exportButton\";\r\nvar DATAGRID_EXPORT_ICON = \"export-to\";\r\nvar DATAGRID_EXPORT_EXCEL_ICON = \"xlsxfile\";\r\nvar DATAGRID_EXPORT_SELECTED_ICON = \"exportselected\";\r\nvar DATAGRID_EXPORT_EXCEL_BUTTON_ICON = \"export-excel-button\";\r\nexport var DataProvider = Class.inherit({\r\n    ctor: function(exportController, initialColumnWidthsByColumnIndex, selectedRowsOnly) {\r\n        this._exportController = exportController;\r\n        this._initialColumnWidthsByColumnIndex = initialColumnWidthsByColumnIndex;\r\n        this._selectedRowsOnly = selectedRowsOnly\r\n    },\r\n    _getGroupValue: function(item) {\r\n        var {\r\n            key: key,\r\n            data: data,\r\n            rowType: rowType,\r\n            groupIndex: groupIndex,\r\n            summaryCells: summaryCells\r\n        } = item;\r\n        var groupColumn = this._options.groupColumns[groupIndex];\r\n        var value = dataGridCore.getDisplayValue(groupColumn, groupColumn.deserializeValue ? groupColumn.deserializeValue(key[groupIndex]) : key[groupIndex], data, rowType);\r\n        var result = groupColumn.caption + \": \" + dataGridCore.formatValue(value, groupColumn);\r\n        if (summaryCells && summaryCells[0] && summaryCells[0].length) {\r\n            result += \" \" + dataGridCore.getGroupRowSummaryText(summaryCells[0], this._options.summaryTexts)\r\n        }\r\n        return result\r\n    },\r\n    _correctCellIndex: function(cellIndex) {\r\n        return cellIndex\r\n    },\r\n    _initOptions: function() {\r\n        var exportController = this._exportController;\r\n        var groupColumns = exportController._columnsController.getGroupColumns();\r\n        var excelWrapTextEnabled = exportController.option(\"export.excelWrapTextEnabled\");\r\n        this._options = {\r\n            columns: exportController._getColumns(this._initialColumnWidthsByColumnIndex),\r\n            groupColumns: groupColumns,\r\n            items: this._selectedRowsOnly || exportController._selectionOnly ? exportController._getSelectedItems() : exportController._getAllItems(),\r\n            getVisibleIndex: exportController._columnsController.getVisibleIndex.bind(exportController._columnsController),\r\n            isHeadersVisible: exportController.option(\"showColumnHeaders\"),\r\n            summaryTexts: exportController.option(\"summary.texts\"),\r\n            customizeExportData: exportController.option(\"customizeExportData\"),\r\n            rtlEnabled: exportController.option(\"rtlEnabled\"),\r\n            wrapTextEnabled: isDefined(excelWrapTextEnabled) ? excelWrapTextEnabled : !!exportController.option(\"wordWrapEnabled\"),\r\n            customizeExcelCell: exportController.option(\"export.customizeExcelCell\")\r\n        }\r\n    },\r\n    hasCustomizeExcelCell: function() {\r\n        return isDefined(this._options.customizeExcelCell)\r\n    },\r\n    customizeExcelCell: function(e, cellSourceData) {\r\n        if (this._options.customizeExcelCell) {\r\n            e.gridCell = cellSourceData;\r\n            if (isDefined(this._exportController) && isDefined(this._exportController.component)) {\r\n                e.component = this._exportController.component\r\n            }\r\n            this._options.customizeExcelCell(e)\r\n        }\r\n    },\r\n    getHeaderStyles: () => [{\r\n        bold: true,\r\n        alignment: \"center\",\r\n        wrapText: true\r\n    }, {\r\n        bold: true,\r\n        alignment: \"left\",\r\n        wrapText: true\r\n    }, {\r\n        bold: true,\r\n        alignment: \"right\",\r\n        wrapText: true\r\n    }],\r\n    getGroupRowStyle() {\r\n        return {\r\n            bold: true,\r\n            wrapText: false,\r\n            alignment: getDefaultAlignment(this._options.rtlEnabled)\r\n        }\r\n    },\r\n    getColumnStyles() {\r\n        var wrapTextEnabled = this._options.wrapTextEnabled;\r\n        var columnStyles = [];\r\n        this.getColumns().forEach(column => {\r\n            columnStyles.push({\r\n                alignment: column.alignment || \"left\",\r\n                format: column.format,\r\n                wrapText: wrapTextEnabled,\r\n                dataType: column.dataType\r\n            })\r\n        });\r\n        return columnStyles\r\n    },\r\n    getStyles: function() {\r\n        return [...this.getHeaderStyles(), ...this.getColumnStyles(), this.getGroupRowStyle()]\r\n    },\r\n    _getTotalCellStyleId: function(cellIndex) {\r\n        var _this$getColumns$cell;\r\n        var alignment = (null === (_this$getColumns$cell = this.getColumns()[cellIndex]) || void 0 === _this$getColumns$cell ? void 0 : _this$getColumns$cell.alignment) || \"right\";\r\n        return this.getHeaderStyles().map(style => style.alignment).indexOf(alignment)\r\n    },\r\n    getStyleId: function(rowIndex, cellIndex) {\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            return 0\r\n        } else if (this.isTotalCell(rowIndex - this.getHeaderRowCount(), cellIndex)) {\r\n            return this._getTotalCellStyleId(cellIndex)\r\n        } else if (this.isGroupRow(rowIndex - this.getHeaderRowCount())) {\r\n            return this.getHeaderStyles().length + this.getColumns().length\r\n        } else {\r\n            return cellIndex + this.getHeaderStyles().length\r\n        }\r\n    },\r\n    getColumns: function(getColumnsByAllRows) {\r\n        var {\r\n            columns: columns\r\n        } = this._options;\r\n        return getColumnsByAllRows ? columns : columns[columns.length - 1]\r\n    },\r\n    getColumnsWidths: function() {\r\n        var columns = this.getColumns();\r\n        return isDefined(columns) ? columns.map(c => c.width) : void 0\r\n    },\r\n    getRowsCount: function() {\r\n        return this._options.items.length + this.getHeaderRowCount()\r\n    },\r\n    getHeaderRowCount: function() {\r\n        if (this.isHeadersVisible()) {\r\n            return this._options.columns.length - 1\r\n        }\r\n        return 0\r\n    },\r\n    isGroupRow: function(rowIndex) {\r\n        return rowIndex < this._options.items.length && \"group\" === this._options.items[rowIndex].rowType\r\n    },\r\n    getGroupLevel: function(rowIndex) {\r\n        var item = this._options.items[rowIndex - this.getHeaderRowCount()];\r\n        var groupIndex = item && item.groupIndex;\r\n        if (item && \"totalFooter\" === item.rowType) {\r\n            return 0\r\n        }\r\n        return isDefined(groupIndex) ? groupIndex : this._options.groupColumns.length\r\n    },\r\n    getCellType: function(rowIndex, cellIndex) {\r\n        var columns = this.getColumns();\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            return \"string\"\r\n        } else {\r\n            rowIndex -= this.getHeaderRowCount()\r\n        }\r\n        if (cellIndex < columns.length) {\r\n            var item = this._options.items.length && this._options.items[rowIndex];\r\n            var column = columns[cellIndex];\r\n            if (item && \"data\" === item.rowType) {\r\n                if (isFinite(item.values[this._correctCellIndex(cellIndex)]) && !isDefined(column.customizeText)) {\r\n                    return isDefined(column.lookup) ? column.lookup.dataType : column.dataType\r\n                }\r\n            }\r\n            return \"string\"\r\n        }\r\n    },\r\n    ready: function() {\r\n        var that = this;\r\n        that._initOptions();\r\n        var options = that._options;\r\n        return when(options.items).done((function(items) {\r\n            options.customizeExportData && options.customizeExportData(that.getColumns(that.getHeaderRowCount() > 1), items);\r\n            options.items = items\r\n        })).fail((function() {\r\n            options.items = []\r\n        }))\r\n    },\r\n    _convertFromGridGroupSummaryItems: function(gridGroupSummaryItems) {\r\n        if (isDefined(gridGroupSummaryItems) && gridGroupSummaryItems.length > 0) {\r\n            return gridGroupSummaryItems.map((function(item) {\r\n                return {\r\n                    value: item.value,\r\n                    name: item.name\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    getCellData: function(rowIndex, cellIndex, isExcelJS) {\r\n        var value;\r\n        var column;\r\n        var result = {\r\n            cellSourceData: {},\r\n            value: value\r\n        };\r\n        var columns = this.getColumns();\r\n        var correctedCellIndex = this._correctCellIndex(cellIndex);\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            var columnsRow = this.getColumns(true)[rowIndex];\r\n            column = columnsRow[cellIndex];\r\n            result.cellSourceData.rowType = \"header\";\r\n            result.cellSourceData.column = column && column.gridColumn;\r\n            result.value = column && column.caption\r\n        } else {\r\n            rowIndex -= this.getHeaderRowCount();\r\n            var item = this._options.items.length && this._options.items[rowIndex];\r\n            if (item) {\r\n                var itemValues = item.values;\r\n                result.cellSourceData.rowType = item.rowType;\r\n                result.cellSourceData.column = columns[cellIndex] && columns[cellIndex].gridColumn;\r\n                switch (item.rowType) {\r\n                    case \"groupFooter\":\r\n                    case \"totalFooter\":\r\n                        if (correctedCellIndex < itemValues.length) {\r\n                            value = itemValues[correctedCellIndex];\r\n                            if (isDefined(value)) {\r\n                                result.cellSourceData.value = value.value;\r\n                                result.cellSourceData.totalSummaryItemName = value.name;\r\n                                result.value = dataGridCore.getSummaryText(value, this._options.summaryTexts)\r\n                            } else {\r\n                                result.cellSourceData.value = void 0\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        result.cellSourceData.groupIndex = item.groupIndex;\r\n                        if (cellIndex < 1) {\r\n                            result.cellSourceData.column = this._options.groupColumns[item.groupIndex];\r\n                            result.cellSourceData.value = item.key[item.groupIndex];\r\n                            result.cellSourceData.groupSummaryItems = this._convertFromGridGroupSummaryItems(item.summaryCells[0]);\r\n                            result.value = this._getGroupValue(item)\r\n                        } else {\r\n                            var summaryItems = item.values[correctedCellIndex];\r\n                            if (Array.isArray(summaryItems)) {\r\n                                result.cellSourceData.groupSummaryItems = this._convertFromGridGroupSummaryItems(summaryItems);\r\n                                value = \"\";\r\n                                for (var i = 0; i < summaryItems.length; i++) {\r\n                                    value += (i > 0 ? isExcelJS ? \"\\n\" : \" \\n \" : \"\") + dataGridCore.getSummaryText(summaryItems[i], this._options.summaryTexts)\r\n                                }\r\n                                result.value = value\r\n                            } else {\r\n                                result.cellSourceData.value = void 0\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        column = columns[cellIndex];\r\n                        if (column) {\r\n                            var _value = itemValues[correctedCellIndex];\r\n                            var displayValue = dataGridCore.getDisplayValue(column, _value, item.data, item.rowType);\r\n                            if (!isFinite(displayValue) || isDefined(column.customizeText)) {\r\n                                if (isExcelJS && isDefined(column.customizeText) && column.customizeText === this._exportController._columnsController.getCustomizeTextByDataType(\"boolean\")) {\r\n                                    result.value = displayValue\r\n                                } else {\r\n                                    result.value = dataGridCore.formatValue(displayValue, column)\r\n                                }\r\n                            } else {\r\n                                result.value = displayValue\r\n                            }\r\n                            result.cellSourceData.value = _value\r\n                        }\r\n                        result.cellSourceData.data = item.data\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    isHeadersVisible: function() {\r\n        return this._options.isHeadersVisible\r\n    },\r\n    isTotalCell: function(rowIndex, cellIndex) {\r\n        var items = this._options.items;\r\n        var item = items[rowIndex];\r\n        var correctCellIndex = this._correctCellIndex(cellIndex);\r\n        var isSummaryAlignByColumn = item.summaryCells && item.summaryCells[correctCellIndex] && item.summaryCells[correctCellIndex].length > 0 && item.summaryCells[correctCellIndex][0].alignByColumn;\r\n        return item && \"groupFooter\" === item.rowType || \"totalFooter\" === item.rowType || isSummaryAlignByColumn\r\n    },\r\n    getCellMerging: function(rowIndex, cellIndex) {\r\n        var columns = this._options.columns;\r\n        var column = columns[rowIndex] && columns[rowIndex][cellIndex];\r\n        return column ? {\r\n            colspan: (column.exportColspan || 1) - 1,\r\n            rowspan: (column.rowspan || 1) - 1\r\n        } : {\r\n            colspan: 0,\r\n            rowspan: 0\r\n        }\r\n    },\r\n    getFrozenArea: function() {\r\n        return {\r\n            x: 0,\r\n            y: this.getHeaderRowCount()\r\n        }\r\n    }\r\n});\r\nexport var ExportController = dataGridCore.ViewController.inherit({}).include(exportMixin).inherit({\r\n    _getEmptyCell: function() {\r\n        return {\r\n            caption: \"\",\r\n            colspan: 1,\r\n            rowspan: 1\r\n        }\r\n    },\r\n    _updateColumnWidth: function(column, width) {\r\n        column.width = width\r\n    },\r\n    _getColumns: function(initialColumnWidthsByColumnIndex) {\r\n        var result = [];\r\n        var i;\r\n        var columns;\r\n        var columnsController = this._columnsController;\r\n        var rowCount = columnsController.getRowCount();\r\n        for (i = 0; i <= rowCount; i++) {\r\n            var currentHeaderRow = [];\r\n            columns = columnsController.getVisibleColumns(i, true);\r\n            var columnWidthsByColumnIndex = void 0;\r\n            if (i === rowCount) {\r\n                if (this._updateLockCount) {\r\n                    columnWidthsByColumnIndex = initialColumnWidthsByColumnIndex\r\n                } else {\r\n                    var columnWidths = this._getColumnWidths(this._headersView, this._rowsView);\r\n                    if (columnWidths && columnWidths.length) {\r\n                        columnWidthsByColumnIndex = {};\r\n                        for (var _i = 0; _i < columns.length; _i++) {\r\n                            columnWidthsByColumnIndex[columns[_i].index] = columnWidths[_i]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (var j = 0; j < columns.length; j++) {\r\n                var column = extend({}, columns[j], {\r\n                    dataType: \"datetime\" === columns[j].dataType ? \"date\" : columns[j].dataType,\r\n                    gridColumn: columns[j]\r\n                });\r\n                if (this._needColumnExporting(column)) {\r\n                    var currentColspan = this._calculateExportColspan(column);\r\n                    if (isDefined(currentColspan)) {\r\n                        column.exportColspan = currentColspan\r\n                    }\r\n                    if (columnWidthsByColumnIndex) {\r\n                        this._updateColumnWidth(column, columnWidthsByColumnIndex[column.index])\r\n                    }\r\n                    currentHeaderRow.push(column)\r\n                }\r\n            }\r\n            result.push(currentHeaderRow)\r\n        }\r\n        columns = result[rowCount];\r\n        result = this._prepareItems(result.slice(0, -1));\r\n        result.push(columns);\r\n        return result\r\n    },\r\n    _calculateExportColspan: function(column) {\r\n        if (!column.isBand) {\r\n            return\r\n        }\r\n        var childColumns = this._columnsController.getChildrenByBandColumn(column.index, true);\r\n        if (!isDefined(childColumns)) {\r\n            return\r\n        }\r\n        return childColumns.reduce((result, childColumn) => {\r\n            if (this._needColumnExporting(childColumn)) {\r\n                return result + (this._calculateExportColspan(childColumn) || 1)\r\n            } else {\r\n                return result\r\n            }\r\n        }, 0)\r\n    },\r\n    _needColumnExporting: function(column) {\r\n        return !column.command && (column.allowExporting || void 0 === column.allowExporting)\r\n    },\r\n    _getFooterSummaryItems: function(summaryCells, isTotal) {\r\n        var result = [];\r\n        var estimatedItemsCount = 1;\r\n        var i = 0;\r\n        do {\r\n            var values = [];\r\n            for (var j = 0; j < summaryCells.length; j++) {\r\n                var summaryCell = summaryCells[j];\r\n                var itemsLength = summaryCell.length;\r\n                if (estimatedItemsCount < itemsLength) {\r\n                    estimatedItemsCount = itemsLength\r\n                }\r\n                values.push(summaryCell[i])\r\n            }\r\n            result.push({\r\n                values: values,\r\n                rowType: isTotal ? \"totalFooter\" : \"groupFooter\"\r\n            })\r\n        } while (i++ < estimatedItemsCount - 1);\r\n        return result\r\n    },\r\n    _hasSummaryGroupFooters: function() {\r\n        var groupItems = this.option(\"summary.groupItems\");\r\n        if (isDefined(groupItems)) {\r\n            for (var i = 0; i < groupItems.length; i++) {\r\n                if (groupItems[i].showInGroupFooter) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _getItemsWithSummaryGroupFooters: function(sourceItems) {\r\n        var result = [];\r\n        var beforeGroupFooterItems = [];\r\n        var groupFooterItems = [];\r\n        for (var i = 0; i < sourceItems.length; i++) {\r\n            var item = sourceItems[i];\r\n            if (\"groupFooter\" === item.rowType) {\r\n                groupFooterItems = this._getFooterSummaryItems(item.summaryCells);\r\n                result = result.concat(beforeGroupFooterItems, groupFooterItems);\r\n                beforeGroupFooterItems = []\r\n            } else {\r\n                beforeGroupFooterItems.push(item)\r\n            }\r\n        }\r\n        return result.length ? result : beforeGroupFooterItems\r\n    },\r\n    _updateGroupValuesWithSummaryByColumn: function(sourceItems) {\r\n        var summaryValues = [];\r\n        for (var i = 0; i < sourceItems.length; i++) {\r\n            var item = sourceItems[i];\r\n            var summaryCells = item.summaryCells;\r\n            if (\"group\" === item.rowType && summaryCells && summaryCells.length > 1) {\r\n                var groupColumnCount = item.values.length;\r\n                for (var j = 1; j < summaryCells.length; j++) {\r\n                    for (var k = 0; k < summaryCells[j].length; k++) {\r\n                        var summaryItem = summaryCells[j][k];\r\n                        if (summaryItem && summaryItem.alignByColumn) {\r\n                            if (!Array.isArray(summaryValues[j - groupColumnCount])) {\r\n                                summaryValues[j - groupColumnCount] = []\r\n                            }\r\n                            summaryValues[j - groupColumnCount].push(summaryItem)\r\n                        }\r\n                    }\r\n                }\r\n                if (summaryValues.length > 0) {\r\n                    merge(item.values, summaryValues);\r\n                    summaryValues = []\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _processUnExportedItems: function(items) {\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        var groupColumns = this._columnsController.getGroupColumns();\r\n        var values;\r\n        var summaryCells;\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var isDetailExpandColumn = false;\r\n            values = [];\r\n            summaryCells = [];\r\n            for (var j = 0; j < columns.length; j++) {\r\n                var column = columns[j];\r\n                isDetailExpandColumn = isDetailExpandColumn || \"detailExpand\" === column.type;\r\n                if (this._needColumnExporting(column)) {\r\n                    if (item.values) {\r\n                        if (\"group\" === item.rowType && !values.length) {\r\n                            values.push(item.key[item.groupIndex])\r\n                        } else {\r\n                            values.push(item.values[j])\r\n                        }\r\n                    }\r\n                    if (item.summaryCells) {\r\n                        if (\"group\" === item.rowType && !summaryCells.length) {\r\n                            var index = j - groupColumns.length + item.groupIndex;\r\n                            summaryCells.push(item.summaryCells[isDetailExpandColumn ? index : index + 1])\r\n                        } else {\r\n                            summaryCells.push(item.summaryCells[j])\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (values.length) {\r\n                item.values = values\r\n            }\r\n            if (summaryCells.length) {\r\n                item.summaryCells = summaryCells\r\n            }\r\n        }\r\n    },\r\n    _getAllItems: function(data) {\r\n        var that = this;\r\n        var d = new Deferred;\r\n        var dataController = this.getController(\"data\");\r\n        var footerItems = dataController.footerItems();\r\n        var totalItem = footerItems.length && footerItems[0];\r\n        var summaryTotalItems = that.option(\"summary.totalItems\");\r\n        var summaryCells;\r\n        when(data).done((function(data) {\r\n            dataController.loadAll(data).done((function(sourceItems, totalAggregates) {\r\n                that._updateGroupValuesWithSummaryByColumn(sourceItems);\r\n                if (that._hasSummaryGroupFooters()) {\r\n                    sourceItems = that._getItemsWithSummaryGroupFooters(sourceItems)\r\n                }\r\n                summaryCells = totalItem && totalItem.summaryCells;\r\n                if (isDefined(totalAggregates) && summaryTotalItems) {\r\n                    summaryCells = that._getSummaryCells(summaryTotalItems, totalAggregates)\r\n                }\r\n                var summaryItems = totalItem && that._getFooterSummaryItems(summaryCells, true);\r\n                if (summaryItems) {\r\n                    sourceItems = sourceItems.concat(summaryItems)\r\n                }\r\n                that._processUnExportedItems(sourceItems);\r\n                d.resolve(sourceItems)\r\n            })).fail(d.reject)\r\n        })).fail(d.reject);\r\n        return d\r\n    },\r\n    _getSummaryCells: function(summaryTotalItems, totalAggregates) {\r\n        var dataController = this.getController(\"data\");\r\n        var columnsController = dataController._columnsController;\r\n        return dataController._calculateSummaryCells(summaryTotalItems, totalAggregates, columnsController.getVisibleColumns(null, true), (function(summaryItem, column) {\r\n            return dataController._isDataColumn(column) ? column.index : -1\r\n        }))\r\n    },\r\n    _getSelectedItems: function() {\r\n        var selectionController = this.getController(\"selection\");\r\n        var selectedRowData = selectionController.getSelectedRowsData();\r\n        return this._getAllItems(selectedRowData)\r\n    },\r\n    _getColumnWidths: function(headersView, rowsView) {\r\n        return headersView && headersView.isVisible() ? headersView.getColumnWidths() : rowsView.getColumnWidths()\r\n    },\r\n    init: function() {\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._rowsView = this.getView(\"rowsView\");\r\n        this._headersView = this.getView(\"columnHeadersView\");\r\n        this.createAction(\"onExporting\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this.createAction(\"onExported\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this.createAction(\"onFileSaving\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    callbackNames: function() {\r\n        return [\"selectionOnlyChanged\"]\r\n    },\r\n    getExportFormat: function() {\r\n        return [\"EXCEL\"]\r\n    },\r\n    getDataProvider: function(selectedRowsOnly) {\r\n        var columnWidths = this._getColumnWidths(this._headersView, this._rowsView);\r\n        var initialColumnWidthsByColumnIndex;\r\n        if (columnWidths && columnWidths.length) {\r\n            initialColumnWidthsByColumnIndex = {};\r\n            var columnsLastRowVisibleColumns = this._columnsController.getVisibleColumns(this._columnsController.getRowCount(), true);\r\n            for (var i = 0; i < columnsLastRowVisibleColumns.length; i++) {\r\n                initialColumnWidthsByColumnIndex[columnsLastRowVisibleColumns[i].index] = columnWidths[i]\r\n            }\r\n        }\r\n        return new DataProvider(this, initialColumnWidthsByColumnIndex, selectedRowsOnly)\r\n    },\r\n    exportToExcel: function(selectionOnly) {\r\n        this._selectionOnly = selectionOnly;\r\n        clientExport(this.component.getDataProvider(), {\r\n            fileName: this.option(\"export.fileName\"),\r\n            proxyUrl: this.option(\"export.proxyUrl\"),\r\n            format: \"EXCEL\",\r\n            autoFilterEnabled: !!this.option(\"export.excelFilterEnabled\"),\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            ignoreErrors: this.option(\"export.ignoreExcelErrors\"),\r\n            exportingAction: this.getAction(\"onExporting\"),\r\n            exportedAction: this.getAction(\"onExported\"),\r\n            fileSavingAction: this.getAction(\"onFileSaving\")\r\n        }, excel.getData)\r\n    },\r\n    publicMethods: function() {\r\n        return [\"getDataProvider\", \"getExportFormat\", \"exportToExcel\"]\r\n    },\r\n    selectionOnly: function(value) {\r\n        if (isDefined(value)) {\r\n            this._isSelectedRows = value;\r\n            this.selectionOnlyChanged.fire()\r\n        } else {\r\n            return this._isSelectedRows\r\n        }\r\n    }\r\n});\r\ndataGridCore.registerModule(\"export\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            export: {\r\n                enabled: false,\r\n                fileName: \"DataGrid\",\r\n                excelFilterEnabled: false,\r\n                excelWrapTextEnabled: void 0,\r\n                proxyUrl: void 0,\r\n                allowExportSelectedData: false,\r\n                ignoreExcelErrors: true,\r\n                texts: {\r\n                    exportTo: messageLocalization.format(\"dxDataGrid-exportTo\"),\r\n                    exportAll: messageLocalization.format(\"dxDataGrid-exportAll\"),\r\n                    exportSelectedRows: messageLocalization.format(\"dxDataGrid-exportSelectedRows\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        export: ExportController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                callbackNames: function() {\r\n                    var callbackList = this.callBase();\r\n                    return isDefined(callbackList) ? callbackList.push(\"editingChanged\") : [\"editingChanged\"]\r\n                },\r\n                _updateEditButtons: function() {\r\n                    this.callBase();\r\n                    this.editingChanged.fire(this.hasChanges())\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var exportButton = this._getExportToolbarButton();\r\n                    if (exportButton) {\r\n                        items.push(exportButton);\r\n                        this._correctItemsPosition(items)\r\n                    }\r\n                    return items\r\n                },\r\n                _getExportToolbarButton: function() {\r\n                    var items = this._getExportToolbarItems();\r\n                    if (0 === items.length) {\r\n                        return null\r\n                    }\r\n                    var toolbarButtonOptions = {\r\n                        name: DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME,\r\n                        location: \"after\",\r\n                        locateInMenu: \"auto\",\r\n                        sortIndex: 30,\r\n                        options: {\r\n                            items: items\r\n                        }\r\n                    };\r\n                    if (1 === items.length) {\r\n                        var widgetOptions = _extends({}, items[0], {\r\n                            hint: items[0].text,\r\n                            elementAttr: {\r\n                                class: DATAGRID_EXPORT_BUTTON_CLASS\r\n                            }\r\n                        });\r\n                        toolbarButtonOptions.widget = \"dxButton\";\r\n                        toolbarButtonOptions.showText = \"inMenu\";\r\n                        toolbarButtonOptions.options = widgetOptions\r\n                    } else {\r\n                        var _widgetOptions = {\r\n                            icon: DATAGRID_EXPORT_ICON,\r\n                            displayExpr: \"text\",\r\n                            items: items,\r\n                            hint: this.option(\"export.texts.exportTo\"),\r\n                            elementAttr: {\r\n                                class: DATAGRID_EXPORT_BUTTON_CLASS\r\n                            },\r\n                            dropDownOptions: {\r\n                                wrapperAttr: {\r\n                                    class: DATAGRID_EXPORT_MENU_CLASS\r\n                                },\r\n                                width: \"auto\"\r\n                            }\r\n                        };\r\n                        toolbarButtonOptions.options = _widgetOptions;\r\n                        toolbarButtonOptions.widget = \"dxDropDownButton\";\r\n                        toolbarButtonOptions.menuItemTemplate = (_data, _index, container) => {\r\n                            this._createComponent($(container), List, {\r\n                                items: items\r\n                            })\r\n                        }\r\n                    }\r\n                    return toolbarButtonOptions\r\n                },\r\n                _getExportToolbarItems: function() {\r\n                    var exportOptions = this.option(\"export\");\r\n                    var texts = this.option(\"export.texts\");\r\n                    var items = [];\r\n                    if (exportOptions.enabled) {\r\n                        items.push({\r\n                            text: texts.exportAll,\r\n                            icon: DATAGRID_EXPORT_EXCEL_ICON,\r\n                            onClick: () => {\r\n                                this._exportController.exportToExcel()\r\n                            }\r\n                        });\r\n                        if (exportOptions.allowExportSelectedData) {\r\n                            items.push({\r\n                                text: texts.exportSelectedRows,\r\n                                icon: DATAGRID_EXPORT_SELECTED_ICON,\r\n                                onClick: () => {\r\n                                    this._exportController.exportToExcel(true)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                    return items\r\n                },\r\n                _correctItemsPosition: function(items) {\r\n                    items.sort((function(itemA, itemB) {\r\n                        return itemA.sortIndex - itemB.sortIndex\r\n                    }))\r\n                },\r\n                _isExportButtonVisible: function() {\r\n                    return this.option(\"export.enabled\")\r\n                },\r\n                _getButtonOptions: function(allowExportSelected) {\r\n                    var that = this;\r\n                    var texts = that.option(\"export.texts\");\r\n                    var options;\r\n                    if (allowExportSelected) {\r\n                        options = {\r\n                            hint: texts.exportTo,\r\n                            icon: DATAGRID_EXPORT_ICON\r\n                        }\r\n                    } else {\r\n                        options = {\r\n                            hint: texts.exportAll,\r\n                            icon: DATAGRID_EXPORT_EXCEL_BUTTON_ICON,\r\n                            onClick: function() {\r\n                                that._exportController.exportToExcel()\r\n                            }\r\n                        }\r\n                    }\r\n                    return options\r\n                },\r\n                optionChanged: function(args) {\r\n                    this.callBase(args);\r\n                    if (\"export\" === args.name) {\r\n                        args.handled = true;\r\n                        this._invalidate()\r\n                    }\r\n                },\r\n                init: function() {\r\n                    var that = this;\r\n                    this.callBase();\r\n                    this._exportController = this.getController(\"export\");\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this._editingController.editingChanged.add((function(hasChanges) {\r\n                        that.setToolbarItemDisabled(\"exportButton\", hasChanges)\r\n                    }))\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isExportButtonVisible()\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.focus.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport core from \"./ui.grid_core.modules\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isBoolean\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nvar ROW_FOCUSED_CLASS = \"dx-row-focused\";\r\nvar FOCUSED_ROW_SELECTOR = \".dx-row.\" + ROW_FOCUSED_CLASS;\r\nvar TABLE_POSTFIX_CLASS = \"table\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FocusController = core.ViewController.inherit({\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._keyboardController = this.getController(\"keyboardNavigation\");\r\n        this.component._optionsByReference.focusedRowKey = true\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"focusedRowIndex\" === args.name) {\r\n            var focusedRowKey = this.option(\"focusedRowKey\");\r\n            this._focusRowByIndex(args.value);\r\n            this._triggerFocusedRowChangedIfNeed(focusedRowKey, args.value);\r\n            args.handled = true\r\n        } else if (\"focusedRowKey\" === args.name) {\r\n            args.handled = true;\r\n            if (Array.isArray(args.value) && JSON.stringify(args.value) === JSON.stringify(args.previousValue)) {\r\n                return\r\n            }\r\n            var focusedRowIndex = this.option(\"focusedRowIndex\");\r\n            this._focusRowByKey(args.value);\r\n            this._triggerFocusedRowChangedIfNeed(args.value, focusedRowIndex)\r\n        } else if (\"focusedColumnIndex\" === args.name) {\r\n            args.handled = true\r\n        } else if (\"focusedRowEnabled\" === args.name) {\r\n            args.handled = true\r\n        } else if (\"autoNavigateToFocusedRow\" === args.name) {\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _triggerFocusedRowChangedIfNeed: function(focusedRowKey, focusedRowIndex) {\r\n        var focusedRowIndexByKey = this.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (focusedRowIndex === focusedRowIndexByKey) {\r\n            var rowIndex = this._dataController.getRowIndexByKey(focusedRowKey);\r\n            if (rowIndex >= 0) {\r\n                var $rowElement = $(this.getView(\"rowsView\").getRowElement(rowIndex));\r\n                this.getController(\"keyboardNavigation\")._fireFocusedRowChanged($rowElement, focusedRowIndex)\r\n            }\r\n        }\r\n    },\r\n    isAutoNavigateToFocusedRow: function() {\r\n        return \"infinite\" !== this.option(\"scrolling.mode\") && this.option(\"autoNavigateToFocusedRow\")\r\n    },\r\n    _focusRowByIndex: function(index, operationTypes) {\r\n        if (!this.option(\"focusedRowEnabled\")) {\r\n            return\r\n        }\r\n        index = void 0 !== index ? index : this.option(\"focusedRowIndex\");\r\n        if (index < 0) {\r\n            if (this.isAutoNavigateToFocusedRow()) {\r\n                this._resetFocusedRow()\r\n            }\r\n        } else {\r\n            this._focusRowByIndexCore(index, operationTypes)\r\n        }\r\n    },\r\n    _focusRowByIndexCore: function(index, operationTypes) {\r\n        var dataController = this.getController(\"data\");\r\n        var pageSize = dataController.pageSize();\r\n        var setKeyByIndex = () => {\r\n            if (this._isValidFocusedRowIndex(index)) {\r\n                var rowIndex = index - dataController.getRowIndexOffset(true);\r\n                if (!operationTypes || operationTypes.paging && !operationTypes.filtering) {\r\n                    var lastItemIndex = dataController._getLastItemIndex();\r\n                    rowIndex = Math.min(rowIndex, lastItemIndex)\r\n                }\r\n                var focusedRowKey = dataController.getKeyByRowIndex(rowIndex, true);\r\n                if (isDefined(focusedRowKey) && !this.isRowFocused(focusedRowKey)) {\r\n                    this.option(\"focusedRowKey\", focusedRowKey)\r\n                }\r\n            }\r\n        };\r\n        if (pageSize >= 0) {\r\n            if (!this._isLocalRowIndex(index)) {\r\n                var pageIndex = Math.floor(index / dataController.pageSize());\r\n                when(dataController.pageIndex(pageIndex), dataController.waitReady()).done(() => {\r\n                    setKeyByIndex()\r\n                })\r\n            } else {\r\n                setKeyByIndex()\r\n            }\r\n        }\r\n    },\r\n    _isLocalRowIndex(index) {\r\n        var dataController = this.getController(\"data\");\r\n        var isVirtualScrolling = this.getController(\"keyboardNavigation\")._isVirtualScrolling();\r\n        if (isVirtualScrolling) {\r\n            var pageIndex = Math.floor(index / dataController.pageSize());\r\n            var virtualItems = dataController.virtualItemsCount();\r\n            var virtualItemsBegin = virtualItems ? virtualItems.begin : -1;\r\n            var visibleRowsCount = dataController.getVisibleRows().length + dataController.getRowIndexOffset();\r\n            var visiblePagesCount = Math.ceil(visibleRowsCount / dataController.pageSize());\r\n            return virtualItemsBegin <= index && visiblePagesCount > pageIndex\r\n        }\r\n        return true\r\n    },\r\n    _setFocusedRowKeyByIndex: function(index) {\r\n        var dataController = this.getController(\"data\");\r\n        if (this._isValidFocusedRowIndex(index)) {\r\n            var rowIndex = Math.min(index - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n            var focusedRowKey = dataController.getKeyByRowIndex(rowIndex);\r\n            if (isDefined(focusedRowKey) && !this.isRowFocused(focusedRowKey)) {\r\n                this.option(\"focusedRowKey\", focusedRowKey)\r\n            }\r\n        }\r\n    },\r\n    _focusRowByKey: function(key) {\r\n        if (!isDefined(key)) {\r\n            this._resetFocusedRow()\r\n        } else {\r\n            this._navigateToRow(key, true)\r\n        }\r\n    },\r\n    _resetFocusedRow: function() {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var isFocusedRowKeyDefined = isDefined(focusedRowKey);\r\n        if (!isFocusedRowKeyDefined && this.option(\"focusedRowIndex\") < 0) {\r\n            return\r\n        }\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        if (isFocusedRowKeyDefined) {\r\n            this.option(\"focusedRowKey\", null)\r\n        }\r\n        keyboardController.setFocusedRowIndex(-1);\r\n        this.option(\"focusedRowIndex\", -1);\r\n        this.getController(\"data\").updateItems({\r\n            changeType: \"updateFocusedRow\",\r\n            focusedRowKey: null\r\n        });\r\n        keyboardController._fireFocusedRowChanged(void 0, -1)\r\n    },\r\n    _isValidFocusedRowIndex: function(rowIndex) {\r\n        var dataController = this.getController(\"data\");\r\n        var row = dataController.getVisibleRows()[rowIndex];\r\n        return !row || \"data\" === row.rowType || \"group\" === row.rowType\r\n    },\r\n    publicMethods: function() {\r\n        return [\"navigateToRow\", \"isRowFocused\"]\r\n    },\r\n    navigateToRow: function(key) {\r\n        if (!this.isAutoNavigateToFocusedRow()) {\r\n            this.option(\"focusedRowIndex\", -1)\r\n        }\r\n        return this._navigateToRow(key)\r\n    },\r\n    _navigateToRow: function(key, needFocusRow) {\r\n        var that = this;\r\n        var dataController = that.getController(\"data\");\r\n        var isAutoNavigate = that.isAutoNavigateToFocusedRow();\r\n        var d = new Deferred;\r\n        if (void 0 === key || !dataController.dataSource()) {\r\n            return d.reject().promise()\r\n        }\r\n        var rowIndexByKey = that.getFocusedRowIndexByKey(key);\r\n        if (!isAutoNavigate && needFocusRow || rowIndexByKey >= 0) {\r\n            that._navigateTo(key, d, needFocusRow)\r\n        } else {\r\n            dataController.getPageIndexByKey(key).done((function(pageIndex) {\r\n                if (pageIndex < 0) {\r\n                    d.resolve(-1);\r\n                    return\r\n                }\r\n                if (pageIndex === dataController.pageIndex()) {\r\n                    dataController.reload().done((function() {\r\n                        if (that.isRowFocused(key) && dataController.getRowIndexByKey(key) >= 0) {\r\n                            d.resolve(that.getFocusedRowIndexByKey(key))\r\n                        } else {\r\n                            that._navigateTo(key, d, needFocusRow)\r\n                        }\r\n                    })).fail(d.reject)\r\n                } else {\r\n                    dataController.pageIndex(pageIndex).done((function() {\r\n                        that._navigateTo(key, d, needFocusRow)\r\n                    })).fail(d.reject)\r\n                }\r\n            })).fail(d.reject)\r\n        }\r\n        return d.promise()\r\n    },\r\n    _navigateTo: function(key, deferred, needFocusRow) {\r\n        var visibleRowIndex = this.getController(\"data\").getRowIndexByKey(key);\r\n        var isVirtualRowRenderingMode = gridCoreUtils.isVirtualRowRendering(this);\r\n        var isAutoNavigate = this.isAutoNavigateToFocusedRow();\r\n        if (isAutoNavigate && isVirtualRowRenderingMode && visibleRowIndex < 0) {\r\n            this._navigateToVirtualRow(key, deferred, needFocusRow)\r\n        } else {\r\n            this._navigateToVisibleRow(key, deferred, needFocusRow)\r\n        }\r\n    },\r\n    _navigateToVisibleRow: function(key, deferred, needFocusRow) {\r\n        if (needFocusRow) {\r\n            this._triggerUpdateFocusedRow(key, deferred)\r\n        } else {\r\n            var focusedRowIndex = this.getFocusedRowIndexByKey(key);\r\n            this.getView(\"rowsView\").scrollToRowElement(key, deferred).done((function() {\r\n                deferred.resolve(focusedRowIndex)\r\n            }))\r\n        }\r\n    },\r\n    _navigateToVirtualRow: function(key, deferred, needFocusRow) {\r\n        var that = this;\r\n        var dataController = this.getController(\"data\");\r\n        var rowsScrollController = dataController._rowsScrollController;\r\n        var rowIndex = gridCoreUtils.getIndexByKey(key, dataController.items(true));\r\n        var scrollable = that.getView(\"rowsView\").getScrollable();\r\n        if (rowsScrollController && scrollable && rowIndex >= 0) {\r\n            var focusedRowIndex = rowIndex + dataController.getRowIndexOffset(true);\r\n            var offset = rowsScrollController.getItemOffset(focusedRowIndex);\r\n            that.component.on(\"contentReady\", (function triggerUpdateFocusedRow() {\r\n                that.component.off(\"contentReady\", triggerUpdateFocusedRow);\r\n                if (needFocusRow) {\r\n                    that._triggerUpdateFocusedRow(key, deferred)\r\n                } else {\r\n                    deferred.resolve(focusedRowIndex)\r\n                }\r\n            }));\r\n            this.getView(\"rowsView\").scrollTopPosition(offset)\r\n        } else {\r\n            deferred.resolve(-1)\r\n        }\r\n    },\r\n    _triggerUpdateFocusedRow: function(key, deferred) {\r\n        var dataController = this.getController(\"data\");\r\n        var focusedRowIndex = this.getFocusedRowIndexByKey(key);\r\n        if (this._isValidFocusedRowIndex(focusedRowIndex)) {\r\n            var d;\r\n            if (this.option(\"focusedRowEnabled\")) {\r\n                dataController.updateItems({\r\n                    changeType: \"updateFocusedRow\",\r\n                    focusedRowKey: key\r\n                })\r\n            } else {\r\n                d = this.getView(\"rowsView\").scrollToRowElement(key)\r\n            }\r\n            when(d).done(() => {\r\n                this.getController(\"keyboardNavigation\").setFocusedRowIndex(focusedRowIndex);\r\n                deferred && deferred.resolve(focusedRowIndex)\r\n            })\r\n        } else {\r\n            deferred && deferred.resolve(-1)\r\n        }\r\n    },\r\n    getFocusedRowIndexByKey: function(key) {\r\n        var dataController = this.getController(\"data\");\r\n        var loadedRowIndex = dataController.getRowIndexByKey(key, true);\r\n        return loadedRowIndex >= 0 ? loadedRowIndex + dataController.getRowIndexOffset(true) : -1\r\n    },\r\n    _focusRowByKeyOrIndex: function() {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var currentFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        var dataController = this.getController(\"data\");\r\n        if (isDefined(focusedRowKey)) {\r\n            var visibleRowIndex = dataController.getRowIndexByKey(focusedRowKey);\r\n            if (visibleRowIndex >= 0) {\r\n                if (keyboardController._isVirtualScrolling()) {\r\n                    currentFocusedRowIndex = visibleRowIndex + dataController.getRowIndexOffset()\r\n                }\r\n                keyboardController.setFocusedRowIndex(currentFocusedRowIndex);\r\n                this._triggerUpdateFocusedRow(focusedRowKey)\r\n            } else {\r\n                this._navigateToRow(focusedRowKey, true).done(focusedRowIndex => {\r\n                    if (currentFocusedRowIndex >= 0 && focusedRowIndex < 0) {\r\n                        this._focusRowByIndex()\r\n                    } else if (currentFocusedRowIndex < 0 && focusedRowIndex >= 0) {\r\n                        keyboardController.setFocusedRowIndex(focusedRowIndex)\r\n                    }\r\n                })\r\n            }\r\n        } else if (currentFocusedRowIndex >= 0) {\r\n            this.getController(\"focus\")._focusRowByIndex(currentFocusedRowIndex)\r\n        }\r\n    },\r\n    isRowFocused: function(key) {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        if (isDefined(focusedRowKey)) {\r\n            return equalByValue(key, this.option(\"focusedRowKey\"))\r\n        }\r\n    },\r\n    updateFocusedRow: function(change) {\r\n        var that = this;\r\n        var focusedRowIndex = that._dataController.getRowIndexByKey(change.focusedRowKey);\r\n        var rowsView = that.getView(\"rowsView\");\r\n        var $tableElement;\r\n        each(rowsView.getTableElements(), (function(index, element) {\r\n            var isMainTable = 0 === index;\r\n            $tableElement = $(element);\r\n            that._clearPreviousFocusedRow($tableElement, focusedRowIndex);\r\n            that._prepareFocusedRow({\r\n                changedItem: that._dataController.getVisibleRows()[focusedRowIndex],\r\n                $tableElement: $tableElement,\r\n                focusedRowIndex: focusedRowIndex,\r\n                isMainTable: isMainTable\r\n            })\r\n        }))\r\n    },\r\n    _clearPreviousFocusedRow: function($tableElement, focusedRowIndex) {\r\n        var $prevRowFocusedElement = $tableElement.find(FOCUSED_ROW_SELECTOR).filter((_, focusedRow) => {\r\n            var $focusedRowTable = $(focusedRow).closest(\".\".concat(this.addWidgetPrefix(TABLE_POSTFIX_CLASS)));\r\n            return $tableElement.is($focusedRowTable)\r\n        });\r\n        $prevRowFocusedElement.removeClass(ROW_FOCUSED_CLASS).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\");\r\n        $prevRowFocusedElement.children(\"td\").removeAttr(\"tabindex\");\r\n        if (0 !== focusedRowIndex) {\r\n            var $firstRow = $(this.getView(\"rowsView\").getRowElement(0));\r\n            $firstRow.removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabIndex\")\r\n        }\r\n    },\r\n    _prepareFocusedRow: function(options) {\r\n        var $row;\r\n        var changedItem = options.changedItem;\r\n        if (changedItem && (\"data\" === changedItem.rowType || \"group\" === changedItem.rowType)) {\r\n            var focusedRowIndex = options.focusedRowIndex;\r\n            var $tableElement = options.$tableElement;\r\n            var isMainTable = options.isMainTable;\r\n            var tabIndex = this.option(\"tabindex\") || 0;\r\n            var rowsView = this.getView(\"rowsView\");\r\n            $row = $(rowsView._getRowElements($tableElement).eq(focusedRowIndex));\r\n            $row.addClass(ROW_FOCUSED_CLASS).attr(\"tabindex\", tabIndex);\r\n            if (isMainTable) {\r\n                rowsView.scrollToElementVertically($row)\r\n            }\r\n        }\r\n        return $row\r\n    }\r\n});\r\nexport var focusModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            focusedRowEnabled: false,\r\n            autoNavigateToFocusedRow: true,\r\n            focusedRowKey: null,\r\n            focusedRowIndex: -1,\r\n            focusedColumnIndex: -1\r\n        }\r\n    },\r\n    controllers: {\r\n        focus: FocusController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            keyboardNavigation: {\r\n                init: function() {\r\n                    var rowIndex = this.option(\"focusedRowIndex\");\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    this.createAction(\"onFocusedRowChanging\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedRowChanged\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedCellChanging\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedCellChanged\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.callBase();\r\n                    this.setRowFocusType();\r\n                    this._focusedCellPosition = {};\r\n                    if (isDefined(rowIndex)) {\r\n                        this._focusedCellPosition.rowIndex = this.option(\"focusedRowIndex\")\r\n                    }\r\n                    if (isDefined(columnIndex)) {\r\n                        this._focusedCellPosition.columnIndex = this.option(\"focusedColumnIndex\")\r\n                    }\r\n                },\r\n                setFocusedRowIndex: function(rowIndex) {\r\n                    var dataController = this.getController(\"data\");\r\n                    this.callBase(rowIndex);\r\n                    var visibleRowIndex = rowIndex - dataController.getRowIndexOffset();\r\n                    var visibleRow = dataController.getVisibleRows()[visibleRowIndex];\r\n                    if (!visibleRow || !visibleRow.isNewRow) {\r\n                        this.option(\"focusedRowIndex\", rowIndex)\r\n                    }\r\n                },\r\n                setFocusedColumnIndex: function(columnIndex) {\r\n                    this.callBase(columnIndex);\r\n                    this.option(\"focusedColumnIndex\", columnIndex)\r\n                },\r\n                _escapeKeyHandler: function(eventArgs, isEditing) {\r\n                    if (isEditing || !this.option(\"focusedRowEnabled\")) {\r\n                        this.callBase(eventArgs, isEditing);\r\n                        return\r\n                    }\r\n                    if (this.isCellFocusType()) {\r\n                        this.setRowFocusType();\r\n                        this._focus(this._getCellElementFromTarget(eventArgs.originalEvent.target), true)\r\n                    }\r\n                },\r\n                _updateFocusedCellPosition: function($cell, direction) {\r\n                    var prevRowIndex = this.option(\"focusedRowIndex\");\r\n                    var prevColumnIndex = this.option(\"focusedColumnIndex\");\r\n                    var position = this.callBase($cell, direction);\r\n                    if (position && position.columnIndex >= 0) {\r\n                        this._fireFocusedCellChanged($cell, prevColumnIndex, prevRowIndex)\r\n                    }\r\n                }\r\n            },\r\n            editorFactory: {\r\n                renderFocusOverlay: function($element, hideBorder) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n                    var editingController = this.getController(\"editing\");\r\n                    var $cell;\r\n                    if (!focusedRowEnabled || !(null !== keyboardController && void 0 !== keyboardController && keyboardController.isRowFocusType()) || editingController.isEditing()) {\r\n                        this.callBase($element, hideBorder)\r\n                    } else if (focusedRowEnabled) {\r\n                        var isRowElement = \"row\" === keyboardController._getElementType($element);\r\n                        if (isRowElement && !$element.hasClass(ROW_FOCUSED_CLASS)) {\r\n                            $cell = keyboardController.getFirstValidCellInRow($element);\r\n                            keyboardController.focus($cell)\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            columns: {\r\n                getSortDataSourceParameters: function(_, sortByKey) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var dataController = this.getController(\"data\");\r\n                    var dataSource = dataController._dataSource;\r\n                    var store = dataController.store();\r\n                    var key = store && store.key();\r\n                    var remoteOperations = dataSource && dataSource.remoteOperations() || {};\r\n                    var isLocalOperations = Object.keys(remoteOperations).every(operationName => !remoteOperations[operationName]);\r\n                    if (key && (this.option(\"focusedRowEnabled\") && false !== this.getController(\"focus\").isAutoNavigateToFocusedRow() || sortByKey)) {\r\n                        key = Array.isArray(key) ? key : [key];\r\n                        var notSortedKeys = key.filter(key => !this.columnOption(key, \"sortOrder\"));\r\n                        if (notSortedKeys.length) {\r\n                            result = result || [];\r\n                            if (isLocalOperations) {\r\n                                result.push({\r\n                                    selector: dataSource.getDataIndexGetter(),\r\n                                    desc: false\r\n                                })\r\n                            } else {\r\n                                notSortedKeys.forEach(notSortedKey => result.push({\r\n                                    selector: notSortedKey,\r\n                                    desc: false\r\n                                }))\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            data: {\r\n                _applyChange: function(change) {\r\n                    if (change && \"updateFocusedRow\" === change.changeType) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _fireChanged: function(e) {\r\n                    this.callBase(e);\r\n                    if (this.option(\"focusedRowEnabled\") && this._dataSource) {\r\n                        var isPartialUpdate = \"update\" === e.changeType && e.repaintChangesOnly;\r\n                        var isPartialUpdateWithDeleting = isPartialUpdate && e.changeTypes && e.changeTypes.indexOf(\"remove\") >= 0;\r\n                        if (\"refresh\" === e.changeType && e.items.length || isPartialUpdateWithDeleting) {\r\n                            this._updatePageIndexes();\r\n                            this.processUpdateFocusedRow(e)\r\n                        } else if (\"append\" === e.changeType || \"prepend\" === e.changeType) {\r\n                            this._updatePageIndexes()\r\n                        } else if (\"update\" === e.changeType && e.repaintChangesOnly) {\r\n                            this.processUpdateFocusedRow(e)\r\n                        }\r\n                    }\r\n                },\r\n                _updatePageIndexes: function() {\r\n                    var prevRenderingPageIndex = this._lastRenderingPageIndex || 0;\r\n                    var renderingPageIndex = this._rowsScrollController ? this._rowsScrollController.pageIndex() : 0;\r\n                    this._lastRenderingPageIndex = renderingPageIndex;\r\n                    this._isPagingByRendering = renderingPageIndex !== prevRenderingPageIndex\r\n                },\r\n                isPagingByRendering: function() {\r\n                    return this._isPagingByRendering\r\n                },\r\n                processUpdateFocusedRow: function(e) {\r\n                    var operationTypes = e.operationTypes || {};\r\n                    var focusController = this.getController(\"focus\");\r\n                    var {\r\n                        reload: reload,\r\n                        fullReload: fullReload\r\n                    } = operationTypes;\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isVirtualScrolling = keyboardController._isVirtualScrolling();\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var isAutoNavigate = focusController.isAutoNavigateToFocusedRow();\r\n                    if (reload && !fullReload && isDefined(focusedRowKey)) {\r\n                        focusController._navigateToRow(focusedRowKey, true).done((function(focusedRowIndex) {\r\n                            if (focusedRowIndex < 0) {\r\n                                focusController._focusRowByIndex(void 0, operationTypes)\r\n                            }\r\n                        }))\r\n                    } else if (operationTypes.paging && !isVirtualScrolling) {\r\n                        if (isAutoNavigate) {\r\n                            var rowIndexByKey = this.getRowIndexByKey(focusedRowKey);\r\n                            var isValidRowIndexByKey = rowIndexByKey >= 0;\r\n                            var focusedRowIndex = this.option(\"focusedRowIndex\");\r\n                            var needFocusRowByIndex = focusedRowIndex >= 0 && (focusedRowIndex === rowIndexByKey || !isValidRowIndexByKey);\r\n                            if (needFocusRowByIndex) {\r\n                                focusController._focusRowByIndex(void 0, operationTypes)\r\n                            }\r\n                        } else if (this.getRowIndexByKey(focusedRowKey) < 0) {\r\n                            this.option(\"focusedRowIndex\", -1)\r\n                        }\r\n                    } else if (operationTypes.fullReload) {\r\n                        focusController._focusRowByKeyOrIndex()\r\n                    }\r\n                },\r\n                getPageIndexByKey: function(key) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    that.getGlobalRowIndexByKey(key).done((function(globalIndex) {\r\n                        d.resolve(globalIndex >= 0 ? Math.floor(globalIndex / that.pageSize()) : -1)\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                getGlobalRowIndexByKey: function(key) {\r\n                    if (this._dataSource.group()) {\r\n                        return this._calculateGlobalRowIndexByGroupedData(key)\r\n                    }\r\n                    return this._calculateGlobalRowIndexByFlatData(key)\r\n                },\r\n                _calculateGlobalRowIndexByFlatData: function(key, groupFilter, useGroup) {\r\n                    var that = this;\r\n                    var deferred = new Deferred;\r\n                    var dataSource = that._dataSource;\r\n                    if (Array.isArray(key)) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    var filter = that._generateFilterByKey(key);\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        skip: 0,\r\n                        take: 1\r\n                    }).done((function(data) {\r\n                        if (data.length > 0) {\r\n                            filter = that._generateOperationFilterByKey(key, data[0], useGroup);\r\n                            dataSource.load({\r\n                                filter: that._concatWithCombinedFilter(filter, groupFilter),\r\n                                skip: 0,\r\n                                take: 1,\r\n                                requireTotalCount: true\r\n                            }).done((function(_, extra) {\r\n                                deferred.resolve(extra.totalCount)\r\n                            }))\r\n                        } else {\r\n                            deferred.resolve(-1)\r\n                        }\r\n                    }));\r\n                    return deferred.promise()\r\n                },\r\n                _concatWithCombinedFilter: function(filter, groupFilter) {\r\n                    var combinedFilter = this.getCombinedFilter();\r\n                    return gridCoreUtils.combineFilters([filter, combinedFilter, groupFilter])\r\n                },\r\n                _generateBooleanFilter: function(selector, value, sortInfo) {\r\n                    var result;\r\n                    if (false === value) {\r\n                        result = [selector, \"=\", sortInfo.desc ? true : null]\r\n                    } else if (true === value ? !sortInfo.desc : sortInfo.desc) {\r\n                        result = [selector, \"<>\", value]\r\n                    }\r\n                    return result\r\n                },\r\n                _generateOperationFilterByKey: function(key, rowData, useGroup) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key, \"<\");\r\n                    var sort = that._columnsController.getSortDataSourceParameters(!dataSource.remoteOperations().filtering, true);\r\n                    if (useGroup) {\r\n                        var group = that._columnsController.getGroupDataSourceParameters(!dataSource.remoteOperations().filtering);\r\n                        if (group) {\r\n                            sort = sort ? group.concat(sort) : group\r\n                        }\r\n                    }\r\n                    if (sort) {\r\n                        sort.slice().reverse().forEach((function(sortInfo) {\r\n                            var selector = sortInfo.selector;\r\n                            var getter;\r\n                            if (\"function\" === typeof selector) {\r\n                                getter = selector\r\n                            } else {\r\n                                getter = that._columnsController.columnOption(selector, \"selector\")\r\n                            }\r\n                            var value = getter ? getter(rowData) : rowData[selector];\r\n                            filter = [\r\n                                [selector, \"=\", value], \"and\", filter\r\n                            ];\r\n                            if (null === value || isBoolean(value)) {\r\n                                var booleanFilter = that._generateBooleanFilter(selector, value, sortInfo);\r\n                                if (booleanFilter) {\r\n                                    filter = [booleanFilter, \"or\", filter]\r\n                                }\r\n                            } else {\r\n                                var filterOperation = sortInfo.desc ? \">\" : \"<\";\r\n                                var sortFilter = [selector, filterOperation, value];\r\n                                if (!sortInfo.desc) {\r\n                                    sortFilter = [sortFilter, \"or\", [selector, \"=\", null]]\r\n                                }\r\n                                filter = [sortFilter, \"or\", filter]\r\n                            }\r\n                        }))\r\n                    }\r\n                    return filter\r\n                },\r\n                _generateFilterByKey: function(key, operation) {\r\n                    var dataSourceKey = this._dataSource.key();\r\n                    var filter = [];\r\n                    if (!operation) {\r\n                        operation = \"=\"\r\n                    }\r\n                    if (Array.isArray(dataSourceKey)) {\r\n                        for (var i = 0; i < dataSourceKey.length; ++i) {\r\n                            var keyPart = key[dataSourceKey[i]];\r\n                            if (keyPart) {\r\n                                if (filter.length > 0) {\r\n                                    filter.push(\"and\")\r\n                                }\r\n                                filter.push([dataSourceKey[i], operation, keyPart])\r\n                            }\r\n                        }\r\n                    } else {\r\n                        filter = [dataSourceKey, operation, key]\r\n                    }\r\n                    return filter\r\n                },\r\n                _getLastItemIndex: function() {\r\n                    return this.items(true).length - 1\r\n                }\r\n            },\r\n            editing: {\r\n                _deleteRowCore: function(rowIndex) {\r\n                    var deferred = this.callBase.apply(this, arguments);\r\n                    var dataController = this.getController(\"data\");\r\n                    var rowKey = dataController.getKeyByRowIndex(rowIndex);\r\n                    deferred.done(() => {\r\n                        var rowIndex = dataController.getRowIndexByKey(rowKey);\r\n                        var visibleRows = dataController.getVisibleRows();\r\n                        if (-1 === rowIndex && !visibleRows.length) {\r\n                            this.getController(\"focus\")._resetFocusedRow()\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (this.option(\"focusedRowEnabled\") && row) {\r\n                        if (this.getController(\"focus\").isRowFocused(row.key)) {\r\n                            $row.addClass(ROW_FOCUSED_CLASS)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _checkRowKeys: function(options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"focusedRowEnabled\") && this.option(\"dataSource\")) {\r\n                        var store = this._dataController.store();\r\n                        if (store && !store.key()) {\r\n                            this._dataController.fireError(\"E1042\", \"Row focusing\")\r\n                        }\r\n                    }\r\n                },\r\n                _update: function(change) {\r\n                    if (\"updateFocusedRow\" === change.changeType) {\r\n                        if (this.option(\"focusedRowEnabled\")) {\r\n                            this.getController(\"focus\").updateFocusedRow(change)\r\n                        }\r\n                    } else {\r\n                        this.callBase(change)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function($cellElements, preventScroll) {\r\n                    var rowIndex = this.getController(\"keyboardNavigation\").getVisibleRowIndex();\r\n                    var row = this._dataController.getVisibleRows()[rowIndex];\r\n                    if (this.option(\"focusedRowEnabled\") && !(null !== row && void 0 !== row && row.isNewRow)) {\r\n                        this._setFocusedRowElementTabIndex(preventScroll)\r\n                    } else {\r\n                        this.callBase($cellElements)\r\n                    }\r\n                },\r\n                _setFocusedRowElementTabIndex: function(preventScroll) {\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var tabIndex = this.option(\"tabIndex\") || 0;\r\n                    var dataController = this._dataController;\r\n                    var columnsController = this._columnsController;\r\n                    var rowIndex = dataController.getRowIndexByKey(focusedRowKey);\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    var $row = this._findRowElementForTabIndex();\r\n                    if (!isDefined(this._scrollToFocusOnResize)) {\r\n                        this._scrollToFocusOnResize = () => {\r\n                            this.scrollToElementVertically(this._findRowElementForTabIndex());\r\n                            this.resizeCompleted.remove(this._scrollToFocusOnResize)\r\n                        }\r\n                    }\r\n                    $row.attr(\"tabIndex\", tabIndex);\r\n                    if (rowIndex >= 0 && !preventScroll) {\r\n                        if (columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        rowIndex += dataController.getRowIndexOffset();\r\n                        columnIndex += columnsController.getColumnIndexOffset();\r\n                        this.getController(\"keyboardNavigation\").setFocusedCellPosition(rowIndex, columnIndex);\r\n                        if (this.getController(\"focus\").isAutoNavigateToFocusedRow()) {\r\n                            var dataSource = dataController.dataSource();\r\n                            var operationTypes = dataSource && dataSource.operationTypes();\r\n                            if (operationTypes && !operationTypes.paging && !dataController.isPagingByRendering()) {\r\n                                this.resizeCompleted.remove(this._scrollToFocusOnResize);\r\n                                this.resizeCompleted.add(this._scrollToFocusOnResize)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _findRowElementForTabIndex: function() {\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this._dataController.getRowIndexByKey(focusedRowKey);\r\n                    return $(this.getRowElement(rowIndex >= 0 ? rowIndex : 0))\r\n                },\r\n                scrollToRowElement: function(key) {\r\n                    var rowIndex = this.getController(\"data\").getRowIndexByKey(key);\r\n                    var $row = $(this.getRow(rowIndex));\r\n                    return this.scrollToElementVertically($row)\r\n                },\r\n                scrollToElementVertically: function($row) {\r\n                    var scrollable = this.getScrollable();\r\n                    if (scrollable && $row.length) {\r\n                        var position = scrollable.getScrollElementPosition($row, \"vertical\");\r\n                        return this.scrollTopPosition(position)\r\n                    }\r\n                    return (new Deferred).resolve()\r\n                },\r\n                scrollTopPosition: function(scrollTop) {\r\n                    var d = new Deferred;\r\n                    var scrollable = this.getScrollable();\r\n                    if (scrollable) {\r\n                        var currentScrollTop = scrollable.scrollTop();\r\n                        var scrollHandler = () => {\r\n                            scrollable.off(\"scroll\", scrollHandler);\r\n                            d.resolve()\r\n                        };\r\n                        if (scrollTop !== currentScrollTop) {\r\n                            scrollable.on(\"scroll\", scrollHandler);\r\n                            this._dataController.resetFilterApplying();\r\n                            scrollable.scrollTo({\r\n                                top: scrollTop\r\n                            });\r\n                            return d.promise()\r\n                        }\r\n                    }\r\n                    return d.resolve()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.focus.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    focusModule\r\n} from \"../grid_core/ui.grid_core.focus\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\ngridCore.registerModule(\"focus\", extend(true, {}, focusModule, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                changeRowExpand: function(path, isRowClick) {\r\n                    if (this.option(\"focusedRowEnabled\") && Array.isArray(path) && this.isRowExpanded(path)) {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        if ((!isRowClick || !keyboardNavigation.isKeyboardEnabled()) && this._isFocusedRowInsideGroup(path)) {\r\n                            this.option(\"focusedRowKey\", path)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isFocusedRowInsideGroup: function(path) {\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this.getRowIndexByKey(focusedRowKey);\r\n                    var focusedRow = rowIndex >= 0 && this.getVisibleRows()[rowIndex];\r\n                    var groups = columnsController.getGroupDataSourceParameters(true);\r\n                    if (focusedRow) {\r\n                        for (var i = 0; i < path.length; ++i) {\r\n                            var getter = compileGetter(groups[i] && groups[i].selector);\r\n                            if (getter(focusedRow.data) !== path[i]) {\r\n                                return false\r\n                            }\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _getGroupPath: function(group) {\r\n                    var groupPath = [group.key];\r\n                    var items = group.items;\r\n                    while (items && items[0]) {\r\n                        var item = items[0];\r\n                        if (void 0 !== item.key) {\r\n                            groupPath.push(item.key)\r\n                        }\r\n                        items = item.items\r\n                    }\r\n                    return groupPath\r\n                },\r\n                _expandGroupByPath: function(that, groupPath, level) {\r\n                    var d = new Deferred;\r\n                    level++;\r\n                    that.expandRow(groupPath.slice(0, level)).done((function() {\r\n                        if (level === groupPath.length) {\r\n                            d.resolve()\r\n                        } else {\r\n                            that._expandGroupByPath(that, groupPath, level).done(d.resolve).fail(d.reject)\r\n                        }\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _calculateGlobalRowIndexByGroupedData: function(key) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key);\r\n                    var deferred = new Deferred;\r\n                    var isGroupKey = Array.isArray(key);\r\n                    var group = dataSource.group();\r\n                    if (isGroupKey) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    if (!dataSource._grouping._updatePagingOptions) {\r\n                        that._calculateGlobalRowIndexByFlatData(key, null, true).done(deferred.resolve).fail(deferred.reject);\r\n                        return deferred\r\n                    }\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        group: group\r\n                    }).done((function(data) {\r\n                        if (!data || 0 === data.length || !isDefined(data[0].key) || -1 === data[0].key) {\r\n                            return deferred.resolve(-1).promise()\r\n                        }\r\n                        var groupPath = that._getGroupPath(data[0]);\r\n                        that._expandGroupByPath(that, groupPath, 0).done((function() {\r\n                            that._calculateExpandedRowGlobalIndex(deferred, key, groupPath, group)\r\n                        })).fail(deferred.reject)\r\n                    })).fail(deferred.reject);\r\n                    return deferred.promise()\r\n                },\r\n                _calculateExpandedRowGlobalIndex: function(deferred, key, groupPath, group) {\r\n                    var groupFilter = createGroupFilter(groupPath, {\r\n                        group: group\r\n                    });\r\n                    var dataSource = this._dataSource;\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var isVirtualScrolling = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var pageSize = dataSource.pageSize();\r\n                    var groupOffset;\r\n                    dataSource._grouping._updatePagingOptions({\r\n                        skip: 0,\r\n                        take: MAX_SAFE_INTEGER\r\n                    }, (function(groupInfo, totalOffset) {\r\n                        if (equalByValue(groupInfo.path, groupPath)) {\r\n                            groupOffset = totalOffset\r\n                        }\r\n                    }));\r\n                    this._calculateGlobalRowIndexByFlatData(key, groupFilter).done((function(dataOffset) {\r\n                        var count;\r\n                        var groupContinuationCount;\r\n                        if (dataOffset < 0) {\r\n                            deferred.resolve(-1);\r\n                            return\r\n                        }\r\n                        var currentPageOffset = groupOffset % pageSize || pageSize;\r\n                        count = currentPageOffset + dataOffset - groupPath.length;\r\n                        if (isVirtualScrolling) {\r\n                            groupContinuationCount = 0\r\n                        } else {\r\n                            groupContinuationCount = Math.floor(count / (pageSize - groupPath.length)) * groupPath.length\r\n                        }\r\n                        count = groupOffset + dataOffset + groupContinuationCount;\r\n                        deferred.resolve(count)\r\n                    })).fail(deferred.reject)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.row_dragging.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Sortable from \"../sortable\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nvar COMMAND_HANDLE_CLASS = \"dx-command-drag\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar HANDLE_ICON_CLASS = \"drag-icon\";\r\nvar ROWS_VIEW = \"rowsview\";\r\nvar SORTABLE_WITHOUT_HANDLE_CLASS = \"dx-sortable-without-handle\";\r\nvar RowDraggingExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateHandleColumn()\r\n    },\r\n    _allowReordering: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        return !!(rowDragging && (rowDragging.allowReordering || rowDragging.allowDropInsideItem || rowDragging.group))\r\n    },\r\n    _updateHandleColumn: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var columnsController = this._columnsController;\r\n        var isHandleColumnVisible = allowReordering && rowDragging.showDragIcons;\r\n        columnsController && columnsController.addCommandColumn({\r\n            type: \"drag\",\r\n            command: \"drag\",\r\n            visibleIndex: -2,\r\n            alignment: \"center\",\r\n            cssClass: COMMAND_HANDLE_CLASS,\r\n            width: \"auto\",\r\n            cellTemplate: this._getHandleTemplate(),\r\n            visible: isHandleColumnVisible\r\n        });\r\n        columnsController.columnOption(\"type:drag\", \"visible\", isHandleColumnVisible)\r\n    },\r\n    _renderContent: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var $content = this.callBase.apply(this, arguments);\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var sortableName = \"_sortable\";\r\n        var sortableFixedName = \"_sortableFixed\";\r\n        var currentSortableName = isFixedTableRendering ? sortableFixedName : sortableName;\r\n        var anotherSortableName = isFixedTableRendering ? sortableName : sortableFixedName;\r\n        var togglePointerEventsStyle = toggle => {\r\n            var _this$sortableFixedNa;\r\n            null === (_this$sortableFixedNa = this[sortableFixedName]) || void 0 === _this$sortableFixedNa ? void 0 : _this$sortableFixedNa.$element().css(\"pointerEvents\", toggle ? \"auto\" : \"\")\r\n        };\r\n        var filter = this.option(\"dataRowTemplate\") ? \"> table > tbody.dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\" : \"> table > tbody > .dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\";\r\n        if ((allowReordering || this[currentSortableName]) && $content.length) {\r\n            this[currentSortableName] = this._createComponent($content, Sortable, extend({\r\n                component: this.component,\r\n                contentTemplate: null,\r\n                filter: filter,\r\n                dragTemplate: this._getDraggableRowTemplate(),\r\n                handle: rowDragging.showDragIcons && \".\".concat(COMMAND_HANDLE_CLASS),\r\n                dropFeedbackMode: \"indicate\"\r\n            }, rowDragging, {\r\n                onDragStart: e => {\r\n                    var _this$getController, _rowDragging$onDragSt;\r\n                    null === (_this$getController = this.getController(\"keyboardNavigation\")) || void 0 === _this$getController ? void 0 : _this$getController._resetFocusedCell();\r\n                    var row = e.component.getVisibleRows()[e.fromIndex];\r\n                    e.itemData = row && row.data;\r\n                    var isDataRow = row && \"data\" === row.rowType;\r\n                    e.cancel = !allowReordering || !isDataRow;\r\n                    null === (_rowDragging$onDragSt = rowDragging.onDragStart) || void 0 === _rowDragging$onDragSt ? void 0 : _rowDragging$onDragSt.call(rowDragging, e)\r\n                },\r\n                onDragEnter: () => {\r\n                    togglePointerEventsStyle(true)\r\n                },\r\n                onDragLeave: () => {\r\n                    togglePointerEventsStyle(false)\r\n                },\r\n                onDragEnd: e => {\r\n                    var _rowDragging$onDragEn;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onDragEn = rowDragging.onDragEnd) || void 0 === _rowDragging$onDragEn ? void 0 : _rowDragging$onDragEn.call(rowDragging, e)\r\n                },\r\n                onAdd: e => {\r\n                    var _rowDragging$onAdd;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onAdd = rowDragging.onAdd) || void 0 === _rowDragging$onAdd ? void 0 : _rowDragging$onAdd.call(rowDragging, e)\r\n                },\r\n                dropFeedbackMode: rowDragging.dropFeedbackMode,\r\n                onOptionChanged: e => {\r\n                    var hasFixedSortable = this[sortableFixedName];\r\n                    if (hasFixedSortable) {\r\n                        if (\"fromIndex\" === e.name || \"toIndex\" === e.name) {\r\n                            this[anotherSortableName].option(e.name, e.value)\r\n                        }\r\n                    }\r\n                }\r\n            }));\r\n            $content.toggleClass(\"dx-scrollable-container\", isFixedTableRendering);\r\n            $content.toggleClass(SORTABLE_WITHOUT_HANDLE_CLASS, allowReordering && !rowDragging.showDragIcons)\r\n        }\r\n        return $content\r\n    },\r\n    _renderCore(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (e && \"update\" === e.changeType && e.repaintChangesOnly && gridCoreUtils.isVirtualRowRendering(this)) {\r\n            deferUpdate(() => {\r\n                this._updateSortable()\r\n            })\r\n        }\r\n    },\r\n    _updateSortable() {\r\n        var offset = this._dataController.getRowIndexOffset();\r\n        [this._sortable, this._sortableFixed].forEach(sortable => {\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.option(\"offset\", offset);\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.update()\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateSortable()\r\n    },\r\n    _getDraggableGridOptions: function(options) {\r\n        var gridOptions = this.option();\r\n        var columns = this.getColumns();\r\n        var $rowElement = $(this.getRowElement(options.rowIndex));\r\n        return {\r\n            dataSource: [{\r\n                id: 1,\r\n                parentId: 0\r\n            }],\r\n            showBorders: true,\r\n            showColumnHeaders: false,\r\n            scrolling: {\r\n                useNative: false,\r\n                showScrollbar: \"never\"\r\n            },\r\n            pager: {\r\n                visible: false\r\n            },\r\n            loadingTimeout: null,\r\n            columnFixing: gridOptions.columnFixing,\r\n            columnAutoWidth: gridOptions.columnAutoWidth,\r\n            showColumnLines: gridOptions.showColumnLines,\r\n            columns: columns.map(column => ({\r\n                width: column.width || column.visibleWidth,\r\n                fixed: column.fixed,\r\n                fixedPosition: column.fixedPosition\r\n            })),\r\n            onRowPrepared: e => {\r\n                var rowsView = e.component.getView(\"rowsView\");\r\n                $(e.rowElement).replaceWith($rowElement.eq(rowsView._isFixedTableRendering ? 1 : 0).clone())\r\n            }\r\n        }\r\n    },\r\n    _getDraggableRowTemplate: function() {\r\n        return options => {\r\n            var $rootElement = this.component.$element();\r\n            var $dataGridContainer = $(\"<div>\");\r\n            setWidth($dataGridContainer, getWidth($rootElement));\r\n            var items = this._dataController.items();\r\n            var row = items && items[options.fromIndex];\r\n            var gridOptions = this._getDraggableGridOptions(row);\r\n            this._createComponent($dataGridContainer, this.component.NAME, gridOptions);\r\n            $dataGridContainer.find(\".dx-gridbase-container\").children(\":not(.\".concat(this.addWidgetPrefix(ROWS_VIEW), \")\")).hide();\r\n            return $dataGridContainer\r\n        }\r\n    },\r\n    _getHandleTemplate: function() {\r\n        return (container, options) => {\r\n            if (\"data\" === options.rowType) {\r\n                $(container).addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                return $(\"<span>\").addClass(this.addWidgetPrefix(HANDLE_ICON_CLASS))\r\n            } else {\r\n                gridCoreUtils.setEmptyText($(container))\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"rowDragging\" === args.name) {\r\n            this._updateHandleColumn();\r\n            this._invalidate(true, true);\r\n            args.handled = true\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n};\r\nexport var rowDraggingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            rowDragging: {\r\n                showDragIcons: true,\r\n                dropFeedbackMode: \"indicate\",\r\n                allowReordering: false,\r\n                allowDropInsideItem: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: RowDraggingExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.row_dragging.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    rowDraggingModule\r\n} from \"../grid_core/ui.grid_core.row_dragging\";\r\ngridCore.registerModule(\"rowDragging\", rowDraggingModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataGrid from \"./ui.data_grid.base\";\r\nexport default DataGrid;\r\nimport \"./ui.data_grid.state_storing\";\r\nimport \"./ui.data_grid.selection\";\r\nimport \"./ui.data_grid.column_chooser\";\r\nimport \"./ui.data_grid.grouping\";\r\nimport \"./ui.data_grid.master_detail\";\r\nimport \"./ui.data_grid.editing\";\r\nimport \"./ui.data_grid.editing_row_based\";\r\nimport \"./ui.data_grid.editing_form_based\";\r\nimport \"./ui.data_grid.editing_cell_based\";\r\nimport \"./ui.data_grid.validating\";\r\nimport \"./ui.data_grid.virtual_scrolling\";\r\nimport \"./ui.data_grid.filter_row\";\r\nimport \"./ui.data_grid.header_filter\";\r\nimport \"./ui.data_grid.filter_sync\";\r\nimport \"./ui.data_grid.filter_builder\";\r\nimport \"./ui.data_grid.filter_panel\";\r\nimport \"./ui.data_grid.search\";\r\nimport \"./ui.data_grid.pager\";\r\nimport \"./ui.data_grid.columns_resizing_reordering\";\r\nimport \"./ui.data_grid.keyboard_navigation\";\r\nimport \"./ui.data_grid.summary\";\r\nimport \"./ui.data_grid.column_fixing\";\r\nimport \"./ui.data_grid.adaptivity\";\r\nimport \"./ui.data_grid.virtual_columns\";\r\nimport \"./ui.data_grid.export\";\r\nimport \"./ui.data_grid.focus\";\r\nimport \"./ui.data_grid.row_dragging\";\r\n","/**\r\n * DevExtreme (esm/ui/data_grid.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataGrid from \"./data_grid/ui.data_grid\";\r\nexport default DataGrid;\r\n"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","DxLookup","DxLoadPanel","DxLabel","DxKeyboardNavigation","DxItem","DxHide","DxHeaderFilter","DxGroupPanel","DxGroupOperationDescriptions","DxGroupItem","DxGroupingTexts","DxGrouping","DxFrom","DxFormItem","DxFormat","DxForm","DxFilterRow","DxFilterPanelTexts","DxFilterPanel","DxFilterOperationDescriptions","DxFilterBuilderPopup","DxFilterBuilder","DxFieldLookup","DxField","DxExportTexts","DxExport","DxEmailRule","DxEditingTexts","DxEditing","DxDataGridHeaderFilterTexts","DxDataGridHeaderFilter","DxCustomRule","DxCustomOperation","DxCursorOffset","DxCompareRule","DxColumnLookup","DxColumnHeaderFilter","DxColumnFixingTexts","DxColumnFixing","DxColumnChooser","DxColumn","DxCollision","DxColCountByScreen","DxChange","DxButton","DxBoundaryOffset","DxAt","DxAsyncRule","DxAnimation","DxDataGrid","DxValueFormat","DxValidationRule","DxTotalItem","DxToolbarItem","DxToolbar","DxTo","DxTexts","DxSummaryTexts","DxSummary","DxStringLengthRule","DxStateStoring","DxSorting","DxSortByGroupSummaryInfo","DxShow","DxSelection","DxSearchPanel","DxScrolling","DxRowDragging","DxRequiredRule","DxRemoteOperations","DxRangeRule","DxPosition","DxPopup","DxPatternRule","DxPaging","DxPager","DxOperationDescriptions","DxOffset","DxNumericRule","DxMy","DxMasterDetail","data_grid_1","index_1","index_2","createComponent","props","accessKey","String","activeStateEnabled","Boolean","allowColumnReordering","allowColumnResizing","autoNavigateToFocusedRow","cacheEnabled","cellHintEnabled","columnAutoWidth","columnChooser","columnFixing","columnHidingEnabled","columnMinWidth","Number","columnResizingMode","columns","Array","columnWidth","customizeColumns","Function","customizeExportData","dataRowTemplate","dataSource","dateSerializationFormat","disabled","editing","elementAttr","errorRowEnabled","export","filterBuilder","filterBuilderPopup","filterPanel","filterRow","filterSyncEnabled","filterValue","focusedColumnIndex","focusedRowEnabled","focusedRowIndex","focusedRowKey","focusStateEnabled","grouping","groupPanel","headerFilter","height","highlightChanges","hint","hoverStateEnabled","keyboardNavigation","keyExpr","loadPanel","masterDetail","noDataText","onAdaptiveDetailRowPreparing","onCellClick","onCellDblClick","onCellHoverChanged","onCellPrepared","onContentReady","onContextMenuPreparing","onDataErrorOccurred","onDisposing","onEditCanceled","onEditCanceling","onEditingStart","onEditorPrepared","onEditorPreparing","onExported","onExporting","onFileSaving","onFocusedCellChanged","onFocusedCellChanging","onFocusedRowChanged","onFocusedRowChanging","onInitialized","onInitNewRow","onKeyDown","onOptionChanged","onRowClick","onRowCollapsed","onRowCollapsing","onRowDblClick","onRowExpanded","onRowExpanding","onRowInserted","onRowInserting","onRowPrepared","onRowRemoved","onRowRemoving","onRowUpdated","onRowUpdating","onRowValidating","onSaved","onSaving","onSelectionChanged","onToolbarPreparing","pager","paging","remoteOperations","renderAsync","repaintChangesOnly","rowAlternationEnabled","rowDragging","rowTemplate","rtlEnabled","scrolling","searchPanel","selectedRowKeys","selection","selectionFilter","showBorders","showColumnHeaders","showColumnLines","showRowLines","sortByGroupSummaryInfo","sorting","stateStoring","summary","tabIndex","toolbar","twoWayBindingEnabled","visible","width","wordWrapEnabled","emits","computed","instance","$_instance","beforeCreate","$_WidgetClass","default","$_hasAsyncTemplate","$_expectedChildren","column","isCollectionItem","optionName","dataGridHeaderFilter","createConfigurationComponent","hide","show","$_optionName","ignoreEmptyValue","message","reevaluate","type","validationCallback","$_isCollectionItem","$_predefinedProps","x","y","cssClass","icon","name","onClick","template","text","data","insertAfterKey","insertBeforeKey","lg","md","sm","xs","alignment","allowEditing","allowExporting","allowFiltering","allowFixing","allowGrouping","allowHeaderFiltering","allowHiding","allowReordering","allowResizing","allowSearch","allowSorting","autoExpandGroup","buttons","calculateCellValue","calculateDisplayValue","calculateFilterExpression","calculateGroupValue","calculateSortValue","caption","cellTemplate","customizeText","dataField","dataType","editCellTemplate","editorOptions","encodeHtml","falseText","filterOperations","filterType","filterValues","fixed","fixedPosition","format","formItem","groupCellTemplate","grouped","groupIndex","headerCellTemplate","hidingPriority","isBand","lookup","minWidth","ownerBand","resized","selectedFilterOperation","setCellValue","showEditorAlways","showInColumnChooser","showWhenGrouped","sortIndex","sortingMethod","sortOrder","trueText","validationRules","visibleIndex","AsyncRule","button","columnHeaderFilter","columnLookup","CompareRule","CustomRule","EmailRule","NumericRule","PatternRule","RangeRule","RequiredRule","StringLengthRule","validationRule","emptyPanelText","enabled","mode","searchTimeout","title","texts","columnFixingTexts","fix","leftPosition","rightPosition","unfix","groupInterval","searchMode","allowClearing","displayExpr","valueExpr","comparisonTarget","comparisonType","dataTypes","editorTemplate","hasValue","dataGridHeaderFilterTexts","cancel","emptyValue","ok","allowAdding","allowDeleting","allowUpdating","changes","confirmDelete","editColumnName","editRowKey","form","newRowPosition","popup","refreshMode","selectTextOnEditStart","startEditAction","useIcons","change","editingTexts","addRow","cancelAllChanges","cancelRowChanges","confirmDeleteMessage","confirmDeleteTitle","deleteRow","editRow","saveAllChanges","saveRowChanges","undeleteRow","validationCancelChanges","allowExportSelectedData","customizeExcelCell","excelFilterEnabled","excelWrapTextEnabled","fileName","ignoreExcelErrors","proxyUrl","exportTexts","exportAll","exportSelectedRows","exportTo","defaultFilterOperation","fieldLookup","allowHierarchicalFields","bindingOptions","customOperations","fields","filterOperationDescriptions","groupOperationDescriptions","groupOperations","maxGroupLevel","onFocusIn","onFocusOut","onValueChanged","customOperation","field","animation","closeOnOutsideClick","container","contentTemplate","copyRootClassesToWrapper","deferRendering","dragAndResizeArea","dragEnabled","dragOutsideBoundary","fullScreen","hideOnParentScroll","maxHeight","maxWidth","minHeight","onHidden","onHiding","onResize","onResizeEnd","onResizeStart","onShowing","onShown","onTitleRendered","position","resizeEnabled","restorePosition","shading","shadingColor","showCloseButton","showTitle","titleTemplate","toolbarItems","wrapperAttr","between","contains","endsWith","equal","greaterThan","greaterThanOrEqual","isBlank","isNotBlank","lessThan","lessThanOrEqual","notContains","notEqual","startsWith","filterEnabled","filterPanelTexts","clearFilter","createFilter","filterEnabledHint","applyFilter","applyFilterText","betweenEndText","betweenStartText","operationDescriptions","resetOperationText","showAllText","showOperationChooser","alignItemLabels","alignItemLabelsInAllGroups","colCount","colCountByScreen","customizeItem","formData","items","labelLocation","labelMode","minColWidth","onEditorEnterKey","onFieldDataChanged","optionalMark","readOnly","requiredMark","requiredMessage","screenByWidth","scrollingEnabled","showColonAfterLabel","showOptionalMark","showRequiredMark","showValidationSummary","validationGroup","currency","formatter","parser","precision","colSpan","editorType","helpText","isRequired","itemType","label","left","opacity","scale","top","allowCollapsing","autoExpandAll","contextMenuEnabled","expandMode","groupingTexts","groupByThisColumn","groupContinuedMessage","groupContinuesMessage","ungroup","ungroupAll","alignByColumn","displayFormat","showInColumn","showInGroupFooter","skipEmptyValues","summaryType","valueFormat","and","notAnd","notOr","or","allowColumnDragging","complete","delay","direction","duration","easing","from","staggerDelay","start","to","html","locateInMenu","location","menuItemTemplate","options","showText","widget","editOnKeyPress","enterKeyAction","enterKeyDirection","showColon","indicatorSrc","showIndicator","showPane","allowedPageSizes","displayMode","infoText","showInfo","showNavigationButtons","showPageSizeSelector","pageIndex","pageSize","pattern","toolbarItem","at","boundary","boundaryOffset","collision","my","of","offset","max","min","filtering","groupPaging","trim","allowDropInsideItem","autoScroll","cursorOffset","dragDirection","dragTemplate","dropFeedbackMode","filter","group","handle","onAdd","onDragChange","onDragEnd","onDragMove","onDragStart","onRemove","onReorder","scrollSensitivity","scrollSpeed","showDragIcons","columnRenderingMode","preloadEnabled","rowRenderingMode","scrollByContent","scrollByThumb","showScrollbar","useNative","highlightCaseSensitive","highlightSearchText","placeholder","searchVisibleColumnsOnly","allowSelectAll","deferred","maxFilterLengthInRequest","selectAllMode","showCheckBoxesMode","groupColumn","summaryItem","ascendingText","clearText","descendingText","showSortIndexes","customLoad","customSave","savingTimeout","storageKey","calculateCustomSummary","groupItems","recalculateWhileEditing","totalItems","groupItem","summaryTexts","totalItem","avg","avgOtherColumn","count","maxOtherColumn","minOtherColumn","sum","sumOtherColumn","item","DEFAULT_DATE_INTERVAL","DEFAULT_DATETIME_INTERVAL","isDateType","getGroupInterval","index","result","dateIntervals","interval","slice","push","isArray","getFilterSelector","target","selector","displayField","getFilterExpressionByRange","endFilterValue","startFilterExpression","endFilterExpression","date","getHours","getMinutes","getSeconds","getMilliseconds","Date","getTime","setDate","getDate","getFilterExpressionForDate","dateStart","dateEnd","dateInterval","values","dateValue","getFullYear","getMonth","split","length","getFilterExpressionForNumber","startFilterValue","condition","defaultCalculateFilterExpression","isSearchByDisplayValue","apply","arguments","DATAGRID_SELECTION_DISABLED_CLASS","DATAGRID_GROUP_OPENED_CLASS","DATAGRID_GROUP_CLOSED_CLASS","DATAGRID_EXPAND_CLASS","NO_DATA_CLASS","SCROLLING_MODE_INFINITE","SCROLLING_MODE_VIRTUAL","LEGACY_SCROLLING_MODE","SCROLLING_MODE_OPTION","ROW_RENDERING_MODE_OPTION","DATE_INTERVAL_SELECTORS","year","month","day","quarter","Math","floor","hour","minute","second","getIntervalSelector","nameIntervalSelector","equalSelectors","selector1","selector2","originalCallback","columnIndex","setEmptyText","$container","get","textContent","normalizeSortingInfo","sort","i","isExpanded","formatValue","valueText","toString","formatObject","getDisplayFormat","call","getSummaryText","columnCaption","getWidgetInstance","$element","editorData","dxComponents","widgetName","equalFilterParameters","filter1","filter2","renderNoDataText","element","noDataClass","addWidgetPrefix","noDataElement","find","last","isVisible","_dataController","isEmpty","isLoading","addClass","appendTo","removeClass","_getNoDataText","renderLoadPanel","isLocalStore","loadPanelOptions","_loadPanel","remove","option","extend","_createComponent","calculateLoadPanelPosition","$window","getIndexByKey","key","keyName","combineFilters","filters","operation","resultFilter","_filters$i","checkChanges","changeNames","changesWithChangeNamesCount","proxyMethod","methodName","defaultResult","_dataSource","getFormatOptionsByColumn","getDisplayValue","rowType","displayValueMap","getGroupRowSummaryText","summaryItems","getFormatByDataType","getHeaderFilterGroupParameters","remoteGrouping","bind","compare","equalSortParameters","sortParameters1","sortParameters2","ignoreIsExpanded","desc","getPointsByColumns","pointCreated","isVertical","startColumnIndex","cellsLength","notCreatePoint","eq","css","point","prevItemOffset","getExpandCellTemplate","allowRenderToDetachedContainer","render","isContinuation","row","isNewRow","rowsView","component","getView","setAria","localize","getSelectionRange","focusedElement","selectionStart","selectionEnd","e","setSelectionRange","selectionRange","focusAndSelectElement","isFocused","is","isSelectTextOnEditingStart","editor","closest","_loadItemDeferred","done","select","getLastResizableColumnIndex","resultWidths","lastColumnIndex","hasResizableColumns","some","command","isElementInCurrentGrid","controller","$grid","getWidgetContainerClass","parent","isVirtualRowRendering","that","isVirtualMode","isAppendMode","getPixelRatio","window","devicePixelRatio","getContentHeightLimit","browser","mozilla","WIDGET_WITH_LEGACY_CONTAINER_NAME","ModuleItem","_endUpdateCore","ctor","_updateLockCount","_actions","_actionConfigs","callbackNames","flags","callbackFlags","unique","syncStrategy","init","publicMethods","beginUpdate","endUpdate","optionCache","_optionCache","_silentOption","_setOptionWithoutOptionChange","on","off","optionChanged","args","createAction","handled","getAction","actionName","$target","prefix","setAttribute","attr","getController","_controllers","config","action","_createAction","event","_createActionByOption","executeAction","dispose","empty","className","componentName","NAME","toLowerCase","containerName","Controller","ViewController","inherit","_views","getViews","View","_isReady","isReady","callBase","_requireReady","_requireRender","_requireResize","_$parent","_invalidate","requireResize","requireReady","_renderCore","_resizeCore","_parentElement","renderCompleted","resizeCompleted","_$element","getElementHeight","marginTop","parseFloat","marginBottom","offsetHeight","getTemplate","_getTemplate","$parent","toggleClass","fire","resize","isResizing","focus","MODULES_ORDER_MAX_INDEX","processModules","componentClass","modules","modulesOrder","controllerTypes","viewTypes","module1","module2","orderIndex1","orderIndex2","controllers","moduleName","views","subclassOf","extenders","extender","createModuleItems","moduleTypes","moduleItems","moduleType","moduleItem","callModuleItemsMethod","registerModule","module","registerModulesOrder","moduleNames","unregisterModule","COLUMN_INDICATORS_CLASS","GROUP_PANEL_ITEM_CLASS","_applyColumnState","_that$component","columnAlignment","_getColumnAlignment","parameters","isGroupPanelItem","rootElement","hasClass","$indicatorsContainer","_createIndicatorContainer","$span","_getIndicatorClassName","columnsController","indicatorAlignment","getHeaderContentAlignment","indicator","_renderIndicator","ignoreIndicatorAlignment","_getIndicatorContainer","$cell","_getIndicatorElements","$indicatorContainer","children","$indicator","append","_updateIndicators","indicatorName","getColumns","$cells","getColumnElements","_updateIndicator","rowOptions","cells","SCROLL_CONTAINER_CLASS","SCROLLABLE_SIMULATED_CLASS","GROUP_SPACE_CLASS","CONTENT_CLASS","TABLE_CLASS","TABLE_FIXED_CLASS","CONTENT_FIXED_CLASS","ROW_CLASS","GROUP_ROW_CLASS","DETAIL_ROW_CLASS","FILTER_ROW_CLASS","ERROR_ROW_CLASS","CELL_UPDATED_ANIMATION_CLASS","HIDDEN_COLUMNS_WIDTH","CELL_HINT_VISIBLE","FORM_FIELD_ITEM_CONTENT_CLASS","appendElementTemplate","content","subscribeToRowEvents","$table","touchTarget","touchCurrentTarget","timeoutId","clearTouchTargets","timeout","setTimeout","clearTimeout","currentTarget","click","pointer","join","_isNativeClick","rowIndex","getRowIndex","rowElement","_rowPointerDown","_rowClick","_rowDblClick","getWidthStyle","setCellWidth","cell","style","copyAttributes","newElement","oldAttributes","attributes","newAttributes","nodeName","hasAttribute","removeAttribute","nodeValue","ColumnsView","_createScrollableOptions","scrollingOptions","useNativeScrolling","bounceEnabled","useKeyboard","useSimulatedScrollbar","_updateCell","_cellPrepared","_createCell","textAlign","headerId","colspan","visibleWidth","_createRow","rowObject","tagName","concat","_isAltRow","dataIndex","_createTable","isAppend","_createColGroup","ctrlKey","preventDefault","$row","isDataRow","isHeaderRow","isGroupRow","isMasterDetailRow","isFilterRow","visibleColumns","_columnsController","getVisibleColumns","cellOptions","removeAttr","difference","scrollWidth","clientWidth","getOptions","$fieldItemContent","delegateTarget","resultOptions","cellElement","eventType","formItemOptions","getVisibleIndex","colgroupElement","j","_createCol","col","renderDelayedTemplates","delayedTemplates","_delayedTemplates","syncTemplates","async","asyncTemplates","_renderDelayedTemplatesCore","_renderDelayedTemplatesCoreAsync","templates","isAsync","templateParameters","shift","doc","_processTemplate","renderingTemplate","model","resolve","renderedTemplate","nodeType","templateID","_templatesCache","renderTemplate","templateDeferred","templateOptions","onRendered","templateDeferreds","reject","promise","_getBodies","tableElement","not","_wrapRowIfNeed","hasDataRowTemplate","$tBodies","_tableElement","$tbody","_appendRow","appendTemplate","scrollLeft","_scrollLeft","scrollTo","$root","_renderTable","changeType","_renderRows","rows","_getRows","columnIndices","changeTypes","_renderRow","$wrappedRow","_renderCells","_addWatchMethod","_rowPrepared","_needRenderCell","indexOf","_renderCell","oldValue","oldValues","_updateCells","$rowElement","$newRowElement","$newCells","cellUpdatedClass","forEach","$newCell","replaceWith","_setCellAriaAttributes","columnIndexOffset","getColumnIndexOffset","ariaColIndex","_getCellOptions","_renderCellContent","appendChild","_getCellTemplate","isAltRow","source","watchers","watch","getter","updateValueFunc","updateRowFunc","watcher","newValue","JSON","stringify","splice","update","keepRow","_columnOptionChanged","optionNames","widths","iterator","setColumnWidths","getCellIndex","cellIndex","getTableElements","getTableElement","setTableElement","excludeValidators","category","afterExecute","_afterRowPrepared","columnsChanged","add","changed","_handleDataChanged","_updateScrollLeftPosition","pos","$scrollContainer","_wrapTableInScrollContainer","nativeScrolling","scrollChanged","_updateContent","$newTableElement","_findContentElement","_getWidths","$cellElements","offsetWidth","getBoundingClientRect","clientRect","getColumnWidths","$tableElement","$rows","isRowVisible","display","getVisibleColumnIndex","_ref","$cols","classList","querySelector","toFixed","getCellElements","_getCellElementsCore","_getRowElements","_getCellElement","columnIdentifier","columnVisibleIndex","_getVisibleColumnIndex","_getRowElement","$tableElements","_","getCellElement","getRowElement","elements","columnOption","getCell","cellPosition","getRowsCount","_getRowElementsCore","hasRowTemplate","tBodies","getBoundingRect","getName","setScrollerSpacing","paddingLeft","paddingRight","isScrollbarVisible","isHorizontal","FOCUS_STATE_CLASS","FOCUS_DISABLED_CLASS","FOCUSED_ROW_SELECTOR","GRID_ROW_SELECTOR","GRID_CELL_SELECTOR","TREELIST_ROW_SELECTOR","TREELIST_CELL_SELECTOR","viewItemSelectorMap","columnHeaders","footer","isMouseDown","isHiddenFocusing","focusedElementInfo","processKeyDown","viewName","$mainElement","executeKeyDown","isHandled","fireKeyDownEvent","originalEvent","saveFocusedElementInfo","selectView","ariaLabel","$activeElements","getActiveAccessibleElements","targetIndex","viewInstance","viewElement","$viewElement","findFocusedViewElement","viewSelectors","$focusViewElement","first","onDocumentVisibilityChange","visibilityState","subscribeVisibilityChange","unsubscribeVisibilityChange","hiddenFocus","registerKeyboardAction","getMainElement","keyDownHandler","mouseDownHandler","focusinHandler","needShowOverlay","restoreFocus","$targetElement","viewNames","keys","viewItemIndex","_viewName","setTabIndex","keyboardController","isKeyboardEnabled","CELL_CONTENT_CLASS","HEADERS_CLASS","NOWRAP_CLASS","ROW_CLASS_SELECTOR","HEADER_ROW_CLASS","COLUMN_LINES_CLASS","CONTEXT_MENU_SORT_ASC_ICON","CONTEXT_MENU_SORT_DESC_ICON","CONTEXT_MENU_SORT_NONE_ICON","CELL_FOCUS_DISABLED_CLASS","VISIBILITY_HIDDEN_CLASS","TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX","SORT_INDICATOR_CLASS","SORT_INDEX_INDICATOR_CLASS","HEADER_FILTER_CLASS_SELECTOR","HEADER_FILTER_INDICATOR_CLASS","MULTI_ROW_HEADER_CLASS","columnHeadersModule","defaultOptions","columnHeadersView","createCellContent","$cellContent","addCssClassesToCellContent","contentAlignment","$indicatorElements","$visibleIndicatorElements","indicatorCount","sortIndicatorClassName","sortIndexIndicatorClassName","$sortIndicator","$sortIndexIndicator","shiftKey","_isLegacyKeyboardNavigation","_getDefaultTemplate","$content","_getHeaderTemplate","resultTemplate","_isGroupingChanged","_handleActionKeyDown","_lastActionElement","headerFilterController","$column","getColumnIndexByElement","showHeaderFilterMenu","_processHeaderAction","isLoaded","_hasRowElements","getRowCount","_getRowVisibleColumns","$cellElement","rowspan","rowCount","groupExpanding","_isElementVisible","elementOptions","_alignCaptionByCenter","clone","insertBefore","$indicatorElement","returnAll","_isSortableElement","getHeadersRowHeight","$headerRows","toArray","reduce","headerRow","getHeaderElement","columnElements","bandColumnIndex","getChildrenByBandColumn","$columnElements","allowDragging","sourceLocation","draggingPanels","draggableColumnCount","canHideColumn","allowDrag","isColumnOptionUsed","draggingPanel","getColumnCount","getHeight","getContextMenuItems","sortingOptions","onItemClick","params","changeSortOrder","itemData","setRowsOpacity","columnID","setColumnOpacity","USER_STATE_FIELD_NAMES_15_1","USER_STATE_FIELD_NAMES","IGNORE_COLUMN_OPTION_NAMES","bestFitWidth","bufferedFilterValue","COMMAND_EXPAND_CLASS","MAX_SAFE_INTEGER","GROUP_COMMAND_COLUMN_NAME","regExp","globalColumnId","columnsControllerModule","commonColumnSettings","adaptColumnWidthByRatio","regenerateColumnsByVisibleItems","DEFAULT_COLUMN_OPTIONS","DATATYPE_OPERATIONS","number","string","datetime","COLUMN_INDEX_OPTIONS","setFilterOperationsAsDefaultValues","defaultFilterOperations","createColumn","columnOptions","userStateColumnOptions","bandColumn","commonColumnOptions","setName","getCommonSettings","calculatedColumnOptions","_createCalculatedColumnOptions","createColumnsFromOptions","columnsOptions","_columnsUserState","checkUserStateColumn","hasColumns","getParentBandColumns","columnParentByIndex","unshift","_getChildrenByBandColumn","columnChildrenByIndex","recursive","getColumnFullPath","bandColumnsCache","getBandColumnsCache","callbackFilter","isPlain","_columns","calculateColspan","getValueDataType","getSerializationFormat","updateSerializers","deserializeValue","serializeValue","serializationFormat","parsedValue","isNaN","customizeTextForBooleanDataType","getCustomizeTextByDataType","updateColumnIndexes","_commandColumns","updateColumnGroupIndexes","currentColumn","getColumnIndexByVisibleIndex","getGroupColumns","getChooserColumns","userStateColumn","applyUserState","userStateColumnIndex","columnsUserState","ignoreColumnOptionNames","_ignoreColumnOptionNames","columnCountById","resultColumns","allColumnsHaveState","userStateColumnIndexes","applyFieldsState","fieldName","defaultSelectedFilterOperation","findUserStateColumn","id","_hasUserState","initialIndex","hasAddedBands","columnUserState","added","assignColumns","updateIndexes","isSortOrderValid","resetBandColumnsCache","bandColumns","parentBandColumns","resetColumnsCache","updateColumnDataTypes","updateColumnChanges","columnChanges","_columnChanges","fireColumnsChanged","onColumnsChanging","reinitOptionNames","isInitialized","reinit","updateSortOrderWhenGrouping","prevGroupIndex","columnWasGrouped","lastSortOrder","sortMode","sortedByAnotherColumn","fireOptionChanged","prevValue","fullOptionName","fullOptionPath","_skipProcessingColumnsChange","_notifyOptionChanged","columnOptionCore","notFireEvent","initialColumn","optionGetter","functionsAsIs","optionSetter","_checkColumns","getColumnByPath","defaultSetCellValue","path","dotCount","isCustomCommandColumn","commandColumn","getFixedPosition","processExpandColumns","expandColumns","customColumnIndex","expandColumnsByType","expandColumn","numberToString","digitsCount","str","mergeColumns","commandColumns","needToExtend","commandColumnIndex","map","isColumnFixing","_isColumnFixing","defaultCommandColumns","getCommandColumnIndex","columnType","isColumnFixed","_bandColumnsCache","findColumn","identifier","identifierOptionName","substr","_getExpandColumnOptions","_getFirstItems","groupsCount","getFirstItemsCore","childItems","collapsedItems","_isColumnsFromOptions","addCommandColumn","_dataSourceApplied","applyDataSource","columnIndexes","replace","parseInt","needUpdateRequireResize","previousValue","fullName","_updateRequireResize","columnOptionValue","columnOptionName","forceApplying","isDataSourceLoaded","_dataSourceColumnsCount","columnsFromDataSource","firstItems","processedFields","updateColumns","isAllDataTypesDefined","reset","_visibleColumns","_fixedColumns","_rowCount","getUserState","isDataSourceApplied","groupingOptions","groupPanelOptions","checkSerializers","defaultCalculateCellValue","isBandColumnsUsed","_getVisibleColumnsCore","getFixedColumns","_getFixedColumnsCore","getFilteringColumns","notFixedColumnCount","transparentColumnIndex","lastFixedPosition","transparentColumn","transparentColspan","prevColumn","newColumn","_getExpandColumnsCore","getExpandColumns","firstGroupColumn","isFixedFirstGroupColumn","parentIndex","_isColumnVisible","isParentColumnVisible","isFixedToEnd","rowspanGroupColumns","rowspanExpandColumns","positiveIndexedColumns","negativeIndexedColumns","notGroupedColumnsCount","columnDigitsCount","indexedColumns","firstPositiveIndexColumn","columnsByFixing","columnsByVisibleIndex","getDataColumns","bandColumnID","getInvisibleColumns","hiddenColumnsByBand","getAllColumns","columnChooserColumns","sign","column1","column2","caption1","caption2","localeCompare","allowMoveColumn","fromVisibleIndex","toVisibleIndex","targetLocation","sourceColumn","moveColumn","targetGroupIndex","fromIndex","toIndex","groupColumns","targetColumn","sortingMode","needResetSorting","getSortDataSourceParameters","useLocalSelector","sortColumns","sortItem","getGroupDataSourceParameters","refresh","updateNewLookupsOnly","deferreds","valueMap","_updateColumnOptions","calculateCallbackName","calculateCallback","context","isRTL","isColumnDataTypesUpdated","lookupDataType","valueDataType","_customizeColumns","hasOwnerBand","updateSortingGrouping","sortParameters","groupParameters","filterParameters","lastLoadOptions","always","_updateChanges","dataController","getCombinedFilter","fromDataSource","isColumnsChanged","updateSortGroupParameterIndexes","indexParameterName","columnsGroupParameters","columnsSortParameters","groupingChanged","groupExpandingChanged","updateFilter","remoteFiltering","forceIsoDateParsing","columnCount","clearSorting","clearGrouping","getVisibleIndexByColumn","visibleColumn","addColumn","deleteColumn","childIndexes","handleStateField","setUserState","state","isFilterPanelHidden","usedNames","hasEditableColumnWithoutName","duplicatedNames","_column$columns","isEditable","skipDeserialization","parseValue","formattedValue","formattedValueWithDefaultFormat","createFilterExpression","userDataType","updateValueMap","calculateValue","displayValue","dataSourceOptions","paginate","load","resizedCallbacks","defaultOptionName","charAt","toUpperCase","parents","invisibleParents","alwaysGetRowIndex","onlyVisibleDirectChildren","isParentBandColumn","getColumnId","cloneItems","groupCount","calculateOperationTypes","loadOptions","isFullReload","operationTypes","reload","fullReload","groupExpand","skip","take","getPageDataFromCache","updatePaging","storeLoadOptions","fillItemsFromCache","cacheItemsFromBegin","cacheItemBeginCount","cacheItemsFromEnd","_options$skip2","_options$take2","cacheItemEndCount","cachedDataPartBegin","cachedDataPartEnd","reverse","fromEnd","_options$take","_options$cachedData","cachedItems","cachedData","_ref2","_options$skip","localIndex","cacheItemIndex","cacheItem","getItemFromCache","skips","takes","getGroupItemFromCache","isContinuationOnNextPage","childCacheItem","getCacheItem","loadedItem","globalIndex","childSkips","_remoteOperations","_isLastPage","isLastPage","_hasLastPage","_currentTotalCount","_cachedData","_lastOperationTypes","_eventsStrategy","_totalCountCorrection","_isLoadingAll","loadingChanged","loadError","customizeStoreLoadOptions","changing","pushed","_dataChangedHandler","_customizeStoreLoadOptionsHandler","_handleCustomizeStoreLoadOptions","_dataLoadedHandler","_handleDataLoaded","_loadingChangedHandler","_handleLoadingChanged","_loadErrorHandler","_handleLoadError","_pushHandler","_handlePush","_changingHandler","_handleChanging","store","memberName","member","isSharedDataSource","resetCurrentTotalCount","resetCache","_cachedStoreData","_cachedPagingData","resetPagesCache","_needClearStoreDataCache","_lastLoadOptions","isLocalOperations","every","operationName","fromStore","keyInfo","_applyBatch","getDataIndexGetter","_dataIndexGetter","indexByKey","storeData","isCacheUpdated","keyOf","_getKeyInfo","totalCount","getItemCount","itemsCount","oldItemCount","_items","useInsertIndex","_ref5","_needCleanCacheByOperation","operationType","operationTypesByOrder","operationTypeIndex","currentOperationTypes","_customizeRemoteOperations","cachedStoreData","cachedPagingData","isCustomLoading","_options$data","_handleDataLoading","originalStoreLoadOptions","_isRefreshing","isRefreshing","_loadingOperationTypes","_isRefreshed","_lastOperationId","operationId","fail","_handleDataLoadingCore","cachedExtra","extra","localLoadOptionNames","requireTotalCount","optionValue","localPaging","needCache","needPageCache","needPagingCache","needStoreCache","mergeStoreLoadData","error","_handleDataLoadedCore","_ref3","_options$skip3","_ref4","_options$take3","cacheItems","_loadPageSize","currentTotalCount","isDataLoading","pageCount","_operationTypes","_scheduleCustomLoadCallbacks","_isCustomLoading","loadingOperationTypes","totalCountCorrection","totalItemsCount","ceil","hasKnownLastPage","loadFromStore","d","dataSourceLoadOptions","loadResult","_customLoadOptions","isLoadingAll","_scheduleLoadCallbacks","fireEvent","full","getCachedStoreData","dataSourceAdapterType","create","dataControllerModule","loadingTimeout","include","changePaging","_getPagingOptionValue","_skipProcessingPagingChange","pageChanged","members","_cachedProcessedItems","_currentOperationTypes","_columnsChangedHandler","_handleColumnsChanged","_dataPushedHandler","_handleDataPushed","_isLoading","_repaintChangesOnly","_changes","dataErrorOccurred","_refreshDataSource","stopOnFalse","_this$_dataSource","isValueChanged","_array","isParasiteChange","_setPagingOptions","_useSortingGroupingFromColumns","getDataSource","returnDataField","combinedFilter","additionalFilter","_calculateAdditionalFilter","waitReady","_readyDeferred","updateItems","_storeLoadOptions$fil","_columnsUpdating","filterApplied","_applyFilter","_needApplyFilter","updateItemsHandler","virtualColumnsScrolling","isAsyncDataSourceApplying","_isDataSourceApplying","isDelayed","needApplyFilter","_isAllDataTypesDefined","_fireLoadingChanged","fireError","pagingEnabled","scrollingMode","appendMode","virtualMode","isChanged","_getSpecificDataSourceOption","_initDataSource","oldDataSource","setDataSource","_loadDataSource","_beforeProcessItems","getRowIndexDelta","_processItems","rowIndexDelta","visibleItems","lastVisibleItem","_processItem","_generateDataItem","_processDataItem","dataItem","generateDataValues","isModified","_applyChange","_applyChangeUpdate","_applyChangesOnly","_applyChangeFull","_getRowIndices","rowIndices","a","b","correctedRowIndex","allowInvisibleRowIndices","prevIndex","rowIndexCorrection","equalItems","item1","item2","strict","isEditing","oldItem","oldNextItem","newItem","newNextItem","isFullUpdate","_partialUpdateRow","_isCellChanged","oldRow","newRow","visibleRowIndex","isLiveUpdate","isCellModified","modifiedValues","_getChangedColumnIndices","_cell$column","_changedColumnIndices","changedColumnIndices","isCellChanged","_isItemEquals","_item1$data","_item2$data","_item1$data2","_item2$data2","expandedMatch","summaryCellsMatch","summaryCells","continuationMatch","newIndexByKey","getRowKey","currentItems","oldItems","_correctRowIndices","oldRowIndexOffset","_rowIndexOffset","rowIndexOffset","getRowIndexOffset","newVisibleRowIndex","_afterProcessItems","_updateItemsCore","cachedProcessedItems","useProcessedItemsCache","loadIndex","getVisibleRows","isDataChanged","needUpdateDimensions","_needUpdateDimensions","_fireChanged","_loadingText","_isFilterApplying","resetFilterApplying","filterExpr","prototype","filterName","clearColumnOption","searchByText","_fireDataSourceChanged","changedHandler","dataSourceChanged","_getDataSourceAdapter","_createDataSourceAdapterCore","dataSourceAdapterProvider","dataSourceAdapter","isCustomStore","_createDataSourceAdapter","enabledRemoteOperations","cancelAll","_isSharedDataSource","loadAll","getKeyByRowIndex","byLoaded","getRowIndexByKey","byKey","getDataByKeys","rowKeys","keyData","beginCustomLoading","messageText","endCustomLoading","changesOnly","customizeLoadResult","_disposeDataSource","repaintRows","rowIndexes","skipProcessingPagingChange","searchText","isLastPageLoaded","DataController","SORT_CLASS","SORT_NONE_CLASS","SORTUP_CLASS","SORTDOWN_CLASS","SORT_INDEX_CLASS","SORT_INDEX_ICON_CLASS","HEADERS_ACTION_CLASS","ariaSortState","isSortingAllowed","hasSeveralSortIndexes","prepend","COLUMN_HEADERS_VIEW_NAMESPACE","ColumnHeadersViewSortingExtender","$cellElementFromEvent","editingController","editingMode","isCellEditing","HeaderPanelSortingExtender","_createGroupPanelItem","$rootElement","$item","_processGroupItemAction","groupColumnIndex","sortingModule","headerPanel","ROWS_VIEW_CLASS","GROUP_CELL_CLASS","DATA_ROW_CLASS","FREE_SPACE_CLASS","ROW_LINES_CLASS","ROW_ALTERNATION_CLASS","LAST_ROW_BORDER","EMPTY_CLASS","ROW_INSERTED_ANIMATION_CLASS","LOADPANEL_HIDE_TIMEOUT","getMaxHorizontalScrollOffset","scrollable","round","rowsModule","defaultCellTemplate","isDataTextEmpty","innerHTML","_getDefaultGroupTemplate","_update","isGroup","isRowExpanded","_setAriaRowIndex","isPagerMode","arg","deep","skipImmediate","_renderScrollable","force","_renderLoadPanel","getScrollable","allColumnsHasWidth","_hasHeight","_renderScrollableCore","_handleScroll","isNativeScrolling","_scrollTop","scrollOffset","_scrollRight","dxScrollableOptions","scrollHandler","onScroll","_scrollable","_scrollableContainer","_renderContent","contentElement","newTableElement","executors","rowInsertedClass","$rowsElement","toggle","insertAfter","prependTo","_createEmptyRow","isFixed","_appendEmptyRow","$emptyRow","isTableContainer","$colgroup","_renderFreeSpaceRow","$freeSpaceRowElement","_checkRowKeys","_needUpdateRowHeight","_rowHeight","_getRowsHeight","$rowElements","_updateRowHeight","rowsHeight","_getFreeSpaceRowElements","tableElements","evaluate","expr","_getColumnsCountBeforeGroups","_getGroupCellOptions","columnsCountBeforeGroups","_renderGroupedCells","groupCellOptions","groupColumnAlignment","updateFreeSpaceRowHeight","_renderDataRowByTemplate","resizeCompletedHandler","scrollableInstance","document","_visibilityChanged","_lastColumnWidths","groupingTextsOptions","_setRowsOpacityCore","_getDevicePixelRatio","getCellOptions","getRow","itemCount","freeSpaceRowElements","isFreeSpaceRowVisible","scrollbarWidth","getScrollbarWidth","elementHeightWithoutScrollbar","contentHeight","showFreeSpaceRow","borderTopWidth","heightCorrection","_getHeightCorrection","resultHeight","_updateLastRowBorder","freeSpaceRowCount","isZoomedWebkit","isChromeLatest","hasExtraBorderTop","_fireColumnResizedCallbacks","_editorFactoryController","setLoading","contentWidth","scrollableContainer","clientHeight","lastColumnWidths","columnWidths","_updateScrollable","dxScrollable","_updateHorizontalScrollPosition","maxHorizontalScrollOffset","scrollRight","_height","hasHeight","visibilityOptions","_hideLoadingTimeoutID","groupCellIndex","_getBoundaryVisibleItemIndex","isTop","isFloor","itemIndex","prevOffset","viewportBoundary","$contentElement","contentElementOffsetTop","rowElements","outerHeight","getTopVisibleItemIndex","getBottomVisibleItemIndex","getTopVisibleRowData","_scrollToElement","scrollToElement","_restoreErrorRow","CONTEXT_MENU","footerView","VIEW_NAMES","ContextMenuController","dxEvent","$targetRowElement","$targetCellElement","menuItems","view","_rowOptions$cells","targetElement","_contextMenuPrepared","ContextMenuView","onPositioning","actionArgs","contextMenuInstance","stopPropagation","contextMenuModule","contextMenu","contextMenuView","ERROR_MESSAGE_CLASS","ERROR_CLOSEBUTTON_CLASS","ACTION_CLASS","ErrorHandlingController","_columnHeadersView","_rowsView","_createErrorRow","$errorRow","$closeButton","$errorMessage","_renderErrorMessage","errorRowIndex","removeErrorRow","fireContentReadyAction","role","url","$message","renderErrorRow","$popupContent","$errorMessageElement","$firstErrorRow","next","resizingController","$columnHeaders","$rowsViewElement","errorHandlingModule","errorHandling","errorHandlingController","hasChanges","BORDERS_CLASS","IMPORTANT_MARGIN_CLASS","GRIDBASE_CONTAINER_CLASS","isPercentWidth","isPixelWidth","getContainerHeight","paddingTop","paddingBottom","calculateFreeWidth","totalWidth","_getTotalWidth","calculateFreeWidthWithCurrentMinWidth","currentMinWidth","ResizingController","_initPostRenderHandlers","_refreshSizesHandler","_refreshSizes","resizeDeferred","_e$changeTypes","_setScrollerSpacing","_setAriaRowColCount","_fireContentReadyAction","_getBestFitWidths","_widths","_rowsView$getTableEle","headersTableElement","_setVisibleWidths","columnId","_toggleBestFitModeForView","isBestFit","$rowsTables","$viewTables","$tableBody","$rowsTable","$viewTable","_toggleBestFitMode","$rowsFixedTable","_footerView","_toggleContentMinHeight","_needStretch","_synchronizeColumns","resetBestFitMode","needBestFit","_needBestFit","hasMinWidth","isColumnWidthsCorrected","_maxWidth","isFocusOutsideWindow","bottom","_correctColumnWidths","expandColumnWidth","_processStretch","c","_getAverageColumnsWidth","freeWidth","columnCountWithoutWidth","hasPercentWidth","hasAutoWidth","hasWidth","_hasWidth","_loop","isHiddenColumn","averageColumnsWidth","realColumnWidth","_getRealColumnWidth","borderWidth","resultSizes","groupSize","tableSize","unusedIndexes","diff","diffElement","onePixelElementsCount","groupWidth","ratio","percentTotalWidth","pixelTotalWidth","freeSpace","percentTotalWidthInPixel","updateSize","$groupElement","importantMarginClass","detach","updateDimensions","checkSize","_checkSize","prevResult","_resizeDeferred","_resetGroupElementHeight","_updateDimensionsCore","groupElement","scrollTop","_lastWidth","_lastHeight","_devicePixelRatio","_setScrollerSpacingCore","vScrollbarWidth","hScrollbarWidth","$testDiv","rootElementHeight","maxHeightHappened","editorFactory","isMaxHeightApplied","scrollHeight","_updateLastSizes","_renderDimensions","SynchronizeScrollingController","_scrollChangedHandler","GridView","_resizingController","_getWidgetAriaLabel","_groupElement","_renderViews","_getTableRoleName","isFirstRender","_rootElement","gridViewModule","resizing","synchronizeScrolling","gridView","HEADER_PANEL_CLASS","TOOLBAR_BUTTON_CLASS","TOOLBAR_ARIA_LABEL","HeaderPanel","_getToolbarItems","_getButtonContainer","_getToolbarButtonClass","specificClass","secondClass","_getToolbarOptions","userToolbarOptions","toolbarOptions","onItemRendered","itemRenderedCallback","userItems","_normalizeToolbarItems","defaultItems","defaultProps","defaultButtonsByNames","normalizedItems","needHideButton","_toolbar","_toolbarOptions","$headerPanel","$toolbar","setToolbarItemDisabled","toolbarInstance","itemOptionPrefix","updateToolbarDimensions","_this$_toolbar","getHeaderPanel","parts","normalizedItem","headerPanelModule","DATAGRID_ROW_SELECTOR","DATAGRID_DEPRECATED_TEMPLATE_WARNING","DataGrid","_activeStateUnit","_getDefaultOptions","_setDeprecatedOptions","_deprecatedOptions","since","alias","_defaultOptionsRules","device","platform","_device","deviceType","_init","_clean","_optionChanged","_dimensionChanged","_initMarkup","_renderContentImpl","templateName","_dispose","DATE_REGEX","parseDates","exec","UTC","StateStoringController","getStorage","storage","localStorage","Error","getUniqueStorageKey","_loadState","parse","getItem","_saveState","setItem","isEnabled","_state","_isLoaded","_windowUnloadHandler","_savingTimeoutID","save","getDataState","pagerView","getPageSizes","processLoadState","selectionController","exportController","updateState","selectionChanged","_initialPageSize","_initialFilterValue","selectionOnlyChanged","exportSelectionOnly","selectionOnly","DEFAULT_FILTER_VALUE","getFilterValue","filterSyncController","hasFilterState","getFilterValueFromColumns","stateStoringModule","stateLoaded","isStateLoading","applyState","oldState","newState","oldStateHash","newStateHash","isVirtualScrollingMode","stateStoringController","_restoreStateTimeoutID","_fireSelectionChanged","isDeferredSelection","EDITOR_CELL_CLASS","ROW_SELECTION_CLASS","SELECT_CHECKBOX_CLASS","CHECKBOXES_HIDDEN_CLASS","COMMAND_SELECT_CLASS","SELECTION_DISABLED_CLASS","SHOW_CHECKBOXES_MODE","SELECTION_MODE","processLongTap","isSelectionWithCheckboxes","stopSelectionWithCheckboxes","startSelectionWithCheckboxes","changeItemSelection","control","SelectionController","selectionCellTemplate","isRowSelected","renderSelectCheckBoxContainer","selectionHeaderTemplate","_renderSelectAllCheckBox","_attachSelectAllCheckBoxClickEvent","_selectionMode","_isSelectionWithCheckboxes","_selection","_createSelection","_updateSelectColumn","removedKeys","deselectRows","_getSelectionConfig","selectionOptions","virtualPaging","legacyScrollingMode","selectedKeys","ignoreDisabledItems","allowLoadByRange","hasGroupColumns","dataFields","_dataController$dataS","_dataController$dataS2","plainItems","isItemSelected","selected","isSelectableItem","getItemData","oldData","getLoadOptions","loadItemIndex","focusedItemIndex","shiftItemIndex","_dataController$dataS3","_dataController$dataS4","minIndex","maxIndex","_updateSelectedItems","isSelectColumnVisible","argument","_updateCheckboxesState","isDeferredMode","selectedItemKeys","removedItemKeys","keyIndex","isComplexKey","selectionChangedOptions","changedItemIndexes","getChangedItemIndexes","itemIndexes","addedItemKeys","_selectedItemsInternalChange","selectedRowsData","selectedItems","currentSelectedRowKeys","currentDeselectedRowKeys","isDataItem","isSelected","oldSelectionMode","selectionMode","selectRows","_isOnePageSelectAll","isSelectAll","getSelectAllState","selectAll","deselectAll","clearSelection","preserve","isDeselect","getSelectedRowKeys","getSelectedItemKeys","selectRowsByIndexes","indexes","getSelectedRowsData","getSelectedItems","visibleItemIndex","loadedItemIndex","_focusedItemIndex","selectionModule","hasSelectColumn","currentItem","isUpdateSelection","_updateSelectAllValue","$editor","selectAllValue","hasSelection","dxCheckBox","isEmptyData","createEditor","parentType","setValue","_attachCheckBoxClickEvent","_renderSelectCheckBox","_e$event","_updateCheckboxesClass","touch","hold","isSelectionDisabled","isClickableElement","isCommandSelect","isCheckBoxesHidden","COLUMN_CHOOSER_CLASS","COLUMN_CHOOSER_BUTTON_CLASS","NOTOUCH_ACTION_CLASS","COLUMN_CHOOSER_LIST_CLASS","COLUMN_CHOOSER_PLAIN_CLASS","COLUMN_CHOOSER_DRAG_CLASS","COLUMN_CHOOSER_SELECT_CLASS","COLUMN_CHOOSER_ICON_NAME","COLUMN_CHOOSER_ITEM_CLASS","TREEVIEW_NODE_SELECTOR","CHECKBOX_SELECTOR","CLICK_TIMEOUT","processItems","chooserColumns","isSelectMode","expanded","disableCheckBox","parentId","ColumnChooserController","renderShowColumnChooserButton","$columnChooserButton","columnChooserButtonClass","columnChooserEnabled","$showColumnChooserButton","showColumnChooser","integrationOptions","getPosition","ColumnChooserView","_isWinDevice","devices","win","_updateList","_popupContainer","columnChooserList","_columnChooserList","selectItem","unselectItem","$wrapper","_renderTreeView","_initializePopupContainer","columnChooserOptions","themeName","isGenericTheme","isMaterial","dxPopupOptions","_ignoreCopyRootClassesToWrapperDeprecation","shortcut","treeViewConfig","dataStructure","itemTemplate","rootValue","searchEnabled","$checkBox","$treeViewNode","itemElement","checkBoxInstance","_prepareSelectModeConfig","_prepareDragModeConfig","searchValue","selectNodesRecursive","onItemSelectionChanged","isLastColumnUnselected","needPartialRender","needFullRender","all","$node","$nodes","columnVisible","isColumnChooserVisible","$overlayContent","right","hideColumnChooser","popupContainer","columnChooserModule","columnChooserView","_appendColumnChooserItem","hintText","columnChooserMode","isMoveColumnDisallowed","createOffsetFilter","lastLevelOnly","groups","filterElement","currentFilter","GroupingHelper","findGroupInfoByKey","groupsInfo","hash","getGroupInfoIndexByOffset","leftIndex","rightIndex","middleIndex","_groupsInfo","updateTotalItemsCount","isGroupItemCountable","_isVirtualPaging","calculateItemsCount","foreachGroups","callback","childrenAtFirst","foreachCollapsedGroups","updateOffsets","updateParentOffsets","foreachGroupsCore","callbackResults","executeCallback","callbackResult","pop","currentParents","_updateGroupInfoOffsets","groupInfo","findGroupInfo","pathIndex","addGroupInfo","groupInfoData","allowCollapseAll","oldGroups","_group","cleanGroupsInfo","handleDataLoading","handleDataLoaded","handleDataLoadedCore","createGroupFilter","loadTotalCount","correctSkipLoadOption","skipCorrection","resultSkip","pathEquals","path1","path2","updateGroupOffsets","additionalGroupInfo","getGroupCount","collapsedGroups","collapsedItemsCount","skipFirstItem","sorts","appendCollapsedPath","collapsedGroup","keyValue","pathValue","query","enumerate","groupedData","processGroupItems","removeLastItemsCount","needRemoveFirstItem","offsetInfo","itemsCountCorrection","changeRowExpand","groupCountQuery","beginPageIndex","dataSourceItems","groupOffsetQuery","getContinuationGroupCount","groupOffset","pageOffset","foreachExpandedGroups","updateGroups","expandedInfo","isLastGroupExpanded","paths","lastCount","updateGroupInfoItem","isLastGroupLevel","_isGroupExpanded","updateGroupInfos","loadedGroupCount","remotePaging","isGroupExpanded","getTotalOffset","groupInfos","totalOffset","childrenTotalCount","applyContinuationToGroupItem","groupLevel","expandedItemIndex","isLastExpandedItem","isFirstExpandedItem","lastExpandedItemSkip","isItemsTruncatedByTake","isDataDeferred","makeDataDeferred","loadGroupItems","currentGroupCount","currentGroupIndex","currentGroup","requireGroupCount","groupSummary","expandedFilters","expandedPath","isPagingLocal","isLastLevelGroupItemsPagingLocal","sortLastLevelGroupItems","expandedItems","loadGroupTotalCount","isGrouping","isFinite","isVirtualPaging","_updatePagingOptions","skipChildrenTotalCount","takeCorrection","parentTakeCorrection","continuationGroupCount","skipContinuationGroupCount","groupInfoCount","childrenGroupInfoCount","remoteGroupPaging","isLastGroup","_processPaging","_processSkips","firstItem","_processTakes","lastItem","maxTakeCount","handleGroup","DATAGRID_GROUP_PANEL_CLASS","DATAGRID_GROUP_PANEL_MESSAGE_CLASS","DATAGRID_GROUP_PANEL_ITEM_CLASS","DATAGRID_GROUP_PANEL_LABEL_CLASS","DATAGRID_GROUP_ROW_CLASS","GroupingDataSourceAdapterExtender","_initGroupingHelper","_grouping","isAutoExpandAll","isFocusedRowEnabled","isODataRemoteOperations","collapseAll","_collapseExpandAll","expandAll","isExpand","beginLoading","_changeRowExpandCore","endLoading","_hasGroupLevelsExpandState","GroupingDataControllerExtender","_processGroupItems","_processGroupItem","groupedColumns","collectContinuationItems","resultItems","expandRow","collapseRow","onGroupingMenuItemClick","GroupingHeaderPanelExtender","_appendGroupingItem","_isGroupPanelVisible","isRendered","$groupPanel","_updateGroupPanelContent","_renderGroupPanelItems","$groupPanelItem","$toolbarElement","$groupedColumnElement","isGroupingAllowed","isColumnGrouped","GroupingRowsViewExtender","isGroupRowStateChanged","isExpandButtonClicked","_changeGroupRowState","columnHeadersViewExtender","beginGroup","_isProcessedItem","MASTER_DETAIL_CELL_CLASS","MASTER_DETAIL_ROW_CLASS","masterDetailModule","initMasterDetail","_expandedItems","_isExpandAll","expandIndex","_getRowIndicesForExpand","detailColumnIndex","isEnabledChanged","isAutoExpandAllChanged","_updateParentDataGrids","$masterDetailRow","_updateMasterDataGrid","$detailElement","masterRowOptions","masterDataGrid","isFixedColumns","_updateFixedMasterDetailGrids","masterRowIndex","$tables","rowsNotEqual","tablesNotEqual","detailElementWidth","isDetailHorizontalScrollCanBeShown","isDetailGridWidthChanged","isEditRow","_isDetailRow","$detailCell","isWrapped","CHECKBOX_SIZE_CLASS","EDITOR_INLINE_BLOCK","EditorFactoryMixin","getResultConfig","inputAttr","checkEnterBug","ios","getTextEditorConfig","isEnterBug","sharedData","needDelayedUpdate","isInputOrKeyUpEvent","updateValue","valueChangeTimeout","updateValueTimeout","_input","valueChangeEvent","prepareBooleanEditor","prepareSelectBox","editorName","displayGetter","postProcess","selectBox","stopWatch","searchExpr","showClearButton","editorElement","blur","isSearching","isOnForm","showValidationMark","$editorElement","dateBox","dxDateBox","defaultEnterKeyHandler","_supportedKeys","enter","registerKeyHandler","dxTextArea","FOCUS_OVERLAY_CLASS","FOCUSED_ELEMENT_CLASS","MODULE_NAMESPACE","UPDATE_FOCUS_EVENTS","DX_HIDDEN","EditorFactory","_getFocusedElement","$dataGridElement","rowSelector","focusedElementSelector","_getFocusCellSelector","_updateFocusCore","$focusCell","hideBorders","$focus","_$focusedElement","loseFocus","_updateFocus","isFocusOverlay","_isFocusOverlay","_updateFocusTimeoutID","_updateFocusOverlaySize","h","oversize","v","hideBorder","_focusTimeoutID","renderFocusOverlay","focused","refocus","_$focusOverlay","align","elemCoord","focusOverlayPosition","precise","$focusedElement","_updateFocusHandler","_attachContainerEventHandlers","editorFactoryModule","DEFAULT_BUTTON","DX_DIALOG_CLASSNAME","DX_DIALOG_WRAPPER_CLASSNAME","DX_DIALOG_ROOT_CLASSNAME","DX_DIALOG_CONTENT_CLASSNAME","DX_DIALOG_MESSAGE_CLASSNAME","DX_DIALOG_BUTTONS_CLASSNAME","DX_DIALOG_BUTTON_CLASSNAME","DX_BUTTON_CLASSNAME","FakeDialogComponent","custom","_options$title","isMessageDefined","isMessageHtmlDefined","messageHtml","popupToolbarItems","popupInstance","android","execute","ignoreChildEvents","bottomToolbar","$firstButton","popupOptions","isPortrait","ROW_SELECTED_CLASS","EDIT_FORM_CLASS","DATA_EDIT_DATA_INSERT_TYPE","DATA_EDIT_DATA_REMOVE_TYPE","EDITING_POPUP_OPTION_NAME","EDITING_FORM_OPTION_NAME","EDITING_EDITROWKEY_OPTION_NAME","EDITING_EDITCOLUMNNAME_OPTION_NAME","TARGET_COMPONENT_NAME","EDITORS_INPUT_SELECTOR","FOCUSABLE_ELEMENT_SELECTOR","EDIT_MODE_BATCH","EDIT_MODE_ROW","EDIT_MODE_CELL","EDIT_MODE_FORM","EDIT_MODE_POPUP","FIRST_NEW_ROW_POSITION","LAST_NEW_ROW_POSITION","PAGE_BOTTOM_NEW_ROW_POSITION","PAGE_TOP_NEW_ROW_POSITION","VIEWPORT_BOTTOM_NEW_ROW_POSITION","VIEWPORT_TOP_NEW_ROW_POSITION","EDIT_MODES","ROW_BASED_MODES","MODES_WITH_DELAYED_FOCUS","READONLY_CLASS","LINK_CLASS","ROW_SELECTED","EDIT_BUTTON_CLASS","COMMAND_EDIT_CLASS","COMMAND_EDIT_WITH_ICONS_CLASS","INSERT_INDEX","ROW_INSERTED","ROW_MODIFIED","CELL_MODIFIED","EDITING_NAMESPACE","DATA_EDIT_DATA_UPDATE_TYPE","DEFAULT_START_EDIT_ACTION","EDIT_LINK_CLASS","edit","undelete","delete","EDIT_ICON_CLASS","METHOD_NAMES","ACTION_OPTION_NAMES","BUTTON_NAMES","EDITING_CHANGES_OPTION_NAME","createFailureHandler","isEditingCell","isEditingOrShowEditorAlwaysDataCell","isCommandCell","isEditorCell","EditingController","getButtonIndex","getButtonName","_lastOperation","_deferreds","_saveEditorHandler","_updateEditColumn","_updateEditButtons","_internalState","_optionsByReference","getEditMode","editMode","_getDefaultEditorTemplate","_getNewRowPosition","getChanges","getInsertRowCount","resetChanges","needReset","_getInternalData","_addInternalData","internalData","_getOldData","_this$_getInternalDat","getUpdatedData","editIndex","getInsertedData","getRemovedData","_fireDataErrorOccurred","getPopupContent","_needToCloseEditableCell","_closeEditItem","_isDefaultButtonVisible","_isButtonVisible","_isButtonDisabled","_getButtonConfig","buttonName","addRowToNode","editingOptions","allowAction","_getEditingButtons","buttonIndex","haveCustomButtons","_renderEditingButtons","_createButton","_getEditCommandCellTemplate","isRowBasedEditMode","getFirstEditableColumnIndex","getFirstEditableCellInRow","getFocusedCellInRow","_inputFocusTimeoutID","_pointerUpEditorHandler","_pointerDownEditorHandler","_handleEditRowKeyChange","_handleChangesChange","_resetEditColumnName","_resetEditRowKey","oldRowIndexCorrection","_getEditRowIndexCorrection","oldRowIndex","_editRowFromOptionChanged","cancelEditData","_processInsertChanges","_addInsertInfo","isPageChanged","_pageIndex","_refreshCore","isEditRowKeyDefined","_setEditRowKey","silent","_setEditRowKeyByIndex","getEditRowIndex","_getVisibleEditRowIndex","getEditFormRowIndex","_isEditRowByIndex","isKeyEqual","isEditCell","_getVisibleEditColumnIndex","_getInsertRowIndex","isProcessedItems","_getInsertAfterOrBeforeKey","isProcessedItem","nextItem","_generateNewItem","_this$_getInternalDat2","insertInfo","_getLoadedRowIndex","loadedRowIndex","insertAfterOrBeforeKey","_this$_getInternalDat3","isInsert","processDataItem","_processDataItemCore","modified","removed","_initNewRow","_createInsertInfo","_getInsertIndex","parentKey","_this$_getInternalDat4","_setInsertAfterOrBeforeKey","allItems","isViewportBottom","insertKey","maxInsertIndex","editItem","_this$_getInternalDat5","insertChange","_insertChange$insertA","_getPageIndexToInsertRow","lastPageIndex","_addRow","param","oldEditRowIndex","_allowRowAdding","__KEY__","_addRowCore","_navigateToNewRow","insertIndex","initialOldEditRowIndex","editRowIndex","_addChange","_editRowIndex","_change","focusController","pageIndexToInsertRow","navigateToRowByKey","navigateToRow","_showAddedRow","_afterInsertRow","_focusFirstEditableCellInRow","_beforeFocusElementInRow","$firstCell","_editCellInProgress","_delayedInputFocus","_isEditingStart","_beforeUpdateItems","_setEditColumnNameByIndex","_visibleColumns$index","_setEditColumnName","_getEditColumn","_getColumnByName","editColumn","columnName","isColumnHidden","_resetEditIndices","_item$oldData","_editRowFromOptionChangedCore","_needFocusEditor","_focusEditorIfNeed","_showEditPopup","_repaintEditPopup","_getEditPopupHiddenHandler","_getPopupEditFormTemplate","_getSaveButtonConfig","saveEditData","_getCancelButtonConfig","_removeInternalData","_updateInsertAfterOrBeforeKeys","removeChange","_removeChange","executeOperation","func","waitForDeferredOperations","_processCanceledEditingCell","_repaintEditCell","oldColumn","beforeFocusCallback","callBeforeFocusCallbackAlways","inputFocus","$focusableElement","_beforeFocusCallback","_focusEditingCell","$editCell","editColumnIndex","_checkAndDeleteRow","showDialogTitle","confirmResult","_deleteRowCore","_afterDeleteRow","_fireOnSaving","onSavingParams","_executeEditingAction","_disposed","_processChanges","results","dataChanges","changeCopy","_beforeSaveEditData","insert","newData","doneDeferred","_processRemoveIfError","_processRemove","_processRemoveCore","_processSaveEditDataResult","hasSavedData","changesLength","isError","_fireSaveEditDataEvents","isSaving","_resolveAfterSave","_saving","_saveEditDataInner","needFocusEditCell","_afterSaveEditData","_endSaving","_cancelSaving","_beforeEndSaving","_refreshDataAfterSave","isFullRefresh","isEditColumnVisible","_isEditColumnVisible","_isEditButtonDisabled","isEditRowDefined","isButtonDisabled","_applyModified","_beforeCloseEditCellInBatchMode","_cancelEditDataCore","_beforeCancelEditData","_afterCancelEditData","_hideEditPopup","hasEditData","_getRowIndicesForCascadeUpdating","skipCurrentRow","addDeferred","_prepareChange","_options$row","rowKey","setCellValueResult","_updateRowValues","updateFieldValue","forceUpdateRow","_focusPreviousEditingCellIfNeed","_updateEditRow","_needUpdateRow","isCustomSetCellValue","isCustomCalculateCellValue","changeOptions","_applyChangeCore","_updateEditRowCore","_updateRowImmediately","_updateRowWithDelay","_validateEditFormAfterUpdate","$focusedItem","changeParams","_this$getChanges","_getFormEditItemTemplate","getColumnTemplate","editingStartOptions","isRowMode","isRowEditing","getEditFormTemplate","useLegacyColumnButtonTemplate","$button","iconType","localizationName","getButtonLocalizationNames","_button$onClick","prepareButtonItem","titleButtonTextByClassNames","revert","prepareEditButtons","buttonItems","highlightDataCell","cellModified","shouldHighlight","_allowEditAction","allowEditAction","eventName","needCallback","isNewRowInEditMode","visibleEditRowIndex","editingModule","_editingController","_this$_updateEditItem","_updateEditItem","isRowRemoved","isRowInserted","isRowModified","_getColumnIndexByElement","_getColumnIndexByElementCore","_editCellByClick","isEditedCell","editCell","withoutSaveEditData","closeEditCell","_pointerDownTimeout","isEditForm","isEditableCell","_editCellPrepared","_formItemPrepared","cellValue","editButtonItems","excludedOptions","shouldInvalidate","EDIT_ROW","editingRowBasedModule","isRowEditMode","isVisibleInRowEditMode","$editingCell","EDIT_FORM_ITEM_CLASS","EDIT_POPUP_CLASS","SCROLLABLE_CONTAINER_CLASS","EDIT_POPUP_FORM_CLASS","BUTTON_CLASS","FORM_BUTTONS_CONTAINER_CLASS","getEditorType","_column$formItem","isCustomEditorType","forEachFormItems","callBack","tabs","editingFormBasedModule","_editForm","_updateEditFormDeferred","isFormOrPopupEditMode","isPopupEditMode","isFormEditMode","firstFormItem","_firstFormItem","$editFormElements","_getEditFormEditorVisibleIndex","editForm","_this$_editPopup","popupVisible","_editPopup","_$popupContent","_row$update","repaint","repaintForm","isMobileDevice","$popupContainer","_this$_editForm","formTemplate","isPopupForm","_this$_editPopup2","defaultAnimation","_this$_editPopup3","_handleFormOptionChange","_handlePopupOptionChange","_this$_editPopup4","editPopup","popupOptionName","renderFormEditTemplate","detailCellOptions","formTemplateOptions","isReadOnly","rowData","labelMark","getItemID","getFormEditorTemplate","_cellOptions$row$watc","_cellOptions$row","_validator","validator","validatorOptions","contents","dxValidator","dataGetter","getEditFormOptions","detailOptions","_this$_getValidationG","editFormOptions","_getValidationGroupsInForm","userCustomizeItem","editFormItemClass","itemId","formID","rule","itemVisible","baseEditFormOptions","$formContainer","$buttonsContainer","_this$_editPopup5","getEditForm","_this$_updateEditForm","_this$_editPopup6","editFormRowIndex","_isFormItem","isDetailRow","isPopupEditing","ADD_ROW_BUTTON_CLASS","DROPDOWN_EDITOR_OVERLAY_CLASS","ROW_REMOVED","$pointerDownTarget","needCreateHandlers","_this$getController","targetComponent","isCellOrBatchEditMode","isEditorPopup","checkEditorPopup","isDomElement","isAnotherComponent","isAddRowButton","isCellEditMode","isBatchEditMode","isCurrentComponentElement","$targetCell","_this$_rowsView","isEditColumnNameDefined","_handleEditColumnNameChange","oldColumnIndex","_editCellFromOptionChanged","_deferred","_editCell","coreResult","_editCellCore","isEditByOptionChanged","_getNormalizedEditCellOptions","_beforeEditCell","_prepareEditCell","_closeEditCellCore","_resetModifiedClassCells","columnsCount","_this$_editCellFromOp","needResetIndexes","isBatchMode","_isRowDeleteAllowed","_changes$","_deferred2","isUpdateInCellMode","focusPreviousEditingCell","processIfBatch","INVALIDATE_CLASS","REVERT_TOOLTIP_CLASS","INVALID_MESSAGE_CLASS","WIDGET_INVALID_MESSAGE_CLASS","INVALID_MESSAGE_ALWAYS_CLASS","REVERT_BUTTON_CLASS","VALIDATOR_CLASS","PENDING_INDICATOR_CLASS","VALIDATION_PENDING_CLASS","PADDING_BETWEEN_TOOLTIPS","FORM_BASED_MODES","COMMAND_TRANSPARENT","VALIDATION_STATUS","valid","invalid","pending","EDIT_DATA_INSERT_TYPE","EDIT_DATA_REMOVE_TYPE","VALIDATION_CANCELLED","validationResultIsValid","cellValueShouldBeValidated","ValidatingController","_validationState","initValidationState","_validationStateCache","_rowIsValidated","validationData","_getValidationData","validated","keyHash","isObjectKeyHash","isValid","_getBrokenRules","validationResults","brokenRules","brokenRule","_rowValidating","getChangeByKey","errorText","getHiddenValidatorsErrorText","brokenRulesMessages","isGroupExpandColumn","isVisibleColumn","validate","isFull","completeList","_isValidationInProgress","validationResult","validateGroup","_currentCellValidator","_findGroup","_validationResult","validators","resetRowValidationResults","isRowDataModified","updateValidationState","setDisableApplyValidationResults","groupConfig","setValidator","renderCellPendingIndicator","disposeCellPendingIndicator","validationStatusChanged","updateCellValidationResult","validatorInitialized","validatorDisposing","getCellValidationResult","status","cancelCellValidationResult","applyValidationResult","requestIsDisabled","disabledPendingId","_disableApplyValidationResults","getEditorInstance","_syncInternalEditingData","_parameters$row","oldDataFromState","createValidator","needCreateValidator","_parameters$row$oldDa","_parameters$row2","isCellOrBatchEditingAllowed","getValue","useDefaultValidator","adapter","applyValidationResults","validationRequestsCallbacks","flag","getDisableApplyValidationResults","isCurrentValidatorProcessing","validateCell","cellParams","stateRestored","_validationData$valid","removeCellValidationResult","_ref6","isInvalidCell","_ref7","getCellValidator","_ref8","setCellValidationStatus","validationStatus","validatingModule","validating","validatingController","_updateRowAndPageIndices","startInsertIndex","_ref9","isNotCanceled","addInValidItem","isInserted","_createInvisibleColumnValidators","invisibleColumns","invisibleColumnValidators","isCellVisible","disposeValidators","isFullValid","_showErrorRow","shouldResetValidationState","columnsWithValidatingEditors","_col$validationRules","validationState","resetRowAndPageIndices","currentValidator","isValidated","needValidation","isCellInvalid","_showRevertButton","$tooltipElement","$overlayContainer","tooltipOptions","propagateOutsideClick","$buttonElement","buttonOptions","onPositioned","_positionedHandler","_hideFixedGroupCell","overlayOptions","$nextFixedRowElement","$groupCellElement","nextRowOptions","visibility","isOverlayVisible","__skipPositionProcessing","isRevertButton","needRepaint","normalizedPosition","_normalizeValidationMessagePositionAndMaxWidth","_showValidationMessage","messages","revertTooltip","editorPopup","myPosition","atPosition","errorMessageText","invalidMessageClass","$overlayElement","_shiftValidationMessageIfNeed","fixedColumns","visibleTableWidth","w1","w2","$overlayContentElement","validationMessageWidth","needMaxWidth","boundaryNonFixedColumnsInfo","firstNonFixedColumnIndex","lastNonFixedColumnIndex","endColumnIndex","$revertContent","contentOffset","revertContentOffset","_getTooltipsSelector","revertTooltipClass","skipValidator","updateCellState","_change$data","showValidationMessage","errorMessages","$tooltips","_oldRow$cells","_cell$column$validati","oldValidationStatus","newValidationStatus","rowIsModified","cellIsMarkedAsInvalid","editingChanged","hasValidationRules","$freeSpaceRowElements","$tooltipContent","isEditorDisposed","contentTable","each","needTwoPagesLoading","_controller","isVirtual","getViewportItemIndex","getBeginPageIndex","_cache","getEndPageIndex","fireChanged","_isChangedFiring","processDelayChanged","_isDelayChanged","getViewportPageCount","_dataOptions","preventPreload","realViewportSize","viewportSize","viewportItemSize","getContentOffset","getViewportPosition","virtualItemsCount","begin","itemSize","getItemSizes","getPreloadPageCount","previous","getPageIndexForLoad","dataOptions","needToLoadPageBeforeLast","needToLoadPrevPage","needToLoadNextPage","_loadingPageIndexes","loadCore","processChanged","isDelayChanged","removeCacheItem","isPrepend","viewportItems","removeCount","correctCount","removeItemCount","itemsLength","updateLoading","_lastPageIndex","VirtualDataLoader","constructor","viewportItemIndexChanged","newPageIndex","lastPageSize","maxPageIndex","defaultPageIndex","endPageIndex","pageIndexForLoad","delayDeferred","_delayDeferred","onChanged","loadIfNeed","_setViewportPositionCore","handleDataChanged","removeInvisiblePages","lastCacheLength","getDelayDeferred","isBase","beginItemsCount","endItemsCount","end","_isVirtualMode","_isVirtual","_isAppendMode","subscribeToExternalScrollers","scrollChangedHandler","$scrollElement","scrollableArray","scrollToArray","disposeArray","getElementOffset","$scrollableElement","scrollableOffset","widgetScrollStrategy","handler","subscribeToScrollEvents","isDocument","eventsStrategy","topOffset","scrollMethod","VirtualScrollController","_viewportSize","_viewportItemSize","_viewportItemIndex","_position","_isScrollingBack","_contentSize","_itemSizes","_sizeRatio","positionChanged","_dataLoader","viewportParams","getViewportParams","loadedOffset","loadedItemCount","getScrollingTimeout","scrollingTimeout","_this$option","changingDuration","setViewportPosition","_scrollTimeoutID","getItemIndexByPosition","defaultItemSize","getItemSize","itemOffset","itemOffsetsWithSize","itemOffsetWithSize","itemOffsetDiff","isScrollingBack","prevPosition","setViewportItemIndex","setContentItemSizes","sizes","size","virtualContentSize","contentHeightLimit","getItemOffset","isEnd","currentItemIndex","getVirtualContentSize","viewportHeight","isRefresh","subscribeToWindowScrollEvents","_windowScroll","_this$option2","topIndex","bottomIndex","maxGap","minGap","topMinGap","bottomMinGap","remainedItems","BOTTOM_LOAD_PANEL_CLASS","TABLE_CONTENT_CLASS","FREESPACE_CLASS","VIRTUAL_ROW_CLASS","LOAD_TIMEOUT","VISIBLE_PAGE_INDEX","_correctCount","isItemCountableFunc","isItemCountableByDataSource","updateItemIndices","VirtualScrollingDataSourceAdapterExtender","_updateLoading","_virtualScrollController","_loadPageCount","_getVirtualScrollDataOptions","_renderTime","_startLoadTime","newMode","virtualScrollController","r","loadPageCount","takeIsDefined","VirtualScrollingRowsViewExtender","removeEmptyRows","$emptyRows","_dataController$state","scrollToPage","_scrollToCurrentPageOnResize","resizeHandler","scrollPosition","itemSizes","_updateContentPosition","startRenderTime","_removeRowsElements","_updateBottomLoading","_addVirtualRow","$virtualRow","_getRowHeights","rowHeights","_correctRowHeights","correctedRowHeights","visibleRows","firstCountableItem","lastLoadIndex","isRender","rowHeight","$virtualRows","_isFixedTableRendering","_isTableLinesDisplaysCorrect","table","hasColumnLines","_isColumnElementsEqual","$columns","$virtualColumns","_getCellClasses","classes","isExpandColumn","_findBottomLoadPanel","$bottomLoadPanel","showBottomLoading","bottomLoadPanelElement","zeroTopPosition","updateViewport","hasBottomLoadPanel","isViewportChanging","scrollPos","_dataController$loadI","virtualScrollingModule","updateTimeout","minTimeout","renderingThreshold","rowPageSize","prerenderedRowChunkSize","loadTwoPagesOnStart","legacyMode","prerenderedRowCount","baseResult","initVirtualRows","_rowsScrollController","_this$getLoadPagePara","getLoadPageParams","getRowPageSize","rowsScrollController","isSortingOperation","allowedTopOffset","virtualRowsRendering","_allItems","_loadViewportParams","_visibleItems","_rowPageIndex","_viewportChanging","_needUpdateViewportAfterLoading","_getRowsScrollDataOptions","_this$_dataSource2","loadViewport","_updateLoadViewportParams","isItemCountable","_that$_dataSource","_itemCount","isNextAfterLast","countableOnly","delta","cancelEmptyChanges","newItems","_dataSource$lastLoadO","prevCountable","prevRowType","isPrevRowNew","currentIndex","wasCountableItem","itemCountable","isNextGroupItem","isNextDataItem","isPrevNewRowFirst","skipForCurrentPage","it","isNewRowOnStart","isNewRowInEmptyData","isLoadIndexGreaterStart","isLoadIndexLessEnd","byLoadedRows","firstLoadIndex","_dataSource$lastLoadO2","_this$_rowsScrollCont","getPreloadedRowCount","preloadCount","byLoadedPage","_this$_dataSource3","_this$_dataSource4","loadedPageIndex","loadedTake","topPreloadCount","bottomPreloadCount","skipWithPreload","loadingTake","_updateVisiblePageIndex","currentPageIndex","viewPortItemIndex","_getChangedLoadParams","loadedPageParams","_loadItems","checkLoading","_dataSourceAdapter$lo","_dataSourceAdapter$pa","changedParams","currentLoadPageCount","lastRequiredItemCount","pageIndexNotChanged","allLoadedInAppendMode","viewportChanging","checkLoadedParamsOnly","loadingItemsStarted","_this$_loadViewportPa","_this$_loadViewportPa2","viewportIsNotFilled","currentTake","newTake","topItemIndex","_this$_loadViewportPa3","bottomItemIndex","_resizeTimeout","_lastTime","WINDOW_HEIGHT_PERCENT","getElementMaxHeightByWindow","startLocation","actualOffset","elementOffset","offsetTop","offsetBottom","DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS","DX_SUBMENU_CLASS","Submenu","super","orientation","onHoverStart","_initDataAdapter","_dataAdapter","_renderContextMenuOverlay","node","getNodeByKey","_renderItems","_getChildNodes","_renderDelimiter","$contentDelimiter","_itemContainer","_getOverlayOptions","_overlayPositionedActionHandler","_showDelimiter","_hoverEndHandler","_toggleFocusClass","_isMenuHorizontal","_hoverStartHandler","hoverStartAction","_drawSubmenu","$rootItem","rootItem","submenu","_hideSubmenu","$submenu","containerOffset","vLocation","hLocation","rootOffset","offsetLeft","rootWidth","rootHeight","submenuWidth","submenuHeight","_getContextMenuPosition","_overlay","getOverlayContent","DX_MENU_CLASS","DX_MENU_VERTICAL_CLASS","DX_MENU_HORIZONTAL_CLASS","DX_MENU_ITEM_CLASS","DX_MENU_ITEMS_CONTAINER_CLASS","DX_MENU_ITEM_EXPANDED_CLASS","DX_CONTEXT_MENU_CLASS","DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS","DX_STATE_DISABLED_CLASS","DX_STATE_HOVER_CLASS","DX_STATE_ACTIVE_CLASS","DX_ADAPTIVE_MODE_CLASS","DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS","DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS","FOCUS_UP","FOCUS_DOWN","FOCUS_LEFT","FOCUS_RIGHT","SHOW_SUBMENU_OPERATION","NEXTITEM_OPERATION","PREVITEM_OPERATION","DEFAULT_DELAY","ACTIONS","Menu","submenuDirection","showFirstSubmenuMode","hideSubmenuOnMouseLeave","onSubmenuShowing","onSubmenuShown","onSubmenuHiding","onSubmenuHidden","adaptivityEnabled","_setOptionsByReference","selectedItem","_itemElements","rootMenuElements","submenuElements","_submenuItemElements","itemSelector","currentSubmenu","_submenus","itemsContainer","_focusTarget","_moveFocus","navigationAction","$newTarget","$items","_getAvailableItems","isMenuHorizontal","$activeItem","_getActiveItem","_getItemsNavigationOperation","_getKeyboardNavigationAction","navOperation","_showSubmenu","_nextItem","_prevItem","_resizeEventTimer","_menuItemsWidth","_updateItemsWidthCache","_isAdaptivityEnabled","$menuItems","_getSummaryItemsWidth","containerWidth","_toggleAdaptiveMode","_initActions","_visibleSubmenu","_render","_initAdaptivity","_renderHamburgerButton","_hamburger","_toggleTreeView","_toggleHamburgerActiveState","$menuItemsContainer","$adaptiveElements","_hideVisibleSubmenu","_treeView","_removeAdaptivity","_$adaptiveContainer","_treeviewItemClickHandler","_getAdaptiveOverlayOptions","rtl","_ignoreFunctionValueDeprecation","_getTreeViewOptions","menuOptions","animationEnabled","onItemExpanded","onItemCollapsed","selectByClick","expandEvent","$hamburger","_getDelay","delayType","_keyboardHandler","_renderContainer","_renderSubmenuItems","$itemFrame","_createSubmenu","_renderBorderElement","_getKeyboardListeners","$submenuContainer","_getSubmenuOptions","_parentKey","internalFields","_clearTimeouts","getSubmenuPosition","_attachSubmenuHandlers","$submenuTarget","showSubmenuMode","disabledExpr","selectedExpr","itemsExpr","onFocusedItemChanged","_nestedItemOnSelectionChangedHandler","_nestedItemOnItemClickHandler","_nestedItemOnItemRenderedHandler","onLeftFirstItem","_moveMainMenuFocus","onLeftLastItem","onCloseRootSubmenu","onExpandLastSubmenu","_getShowFirstSubmenuMode","_isDesktopDevice","$currentItem","$newItem","addedItems","_clearSelectionInSubmenus","_clearRootSelection","targetSubmenu","cleanAllSubmenus","isOtherItem","$selectedItem","_selectedItemClass","selectedItemData","_getItemData","_clearSelectedItems","$prevSelectedItem","prevSelectedItemData","$submenuOverlayContent","submenus","submenuMouseLeaveName","hover","_submenuOnShowingHandler","_submenuOnShownHandler","_submenuOnHidingHandler","_submenuOnHiddenHandler","_submenuMouseLeaveHandler","$border","eventArgs","relatedTarget","_getSubmenuByRootElement","_hideSubmenuAfterTimeout","isRootItemHovered","isSubmenuItemHovered","hoveredElementFromSubMenu","isHorizontalMenu","submenuPosition","_itemPointerDownHandler","$closestItem","mouseMoveEventName","_getItemElementByEventArgs","getNodeByItem","isSelectionActive","which","_isItemDisabled","_hasChildren","_getSubmenuByElement","_itemMouseMoveHandler","_showSubmenuTimer","eventArg","_hideSubmenuTimer","$itemElement","_hoveredRootItem","pointers","_updateSubmenuVisibilityOnClick","_disabledGetter","_updateSelectedItemOnClick","_changeSubmenusOption","OPERATION_ICONS","notcontains","startswith","endswith","OPERATION_DESCRIPTORS","FILTERING_TIMEOUT","CORRECT_FILTER_RANGE_OVERLAY_WIDTH","FILTER_RANGE_OVERLAY_CLASS","FILTER_RANGE_START_CLASS","FILTER_RANGE_END_CLASS","MENU_CLASS","EDITOR_WITH_MENU_CLASS","EDITOR_CONTAINER_CLASS","FILTER_MENU","APPLY_BUTTON_CLASS","HIGHLIGHT_OUTLINE_CLASS","FOCUSED_CLASS","FILTER_RANGE_CONTENT_CLASS","FILTER_MODIFIED_CLASS","BETWEEN_OPERATION_DATA_TYPES","isOnClickApplyFilterMode","ColumnHeadersViewFilterRowExtender","$editorContainer","componentNames","getRangeTextByFilterValue","rangeEnd","getColumnFilterValue","formatOptions","getColumnSelectedFilterOperation","bufferedSelectedFilterOperation","isFilterRange","isRangeStart","updateFilterValue","_applyFilterViewController","setHighLight","normalizedValue","columnFilterValue","isBetween","_updateEditorValue","$editorRangeElements","$menu","overlayInstance","_updateFilterRangeContent","_updateFilterOperationChooser","_renderFilterRangeContent","_renderEditor","_getEditorOptions","_hideFilterRange","_filterRangeOverlayInstance","isFilterRowVisible","_initFilterRangeOverlay","$overlay","$prevElement","prev","_updateFilterRangeOverlay","_showFilterRange","getFilterRangeOverlayInstance","_renderFilterCell","_renderFilterOperationChooser","accessibilityOptions","_getFilterInputAccessibilityAttributes","columnAriaLabel","$filterRangeContent","isCellWasFocused","menu","_focusEditor","selectable","_getFilterOperationMenuItems","properties","columnSelectedFilterOperation","notFocusEditor","isOnClickMode","_isEditorFocused","filterRowOptions","availableFilterOperations","descriptionName","DataControllerFilterRowExtender","skipCalculateColumnFilters","ApplyFilterViewController","_getHeaderPanel","_headerPanel","enableApplyButton","removeHighLights","columnHeadersViewElement","filterRowModule","columnsResizer","_startResizing","_targetPoint","_endResizing","filterItem","_prepareFilterItem","_isShowApplyFilterButton","HEADER_FILTER_CLASS","HEADER_FILTER_MENU_CLASS","DEFAULT_SEARCH_EXPRESSION","resetChildrenItemSelection","updateSelectAllState","selectAllCheckBox","isSearchEnabled","updateHeaderFilterItemSelectionState","filterValuesMatch","isExcludeFilter","HeaderFilterView","getPopupContainer","getListContainer","_listContainer","applyHeaderFilter","list","isFilterBuilder","fillSelectedItemKeys","isExclude","_getNode","hasChildren","hasChildrenWithSelection","hideHeaderFilterMenu","$columnElement","updatePopup","headerFilterMenu","_cleanPopupContent","_getSearchExpr","useDefaultSearchExpr","headerFilterDataSource","headerFilterOptions","_initializeListContainer","widgetOptions","pageLoadMode","showSelectionControls","_selectedItemsUpdating","oldSelected","filterValueIndex","headerFilterMixin","$headerFilterIndicator","_isHeaderFilterEmpty","DATE_INTERVAL_FORMATS","ungroupUTCDates","dateParts","dates","isMonthPart","convertDataFromUTCToLocal","isUTCFormat","HeaderFilterController","_headerFilterView","_updateSelectedState","_normalizeGroupItem","currentLevel","valueSelector","displaySelector","getHeaderItemText","firstValueText","secondValue","secondValueText","level","_column$headerFilter","isLookup","lookupDataSourceOptions","cutoffLevel","_currentColumn","useDefaultSearch","convertUTCDates","origPostProcess","getCurrentColumn","isGroupPanel","showHeaderFilterMenuBase","columnElement","dxResizableInstance","dxResizable","headerFilterByColumn","ColumnHeadersViewHeaderFilterExtender","_subscribeToIndicatorEvent","_updateHeaderFilterIndicators","_needUpdateFilterIndicators","HeaderPanelHeaderFilterExtender","headerFilterModule","headerFilterView","FILTER_BUILDER_RANGE_CLASS","FILTER_BUILDER_RANGE_START_CLASS","FILTER_BUILDER_RANGE_END_CLASS","FILTER_BUILDER_RANGE_SEPARATOR_CLASS","SEPARATOR","conditionInfo","$editorStart","$editorEnd","getStartValue","getEndValue","_editorFactory","getConfig","valueSeparator","notForLookup","isblank","isnotblank","OPERATION_NAME","getIconByFilterOperation","filterOperation","getNameByFilterOperation","DEFAULT_DATA_TYPE","EMPTY_MENU_ICON","AND_GROUP_OPERATION","EQUAL_OPERATION","NOT_EQUAL_OPERATION","boolean","object","DEFAULT_FORMAT","LOOKUP_OPERATIONS","AVAILABLE_FIELD_PROPERTIES","FILTER_BUILDER_CLASS","FILTER_BUILDER_ITEM_TEXT_CLASS","FILTER_BUILDER_ITEM_TEXT_PART_CLASS","FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS","FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS","getFormattedValueText","fieldFormat","isNegationGroup","isCondition","getGroupCriteria","setGroupCriteria","criteria","convertGroupToNewStructure","setGroupValue","substring","getGroupMenuItem","availableGroups","groupValue","getGroupValue","getCriteriaOperation","getDefaultFilterOperations","containItems","entity","getFilterOperations","getCaptionByOperation","getOperationFromAvailable","availableOperations","getCustomOperation","filteredOperations","getAvailableOperations","isLookupField","isOperationForbidden","isCustom","getDefaultOperation","createCondition","updateConditionByOperation","removeItem","createEmptyGroup","isNegation","isNegationGroupOperation","groupOperation","getGroupOperationFromNegationOperation","addItem","getField","extendedFields","getItems","convertToInnerGroup","defaultGroupOperation","innerGroup","convertToInnerStructure","appendGroupOperationToGroup","convertToInnerCondition","conditionHasCustomOperation","appendGroupOperationToCriteria","getNormalizedFields","normalizedField","getConditionFilterExpression","filterExpression","getFilterExpression","_filterExpression","getNormalizedFilter","itemsForRemove","normalizedGroupValue","isValidCondition","getCurrentLookupValueText","lookupDataSource","loadSingle","getPrimitiveValueText","getArrayValueText","checkDefaultValue","getCurrentValueText","_len","_key","itemExists","pushItemAndCheckParent","originalItems","hasParent","getParentIdFromItemDataField","generateCaptionByDataField","lastIndexOf","arr","getCaptionWithParents","getOperationValue","getMergedOperations","betweenCaption","betweenIndex","isMatchedCondition","addedFilterDataField","removeFieldConditionsFromFilter","hasMatchedCondition","syncConditionIntoGroup","addedFilter","canPush","syncFilters","getMatchedConditions","filterHasField","renderValueText","lastItemIndex","t","baseOperation","grid","getFullText","itemText","parentText","lastIndex","div","closeEditor","fieldInfo","itemsDeferred","_values","getSelectedItemsTexts","selectedItemsTexts","anyOf","noneOf","baseOp","baseFilter","FILTER_ROW_OPERATIONS","FILTER_TYPES_INCLUDE","FILTER_TYPES_EXCLUDE","getColumnIdentifier","checkForErrors","FilterSyncController","getEmptyFilterValues","canSyncHeaderFilterWithFilterRow","getConditionFromFilterRow","getConditionFromHeaderFilter","selectedOperation","updateHeaderFilterCondition","headerFilterCondition","hasArrayValue","updateFilterRowCondition","syncFilterValue","_skipSyncColumnOptions","filterConditions","filterCondition","_initSync","filteringColumns","isFilterSyncActive","_getSyncFilterRow","_getSyncHeaderFilter","syncFilterRow","syncHeaderFilter","getCustomFilterOperations","filterBuilderCustomOperations","DataControllerFilterSyncExtender","filterSyncEnabledValue","calculatedFilterValue","_parseColumnPropertyName","matched","match","propertyName","ColumnHeadersViewFilterSyncExtender","filterSyncModule","filterSync","FILTER_BUILDER_GROUP_CLASS","FILTER_BUILDER_GROUP_ITEM_CLASS","FILTER_BUILDER_GROUP_CONTENT_CLASS","FILTER_BUILDER_GROUP_OPERATIONS_CLASS","FILTER_BUILDER_GROUP_OPERATION_CLASS","FILTER_BUILDER_ACTION_CLASS","FILTER_BUILDER_IMAGE_CLASS","FILTER_BUILDER_IMAGE_ADD_CLASS","FILTER_BUILDER_IMAGE_REMOVE_CLASS","FILTER_BUILDER_ITEM_FIELD_CLASS","FILTER_BUILDER_ITEM_OPERATION_CLASS","FILTER_BUILDER_ITEM_VALUE_CLASS","FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS","FILTER_BUILDER_OVERLAY_CLASS","FILTER_BUILDER_FILTER_OPERATIONS_CLASS","FILTER_BUILDER_FIELDS_CLASS","FILTER_BUILDER_ADD_CONDITION_CLASS","ACTIVE_CLASS","FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS","SOURCE","DISABLED_STATE_CLASS","TAB_KEY","ENTER_KEY","ESCAPE_KEY","OPERATORS","FilterBuilder","closePopupOnTargetScroll","_initCustomOperations","disableInvalidateForValue","_disableInvalidateForValue","_initModel","_getNormalizedFields","_model","_customOperations","_updateFilter","_getModel","_initEditorFactory","_getDefaultGroupOperation","_this$option$","actionConfig","_createGroupElementByCriteria","_createConditionElement","_createConditionItem","$group","_createGroupElement","$groupContent","groupCriteria","innerCriteria","$groupItem","_createRemoveButton","_createGroupOperationButton","_createAddButton","newGroup","newCondition","_getGroupOperations","groupMenuItem","$operationButton","_createButtonWithMenu","removeMenu","info","treeViewElement","treeView","dxTreeView","_subscribeOnClickAndEnterKey","_createPopupWithTreeView","_hasValueButton","_createOperationButtonWithMenu","currentOperation","$valueButton","siblings","_createValueButton","_createOperationAndValueButtons","_createFieldButtonWithMenu","getFullCaption","$fieldButton","isSingleChild","$removeButton","addGroupHandler","addConditionHandler","_createValueText","$text","_createValueEditorWithEvents","_updateConditionValue","areValuesDifferent","_addDocumentKeyUp","isComposing","hasCompositionJustEnded","documentKeyUpHandler","input","_documentKeyUpHandler","_addDocumentClick","closeEditorFunc","documentClickHandler","_isFocusOnEditorParts","_documentClickHandler","activeElement","_removeEvents","createValueText","_createValueEditor","$popup","class","$menuContainer","FilterBuilderView","_updatePopupOptions","_initPopup","_filterBuilderPopup","_disposePopup","_filterBuilder","_getPopupContentTemplate","_getPopupToolbarItems","$filterBuilderContainer","filterBuilderModule","filterBuilderView","FILTER_PANEL_CLASS","FILTER_PANEL_TEXT_CLASS","FILTER_PANEL_CHECKBOX_CLASS","FILTER_PANEL_CLEAR_FILTER_CLASS","FILTER_PANEL_LEFT_CONTAINER","FILTER_PANEL_TARGET","FilterPanelView","$leftContainer","_filterValueBuffer","_getCheckElement","_getFilterElement","_getTextElement","_getRemoveButtonElement","_showFilterBuilder","_addTabIndexToElement","filterText","$textElement","getFilterText","customText","clearFilterValue","tabindex","_getConditionText","fieldText","operationText","_getValueMaskedText","_getValueText","hasCustomOperation","getConditionText","getGroupText","isInnerGroup","textParts","groupText","filterPanelModule","filterPanelView","SEARCH_PANEL_CLASS","SEARCH_TEXT_CLASS","searchModule","searchFilter","onQueryDone","valueGetter","_i","getSearchPanelOptions","_prepareSearchItem","searchPanelOptions","$search","getSearchTextEditor","$searchPanel","dxTextBox","_searchParams","_getFormattedSearchText","_getStringNormalizer","isCaseSensitive","_findHighlightingTextNodes","_$items","stringNormalizer","normalizedSearchText","resultTextNodes","$contents","normalizedText","_highlightSearchTextCore","$textNode","$searchTextSpan","firstContentElement","after","_highlightSearchText","isEquals","textNodes","textNode","_highlightTimer","GridPagerWrapper","pageIndexChanged","pageSizeChanged","toNumber","attribute","getElementStyle","_getElementComputedSt","computedStyle","getElementWidth","getElementMinWidth","_excluded","viewFunction","contentAttributes","infoTextRef","infoTextVisible","isLargeDisplayMode","pageSizesRef","pagesRef","parentRef","Content","rootElementRef","calculateAdaptivityProps","infoWidth","pageSizes","pageSizesWidth","pages","pagesWidth","parentWidth","minimalWidth","getElementsWidth","pagesHtmlWidth","ResizableContainerProps","TemplateProp","ResizableContainer","subscribeToResize","effectUpdateChildProps","updateAdaptivityProps","createEffects","pagerProps","updateEffects","_this$_effects$","_this$_effects$2","_effects","gridCompatibility","lightModeEnabled","maxPagesCount","pageIndexChange","pageSizeChange","pagesCountText","pagesNavigatorVisible","showPageSizes","restAttributes","current","currentElementsWidth","actualAdaptivityProps","elementsWidth","setState","__state_argument","_this$props","restProps","BasePagerProps","PagerProps","getOwnPropertyDescriptors","defaultPageSize","InternalPagerProps","PAGER_INFO_CLASS","InfoTextPropsType","InfoText","_this$props$infoText","KeyboardActionContext","widgetRef","LightButtonProps","LightButton","keyboardEffect","subscribeToClick","keyboardContext","PAGER_CLASS","LIGHT_MODE_CLASS","PAGER_PAGES_CLASS","PAGER_PAGE_INDEXES_CLASS","PAGER_PAGE_CLASS","PAGER_SELECTION_CLASS","PAGER_PAGE_SIZE_CLASS","PAGER_PAGE_SIZES_CLASS","PAGER_SELECTED_PAGE_SIZE_CLASS","PageProps","Page","_excluded2","PAGER_PAGE_SEPARATOR_CLASS","PagesMarkup","pageProps","PAGES_LIMITER","getDelimiterType","startIndex","slidingWindowSize","createPageIndexesBySlidingWindowIndexes","slidingWindowIndexes","delimiter","pageIndexes","indexesForReuse","createPageIndexes","PagesLargePropsType","PagesLarge","canReuseSlidingWindow","generatePageIndexes","isSlidingWindowMode","onPageClick","ConfigContext","slidingWindowState","slidingWindowStateHolder","currentPageCount","currentPageNotExistInIndexes","includes","pageIndexExistInIndexes","_createPageIndexes","_this$config","createPage","rtlPageIndexes","DEFAULT_VALUE","componentType","componentProps","templateNames","NumberBoxProps","defaultValue","isReactComponentWrapper","NumberBox","_this$props$value","oneDigitWidth","calculateValuesFittedWidth","PAGER_INFO_TEXT_CLASS","PAGER_PAGE_INDEX_CLASS","LIGHT_PAGES_CLASS","PAGER_PAGES_COUNT_CLASS","pageIndexRef","selectLastPageIndex","valueChange","PagerSmallProps","PagesSmall","updateWidth","_this$pageIndexRef$cu","el","_this$props$pagesCoun","PAGER_NAVIGATE_BUTTON","PAGER_PREV_BUTTON_CLASS","PAGER_NEXT_BUTTON_CLASS","PAGER_BUTTON_DISABLE_CLASS","nextButtonClassName","prevButtonClassName","nextButtonDisabledClassName","prevButtonDisabledClassName","navigateToNextPage","navigateToPrevPage","nextClassName","prevClassName","renderNextButton","renderPrevButton","getIncrement","PageIndexSelectorProps","PageIndexSelectorPropsType","PageIndexSelector","getNextDirection","getPrevDirection","canNavigateToPage","getNextPageIndex","canNavigateTo","navigateToPage","_this$config2","canNavigate","SelectBoxProps","SelectBox","PageSizeSmallPropsType","PageSizeSmall","p","pageSizesText","PageSizeLargePropsType","PageSizeLarge","__getterCache","onPageSizeChange","processedPageSize","componentWillUpdate","nextProps","nextState","htmlRef","normalizedPageSizes","getAllText","PageSizeSelectorProps","PageSizeSelectorPropsType","PageSizeSelector","setRootElementRef","infoVisible","pageIndexSelectorVisible","pagesContainerVisibility","pagesContainerVisible","widgetRootElementRef","PagerContentProps","PagerContent","createFakeInstance","getChildContext","keyboardAction","_this$props$onKeyDown","fakePagerInstance","normalizedDisplayMode","classesMap","_this$props2","__newValue","_newValue","newPageSize","_this$props$pageSize$","Pager","getProps","_wrapKeyDownHandler","_propsInfo","twoWay","allowNull","_viewComponent","MAX_PAGES_COUNT","getPageIndex","PagerView","_getPager","pagerOptions","useLegacyKeyboardNavigation","_pageSizes","pagerVisible","isPager","isPaging","isDataSource","isScrolling","pagerModule","COLUMNS_SEPARATOR_CLASS","COLUMNS_SEPARATOR_TRANSPARENT","DRAGGING_HEADER_CLASS","HEADERS_DRAG_ACTION_CLASS","TRACKER_CLASS","HEADERS_DROP_HIGHLIGHT_CLASS","BLOCK_SEPARATOR_CLASS","WIDGET_CLASS","DRAGGING_COMMAND_CELL_CLASS","COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH","DRAGGING_DELTA","COLUMN_OPACITY","TrackerView","_unsubscribeFromCallback","_positionChanged","_tablePositionController","_subscribeToCallback","setHeight","SeparatorView","_renderSeparator","_isShown","ColumnsSeparatorView","_isTransparent","columnsSeparatorTransparent","moveByX","outerX","changeCursor","cursorName","BlockSeparatorView","startAnimate","toOptions","fx","DraggingHeaderView","_isDragging","isDragging","_getDraggingPanelByPos","_dragOptions","boundingRect","_resetTargetColumnOptions","_dropOptions","targetColumnIndex","targetColumnElement","isLast","posX","posY","_getVisibleIndexObject","_columnsResizerViewController","dragHeader","isCommandColumn","sourceIndex","sourceColumnIndex","sourceColumnElement","_onSelectStart","onselectstart","drag","whiteSpace","moveHeader","eventData","dragOptions","moveDeltaX","abs","deltaX","moveDeltaY","deltaY","newLeft","newTop","dockHeader","targetDraggingPanel","isVerticalOrientation","axisName","pointsByTarget","pointsByColumns","_generatePointsByColumns","centerPosition","dock","dropHeader","drop","isNextColumnResizingMode","ColumnsResizerViewController","_isHeadersRowArea","headersRowHeight","_isRtlParentStyle","_this$_$parentContain","_$parentContainer","_pointCreated","isNextColumnMode","isRtlParentStyle","firstPointColumnIndex","nextColumn","_getTargetPoint","currentX","_moveSeparator","_that$_draggingHeader","columnsSeparatorWidth","_columnsSeparatorView","parentOffset","parentOffsetLeft","_draggingHeaderView","_isResizing","_resizingInfo","_updateColumnsWidthIfNeeded","currentColumnIndex","outerWidth","_previousParentOffset","_isReadyResizing","_trackerView","_getNextColumnIndex","_setupResizingInfo","nextColumnIndex","currentHeader","nextHeader","startPosX","currentColumnWidth","nextColumnWidth","_pointsByColumns","_unsubscribeFromEvents","_moveSeparatorHandler","_startResizingHandler","_endResizingHandler","_subscribeToEvents","nextCellWidth","cellWidth","needUpdate","resizingInfo","setColumnWidth","oldColumnWidth","allColumnsHaveWidth","totalPercent","hasScroll","_subscribesToCallbacks","_unsubscribeFromCallbacks","subscribe","_unsubscribes","generatePointsByColumnsHandler","generatePointsByColumnsScrollHandler","previousScrollbarVisibility","previousTableHeight","scrollbarVisibility","TablePositionViewController","diffOffsetTop","columnsHeadersHeight","scrollBarWidth","columnsResizerController","draggingHeaderView","isDraggingOrResizing","_pagerView","targetPoint","DraggingHeaderViewController","draggingHeader","nameDraggingPanel","subscribeToEvents","_getSeparator","_blockSeparatorView","hideSeparators","blockSeparator","columnsSeparator","_animationColumnIndex","_headerPanelView","_columnChooserView","allowDrop","headersView","separator","hasTargetVisibleIndex","columnsResizingReorderingModule","columnsSeparatorView","blockSeparatorView","trackerView","tablePosition","GROUP_FOOTER_CLASS","FREESPACE_ROW_CLASS","COMMAND_CELL_SELECTOR","DATEBOX_WIDGET_NAME","FAST_EDITING_DELETE_KEY","INTERACTIVE_ELEMENTS_SELECTOR","NON_FOCUSABLE_ELEMENTS_SELECTOR","FOCUS_TYPE_ROW","FOCUS_TYPE_CELL","COLUMN_HEADERS_VIEW","isNotFocusedRow","isCellElement","_isRowEditMode","isElementDefined","isMobile","isCellInHeaderRow","isFixedColumnIndexOffsetRequired","shouldPreventScroll","_isVirtualScrolling","KeyboardNavigationController","_selectionController","_updateFocusTimeout","_fastEditingStarted","_focusedCellPosition","_canceledCellPosition","setupFocusedView","_isNeedScroll","_focusedView","_initViewHandlers","_initDocumentHandlers","rowsViewFocusHandler","isRelatedTargetInRowsView","isCommandButton","_isEventInCurrentGrid","$focusedCell","_getFocusedCell","$rowsView","isFocusedViewCorrect","needUpdateFocus","isFocusedElementCorrect","_initPointerEventHandler","_initKeyDownHandler","_setRowsViewAttributes","_isNeedFocus","_isHiddenFocus","isCurrentRowsViewClick","isEditorOverlay","isColumnResizing","targetInsideFocusedView","_resetFocusedCell","_resetFocusedView","_getRowsViewElement","isGridEmpty","_applyTabIndexToElement","pointerEventName","clickSelector","_pointerEventAction","_pointerEventHandler","_keyDownListener","_keyDownHandler","isRowFocusType","focusType","isCellFocusType","setRowFocusType","setCellFocusType","needStopPropagation","_processOnKeyDown","isDefaultPrevented","_updateFocusedCellPositionByTarget","_leftRightKeysHandler","ctrl","_upDownKeysHandler","_pageUpDownKeyHandler","_spaceKeyHandler","_ctrlAKeyHandler","_beginFastEditing","_tabKeyHandler","_enterKeyHandler","_escapeKeyHandler","_ctrlFKeyHandler","_f2KeyHandler","_isFastEditingAllowed","_isFastEditingStarted","alt","altKey","_closeEditCell","getVisibleRowIndex","$event","directionCode","_getDirectionCodeByKey","isEditingNavigationMode","allowNavigate","_isVirtualColumnRender","_processVirtualHorizontalPosition","_getNextCell","_arrowKeysHandlerFocusCell","isUpArrow","_navigateNextCell","_isVirtualRowRender","_scrollBy","isPageUp","pageStep","isFocusedRowElement","_getElementType","isFocusedSelectionCell","isCellPositionDefined","isOriginalHandlerRequired","_isLastValidCell","_isFirstValidCell","eventTarget","focusedViewElement","_handleTabKeyOnMasterDetailCell","_editingCellTabHandler","_targetCellTabHandler","_getMaxHorizontalOffset","_isColumnRendered","allVisibleColumns","renderedVisibleColumns","_isFixedColumn","_isColumnVirtual","localColumnIndex","getColumnIndex","horizontalScrollPosition","needToScroll","_getVisibleColumnCount","leftEdgePosition","_getHorizontalScrollPositionOffset","scrollBy","positionOffset","$currentCell","_getCell","currentCellWidth","rtlMultiplier","isEditingAllowed","_getCellElementFromTarget","elementType","_updateFocusedCellPosition","nextCellInfo","_getNextCellByTabKey","_getRowIndex","_isDataRow","_focusCell","isHighlighted","_editFocusedCell","_focusInteractiveElement","$lastInteractiveElement","_getInteractiveElement","getFirstValidCellInRow","_checkNewLineTransition","_fireFocusedCellChanging","$newCellElement","_getCellPosition","_fireFocusedRowChanging","rowIndexChanged","setFocusedColumnIndex","_processEnterKeyForDataCell","_getEnterKeyDirection","allowEditingOnEnterKey","_allowEditingOnEnterKey","_handleEnterKeyEditingCell","_startEditing","isShift","_focusEditFormCell","searchTextEditor","keyCode","isCellValid","_isCellValid","$nextCell","isVerticalDirection","_fireFocusChangingEvents","_focus","isDeleting","fastEditingKey","fromCharCode","isInteractiveElement","isExpandCommandCell","_isInsideEditForm","_focusView","_isMasterDetailCell","_clickTargetCellHandler","_isCellEditMode","setFocusedRowIndex","prevRowIndex","resetFocusedRow","_resetFocusedRow","_allowRowUpdating","skipFocusEvent","isEditor","isDisabled","activeElementSelector","_focusElement","getFocusedView","rowsViewElement","$focusedView","_getFocusedViewByElement","$view","disableFocus","$focusElement","focusedView","isRowFocus","isRenderView","_hasSkipRow","_checkCellOverlapped","$focusedElementInsideCell","isFocusedElementDefined","cellOffset","hasScrollable","isOverlapped","_this$_focusedCellPos","setFocusedCellPosition","_getFocusedColumnIndexOffset","_getFixedColumnIndexOffset","_applyColumnIndexBoundaries","preventScroll","_this$_focusedView","renderFocusState","restoreFocusableElement","newRowIndex","_getNewPositionByCode","code","visibleColumnsCount","_hasValidCellAfterPosition","_isLastRow","_hasValidCellBeforePosition","_isCellByPositionValid","getMaxRowIndex","isFirstValidCell","hasValidCells","checkingPosition","visibleColumnCount","isLastRow","isClick","isShowWhenGrouped","isDataCell","rowItems","isRowEditingInCurrentRow","_isLegacyNavigation","$result","focusedCellPosition","includeCommandCells","newFocusedCellPosition","isLastCellOnDirection","_isCellInRow","visibleColumnIndex","_isAllowEditing","_startEditCell","colIndex","editResult","_editingCellHandler","editorValue","_$input$get$select","_$input$get","$input","keyDownEvent","keyPressEvent","inputEvent","val","$widgetContainer","fireRowEvent","newColumnIndex","prevCellIndex","prevColumnIndex","_fireFocusedCellChanged","localRowIndex","$newFocusedRow","prevFocusedRowIndex","_fireFocusedRowChanged","getFocusedRowIndexByKey","$masterDetailCell","$masterDetailGrid","_processNextCellInMasterDetail","_processCanceledEditCellPosition","isCanceled","updateFocusedRowIndex","lastVisibleIndex","keyboardNavigationModule","needTriggerPointerEventHandler","_triggerPointerDownEventHandler","cellElements","updateFocusElementTabIndex","_updateFocusedCellTabIndex","cellElementsLength","updateCellTabIndex","isMasterDetailCell","isValidCell","_renderFocusByChange","editorInstance","_getEditorInstance","_handleEditingNavigationMode","originalKeyHandler","isDropDownOpened","isDateBoxWithMask","keyboardNavigationController","_keyboardNavigationController","getRowIndexCorrection","focusedRowIndexCorrection","adaptiveColumns","_showHiddenCellsInView","_hideVisibleCellInView","depthFirstSearch","depth","root","array","isCount","aggregator","normalizeAggregate","aggregate","errors","_data","_groupLevel","_totalAggregates","totalAggregates","_groupAggregates","groupAggregates","_totals","calculate","_calculateTotals","_calculateGroups","_aggregate","aggregates","_accumulate","_seed","_finalize","maxLevel","seedFn","stepFn","finalizeFn","innerNode","seed","NaN","aggregateIndex","step","fin","finalize","DATAGRID_TOTAL_FOOTER_CLASS","DATAGRID_SUMMARY_ITEM_CLASS","DATAGRID_TEXT_CONTENT_CLASS","DATAGRID_GROUP_FOOTER_CLASS","DATAGRID_GROUP_TEXT_CONTENT_CLASS","DATAGRID_NOWRAP_CLASS","DATAGRID_GROUP_FOOTER_ROW_TYPE","renderSummaryCell","$summaryItems","getSummaryCellOptions","getGroupAggregates","FooterView","footerItems","needUpdateScrollLeft","$newTable","$newRow","totalColumnIndices","SummaryDataSourceAdapterExtender","_summaryGetter","summaryGetter","_summary","sortByGroupsInfo","sortByGroups","groupedItems","forEachGroup","itemsPath","SummaryDataSourceAdapterClientExtender","calculateAggregates","calculator","insertedData","applyAddedData","removedData","applyRemovedData","updatedData","updatedItems","set","sortGroupsBySummary","sortGroupsBySummaryCore","sortBy","thenBy","sortedItems","totalSummary","_options$cachedData$e","hasOperations","_isDataColumn","_isGroupFooterVisible","isGroupFooterVisible","summaryGroupItems","afterGroupColumnIndex","_calculateSummaryCells","calculateTargetColumnIndex","summaryCellsByColumns","summaryIndex","_getSummaryCells","summaryTotalItems","_footerItems","oldSummaryCells","summaryCell","_prepareUnsavedDataSelector","_prepareAggregateSelector","_getAggregates","commonSkipEmptyValues","summaryProcess","totalValue","_addSortInfo","_findSummaryItem","summaryItemIndex","_getSummarySortByGroups","groupSummaryItems","currentRemoteOperations","_getSummaryOptions","totalSummaryItems","methods","getTotalSummaryValue","summaryItemName","_refreshSummary","_renderGroupSummaryCells","_hasAlignByColumnSummaryItems","_getAlignByColumnCellCount","groupCellColSpan","alignByColumnCellCount","$groupCell","_renderGroupSummaryCellsCore","_getSummaryCellIndex","FIRST_CELL_CLASS","LAST_CELL_CLASS","HOVER_STATE_CLASS","FIXED_COL_CLASS","FIXED_COLUMNS_CLASS","POINTER_EVENTS_NONE_CLASS","getTransparentColumnIndex","normalizeColumnWidths","fixedWidths","fixedColumnIndex","baseFixedColumns","_isFixedColumns","_correctColumnIndicesForFixedColumns","_partialUpdateFixedTable","fixedTableElement","_fixedTableElement","childNodes","$fixedTable","fixedCorrection","fixedCells","prevFixedColumn","columnCommand","isRowAltStyle","isEmptyCell","isFixedTableRendering","isGroupCell","alignByFixedColumnCellCount","headerRowIndex","fixedCellElements","fixedColumn","getFixedColumnsOffset","$transparentColumn","getTransparentColumnElement","positionTransparentColumn","getFixedTableElement","synchronizeRows","isWidthsSynchronized","isColumnWidthChanged","useVisibleColumns","_getClientHeight","boundingClientRectElement","$fixedRowElements","fixedRowHeights","heightTable","heightFixedTable","fixedRowHeight","ColumnHeadersViewFixedColumnsExtender","columnFixingOptions","getFixedColumnElements","$transparentColumnElement","$fixedColumnElements","RowsViewFixedColumnsExtender","_detachHoverEvents","_attachHoverEvents","attachHoverEvent","isHover","contentClass","scrollDelay","_fixedScrollTimeout","wheel","$nearestScrollable","shouldScroll","nearestScrollableInstance","nearestScrollableHasVerticalScrollbar","_updateFixedTablePosition","needFocus","vWidth","hWidth","styles","$fixedContent","_getElasticScrollTop","elasticScrollTop","reachedBottom","scrollableContent","$scrollableContainer","maxScrollTop","_applyElasticScrolling","FooterViewFixedColumnsExtender","columnFixingModule","normalizeColumnIndicesByPoints","correctIndex","pointsByFixedColumns","_pointsByFixedColumns","isWidgetResizingMode","ROWS_VIEW","FOOTER_VIEW","COLUMN_VIEWS","ADAPTIVE_NAMESPACE","ADAPTIVE_ROW_TYPE","FORM_ITEM_CONTENT_CLASS","FORM_ITEM_MODIFIED","HIDDEN_COLUMN_CLASS","ADAPTIVE_COLUMN_BUTTON_CLASS","ADAPTIVE_COLUMN_NAME_CLASS","COMMAND_ADAPTIVE_HIDDEN_CLASS","ADAPTIVE_DETAIL_ROW_CLASS","ADAPTIVE_ITEM_TEXT_CLASS","LAST_DATA_CELL_CLASS","ADAPTIVE_COLUMN_NAME","EXPAND_ARIA_NAME","COLLAPSE_ARIA_NAME","getDataCellElements","adaptiveCellTemplate","$adaptiveColumnButton","adaptiveColumnsController","toggleExpandAdaptiveDetailRow","AdaptiveColumnsController","_getEditMode","_isItemModified","_renderFormViewTemplate","focusAction","renderFormTemplate","isItemEdited","_isItemEdited","_isVisibleColumnsValid","_calculatePercentWidths","percentWidths","_getItemPercentWidth","_isPercentWidth","_isColumnHidden","_hiddenColumns","hiddenColumn","columnsCanFit","fixedColumnsWidth","columnsWithoutFixedWidthCount","_calculatePercentWidth","_calculateColumnWidth","contentColumns","colWidth","widthOption","columnFitted","partialWidth","resultWidth","_getNotTruncatedColumnWidth","_getCommandColumnsWidth","adaptiveExpandedKey","_getFormItemsByHiddenColumns","hiddenColumns","_getAdaptiveColumnVisibleIndex","_hideAdaptiveColumn","_hideVisibleColumn","cssClassNameToRemove","_showHiddenColumns","$hiddenCommandCells","$hiddenCells","_hideVisibleColumnInView","rowsCount","cancelClassAdding","currentVisibleIndex","_findCellElementInRow","$rowCells","cellIsInsideGroup","groupCellLength","endGroupIndex","cssClassNameToAdd","hideRedundantColumns","hiddenQueue","hasHiddenColumns","needHideColumn","rootElementWidth","getVisibleContentColumns","visibleContentColumns","contentColumnsCount","columnBestFitWidth","getItemContentByColumnIndex","$itemContent","_$itemContents","alwaysExpanded","createFormByHiddenColumns","userFormOptions","defaultFormOptions","formOptions","_form","updateForm","hasAdaptiveDetailRowExpanded","_contentReadyAction","updateHidingQueue","columnsHasHidingPriority","hideableColumns","_hidingColumnsQueue","getHiddenColumns","getHidingColumnsQueue","adaptiveHidden","isAdaptiveVisible","isAdaptiveDetailRowExpanded","expandAdaptiveDetailRow","collapseAdaptiveDetailRow","updateCommandAdaptiveAriaLabel","setCommandAdaptiveAriaLabel","labelName","$adaptiveCommand","adaptivityModule","_adaptiveColumnsController","hidingColumnsQueueLength","hiddenColumnsLength","isClickable","_updateColumnWidth","hasHiddenColumnsOnly","hasAdaptiveHiddenWidth","$itemContents","_adaptiveController","oldExpandRowIndex","_isForceRowAdaptiveExpand","_collapseAdaptiveDetailRow","_cancelEditAdaptiveDetailRow","expandedKey","_adaptiveExpandedKey","adaptiveController","oldHiddenColumns","hidingColumnsQueue","_updateScrollableTimeoutID","expandRowIndex","lastRowIndex","oldExpandLoadedRowIndex","newExpandLoadedRowIndex","oldKey","isCellOrBatchMode","focusHandler","$dataCells","isCellElementsEquals","foreachColumnInfo","offsets","lastProcessedIndexes","processedColumnCount","createColumnsInfo","endIndex","newInfo","columnInfo","cellColspan","DEFAULT_COLUMN_WIDTH","setScrollPosition","HeaderViewExtender","ColumnsControllerExtender","getWidths","_beginPageIndex","_endPageIndex","_virtualVisibleColumns","currentPosition","getColumnPageSize","getTotalWidth","_fireColumnsChanged","_changedTimeout","_setScrollPositionCore","needColumnsChanged","visibleColumnsHash","beginFixedColumnCount","beginFixedColumns","beginColumns","beginWidth","endFixedColumnCount","endFixedColumns","endColumns","endWidth","columnsInfo","leftFixedColumnCount","virtualColumnsModule","columnPageSize","columnRenderingThreshold","_getEmptyCell","_defaultSetter","_cloneItem","_prepareItems","cols","_c","BUTTON_GROUP_CLASS","BUTTON_GROUP_WRAPPER_CLASS","BUTTON_GROUP_ITEM_CLASS","BUTTON_GROUP_FIRST_ITEM_CLASS","BUTTON_GROUP_LAST_ITEM_CLASS","BUTTON_GROUP_ITEM_HAS_WIDTH","SHAPE_STANDARD_CLASS","ButtonCollection","_initTemplates","_templateManager","addDefaultTemplates","_prepareItemStyles","_getBasicButtonOptions","_templateData","_hasCustomTemplate","stylingMode","itemTemplateProperty","_renderItemContent","_renderItemContentByNode","_keyboardEventBindingTarget","_refreshContent","_prepareContent","_itemClass","_itemSelectHandler","ButtonGroup","buttonTemplate","_createItemClickAction","_itemClickAction","_renderButtons","_syncSelectionOptions","_fireSelectionChangeEvent","removedItems","$buttons","selectionRequired","_buttonsCollection","itemElements","DROP_DOWN_BUTTON_CLASS","DROP_DOWN_BUTTON_CONTENT","DROP_DOWN_BUTTON_ACTION_CLASS","DROP_DOWN_BUTTON_TOGGLE_CLASS","DROP_DOWN_BUTTON_HAS_ARROW_CLASS","DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS","DROP_DOWN_EDITOR_OVERLAY_CLASS","DX_BUTTON_TEXT_CLASS","DX_ICON_RIGHT_CLASS","DropDownButton","selectedItemKey","useSelectMode","splitButton","showArrowIcon","onButtonClick","opened","dropDownOptions","dropDownContentTemplate","wrapItemText","useItemTextAsTitle","groupTemplate","buttonGroupOptions","_createActionClickAction","_createSelectionChangedAction","_compileKeyGetter","_compileDisplayGetter","_itemsToDataSource","_options","cache","$listContainer","_list","_listOptions","_escHandler","_getKey","storeKey","_keyGetter","_displayGetter","_renderButtonGroup","_updateArrowClass","_loadSelectedItem","_updateActionButton","_renderFocusTarget","_renderPopup","_popup","_renderPopupContent","_this$_loadSingleDefe","_loadSingleDeferred","_lastSelectedItemData","cachedResult","_loadSingle","_actionClickAction","_selectionChangedAction","_fireSelectionChangedAction","previousItem","_fireItemClickAction","_actionItem","_actionButtonConfig","_getButtonGroupItems","_buttonGroupItemClick","isActionButton","isToggleButton","_buttonGroupOptions","buttonContent","$firstIcon","$textContainer","$secondIcon","onKeyboardHandled","_getTemplateByOption","_popupContentId","_popupOptions","horizontalAlignment","$buttonClicked","actionResult","_buttonGroup","_upDownKeyHandler","open","close","_tabHandler","_popupHidingHandler","_popupShowingHandler","_bindInnerWidgetOptions","_setAriaExpanded","_popupOptionChanged","_setPopupOption","optionsKeys","popupWidth","_setWidgetOption","_ariaExpandedElements","ariaElement","owns","$buttonGroup","buttonElements","hasArrow","_setListOption","_getDisplayValue","isPrimitiveItem","_selectedItemKeyChanged","_actionButtonOptionChanged","newConfig","_selectModeChanged","_updateItemCollection","_updateDataSource","_updateKeyExpr","_this$_popup","_innerWidgetOptionChanged","DATAGRID_EXPORT_MENU_CLASS","DATAGRID_EXPORT_BUTTON_CLASS","DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME","DATAGRID_EXPORT_ICON","DATAGRID_EXPORT_EXCEL_ICON","DATAGRID_EXPORT_SELECTED_ICON","DATAGRID_EXPORT_EXCEL_BUTTON_ICON","DataProvider","initialColumnWidthsByColumnIndex","selectedRowsOnly","_exportController","_initialColumnWidthsByColumnIndex","_selectedRowsOnly","_getGroupValue","_correctCellIndex","_initOptions","_getColumns","_selectionOnly","_getSelectedItems","_getAllItems","isHeadersVisible","wrapTextEnabled","hasCustomizeExcelCell","cellSourceData","gridCell","getHeaderStyles","bold","wrapText","getGroupRowStyle","getColumnStyles","columnStyles","getStyles","_getTotalCellStyleId","_this$getColumns$cell","getStyleId","getHeaderRowCount","isTotalCell","getColumnsByAllRows","getColumnsWidths","getGroupLevel","getCellType","ready","_convertFromGridGroupSummaryItems","gridGroupSummaryItems","getCellData","isExcelJS","correctedCellIndex","columnsRow","gridColumn","itemValues","totalSummaryItemName","_value","correctCellIndex","isSummaryAlignByColumn","getCellMerging","exportColspan","getFrozenArea","ExportController","currentHeaderRow","columnWidthsByColumnIndex","_getColumnWidths","_headersView","_needColumnExporting","currentColspan","_calculateExportColspan","childColumns","childColumn","_getFooterSummaryItems","isTotal","estimatedItemsCount","_hasSummaryGroupFooters","_getItemsWithSummaryGroupFooters","sourceItems","beforeGroupFooterItems","groupFooterItems","_updateGroupValuesWithSummaryByColumn","summaryValues","groupColumnCount","k","_processUnExportedItems","isDetailExpandColumn","selectedRowData","getExportFormat","getDataProvider","columnsLastRowVisibleColumns","exportToExcel","autoFilterEnabled","ignoreErrors","exportingAction","exportedAction","fileSavingAction","_isSelectedRows","callbackList","exportButton","_getExportToolbarButton","_correctItemsPosition","_getExportToolbarItems","toolbarButtonOptions","_widgetOptions","_index","exportOptions","itemA","itemB","_isExportButtonVisible","_getButtonOptions","allowExportSelected","ROW_FOCUSED_CLASS","TABLE_POSTFIX_CLASS","FocusController","_keyboardController","_focusRowByIndex","_triggerFocusedRowChangedIfNeed","_focusRowByKey","focusedRowIndexByKey","isAutoNavigateToFocusedRow","_focusRowByIndexCore","setKeyByIndex","_isValidFocusedRowIndex","_getLastItemIndex","isRowFocused","_isLocalRowIndex","isVirtualScrolling","virtualItems","virtualItemsBegin","visibleRowsCount","visiblePagesCount","_setFocusedRowKeyByIndex","_navigateToRow","isFocusedRowKeyDefined","needFocusRow","isAutoNavigate","rowIndexByKey","_navigateTo","getPageIndexByKey","isVirtualRowRenderingMode","_navigateToVirtualRow","_navigateToVisibleRow","_triggerUpdateFocusedRow","scrollToRowElement","triggerUpdateFocusedRow","scrollTopPosition","_focusRowByKeyOrIndex","currentFocusedRowIndex","updateFocusedRow","isMainTable","_clearPreviousFocusedRow","_prepareFocusedRow","changedItem","$prevRowFocusedElement","focusedRow","$focusedRowTable","$firstRow","scrollToElementVertically","focusModule","visibleRow","isRowElement","sortByKey","notSortedKeys","notSortedKey","isPartialUpdate","isPartialUpdateWithDeleting","_updatePageIndexes","processUpdateFocusedRow","prevRenderingPageIndex","_lastRenderingPageIndex","renderingPageIndex","_isPagingByRendering","isPagingByRendering","isValidRowIndexByKey","needFocusRowByIndex","getGlobalRowIndexByKey","_calculateGlobalRowIndexByGroupedData","_calculateGlobalRowIndexByFlatData","groupFilter","useGroup","_generateFilterByKey","_concatWithCombinedFilter","_generateOperationFilterByKey","_generateBooleanFilter","sortInfo","booleanFilter","sortFilter","dataSourceKey","keyPart","_setFocusedRowElementTabIndex","_findRowElementForTabIndex","_scrollToFocusOnResize","getScrollElementPosition","currentScrollTop","isRowClick","_isFocusedRowInsideGroup","_getGroupPath","groupPath","_expandGroupByPath","isGroupKey","_calculateExpandedRowGlobalIndex","dataOffset","groupContinuationCount","currentPageOffset","COMMAND_HANDLE_CLASS","HANDLE_ICON_CLASS","SORTABLE_WITHOUT_HANDLE_CLASS","RowDraggingExtender","_updateHandleColumn","_allowReordering","isHandleColumnVisible","_getHandleTemplate","sortableName","sortableFixedName","currentSortableName","anotherSortableName","togglePointerEventsStyle","_this$sortableFixedNa","_getDraggableRowTemplate","_rowDragging$onDragSt","onDragEnter","onDragLeave","_rowDragging$onDragEn","_rowDragging$onAdd","hasFixedSortable","_updateSortable","_sortable","_sortableFixed","sortable","_getDraggableGridOptions","gridOptions","$dataGridContainer","rowDraggingModule"],"sourceRoot":""}